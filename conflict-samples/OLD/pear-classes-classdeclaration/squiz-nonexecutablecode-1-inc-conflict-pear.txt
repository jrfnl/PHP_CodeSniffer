PHP 7.2.11 (cli) (built: Oct 10 2018 02:39:52) ( ZTS MSVC15 (Visual C++ 2017) x86 )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies
    with Xdebug v2.6.0, Copyright (c) 2002-2018, by Derick Rethans

PHP_CodeSniffer version 3.4.0 (stable) by Squiz (http://www.squiz.net)

Processing ruleset D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\ruleset.xml
	Adding sniff files from D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs directory
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Commenting\ClassCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Commenting\FileCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Commenting\FunctionCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Commenting\InlineCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\ControlStructures\ControlSignatureSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\ControlStructures\MultiLineConditionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Files\IncludingFileSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Formatting\MultiLineAssignmentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Functions\FunctionDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Functions\ValidDefaultValueSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\NamingConventions\ValidClassNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\NamingConventions\ValidFunctionNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\NamingConventions\ValidVariableNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\WhiteSpace\ObjectOperatorIndentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\WhiteSpace\ScopeIndentSniff.php
	Processing rule "Generic.Functions.FunctionCallArgumentSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Functions\FunctionCallArgumentSpacingSniff.php
	Processing rule "Generic.NamingConventions.UpperCaseConstantName"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\NamingConventions\UpperCaseConstantNameSniff.php
	Processing rule "Generic.PHP.LowerCaseConstant"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff.php
	Processing rule "Generic.PHP.DisallowShortOpenTag"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\DisallowShortOpenTagSniff.php
	Processing rule "Generic.WhiteSpace.DisallowTabIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\DisallowTabIndentSniff.php
	Processing rule "Generic.Commenting.DocComment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Commenting\DocCommentSniff.php
	Processing rule "Squiz.Commenting.DocCommentAlignment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\DocCommentAlignmentSniff.php
	Processing rule "Generic.Files.LineLength"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Files\LineLengthSniff.php
		=> property "lineLimit" set to "85"
		=> property "absoluteLineLimit" set to "0"
	Processing rule "Generic.Files.LineEndings"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Files\LineEndingsSniff.php
		=> property "eolChar" set to "\n"
	Processing rule "Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Functions\FunctionCallArgumentSpacingSniff.php
		=> severity set to 0
	Processing rule "Generic.ControlStructures.InlineControlStructure"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff.php
		=> property "error" set to "false"
=> Ruleset processing complete; included 28 sniffs and excluded 0
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_DO => do
	Process token [2]: T_WHITESPACE =>  
	Process token  3 : T_OPEN_CURLY_BRACKET => {
	Process token [4]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_WHITESPACE =>  
	Process token [2]: T_WHILE => while
	Process token [3]: T_WHITESPACE =>  
	Process token  4 : T_OPEN_PARENTHESIS => (
	Process token [5]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_SEMICOLON => ;
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_WHILE => while
	Process token [2]: T_WHITESPACE =>  
	Process token  3 : T_OPEN_PARENTHESIS => (
	Process token [4]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_WHITESPACE =>  
	Process token  2 : T_OPEN_CURLY_BRACKET => {
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_FOR => for
	Process token [2]: T_WHITESPACE =>  
	Process token  3 : T_OPEN_PARENTHESIS => (
	Process token [4]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_WHITESPACE =>  
	Process token  2 : T_OPEN_CURLY_BRACKET => {
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_IF => if
	Process token [2]: T_WHITESPACE =>  
	Process token  3 : T_OPEN_PARENTHESIS => (
	Process token [4]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_WHITESPACE =>  
	Process token  2 : T_OPEN_CURLY_BRACKET => {
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_FOREACH => foreach
	Process token [2]: T_WHITESPACE =>  
	Process token  3 : T_OPEN_PARENTHESIS => (
	Process token [4]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_WHITESPACE =>  
	Process token  2 : T_OPEN_CURLY_BRACKET => {
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_CLOSE_CURLY_BRACKET => }
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_ELSE => else
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_IF => if
	Process token [6]: T_WHITESPACE =>  
	Process token  7 : T_OPEN_PARENTHESIS => (
	Process token [8]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_WHITESPACE =>  
	Process token  2 : T_OPEN_CURLY_BRACKET => {
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_CLOSE_CURLY_BRACKET => }
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_ELSEIF => elseif
	Process token [4]: T_WHITESPACE =>  
	Process token  5 : T_OPEN_PARENTHESIS => (
	Process token [6]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_WHITESPACE =>  
	Process token  2 : T_OPEN_CURLY_BRACKET => {
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_CLOSE_CURLY_BRACKET => }
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_ELSE => else
	Process token [4]: T_WHITESPACE =>  
	Process token  5 : T_OPEN_CURLY_BRACKET => {
	Process token [6]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_DO => do
	Process token [2]: T_WHITESPACE =>  
	Process token  3 : T_OPEN_CURLY_BRACKET => {
	Process token [4]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
Creating file list... DONE (1 files in queue)
Changing into directory D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Tests\PHP
Processing NonExecutableCodeUnitTest.1.inc 
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php\n
	Process token [1]: T_SWITCH => switch
	Process token [2]: T_WHITESPACE =>  
	Process token  3 : T_OPEN_PARENTHESIS => (
	Process token [4]: T_VARIABLE => $var
	Process token  5 : T_CLOSE_PARENTHESIS => )
	Process token [6]: T_WHITESPACE =>  
	Process token  7 : T_OPEN_CURLY_BRACKET => {
	Process token [8]: T_WHITESPACE => \n    
	Process token [9]: T_CASE => case
	Process token [10]: T_WHITESPACE =>  
	Process token [11]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  12 : T_COLON => :
	Process token [13]: T_WHITESPACE => \n        
	Process token [14]: T_RETURN => return
	Process token  15 : T_SEMICOLON => ;
	Process token [16]: T_WHITESPACE => \n        
	Process token [17]: T_ECHO => echo
	Process token [18]: T_WHITESPACE =>  
	Process token [19]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  20 : T_SEMICOLON => ;
	Process token [21]: T_WHITESPACE => \n\n    
	Process token [22]: T_CASE => case
	Process token [23]: T_WHITESPACE =>  
	Process token [24]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token  25 : T_COLON => :
	Process token [26]: T_WHITESPACE => \n    
	Process token [27]: T_CASE => case
	Process token [28]: T_WHITESPACE =>  
	Process token [29]: T_CONSTANT_ENCAPSED_STRING => '3'
	Process token  30 : T_COLON => :
	Process token [31]: T_WHITESPACE => \n        
	Process token [32]: T_IF => if
	Process token [33]: T_WHITESPACE =>  
	Process token  34 : T_OPEN_PARENTHESIS => (
	Process token [35]: T_VARIABLE => $something
	Process token [36]: T_WHITESPACE =>  
	Process token [37]: T_IS_IDENTICAL => ===
	Process token [38]: T_WHITESPACE =>  
	Process token [39]: T_STRING => true
	Process token  40 : T_CLOSE_PARENTHESIS => )
	Process token [41]: T_WHITESPACE =>  
	Process token  42 : T_OPEN_CURLY_BRACKET => {
	Process token [43]: T_WHITESPACE => \n            
	Process token [44]: T_BREAK => break
	Process token  45 : T_SEMICOLON => ;
	Process token [46]: T_WHITESPACE => \n            
	Process token [47]: T_ECHO => echo
	Process token [48]: T_WHITESPACE =>  
	Process token [49]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  50 : T_SEMICOLON => ;
	Process token [51]: T_WHITESPACE => \n        
	Process token  52 : T_CLOSE_CURLY_BRACKET => }
	Process token [53]: T_WHITESPACE => \n    
	Process token [54]: T_BREAK => break
	Process token  55 : T_SEMICOLON => ;
	Process token [56]: T_WHITESPACE => \n    
	Process token [57]: T_DEFAULT => default
	Process token  58 : T_COLON => :
	Process token [59]: T_WHITESPACE => \n        
	Process token [60]: T_RETURN => return
	Process token  61 : T_SEMICOLON => ;
	Process token [62]: T_WHITESPACE => \n\n        
	Process token [63]: T_IF => if
	Process token [64]: T_WHITESPACE =>  
	Process token  65 : T_OPEN_PARENTHESIS => (
	Process token [66]: T_VARIABLE => $something
	Process token [67]: T_WHITESPACE =>  
	Process token [68]: T_IS_IDENTICAL => ===
	Process token [69]: T_WHITESPACE =>  
	Process token [70]: T_STRING => true
	Process token  71 : T_CLOSE_PARENTHESIS => )
	Process token [72]: T_WHITESPACE =>  
	Process token  73 : T_OPEN_CURLY_BRACKET => {
	Process token [74]: T_WHITESPACE => \n            
	Process token [75]: T_BREAK => break
	Process token  76 : T_SEMICOLON => ;
	Process token [77]: T_WHITESPACE => \n            
	Process token [78]: T_ECHO => echo
	Process token [79]: T_WHITESPACE =>  
	Process token [80]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  81 : T_SEMICOLON => ;
	Process token [82]: T_WHITESPACE => \n        
	Process token  83 : T_CLOSE_CURLY_BRACKET => }
	Process token [84]: T_WHITESPACE => \n\n
	Process token  85 : T_CLOSE_CURLY_BRACKET => }
	Process token [86]: T_WHITESPACE => \n\n
	Process token [87]: T_FUNCTION => function
	Process token [88]: T_WHITESPACE =>  
	Process token [89]: T_STRING => myFunction
	Process token  90 : T_OPEN_PARENTHESIS => (
	Process token [91]: T_VARIABLE => $var
	Process token  92 : T_CLOSE_PARENTHESIS => )
	Process token [93]: T_WHITESPACE => \n
	Process token  94 : T_OPEN_CURLY_BRACKET => {
	Process token [95]: T_WHITESPACE => \n    
	Process token [96]: T_IF => if
	Process token [97]: T_WHITESPACE =>  
	Process token  98 : T_OPEN_PARENTHESIS => (
	Process token [99]: T_VARIABLE => $something
	Process token [100]: T_WHITESPACE =>  
	Process token [101]: T_IS_IDENTICAL => ===
	Process token [102]: T_WHITESPACE =>  
	Process token [103]: T_STRING => TRUE
	Process token  104 : T_CLOSE_PARENTHESIS => )
	Process token [105]: T_WHITESPACE =>  
	Process token  106 : T_OPEN_CURLY_BRACKET => {
	Process token [107]: T_WHITESPACE => \n        
	Process token [108]: T_RETURN => return
	Process token  109 : T_SEMICOLON => ;
	Process token [110]: T_WHITESPACE => \n        
	Process token [111]: T_ECHO => echo
	Process token [112]: T_WHITESPACE =>  
	Process token [113]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  114 : T_SEMICOLON => ;
	Process token [115]: T_WHITESPACE => \n    
	Process token  116 : T_CLOSE_CURLY_BRACKET => }
	Process token [117]: T_WHITESPACE => \n\n    
	Process token [118]: T_RETURN => return
	Process token  119 : T_SEMICOLON => ;
	Process token [120]: T_WHITESPACE => \n    
	Process token [121]: T_RETURN => return
	Process token [122]: T_WHITESPACE =>  
	Process token [123]: T_STRING => FALSE
	Process token  124 : T_SEMICOLON => ;
	Process token [125]: T_WHITESPACE => \n    
	Process token [126]: T_IF => if
	Process token [127]: T_WHITESPACE =>  
	Process token  128 : T_OPEN_PARENTHESIS => (
	Process token [129]: T_VARIABLE => $something
	Process token [130]: T_WHITESPACE =>  
	Process token [131]: T_IS_IDENTICAL => ===
	Process token [132]: T_WHITESPACE =>  
	Process token [133]: T_STRING => TRUE
	Process token  134 : T_CLOSE_PARENTHESIS => )
	Process token [135]: T_WHITESPACE =>  
	Process token  136 : T_OPEN_CURLY_BRACKET => {
	Process token [137]: T_WHITESPACE => \n        
	Process token [138]: T_RETURN => return
	Process token [139]: T_WHITESPACE =>  
	Process token [140]: T_STRING => TRUE
	Process token  141 : T_SEMICOLON => ;
	Process token [142]: T_WHITESPACE => \n    
	Process token  143 : T_CLOSE_CURLY_BRACKET => }
	Process token [144]: T_WHITESPACE => \n\n
	Process token  145 : T_CLOSE_CURLY_BRACKET => }
	Process token [146]: T_COMMENT => //end myFunction()\n
	Process token [147]: T_WHITESPACE => \n
	Process token [148]: T_FOREACH => foreach
	Process token [149]: T_WHITESPACE =>  
	Process token  150 : T_OPEN_PARENTHESIS => (
	Process token [151]: T_VARIABLE => $vars
	Process token [152]: T_WHITESPACE =>  
	Process token [153]: T_AS => as
	Process token [154]: T_WHITESPACE =>  
	Process token [155]: T_VARIABLE => $var
	Process token  156 : T_CLOSE_PARENTHESIS => )
	Process token [157]: T_WHITESPACE =>  
	Process token  158 : T_OPEN_CURLY_BRACKET => {
	Process token [159]: T_WHITESPACE => \n    
	Process token [160]: T_IF => if
	Process token [161]: T_WHITESPACE =>  
	Process token  162 : T_OPEN_PARENTHESIS => (
	Process token [163]: T_VARIABLE => $something
	Process token [164]: T_WHITESPACE =>  
	Process token [165]: T_IS_IDENTICAL => ===
	Process token [166]: T_WHITESPACE =>  
	Process token [167]: T_STRING => TRUE
	Process token  168 : T_CLOSE_PARENTHESIS => )
	Process token [169]: T_WHITESPACE =>  
	Process token  170 : T_OPEN_CURLY_BRACKET => {
	Process token [171]: T_WHITESPACE => \n        
	Process token [172]: T_CONTINUE => continue
	Process token  173 : T_SEMICOLON => ;
	Process token [174]: T_WHITESPACE => \n        
	Process token [175]: T_BREAK => break
	Process token  176 : T_SEMICOLON => ;
	Process token [177]: T_WHITESPACE => \n    
	Process token  178 : T_CLOSE_CURLY_BRACKET => }
	Process token [179]: T_WHITESPACE =>  
	Process token [180]: T_ELSE => else
	Process token [181]: T_WHITESPACE =>  
	Process token  182 : T_OPEN_CURLY_BRACKET => {
	Process token [183]: T_WHITESPACE => \n        
	Process token [184]: T_CONTINUE => continue
	Process token  185 : T_SEMICOLON => ;
	Process token [186]: T_WHITESPACE => \n        
	Process token [187]: T_ECHO => echo
	Process token [188]: T_WHITESPACE =>  
	Process token [189]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  190 : T_SEMICOLON => ;
	Process token [191]: T_WHITESPACE => \n    
	Process token  192 : T_CLOSE_CURLY_BRACKET => }
	Process token [193]: T_WHITESPACE => \n\n    
	Process token [194]: T_ECHO => echo
	Process token [195]: T_WHITESPACE =>  
	Process token [196]: T_VARIABLE => $var
	Process token  197 : T_STRING_CONCAT => .
	Process token [198]: T_CONSTANT_ENCAPSED_STRING => "\n"
	Process token  199 : T_SEMICOLON => ;
	Process token [200]: T_WHITESPACE => \n
	Process token  201 : T_CLOSE_CURLY_BRACKET => }
	Process token [202]: T_WHITESPACE => \n\n
	Process token [203]: T_SWITCH => switch
	Process token [204]: T_WHITESPACE =>  
	Process token  205 : T_OPEN_PARENTHESIS => (
	Process token [206]: T_VARIABLE => $lowerVarType
	Process token  207 : T_CLOSE_PARENTHESIS => )
	Process token [208]: T_WHITESPACE =>  
	Process token  209 : T_OPEN_CURLY_BRACKET => {
	Process token [210]: T_WHITESPACE => \n    
	Process token [211]: T_CASE => case
	Process token [212]: T_WHITESPACE =>  
	Process token [213]: T_CONSTANT_ENCAPSED_STRING => 'bool'
	Process token  214 : T_COLON => :
	Process token [215]: T_WHITESPACE => \n        
	Process token [216]: T_RETURN => return
	Process token [217]: T_WHITESPACE =>  
	Process token [218]: T_CONSTANT_ENCAPSED_STRING => 'boolean'
	Process token  219 : T_SEMICOLON => ;
	Process token [220]: T_WHITESPACE => \n        
	Process token [221]: T_ECHO => echo
	Process token [222]: T_WHITESPACE =>  
	Process token [223]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  224 : T_SEMICOLON => ;
	Process token [225]: T_WHITESPACE => \n    
	Process token [226]: T_CASE => case
	Process token [227]: T_WHITESPACE =>  
	Process token [228]: T_CONSTANT_ENCAPSED_STRING => 'double'
	Process token  229 : T_COLON => :
	Process token [230]: T_WHITESPACE => \n    
	Process token [231]: T_CASE => case
	Process token [232]: T_WHITESPACE =>  
	Process token [233]: T_CONSTANT_ENCAPSED_STRING => 'real'
	Process token  234 : T_COLON => :
	Process token [235]: T_WHITESPACE => \n        
	Process token [236]: T_RETURN => return
	Process token [237]: T_WHITESPACE =>  
	Process token [238]: T_CONSTANT_ENCAPSED_STRING => 'float'
	Process token  239 : T_SEMICOLON => ;
	Process token [240]: T_WHITESPACE => \n        
	Process token [241]: T_ECHO => echo
	Process token [242]: T_WHITESPACE =>  
	Process token [243]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  244 : T_SEMICOLON => ;
	Process token [245]: T_WHITESPACE => \n
	Process token  246 : T_CLOSE_CURLY_BRACKET => }
	Process token [247]: T_WHITESPACE => \n\n
	Process token [248]: T_WHILE => while
	Process token [249]: T_WHITESPACE =>  
	Process token  250 : T_OPEN_PARENTHESIS => (
	Process token [251]: T_VARIABLE => $line
	Process token  252 : T_EQUAL => =
	Process token [253]: T_STRING => fgets
	Process token  254 : T_OPEN_PARENTHESIS => (
	Process token [255]: T_VARIABLE => $fp
	Process token  256 : T_COMMA => ,
	Process token [257]: T_LNUMBER => 2
	Process token  258 : T_MULTIPLY => *
	Process token [259]: T_LNUMBER => 1024
	Process token  260 : T_MULTIPLY => *
	Process token [261]: T_LNUMBER => 1024
	Process token  262 : T_CLOSE_PARENTHESIS => )
	Process token  263 : T_CLOSE_PARENTHESIS => )
	Process token [264]: T_WHITESPACE => \n
	Process token  265 : T_OPEN_CURLY_BRACKET => {
	Process token [266]: T_WHITESPACE => \n    
	Process token [267]: T_IF => if
	Process token [268]: T_WHITESPACE =>  
	Process token  269 : T_OPEN_PARENTHESIS => (
	Process token  270 : T_BOOLEAN_NOT => !
	Process token [271]: T_STRING => preg_match
	Process token  272 : T_OPEN_PARENTHESIS => (
	Process token [273]: T_CONSTANT_ENCAPSED_STRING => "/^<([a-z0-9_]+)/"
	Process token  274 : T_COMMA => ,
	Process token [275]: T_VARIABLE => $line
	Process token  276 : T_COMMA => ,
	Process token [277]: T_VARIABLE => $matches
	Process token  278 : T_CLOSE_PARENTHESIS => )
	Process token  279 : T_CLOSE_PARENTHESIS => )
	Process token [280]: T_WHITESPACE => \n    
	Process token [281]: T_CONTINUE => continue
	Process token  282 : T_SEMICOLON => ;
	Process token [283]: T_WHITESPACE => \n    
	Process token [284]: T_PRINT => print
	Process token [285]: T_WHITESPACE =>  
	Process token [286]: T_VARIABLE => $line
	Process token  287 : T_SEMICOLON => ;
	Process token [288]: T_WHITESPACE => \n
	Process token  289 : T_CLOSE_CURLY_BRACKET => }
	Process token [290]: T_WHITESPACE => \n\n
	Process token [291]: T_SWITCH => switch
	Process token [292]: T_WHITESPACE =>  
	Process token  293 : T_OPEN_PARENTHESIS => (
	Process token [294]: T_VARIABLE => $var
	Process token  295 : T_CLOSE_PARENTHESIS => )
	Process token [296]: T_WHITESPACE =>  
	Process token  297 : T_OPEN_CURLY_BRACKET => {
	Process token [298]: T_WHITESPACE => \n    
	Process token [299]: T_CASE => case
	Process token [300]: T_WHITESPACE =>  
	Process token [301]: T_LNUMBER => 1
	Process token  302 : T_COLON => :
	Process token [303]: T_WHITESPACE => \n        
	Process token [304]: T_ECHO => echo
	Process token [305]: T_WHITESPACE =>  
	Process token [306]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  307 : T_SEMICOLON => ;
	Process token [308]: T_WHITESPACE => \n    
	Process token [309]: T_BREAK => break
	Process token  310 : T_SEMICOLON => ;
	Process token [311]: T_WHITESPACE => \n\n        
	Process token [312]: T_ECHO => echo
	Process token [313]: T_WHITESPACE =>  
	Process token [314]: T_CONSTANT_ENCAPSED_STRING => 'non-executable'
	Process token  315 : T_SEMICOLON => ;
	Process token [316]: T_WHITESPACE => \n    
	Process token [317]: T_DEFAULT => default
	Process token  318 : T_COLON => :
	Process token [319]: T_WHITESPACE => \n        
	Process token [320]: T_ECHO => echo
	Process token [321]: T_WHITESPACE =>  
	Process token [322]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token  323 : T_SEMICOLON => ;
	Process token [324]: T_WHITESPACE => \n    
	Process token [325]: T_BREAK => break
	Process token  326 : T_SEMICOLON => ;
	Process token [327]: T_WHITESPACE => \n
	Process token  328 : T_CLOSE_CURLY_BRACKET => }
	Process token [329]: T_WHITESPACE => \n\n
	Process token [330]: T_SWITCH => switch
	Process token [331]: T_WHITESPACE =>  
	Process token  332 : T_OPEN_PARENTHESIS => (
	Process token [333]: T_LNUMBER => 0
	Process token  334 : T_CLOSE_PARENTHESIS => )
	Process token [335]: T_WHITESPACE =>  
	Process token  336 : T_OPEN_CURLY_BRACKET => {
	Process token [337]: T_WHITESPACE => \n    
	Process token [338]: T_CASE => case
	Process token [339]: T_WHITESPACE =>  
	Process token [340]: T_LNUMBER => 1
	Process token  341 : T_COLON => :
	Process token [342]: T_WHITESPACE => \n        
	Process token [343]: T_RETURN => return
	Process token [344]: T_WHITESPACE =>  
	Process token [345]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  346 : T_SEMICOLON => ;
	Process token [347]: T_WHITESPACE => \n\n        
	Process token [348]: T_ECHO => echo
	Process token [349]: T_WHITESPACE =>  
	Process token [350]: T_CONSTANT_ENCAPSED_STRING => 'non-executable'
	Process token  351 : T_SEMICOLON => ;
	Process token [352]: T_WHITESPACE => \n    
	Process token [353]: T_DEFAULT => default
	Process token  354 : T_COLON => :
	Process token [355]: T_WHITESPACE => \n    
	Process token [356]: T_BREAK => break
	Process token  357 : T_SEMICOLON => ;
	Process token [358]: T_WHITESPACE => \n
	Process token  359 : T_CLOSE_CURLY_BRACKET => }
	Process token [360]: T_WHITESPACE => \n\n
	Process token [361]: T_FUNCTION => function
	Process token [362]: T_WHITESPACE =>  
	Process token [363]: T_STRING => myFunction
	Process token  364 : T_OPEN_PARENTHESIS => (
	Process token  365 : T_CLOSE_PARENTHESIS => )
	Process token [366]: T_WHITESPACE => \n
	Process token  367 : T_OPEN_CURLY_BRACKET => {
	Process token [368]: T_WHITESPACE => \n    
	Process token [369]: T_IF => if
	Process token [370]: T_WHITESPACE =>  
	Process token  371 : T_OPEN_PARENTHESIS => (
	Process token [372]: T_VARIABLE => $something
	Process token [373]: T_WHITESPACE =>  
	Process token [374]: T_IS_IDENTICAL => ===
	Process token [375]: T_WHITESPACE =>  
	Process token [376]: T_STRING => TRUE
	Process token  377 : T_CLOSE_PARENTHESIS => )
	Process token [378]: T_WHITESPACE =>  
	Process token  379 : T_OPEN_CURLY_BRACKET => {
	Process token [380]: T_WHITESPACE => \n        
	Process token [381]: T_RETURN => return
	Process token  382 : T_SEMICOLON => ;
	Process token [383]: T_WHITESPACE => \n    
	Process token  384 : T_CLOSE_CURLY_BRACKET => }
	Process token [385]: T_WHITESPACE => \n\n    
	Process token [386]: T_ECHO => echo
	Process token [387]: T_WHITESPACE =>  
	Process token [388]: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token  389 : T_SEMICOLON => ;
	Process token [390]: T_WHITESPACE => \n    
	Process token [391]: T_RETURN => return
	Process token  392 : T_SEMICOLON => ;
	Process token [393]: T_WHITESPACE => \n\n
	Process token  394 : T_CLOSE_CURLY_BRACKET => }
	Process token [395]: T_COMMENT => //end myFunction()\n
	Process token [396]: T_WHITESPACE => \n
	Process token [397]: T_FUNCTION => function
	Process token [398]: T_WHITESPACE =>  
	Process token [399]: T_STRING => myFunction
	Process token  400 : T_OPEN_PARENTHESIS => (
	Process token  401 : T_CLOSE_PARENTHESIS => )
	Process token [402]: T_WHITESPACE => \n
	Process token  403 : T_OPEN_CURLY_BRACKET => {
	Process token [404]: T_WHITESPACE => \n    
	Process token [405]: T_RETURN => return
	Process token [406]: T_WHITESPACE =>  
	Process token [407]: T_STRING => uksort
	Process token  408 : T_OPEN_PARENTHESIS => (
	Process token [409]: T_WHITESPACE => \n        
	Process token [410]: T_VARIABLE => $array
	Process token  411 : T_COMMA => ,
	Process token [412]: T_WHITESPACE => \n        
	Process token [413]: T_FUNCTION => function
	Process token  414 : T_OPEN_PARENTHESIS => (
	Process token  415 : T_CLOSE_PARENTHESIS => )
	Process token [416]: T_WHITESPACE =>  
	Process token  417 : T_OPEN_CURLY_BRACKET => {
	Process token [418]: T_WHITESPACE => \n            
	Process token [419]: T_RETURN => return
	Process token [420]: T_WHITESPACE =>  
	Process token [421]: T_STRING => mt_rand
	Process token  422 : T_OPEN_PARENTHESIS => (
	Process token  423 : T_MINUS => -
	Process token [424]: T_LNUMBER => 1
	Process token  425 : T_COMMA => ,
	Process token [426]: T_WHITESPACE =>  
	Process token [427]: T_LNUMBER => 1
	Process token  428 : T_CLOSE_PARENTHESIS => )
	Process token  429 : T_SEMICOLON => ;
	Process token [430]: T_WHITESPACE => \n            
	Process token [431]: T_ECHO => echo
	Process token [432]: T_WHITESPACE =>  
	Process token [433]: T_CONSTANT_ENCAPSED_STRING => 'done'
	Process token  434 : T_SEMICOLON => ;
	Process token [435]: T_WHITESPACE => \n        
	Process token  436 : T_CLOSE_CURLY_BRACKET => }
	Process token [437]: T_WHITESPACE => \n    
	Process token  438 : T_CLOSE_PARENTHESIS => )
	Process token  439 : T_SEMICOLON => ;
	Process token [440]: T_WHITESPACE => \n\n
	Process token  441 : T_CLOSE_CURLY_BRACKET => }
	Process token [442]: T_COMMENT => //end myFunction()\n
	Process token [443]: T_WHITESPACE => \n
	Process token [444]: T_PUBLIC => public
	Process token [445]: T_WHITESPACE =>  
	Process token [446]: T_STATIC => static
	Process token [447]: T_WHITESPACE =>  
	Process token [448]: T_FUNCTION => function
	Process token [449]: T_WHITESPACE =>  
	Process token [450]: T_STRING => thisCausesAnError
	Process token  451 : T_OPEN_PARENTHESIS => (
	Process token  452 : T_CLOSE_PARENTHESIS => )
	Process token [453]: T_WHITESPACE =>  
	Process token  454 : T_OPEN_CURLY_BRACKET => {
	Process token [455]: T_WHITESPACE => \n
	Process token [456]: T_RETURN => return
	Process token [457]: T_WHITESPACE =>  
	Process token [458]: T_NEW => new
	Process token [459]: T_WHITESPACE =>  
	Process token [460]: T_STRING => foo
	Process token  461 : T_OPEN_PARENTHESIS => (
	Process token [462]: T_FUNCTION => function
	Process token  463 : T_OPEN_PARENTHESIS => (
	Process token  464 : T_CLOSE_PARENTHESIS => )
	Process token [465]: T_WHITESPACE =>  
	Process token  466 : T_OPEN_CURLY_BRACKET => {
	Process token [467]: T_RETURN => return
	Process token [468]: T_WHITESPACE =>  
	Process token [469]: T_VARIABLE => $foo
	Process token  470 : T_SEMICOLON => ;
	Process token  471 : T_CLOSE_CURLY_BRACKET => }
	Process token [472]: T_WHITESPACE => \n
	Process token  473 : T_CLOSE_PARENTHESIS => )
	Process token  474 : T_SEMICOLON => ;
	Process token [475]: T_WHITESPACE => \n
	Process token  476 : T_CLOSE_CURLY_BRACKET => }
	Process token [477]: T_WHITESPACE => \n\n
	Process token [478]: T_FUNCTION => function
	Process token [479]: T_WHITESPACE =>  
	Process token [480]: T_STRING => myFunction
	Process token  481 : T_OPEN_PARENTHESIS => (
	Process token  482 : T_CLOSE_PARENTHESIS => )
	Process token [483]: T_WHITESPACE => \n
	Process token  484 : T_OPEN_CURLY_BRACKET => {
	Process token [485]: T_WHITESPACE => \n    
	Process token [486]: T_IF => if
	Process token [487]: T_WHITESPACE =>  
	Process token  488 : T_OPEN_PARENTHESIS => (
	Process token [489]: T_VARIABLE => $something
	Process token [490]: T_WHITESPACE =>  
	Process token [491]: T_IS_IDENTICAL => ===
	Process token [492]: T_WHITESPACE =>  
	Process token [493]: T_STRING => TRUE
	Process token  494 : T_CLOSE_PARENTHESIS => )
	Process token [495]: T_WHITESPACE =>  
	Process token  496 : T_OPEN_CURLY_BRACKET => {
	Process token [497]: T_WHITESPACE => \n        
	Process token [498]: T_THROW => throw
	Process token [499]: T_WHITESPACE =>  
	Process token [500]: T_NEW => new
	Process token [501]: T_WHITESPACE =>  
	Process token [502]: T_STRING => Exception
	Process token  503 : T_OPEN_PARENTHESIS => (
	Process token [504]: T_CONSTANT_ENCAPSED_STRING => 'exception'
	Process token  505 : T_CLOSE_PARENTHESIS => )
	Process token  506 : T_SEMICOLON => ;
	Process token [507]: T_WHITESPACE => \n    
	Process token  508 : T_CLOSE_CURLY_BRACKET => }
	Process token [509]: T_WHITESPACE => \n\n    
	Process token [510]: T_THROW => throw
	Process token [511]: T_WHITESPACE =>  
	Process token [512]: T_NEW => new
	Process token [513]: T_WHITESPACE =>  
	Process token [514]: T_STRING => Exception
	Process token  515 : T_OPEN_PARENTHESIS => (
	Process token [516]: T_CONSTANT_ENCAPSED_STRING => 'exception'
	Process token  517 : T_CLOSE_PARENTHESIS => )
	Process token  518 : T_SEMICOLON => ;
	Process token [519]: T_WHITESPACE => \n    
	Process token [520]: T_ECHO => echo
	Process token [521]: T_WHITESPACE =>  
	Process token [522]: T_CONSTANT_ENCAPSED_STRING => 'non-executable'
	Process token  523 : T_SEMICOLON => ;
	Process token [524]: T_WHITESPACE => \n
	Process token  525 : T_CLOSE_CURLY_BRACKET => }
	Process token [526]: T_COMMENT => //end myFunction()\n
	Process token [527]: T_WHITESPACE => \n
	Process token [528]: T_SWITCH => switch
	Process token [529]: T_WHITESPACE =>  
	Process token  530 : T_OPEN_PARENTHESIS => (
	Process token [531]: T_VARIABLE => $var
	Process token  532 : T_CLOSE_PARENTHESIS => )
	Process token [533]: T_WHITESPACE =>  
	Process token  534 : T_OPEN_CURLY_BRACKET => {
	Process token [535]: T_WHITESPACE => \n    
	Process token [536]: T_CASE => case
	Process token [537]: T_WHITESPACE =>  
	Process token [538]: T_LNUMBER => 1
	Process token  539 : T_COLON => :
	Process token [540]: T_WHITESPACE =>  
	Process token  541 : T_OPEN_CURLY_BRACKET => {
	Process token [542]: T_WHITESPACE => \n        
	Process token [543]: T_RETURN => return
	Process token [544]: T_WHITESPACE =>  
	Process token [545]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  546 : T_SEMICOLON => ;
	Process token [547]: T_WHITESPACE => \n    
	Process token  548 : T_CLOSE_CURLY_BRACKET => }
	Process token [549]: T_WHITESPACE => \n\n    
	Process token [550]: T_CASE => case
	Process token [551]: T_WHITESPACE =>  
	Process token [552]: T_LNUMBER => 2
	Process token  553 : T_COLON => :
	Process token [554]: T_WHITESPACE =>  
	Process token  555 : T_OPEN_CURLY_BRACKET => {
	Process token [556]: T_WHITESPACE => \n        
	Process token [557]: T_RETURN => return
	Process token [558]: T_WHITESPACE =>  
	Process token [559]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token  560 : T_SEMICOLON => ;
	Process token [561]: T_WHITESPACE => \n    
	Process token  562 : T_CLOSE_CURLY_BRACKET => }
	Process token [563]: T_WHITESPACE => \n
	Process token  564 : T_CLOSE_CURLY_BRACKET => }
	Process token [565]: T_WHITESPACE => \n\n
	Process token [566]: T_STRING => defined
	Process token  567 : T_OPEN_PARENTHESIS => (
	Process token [568]: T_CONSTANT_ENCAPSED_STRING => 'FOO'
	Process token  569 : T_CLOSE_PARENTHESIS => )
	Process token [570]: T_WHITESPACE =>  
	Process token [571]: T_LOGICAL_OR => or
	Process token [572]: T_WHITESPACE =>  
	Process token [573]: T_EXIT => die
	Process token  574 : T_OPEN_PARENTHESIS => (
	Process token [575]: T_CONSTANT_ENCAPSED_STRING => 'error'
	Process token  576 : T_CLOSE_PARENTHESIS => )
	Process token  577 : T_SEMICOLON => ;
	Process token [578]: T_WHITESPACE => \n
	Process token [579]: T_STRING => defined
	Process token  580 : T_OPEN_PARENTHESIS => (
	Process token [581]: T_CONSTANT_ENCAPSED_STRING => 'FOO'
	Process token  582 : T_CLOSE_PARENTHESIS => )
	Process token [583]: T_WHITESPACE =>  
	Process token [584]: T_BOOLEAN_OR => ||
	Process token [585]: T_WHITESPACE =>  
	Process token [586]: T_EXIT => die
	Process token  587 : T_OPEN_PARENTHESIS => (
	Process token [588]: T_CONSTANT_ENCAPSED_STRING => 'error'
	Process token  589 : T_CLOSE_PARENTHESIS => )
	Process token  590 : T_SEMICOLON => ;
	Process token [591]: T_WHITESPACE => \n
	Process token [592]: T_INTERFACE => interface
	Process token [593]: T_WHITESPACE =>  
	Process token [594]: T_STRING => myInterface
	Process token [595]: T_WHITESPACE =>  
	Process token  596 : T_OPEN_CURLY_BRACKET => {
	Process token [597]: T_WHITESPACE => \n    
	Process token [598]: T_FUNCTION => function
	Process token [599]: T_WHITESPACE =>  
	Process token [600]: T_STRING => myFunc
	Process token  601 : T_OPEN_PARENTHESIS => (
	Process token  602 : T_CLOSE_PARENTHESIS => )
	Process token  603 : T_SEMICOLON => ;
	Process token [604]: T_WHITESPACE => \n
	Process token  605 : T_CLOSE_CURLY_BRACKET => }
	Process token [606]: T_WHITESPACE => \n
	Process token [607]: T_ECHO => echo
	Process token [608]: T_WHITESPACE =>  
	Process token [609]: T_CONSTANT_ENCAPSED_STRING => 'hello'
	Process token  610 : T_SEMICOLON => ;
	Process token [611]: T_WHITESPACE => \n\n
	Process token [612]: T_FUNCTION => function
	Process token [613]: T_WHITESPACE =>  
	Process token [614]: T_STRING => foo
	Process token  615 : T_OPEN_PARENTHESIS => (
	Process token [616]: T_VARIABLE => $color
	Process token  617 : T_CLOSE_PARENTHESIS => )
	Process token [618]: T_WHITESPACE =>  
	Process token  619 : T_OPEN_CURLY_BRACKET => {
	Process token [620]: T_WHITESPACE => \n    
	Process token [621]: T_SWITCH => switch
	Process token [622]: T_WHITESPACE =>  
	Process token  623 : T_OPEN_PARENTHESIS => (
	Process token [624]: T_VARIABLE => $color
	Process token  625 : T_CLOSE_PARENTHESIS => )
	Process token [626]: T_WHITESPACE =>  
	Process token  627 : T_OPEN_CURLY_BRACKET => {
	Process token [628]: T_WHITESPACE => \n        
	Process token [629]: T_CASE => case
	Process token [630]: T_WHITESPACE =>  
	Process token [631]: T_CONSTANT_ENCAPSED_STRING => 'red'
	Process token  632 : T_COLON => :
	Process token [633]: T_WHITESPACE => \n            
	Process token [634]: T_RETURN => return
	Process token [635]: T_WHITESPACE =>  
	Process token [636]: T_CONSTANT_ENCAPSED_STRING => 'yuck'
	Process token  637 : T_SEMICOLON => ;
	Process token [638]: T_WHITESPACE => \n            
	Process token [639]: T_BREAK => break
	Process token  640 : T_SEMICOLON => ;
	Process token [641]: T_WHITESPACE => \n        
	Process token [642]: T_CASE => case
	Process token [643]: T_WHITESPACE =>  
	Process token [644]: T_CONSTANT_ENCAPSED_STRING => 'blue'
	Process token  645 : T_COLON => :
	Process token [646]: T_WHITESPACE => \n            
	Process token [647]: T_RETURN => return
	Process token [648]: T_WHITESPACE =>  
	Process token [649]: T_CONSTANT_ENCAPSED_STRING => 'yuck'
	Process token  650 : T_SEMICOLON => ;
	Process token [651]: T_WHITESPACE => \n            
	Process token [652]: T_BREAK => break
	Process token  653 : T_SEMICOLON => ;
	Process token [654]: T_WHITESPACE => \n        
	Process token [655]: T_CASE => case
	Process token [656]: T_WHITESPACE =>  
	Process token [657]: T_CONSTANT_ENCAPSED_STRING => 'orange'
	Process token  658 : T_COLON => :
	Process token [659]: T_WHITESPACE => \n            
	Process token [660]: T_RETURN => return
	Process token [661]: T_WHITESPACE =>  
	Process token [662]: T_CONSTANT_ENCAPSED_STRING => 'yay'
	Process token  663 : T_SEMICOLON => ;
	Process token [664]: T_WHITESPACE => \n            
	Process token [665]: T_BREAK => break
	Process token  666 : T_SEMICOLON => ;
	Process token [667]: T_WHITESPACE => \n        
	Process token [668]: T_DEFAULT => default
	Process token  669 : T_COLON => :
	Process token [670]: T_WHITESPACE => \n            
	Process token [671]: T_RETURN => return
	Process token [672]: T_WHITESPACE =>  
	Process token [673]: T_CONSTANT_ENCAPSED_STRING => 'boring'
	Process token  674 : T_SEMICOLON => ;
	Process token [675]: T_WHITESPACE => \n    
	Process token  676 : T_CLOSE_CURLY_BRACKET => }
	Process token [677]: T_WHITESPACE => \n
	Process token  678 : T_CLOSE_CURLY_BRACKET => }
	Process token [679]: T_WHITESPACE => \n\n
	Process token [680]: T_FUNCTION => function
	Process token [681]: T_WHITESPACE =>  
	Process token [682]: T_STRING => returnOverMultipleLines
	Process token  683 : T_OPEN_PARENTHESIS => (
	Process token [684]: T_VARIABLE => $color
	Process token  685 : T_CLOSE_PARENTHESIS => )
	Process token [686]: T_WHITESPACE =>  
	Process token  687 : T_OPEN_CURLY_BRACKET => {
	Process token [688]: T_WHITESPACE => \n    
	Process token [689]: T_SWITCH => switch
	Process token [690]: T_WHITESPACE =>  
	Process token  691 : T_OPEN_PARENTHESIS => (
	Process token [692]: T_VARIABLE => $color
	Process token  693 : T_CLOSE_PARENTHESIS => )
	Process token [694]: T_WHITESPACE =>  
	Process token  695 : T_OPEN_CURLY_BRACKET => {
	Process token [696]: T_WHITESPACE => \n        
	Process token [697]: T_CASE => case
	Process token [698]: T_WHITESPACE =>  
	Process token [699]: T_CONSTANT_ENCAPSED_STRING => 'red'
	Process token  700 : T_COLON => :
	Process token [701]: T_WHITESPACE => \n            
	Process token [702]: T_RETURN => return
	Process token [703]: T_WHITESPACE =>  
	Process token [704]: T_STRING => someFunction
	Process token  705 : T_OPEN_PARENTHESIS => (
	Process token [706]: T_WHITESPACE => \n                
	Process token [707]: T_CONSTANT_ENCAPSED_STRING => 'multiple'
	Process token  708 : T_COMMA => ,
	Process token [709]: T_WHITESPACE => \n                
	Process token [710]: T_CONSTANT_ENCAPSED_STRING => 'arguments'
	Process token [711]: T_WHITESPACE => \n            
	Process token  712 : T_CLOSE_PARENTHESIS => )
	Process token  713 : T_SEMICOLON => ;
	Process token [714]: T_WHITESPACE => \n            
	Process token [715]: T_ECHO => echo
	Process token [716]: T_WHITESPACE =>  
	Process token [717]: T_VARIABLE => $foo
	Process token  718 : T_SEMICOLON => ;
	Process token [719]: T_WHITESPACE => \n        
	Process token [720]: T_DEFAULT => default
	Process token  721 : T_COLON => :
	Process token [722]: T_WHITESPACE => \n            
	Process token [723]: T_RETURN => return
	Process token [724]: T_WHITESPACE =>  
	Process token [725]: T_ARRAY => array
	Process token  726 : T_OPEN_PARENTHESIS => (
	Process token [727]: T_WHITESPACE => \n                
	Process token [728]: T_CONSTANT_ENCAPSED_STRING => 'multiline'
	Process token  729 : T_COMMA => ,
	Process token [730]: T_WHITESPACE => \n                
	Process token [731]: T_CONSTANT_ENCAPSED_STRING => 'array'
	Process token [732]: T_WHITESPACE => \n            
	Process token  733 : T_CLOSE_PARENTHESIS => )
	Process token  734 : T_SEMICOLON => ;
	Process token [735]: T_WHITESPACE => \n    
	Process token  736 : T_CLOSE_CURLY_BRACKET => }
	Process token [737]: T_WHITESPACE => \n
	Process token  738 : T_CLOSE_CURLY_BRACKET => }
	Process token [739]: T_WHITESPACE => \n\n
	Process token [740]: T_FUNCTION => function
	Process token [741]: T_WHITESPACE =>  
	Process token [742]: T_STRING => test
	Process token  743 : T_OPEN_PARENTHESIS => (
	Process token  744 : T_CLOSE_PARENTHESIS => )
	Process token [745]: T_WHITESPACE =>  
	Process token  746 : T_OPEN_CURLY_BRACKET => {
	Process token [747]: T_WHITESPACE => \n    
	Process token [748]: T_RETURN => return
	Process token [749]: T_WHITESPACE =>  
	Process token [750]: T_ARRAY => array
	Process token  751 : T_OPEN_PARENTHESIS => (
	Process token [752]: T_WHITESPACE => \n                
	Process token [753]: T_CONSTANT_ENCAPSED_STRING => 'multiline'
	Process token  754 : T_COMMA => ,
	Process token [755]: T_WHITESPACE => \n                
	Process token [756]: T_CONSTANT_ENCAPSED_STRING => 'array'
	Process token [757]: T_WHITESPACE => \n            
	Process token  758 : T_CLOSE_PARENTHESIS => )
	Process token  759 : T_SEMICOLON => ;
	Process token [760]: T_WHITESPACE => \n    
	Process token [761]: T_ECHO => echo
	Process token [762]: T_WHITESPACE =>  
	Process token [763]: T_VARIABLE => $foo
	Process token  764 : T_SEMICOLON => ;
	Process token [765]: T_WHITESPACE => \n
	Process token  766 : T_CLOSE_CURLY_BRACKET => }
	Process token [767]: T_WHITESPACE => \n\n
	Process token [768]: T_FUNCTION => function
	Process token [769]: T_WHITESPACE =>  
	Process token [770]: T_STRING => test
	Process token  771 : T_OPEN_PARENTHESIS => (
	Process token  772 : T_CLOSE_PARENTHESIS => )
	Process token  773 : T_OPEN_CURLY_BRACKET => {
	Process token [774]: T_WHITESPACE => \n    
	Process token [775]: T_SWITCH => switch
	Process token  776 : T_OPEN_PARENTHESIS => (
	Process token [777]: T_VARIABLE => $a
	Process token  778 : T_CLOSE_PARENTHESIS => )
	Process token [779]: T_WHITESPACE =>  
	Process token  780 : T_OPEN_CURLY_BRACKET => {
	Process token [781]: T_WHITESPACE => \n        
	Process token [782]: T_CASE => case
	Process token [783]: T_WHITESPACE =>  
	Process token [784]: T_LNUMBER => 1
	Process token  785 : T_COLON => :
	Process token [786]: T_WHITESPACE => \n            
	Process token [787]: T_IF => if
	Process token [788]: T_WHITESPACE =>  
	Process token  789 : T_OPEN_PARENTHESIS => (
	Process token [790]: T_EMPTY => empty
	Process token  791 : T_OPEN_PARENTHESIS => (
	Process token [792]: T_VARIABLE => $b
	Process token  793 : T_CLOSE_PARENTHESIS => )
	Process token  794 : T_CLOSE_PARENTHESIS => )
	Process token [795]: T_WHITESPACE => \n                
	Process token [796]: T_RETURN => return
	Process token [797]: T_WHITESPACE =>  
	Process token [798]: T_LNUMBER => 0
	Process token  799 : T_SEMICOLON => ;
	Process token [800]: T_WHITESPACE => \n            
	Process token [801]: T_BREAK => break
	Process token  802 : T_SEMICOLON => ;
	Process token [803]: T_WHITESPACE => \n        
	Process token [804]: T_DEFAULT => default
	Process token  805 : T_COLON => :
	Process token [806]: T_WHITESPACE => \n            
	Process token [807]: T_RETURN => return
	Process token [808]: T_WHITESPACE =>  
	Process token [809]: T_LNUMBER => 2
	Process token  810 : T_SEMICOLON => ;
	Process token [811]: T_WHITESPACE => \n    
	Process token  812 : T_CLOSE_CURLY_BRACKET => }
	Process token [813]: T_WHITESPACE => \n\n    
	Process token [814]: T_IF => if
	Process token [815]: T_WHITESPACE =>  
	Process token  816 : T_OPEN_PARENTHESIS => (
	Process token [817]: T_EMPTY => empty
	Process token  818 : T_OPEN_PARENTHESIS => (
	Process token [819]: T_VARIABLE => $a
	Process token  820 : T_CLOSE_PARENTHESIS => )
	Process token  821 : T_CLOSE_PARENTHESIS => )
	Process token [822]: T_WHITESPACE => \n        
	Process token [823]: T_ECHO => echo
	Process token [824]: T_WHITESPACE =>  
	Process token [825]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  826 : T_SEMICOLON => ;
	Process token [827]: T_WHITESPACE => \n    
	Process token [828]: T_ELSEIF => elseif
	Process token [829]: T_WHITESPACE =>  
	Process token  830 : T_OPEN_PARENTHESIS => (
	Process token [831]: T_VARIABLE => $empty
	Process token  832 : T_OPEN_PARENTHESIS => (
	Process token [833]: T_VARIABLE => $b
	Process token  834 : T_CLOSE_PARENTHESIS => )
	Process token  835 : T_CLOSE_PARENTHESIS => )
	Process token [836]: T_WHITESPACE => \n        
	Process token [837]: T_RETURN => return
	Process token [838]: T_WHITESPACE =>  
	Process token [839]: T_LNUMBER => 0
	Process token  840 : T_SEMICOLON => ;
	Process token [841]: T_WHITESPACE => \n    
	Process token [842]: T_ELSE => else
	Process token [843]: T_WHITESPACE => \n        
	Process token [844]: T_RETURN => return
	Process token [845]: T_WHITESPACE =>  
	Process token [846]: T_LNUMBER => 1
	Process token  847 : T_SEMICOLON => ;
	Process token [848]: T_WHITESPACE => \n\n    
	Process token [849]: T_ECHO => echo
	Process token [850]: T_WHITESPACE =>  
	Process token [851]: T_CONSTANT_ENCAPSED_STRING => "oi"
	Process token  852 : T_SEMICOLON => ;
	Process token [853]: T_WHITESPACE => \n    
	Process token [854]: T_RETURN => return
	Process token [855]: T_WHITESPACE =>  
	Process token [856]: T_LNUMBER => 1
	Process token  857 : T_SEMICOLON => ;
	Process token [858]: T_WHITESPACE => \n
	Process token  859 : T_CLOSE_CURLY_BRACKET => }
	Process token [860]: T_WHITESPACE => \n\n
	Process token [861]: T_SWITCH => switch
	Process token [862]: T_WHITESPACE =>  
	Process token  863 : T_OPEN_PARENTHESIS => (
	Process token [864]: T_VARIABLE => $foo
	Process token  865 : T_CLOSE_PARENTHESIS => )
	Process token [866]: T_WHITESPACE =>  
	Process token  867 : T_OPEN_CURLY_BRACKET => {
	Process token [868]: T_WHITESPACE => \n    
	Process token [869]: T_CASE => case
	Process token [870]: T_WHITESPACE =>  
	Process token [871]: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token  872 : T_COLON => :
	Process token [873]: T_WHITESPACE => \n        
	Process token [874]: T_IF => if
	Process token [875]: T_WHITESPACE =>  
	Process token  876 : T_OPEN_PARENTHESIS => (
	Process token [877]: T_VARIABLE => $foo
	Process token  878 : T_CLOSE_PARENTHESIS => )
	Process token [879]: T_WHITESPACE => \n            
	Process token [880]: T_RETURN => return
	Process token [881]: T_WHITESPACE =>  
	Process token [882]: T_VARIABLE => $foo
	Process token  883 : T_SEMICOLON => ;
	Process token [884]: T_WHITESPACE => \n        
	Process token [885]: T_RETURN => return
	Process token [886]: T_WHITESPACE =>  
	Process token [887]: T_VARIABLE => $bar
	Process token  888 : T_SEMICOLON => ;
	Process token [889]: T_WHITESPACE => \n    
	Process token [890]: T_DEFAULT => default
	Process token  891 : T_COLON => :
	Process token [892]: T_WHITESPACE => \n        
	Process token [893]: T_RETURN => return
	Process token [894]: T_WHITESPACE =>  
	Process token [895]: T_VARIABLE => $bar
	Process token  896 : T_SEMICOLON => ;
	Process token [897]: T_WHITESPACE => \n
	Process token  898 : T_CLOSE_CURLY_BRACKET => }
	Process token [899]: T_WHITESPACE => \n\n
	Process token [900]: T_FUNCTION => function
	Process token [901]: T_WHITESPACE =>  
	Process token [902]: T_STRING => foo
	Process token  903 : T_OPEN_PARENTHESIS => (
	Process token  904 : T_CLOSE_PARENTHESIS => )
	Process token [905]: T_WHITESPACE => \n
	Process token  906 : T_OPEN_CURLY_BRACKET => {
	Process token [907]: T_WHITESPACE => \n    
	Process token [908]: T_RETURN => return
	Process token [909]: T_WHITESPACE =>  
	Process token [910]: T_VARIABLE => $bar
	Process token [911]: T_OBJECT_OPERATOR => ->
	Process token  912 : T_OPEN_CURLY_BRACKET => {
	Process token [913]: T_VARIABLE => $action
	Process token [914]: T_WHITESPACE =>  
	Process token  915 : T_STRING_CONCAT => .
	Process token [916]: T_WHITESPACE =>  
	Process token [917]: T_CONSTANT_ENCAPSED_STRING => 'JsonAction'
	Process token  918 : T_CLOSE_CURLY_BRACKET => }
	Process token  919 : T_OPEN_PARENTHESIS => (
	Process token  920 : T_CLOSE_PARENTHESIS => )
	Process token  921 : T_SEMICOLON => ;
	Process token [922]: T_WHITESPACE => \n
	Process token  923 : T_CLOSE_CURLY_BRACKET => }
	Process token [924]: T_WHITESPACE => \n\n
	Process token [925]: T_SWITCH => switch
	Process token [926]: T_WHITESPACE =>  
	Process token  927 : T_OPEN_PARENTHESIS => (
	Process token [928]: T_STRING => true
	Process token  929 : T_CLOSE_PARENTHESIS => )
	Process token [930]: T_WHITESPACE =>  
	Process token  931 : T_OPEN_CURLY_BRACKET => {
	Process token [932]: T_WHITESPACE => \n    
	Process token [933]: T_CASE => case
	Process token [934]: T_WHITESPACE =>  
	Process token [935]: T_LNUMBER => 1
	Process token  936 : T_COLON => :
	Process token [937]: T_WHITESPACE => \n        
	Process token [938]: T_RETURN => return
	Process token [939]: T_WHITESPACE =>  
	Process token [940]: T_STRING => foo
	Process token  941 : T_OPEN_PARENTHESIS => (
	Process token [942]: T_WHITESPACE => \n            
	Process token [943]: T_FUNCTION => function
	Process token [944]: T_WHITESPACE =>  
	Process token  945 : T_OPEN_PARENTHESIS => (
	Process token  946 : T_CLOSE_PARENTHESIS => )
	Process token [947]: T_WHITESPACE =>  
	Process token  948 : T_OPEN_CURLY_BRACKET => {
	Process token [949]: T_WHITESPACE => \n                
	Process token [950]: T_VARIABLE => $foo
	Process token [951]: T_WHITESPACE =>  
	Process token  952 : T_EQUAL => =
	Process token [953]: T_WHITESPACE =>  
	Process token [954]: T_VARIABLE => $bar
	Process token  955 : T_SEMICOLON => ;
	Process token [956]: T_WHITESPACE =>   
	Process token [957]: T_COMMENT => // when this is removed it works ok\n
	Process token [958]: T_WHITESPACE =>                 
	Process token [959]: T_RETURN => return
	Process token [960]: T_WHITESPACE =>  
	Process token [961]: T_STRING => false
	Process token  962 : T_SEMICOLON => ;
	Process token [963]: T_WHITESPACE =>  
	Process token [964]: T_COMMENT => // from here on it reports unreachable\n
	Process token [965]: T_WHITESPACE =>             
	Process token  966 : T_CLOSE_CURLY_BRACKET => }
	Process token [967]: T_WHITESPACE => \n        
	Process token  968 : T_CLOSE_PARENTHESIS => )
	Process token  969 : T_SEMICOLON => ;
	Process token [970]: T_WHITESPACE => \n
	Process token  971 : T_CLOSE_CURLY_BRACKET => }
	Process token [972]: T_WHITESPACE => \n\n
	Process token [973]: T_FOR => for
	Process token  974 : T_OPEN_PARENTHESIS => (
	Process token [975]: T_VARIABLE => $i
	Process token  976 : T_EQUAL => =
	Process token [977]: T_LNUMBER => 0
	Process token  978 : T_COMMA => ,
	Process token [979]: T_VARIABLE => $j
	Process token  980 : T_EQUAL => =
	Process token [981]: T_LNUMBER => 50
	Process token  982 : T_SEMICOLON => ;
	Process token [983]: T_WHITESPACE =>  
	Process token [984]: T_VARIABLE => $i
	Process token  985 : T_LESS_THAN => <
	Process token [986]: T_LNUMBER => 100
	Process token  987 : T_SEMICOLON => ;
	Process token [988]: T_WHITESPACE =>  
	Process token [989]: T_VARIABLE => $i
	Process token [990]: T_INC => ++
	Process token  991 : T_CLOSE_PARENTHESIS => )
	Process token [992]: T_WHITESPACE =>  
	Process token  993 : T_OPEN_CURLY_BRACKET => {
	Process token [994]: T_WHITESPACE => \n  
	Process token [995]: T_WHILE => while
	Process token  996 : T_OPEN_PARENTHESIS => (
	Process token [997]: T_VARIABLE => $j
	Process token [998]: T_DEC => --
	Process token  999 : T_CLOSE_PARENTHESIS => )
	Process token [1000]: T_WHITESPACE =>  
	Process token  1001 : T_OPEN_CURLY_BRACKET => {
	Process token [1002]: T_WHITESPACE => \n    
	Process token [1003]: T_IF => if
	Process token  1004 : T_OPEN_PARENTHESIS => (
	Process token [1005]: T_VARIABLE => $j
	Process token [1006]: T_IS_EQUAL => ==
	Process token [1007]: T_LNUMBER => 17
	Process token  1008 : T_CLOSE_PARENTHESIS => )
	Process token [1009]: T_WHITESPACE =>  
	Process token  1010 : T_OPEN_CURLY_BRACKET => {
	Process token [1011]: T_WHITESPACE => \n\t\t
	Process token [1012]: T_GOTO => goto
	Process token [1013]: T_WHITESPACE =>  
	Process token [1014]: T_STRING => end
	Process token  1015 : T_SEMICOLON => ;
	Process token [1016]: T_WHITESPACE => \n\t\t
	Process token [1017]: T_ECHO => echo
	Process token [1018]: T_WHITESPACE =>  
	Process token [1019]: T_CONSTANT_ENCAPSED_STRING => 'unreachable'
	Process token  1020 : T_SEMICOLON => ;
	Process token [1021]: T_WHITESPACE => \n\t
	Process token  1022 : T_CLOSE_CURLY_BRACKET => }
	Process token [1023]: T_WHITESPACE => \n  
	Process token  1024 : T_CLOSE_CURLY_BRACKET => }
	Process token [1025]: T_WHITESPACE => \n
	Process token  1026 : T_CLOSE_CURLY_BRACKET => }
	Process token [1027]: T_WHITESPACE => \n\n
	Process token [1028]: T_SWITCH => switch
	Process token [1029]: T_WHITESPACE =>  
	Process token  1030 : T_OPEN_PARENTHESIS => (
	Process token [1031]: T_VARIABLE => $var
	Process token  1032 : T_CLOSE_PARENTHESIS => )
	Process token [1033]: T_WHITESPACE =>  
	Process token  1034 : T_OPEN_CURLY_BRACKET => {
	Process token [1035]: T_WHITESPACE => \n    
	Process token [1036]: T_CASE => case
	Process token [1037]: T_WHITESPACE =>  
	Process token [1038]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  1039 : T_COLON => :
	Process token [1040]: T_WHITESPACE => \n        
	Process token [1041]: T_GOTO => goto
	Process token [1042]: T_WHITESPACE =>  
	Process token [1043]: T_STRING => end
	Process token  1044 : T_SEMICOLON => ;
	Process token [1045]: T_WHITESPACE => \n        
	Process token [1046]: T_ECHO => echo
	Process token [1047]: T_WHITESPACE =>  
	Process token [1048]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  1049 : T_SEMICOLON => ;
	Process token [1050]: T_WHITESPACE => \n\n    
	Process token [1051]: T_CASE => case
	Process token [1052]: T_WHITESPACE =>  
	Process token [1053]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token  1054 : T_COLON => :
	Process token [1055]: T_WHITESPACE => \n    
	Process token [1056]: T_CASE => case
	Process token [1057]: T_WHITESPACE =>  
	Process token [1058]: T_CONSTANT_ENCAPSED_STRING => '3'
	Process token  1059 : T_COLON => :
	Process token [1060]: T_WHITESPACE => \n        
	Process token [1061]: T_IF => if
	Process token [1062]: T_WHITESPACE =>  
	Process token  1063 : T_OPEN_PARENTHESIS => (
	Process token [1064]: T_VARIABLE => $something
	Process token [1065]: T_WHITESPACE =>  
	Process token [1066]: T_IS_IDENTICAL => ===
	Process token [1067]: T_WHITESPACE =>  
	Process token [1068]: T_STRING => true
	Process token  1069 : T_CLOSE_PARENTHESIS => )
	Process token [1070]: T_WHITESPACE =>  
	Process token  1071 : T_OPEN_CURLY_BRACKET => {
	Process token [1072]: T_WHITESPACE => \n            
	Process token [1073]: T_GOTO => goto
	Process token [1074]: T_WHITESPACE =>  
	Process token [1075]: T_STRING => end
	Process token  1076 : T_SEMICOLON => ;
	Process token [1077]: T_WHITESPACE => \n            
	Process token [1078]: T_ECHO => echo
	Process token [1079]: T_WHITESPACE =>  
	Process token [1080]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  1081 : T_SEMICOLON => ;
	Process token [1082]: T_WHITESPACE => \n        
	Process token  1083 : T_CLOSE_CURLY_BRACKET => }
	Process token [1084]: T_WHITESPACE => \n    
	Process token [1085]: T_BREAK => break
	Process token  1086 : T_SEMICOLON => ;
	Process token [1087]: T_WHITESPACE => \n    
	Process token [1088]: T_DEFAULT => default
	Process token  1089 : T_COLON => :
	Process token [1090]: T_WHITESPACE => \n        
	Process token [1091]: T_GOTO => goto
	Process token [1092]: T_WHITESPACE =>  
	Process token [1093]: T_STRING => end
	Process token  1094 : T_SEMICOLON => ;
	Process token [1095]: T_WHITESPACE => \n\n        
	Process token [1096]: T_IF => if
	Process token [1097]: T_WHITESPACE =>  
	Process token  1098 : T_OPEN_PARENTHESIS => (
	Process token [1099]: T_VARIABLE => $something
	Process token [1100]: T_WHITESPACE =>  
	Process token [1101]: T_IS_IDENTICAL => ===
	Process token [1102]: T_WHITESPACE =>  
	Process token [1103]: T_STRING => true
	Process token  1104 : T_CLOSE_PARENTHESIS => )
	Process token [1105]: T_WHITESPACE =>  
	Process token  1106 : T_OPEN_CURLY_BRACKET => {
	Process token [1107]: T_WHITESPACE => \n            
	Process token [1108]: T_GOTO => goto
	Process token [1109]: T_WHITESPACE =>  
	Process token [1110]: T_STRING => end
	Process token  1111 : T_SEMICOLON => ;
	Process token [1112]: T_WHITESPACE => \n            
	Process token [1113]: T_ECHO => echo
	Process token [1114]: T_WHITESPACE =>  
	Process token [1115]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  1116 : T_SEMICOLON => ;
	Process token [1117]: T_WHITESPACE => \n        
	Process token  1118 : T_CLOSE_CURLY_BRACKET => }
	Process token [1119]: T_WHITESPACE => \n
	Process token  1120 : T_CLOSE_CURLY_BRACKET => }
	Process token [1121]: T_WHITESPACE => \n\n
	Process token [1122]: T_STRING => end
		* token 1122 changed from T_STRING to T_GOTO_LABEL
		* skipping T_COLON token 1123
	Process token [1124]: T_WHITESPACE => \n
	Process token [1125]: T_ECHO => echo
	Process token [1126]: T_WHITESPACE =>  
	Process token [1127]: T_CONSTANT_ENCAPSED_STRING => 'j hit 17'
	Process token  1128 : T_SEMICOLON => ;
	Process token [1129]: T_WHITESPACE => \n
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	=> Found curly bracket opener at 7
		=> Found curly bracket opener at 49
		=> Found curly bracket closer at 62 for 49
		=> Found curly bracket opener at 88
		=> Found curly bracket closer at 101 for 88
	=> Found curly bracket closer at 104 for 7
	=> Found curly bracket opener at 114
		=> Found curly bracket opener at 127
		=> Found curly bracket closer at 140 for 127
		=> Found curly bracket opener at 164
		=> Found curly bracket closer at 173 for 164
	=> Found curly bracket closer at 176 for 114
	=> Found curly bracket opener at 189
		=> Found curly bracket opener at 202
		=> Found curly bracket closer at 213 for 202
		=> Found curly bracket opener at 217
		=> Found curly bracket closer at 230 for 217
	=> Found curly bracket closer at 241 for 189
	=> Found curly bracket opener at 250
	=> Found curly bracket closer at 294 for 250
	=> Found curly bracket opener at 314
	=> Found curly bracket closer at 341 for 314
	=> Found curly bracket opener at 350
	=> Found curly bracket closer at 389 for 350
	=> Found curly bracket opener at 398
	=> Found curly bracket closer at 427 for 398
	=> Found curly bracket opener at 436
		=> Found curly bracket opener at 449
		=> Found curly bracket closer at 456 for 449
	=> Found curly bracket closer at 470 for 436
	=> Found curly bracket opener at 479
		=> Found curly bracket opener at 496
		=> Found curly bracket closer at 518 for 496
	=> Found curly bracket closer at 525 for 479
	=> Found curly bracket opener at 538
		=> Found curly bracket opener at 550
		=> Found curly bracket closer at 555 for 550
	=> Found curly bracket closer at 560 for 538
	=> Found curly bracket opener at 569
		=> Found curly bracket opener at 582
		=> Found curly bracket closer at 596 for 582
	=> Found curly bracket closer at 616 for 569
	=> Found curly bracket opener at 625
		=> Found curly bracket opener at 633
		=> Found curly bracket closer at 642 for 633
		=> Found curly bracket opener at 651
		=> Found curly bracket closer at 660 for 651
	=> Found curly bracket closer at 662 for 625
	=> Found curly bracket opener at 695
	=> Found curly bracket closer at 705 for 695
	=> Found curly bracket opener at 720
		=> Found curly bracket opener at 729
		=> Found curly bracket closer at 790 for 729
	=> Found curly bracket closer at 792 for 720
	=> Found curly bracket opener at 802
		=> Found curly bracket opener at 811
		=> Found curly bracket closer at 864 for 811
	=> Found curly bracket closer at 866 for 802
	=> Found curly bracket opener at 875
	=> Found curly bracket closer at 900 for 875
	=> Found curly bracket opener at 908
		=> Found curly bracket opener at 916
		=> Found curly bracket closer at 955 for 916
	=> Found curly bracket closer at 1012 for 908
	=> Found curly bracket opener at 1021
	=> Found curly bracket closer at 1058 for 1021
	=> Found curly bracket opener at 1067
		=> Found curly bracket opener at 1074
		=> Found curly bracket closer at 1080 for 1074
	=> Found curly bracket closer at 1085 for 1067
	=> Found curly bracket opener at 1094
		=> Found curly bracket opener at 1114
		=> Found curly bracket closer at 1133 for 1114
	=> Found curly bracket closer at 1139 for 1094
	=> Found curly bracket opener at 1162
		=> Found curly bracket opener at 1171
			=> Found curly bracket opener at 1181
			=> Found curly bracket closer at 1196 for 1181
		=> Found curly bracket closer at 1199 for 1171
	=> Found curly bracket closer at 1201 for 1162
	=> Found curly bracket opener at 1210
		=> Found curly bracket opener at 1254
		=> Found curly bracket closer at 1269 for 1254
		=> Found curly bracket opener at 1297
		=> Found curly bracket closer at 1312 for 1297
	=> Found curly bracket closer at 1314 for 1210
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 1:T_SWITCH => switch
	=> Begin scope map recursion at token 1 with depth 1
	Process token 2 on line 2 []: T_WHITESPACE =>  
	Process token 3 on line 2 []: T_OPEN_PARENTHESIS => (
	Process token 4 on line 2 []: T_VARIABLE => $var
	Process token 5 on line 2 []: T_CLOSE_PARENTHESIS => )
	Process token 6 on line 2 []: T_WHITESPACE =>  
	Process token 7 on line 2 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1:T_SWITCH
	Process token 8 on line 2 [opener:7;]: T_WHITESPACE => \n
	Process token 9 on line 3 [opener:7;]: T_WHITESPACE =>     
	Process token 10 on line 3 [opener:7;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 10 with depth 1
	Process token 11 on line 3 []: T_WHITESPACE =>  
	Process token 12 on line 3 []: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token 13 on line 3 []: T_COLON => :
	=> Found scope opener for 10:T_CASE
	Process token 14 on line 3 [opener:13;]: T_WHITESPACE => \n
	Process token 15 on line 4 [opener:13;]: T_WHITESPACE =>         
	Process token 16 on line 4 [opener:13;]: T_RETURN => return
	=> Found scope closer (16:T_RETURN) for 10:T_CASE
	Process token 14 on line 3 [opener:7;]: T_WHITESPACE => \n
	Process token 15 on line 4 [opener:7;]: T_WHITESPACE =>         
	Process token 16 on line 4 [opener:7;]: T_RETURN => return
	Process token 17 on line 4 [opener:7;]: T_SEMICOLON => ;
	Process token 18 on line 4 [opener:7;]: T_WHITESPACE => \n
	Process token 19 on line 5 [opener:7;]: T_WHITESPACE =>         
	Process token 20 on line 5 [opener:7;]: T_ECHO => echo
	Process token 21 on line 5 [opener:7;]: T_WHITESPACE =>  
	Process token 22 on line 5 [opener:7;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token 23 on line 5 [opener:7;]: T_SEMICOLON => ;
	Process token 24 on line 5 [opener:7;]: T_WHITESPACE => \n
	Process token 25 on line 6 [opener:7;]: T_WHITESPACE => \n
	Process token 26 on line 7 [opener:7;]: T_WHITESPACE =>     
	Process token 27 on line 7 [opener:7;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 27 with depth 1
	Process token 28 on line 7 []: T_WHITESPACE =>  
	Process token 29 on line 7 []: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token 30 on line 7 []: T_COLON => :
	=> Found scope opener for 27:T_CASE
	Process token 31 on line 7 [opener:30;]: T_WHITESPACE => \n
	Process token 32 on line 8 [opener:30;]: T_WHITESPACE =>     
	Process token 33 on line 8 [opener:30;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 33 with depth 1
	Process token 34 on line 8 []: T_WHITESPACE =>  
	Process token 35 on line 8 []: T_CONSTANT_ENCAPSED_STRING => '3'
	Process token 36 on line 8 []: T_COLON => :
	=> Found scope opener for 33:T_CASE
	Process token 37 on line 8 [opener:36;]: T_WHITESPACE => \n
	Process token 38 on line 9 [opener:36;]: T_WHITESPACE =>         
	Process token 39 on line 9 [opener:36;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 39 with depth 2
		Process token 40 on line 9 []: T_WHITESPACE =>  
		Process token 41 on line 9 []: T_OPEN_PARENTHESIS => (
		Process token 42 on line 9 []: T_VARIABLE => $something
		Process token 43 on line 9 []: T_WHITESPACE =>  
		Process token 44 on line 9 []: T_IS_IDENTICAL => ===
		Process token 45 on line 9 []: T_WHITESPACE =>  
		Process token 46 on line 9 []: T_TRUE => true
		Process token 47 on line 9 []: T_CLOSE_PARENTHESIS => )
		Process token 48 on line 9 []: T_WHITESPACE =>  
		Process token 49 on line 9 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 39:T_IF
		Process token 50 on line 9 [opener:49;]: T_WHITESPACE => \n
		Process token 51 on line 10 [opener:49;]: T_WHITESPACE =>             
		Process token 52 on line 10 [opener:49;]: T_BREAK => break
		Process token 53 on line 10 [opener:49;]: T_SEMICOLON => ;
		Process token 54 on line 10 [opener:49;]: T_WHITESPACE => \n
		Process token 55 on line 11 [opener:49;]: T_WHITESPACE =>             
		Process token 56 on line 11 [opener:49;]: T_ECHO => echo
		Process token 57 on line 11 [opener:49;]: T_WHITESPACE =>  
		Process token 58 on line 11 [opener:49;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
		Process token 59 on line 11 [opener:49;]: T_SEMICOLON => ;
		Process token 60 on line 11 [opener:49;]: T_WHITESPACE => \n
		Process token 61 on line 12 [opener:49;]: T_WHITESPACE =>         
		Process token 62 on line 12 [opener:49;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (62:T_CLOSE_CURLY_BRACKET) for 39:T_IF
	Process token 63 on line 12 [opener:36;]: T_WHITESPACE => \n
	Process token 64 on line 13 [opener:36;]: T_WHITESPACE =>     
	Process token 65 on line 13 [opener:36;]: T_BREAK => break
	=> Found scope closer (65:T_BREAK) for 33:T_CASE
	Process token 37 on line 8 [opener:30;]: T_WHITESPACE => \n
	Process token 38 on line 9 [opener:30;]: T_WHITESPACE =>         
	Process token 39 on line 9 [opener:30;]: T_IF => if
	* token is an opening condition *
	* already processed, skipping *
	Process token 63 on line 12 [opener:30;]: T_WHITESPACE => \n
	Process token 64 on line 13 [opener:30;]: T_WHITESPACE =>     
	Process token 65 on line 13 [opener:30;]: T_BREAK => break
	=> Found scope closer (65:T_BREAK) for 27:T_CASE
	Process token 31 on line 7 [opener:7;]: T_WHITESPACE => \n
	Process token 32 on line 8 [opener:7;]: T_WHITESPACE =>     
	Process token 33 on line 8 [opener:7;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 34 on line 8 [opener:7;]: T_WHITESPACE =>  
	Process token 35 on line 8 [opener:7;]: T_CONSTANT_ENCAPSED_STRING => '3'
	Process token 36 on line 8 [opener:7;]: T_COLON => :
	Process token 37 on line 8 [opener:7;]: T_WHITESPACE => \n
	Process token 38 on line 9 [opener:7;]: T_WHITESPACE =>         
	Process token 39 on line 9 [opener:7;]: T_IF => if
	* token is an opening condition *
	* already processed, skipping *
	Process token 63 on line 12 [opener:7;]: T_WHITESPACE => \n
	Process token 64 on line 13 [opener:7;]: T_WHITESPACE =>     
	Process token 65 on line 13 [opener:7;]: T_BREAK => break
	Process token 66 on line 13 [opener:7;]: T_SEMICOLON => ;
	Process token 67 on line 13 [opener:7;]: T_WHITESPACE => \n
	Process token 68 on line 14 [opener:7;]: T_WHITESPACE =>     
	Process token 69 on line 14 [opener:7;]: T_DEFAULT => default
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 69 with depth 1
	Process token 70 on line 14 []: T_COLON => :
	=> Found scope opener for 69:T_DEFAULT
	Process token 71 on line 14 [opener:70;]: T_WHITESPACE => \n
	Process token 72 on line 15 [opener:70;]: T_WHITESPACE =>         
	Process token 73 on line 15 [opener:70;]: T_RETURN => return
	=> Found scope closer (73:T_RETURN) for 69:T_DEFAULT
	Process token 71 on line 14 [opener:7;]: T_WHITESPACE => \n
	Process token 72 on line 15 [opener:7;]: T_WHITESPACE =>         
	Process token 73 on line 15 [opener:7;]: T_RETURN => return
	Process token 74 on line 15 [opener:7;]: T_SEMICOLON => ;
	Process token 75 on line 15 [opener:7;]: T_WHITESPACE => \n
	Process token 76 on line 16 [opener:7;]: T_WHITESPACE => \n
	Process token 77 on line 17 [opener:7;]: T_WHITESPACE =>         
	Process token 78 on line 17 [opener:7;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 78 with depth 2
		Process token 79 on line 17 []: T_WHITESPACE =>  
		Process token 80 on line 17 []: T_OPEN_PARENTHESIS => (
		Process token 81 on line 17 []: T_VARIABLE => $something
		Process token 82 on line 17 []: T_WHITESPACE =>  
		Process token 83 on line 17 []: T_IS_IDENTICAL => ===
		Process token 84 on line 17 []: T_WHITESPACE =>  
		Process token 85 on line 17 []: T_TRUE => true
		Process token 86 on line 17 []: T_CLOSE_PARENTHESIS => )
		Process token 87 on line 17 []: T_WHITESPACE =>  
		Process token 88 on line 17 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 78:T_IF
		Process token 89 on line 17 [opener:88;]: T_WHITESPACE => \n
		Process token 90 on line 18 [opener:88;]: T_WHITESPACE =>             
		Process token 91 on line 18 [opener:88;]: T_BREAK => break
		Process token 92 on line 18 [opener:88;]: T_SEMICOLON => ;
		Process token 93 on line 18 [opener:88;]: T_WHITESPACE => \n
		Process token 94 on line 19 [opener:88;]: T_WHITESPACE =>             
		Process token 95 on line 19 [opener:88;]: T_ECHO => echo
		Process token 96 on line 19 [opener:88;]: T_WHITESPACE =>  
		Process token 97 on line 19 [opener:88;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
		Process token 98 on line 19 [opener:88;]: T_SEMICOLON => ;
		Process token 99 on line 19 [opener:88;]: T_WHITESPACE => \n
		Process token 100 on line 20 [opener:88;]: T_WHITESPACE =>         
		Process token 101 on line 20 [opener:88;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (101:T_CLOSE_CURLY_BRACKET) for 78:T_IF
	Process token 102 on line 20 [opener:7;]: T_WHITESPACE => \n
	Process token 103 on line 21 [opener:7;]: T_WHITESPACE => \n
	Process token 104 on line 22 [opener:7;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (104:T_CLOSE_CURLY_BRACKET) for 1:T_SWITCH
	Start scope map at 107:T_FUNCTION => function
	=> Begin scope map recursion at token 107 with depth 1
	Process token 108 on line 24 []: T_WHITESPACE =>  
	Process token 109 on line 24 []: T_STRING => myFunction
	Process token 110 on line 24 []: T_OPEN_PARENTHESIS => (
	Process token 111 on line 24 []: T_VARIABLE => $var
	Process token 112 on line 24 []: T_CLOSE_PARENTHESIS => )
	Process token 113 on line 24 []: T_WHITESPACE => \n
	Process token 114 on line 25 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 107:T_FUNCTION
	Process token 115 on line 25 [opener:114;]: T_WHITESPACE => \n
	Process token 116 on line 26 [opener:114;]: T_WHITESPACE =>     
	Process token 117 on line 26 [opener:114;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 117 with depth 2
		Process token 118 on line 26 []: T_WHITESPACE =>  
		Process token 119 on line 26 []: T_OPEN_PARENTHESIS => (
		Process token 120 on line 26 []: T_VARIABLE => $something
		Process token 121 on line 26 []: T_WHITESPACE =>  
		Process token 122 on line 26 []: T_IS_IDENTICAL => ===
		Process token 123 on line 26 []: T_WHITESPACE =>  
		Process token 124 on line 26 []: T_TRUE => TRUE
		Process token 125 on line 26 []: T_CLOSE_PARENTHESIS => )
		Process token 126 on line 26 []: T_WHITESPACE =>  
		Process token 127 on line 26 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 117:T_IF
		Process token 128 on line 26 [opener:127;]: T_WHITESPACE => \n
		Process token 129 on line 27 [opener:127;]: T_WHITESPACE =>         
		Process token 130 on line 27 [opener:127;]: T_RETURN => return
		Process token 131 on line 27 [opener:127;]: T_SEMICOLON => ;
		Process token 132 on line 27 [opener:127;]: T_WHITESPACE => \n
		Process token 133 on line 28 [opener:127;]: T_WHITESPACE =>         
		Process token 134 on line 28 [opener:127;]: T_ECHO => echo
		Process token 135 on line 28 [opener:127;]: T_WHITESPACE =>  
		Process token 136 on line 28 [opener:127;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
		Process token 137 on line 28 [opener:127;]: T_SEMICOLON => ;
		Process token 138 on line 28 [opener:127;]: T_WHITESPACE => \n
		Process token 139 on line 29 [opener:127;]: T_WHITESPACE =>     
		Process token 140 on line 29 [opener:127;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (140:T_CLOSE_CURLY_BRACKET) for 117:T_IF
	Process token 141 on line 29 [opener:114;]: T_WHITESPACE => \n
	Process token 142 on line 30 [opener:114;]: T_WHITESPACE => \n
	Process token 143 on line 31 [opener:114;]: T_WHITESPACE =>     
	Process token 144 on line 31 [opener:114;]: T_RETURN => return
	Process token 145 on line 31 [opener:114;]: T_SEMICOLON => ;
	Process token 146 on line 31 [opener:114;]: T_WHITESPACE => \n
	Process token 147 on line 32 [opener:114;]: T_WHITESPACE =>     
	Process token 148 on line 32 [opener:114;]: T_RETURN => return
	Process token 149 on line 32 [opener:114;]: T_WHITESPACE =>  
	Process token 150 on line 32 [opener:114;]: T_FALSE => FALSE
	Process token 151 on line 32 [opener:114;]: T_SEMICOLON => ;
	Process token 152 on line 32 [opener:114;]: T_WHITESPACE => \n
	Process token 153 on line 33 [opener:114;]: T_WHITESPACE =>     
	Process token 154 on line 33 [opener:114;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 154 with depth 2
		Process token 155 on line 33 []: T_WHITESPACE =>  
		Process token 156 on line 33 []: T_OPEN_PARENTHESIS => (
		Process token 157 on line 33 []: T_VARIABLE => $something
		Process token 158 on line 33 []: T_WHITESPACE =>  
		Process token 159 on line 33 []: T_IS_IDENTICAL => ===
		Process token 160 on line 33 []: T_WHITESPACE =>  
		Process token 161 on line 33 []: T_TRUE => TRUE
		Process token 162 on line 33 []: T_CLOSE_PARENTHESIS => )
		Process token 163 on line 33 []: T_WHITESPACE =>  
		Process token 164 on line 33 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 154:T_IF
		Process token 165 on line 33 [opener:164;]: T_WHITESPACE => \n
		Process token 166 on line 34 [opener:164;]: T_WHITESPACE =>         
		Process token 167 on line 34 [opener:164;]: T_RETURN => return
		Process token 168 on line 34 [opener:164;]: T_WHITESPACE =>  
		Process token 169 on line 34 [opener:164;]: T_TRUE => TRUE
		Process token 170 on line 34 [opener:164;]: T_SEMICOLON => ;
		Process token 171 on line 34 [opener:164;]: T_WHITESPACE => \n
		Process token 172 on line 35 [opener:164;]: T_WHITESPACE =>     
		Process token 173 on line 35 [opener:164;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (173:T_CLOSE_CURLY_BRACKET) for 154:T_IF
	Process token 174 on line 35 [opener:114;]: T_WHITESPACE => \n
	Process token 175 on line 36 [opener:114;]: T_WHITESPACE => \n
	Process token 176 on line 37 [opener:114;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (176:T_CLOSE_CURLY_BRACKET) for 107:T_FUNCTION
	Start scope map at 179:T_FOREACH => foreach
	=> Begin scope map recursion at token 179 with depth 1
	Process token 180 on line 39 []: T_WHITESPACE =>  
	Process token 181 on line 39 []: T_OPEN_PARENTHESIS => (
	Process token 182 on line 39 []: T_VARIABLE => $vars
	Process token 183 on line 39 []: T_WHITESPACE =>  
	Process token 184 on line 39 []: T_AS => as
	Process token 185 on line 39 []: T_WHITESPACE =>  
	Process token 186 on line 39 []: T_VARIABLE => $var
	Process token 187 on line 39 []: T_CLOSE_PARENTHESIS => )
	Process token 188 on line 39 []: T_WHITESPACE =>  
	Process token 189 on line 39 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 179:T_FOREACH
	Process token 190 on line 39 [opener:189;]: T_WHITESPACE => \n
	Process token 191 on line 40 [opener:189;]: T_WHITESPACE =>     
	Process token 192 on line 40 [opener:189;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 192 with depth 2
		Process token 193 on line 40 []: T_WHITESPACE =>  
		Process token 194 on line 40 []: T_OPEN_PARENTHESIS => (
		Process token 195 on line 40 []: T_VARIABLE => $something
		Process token 196 on line 40 []: T_WHITESPACE =>  
		Process token 197 on line 40 []: T_IS_IDENTICAL => ===
		Process token 198 on line 40 []: T_WHITESPACE =>  
		Process token 199 on line 40 []: T_TRUE => TRUE
		Process token 200 on line 40 []: T_CLOSE_PARENTHESIS => )
		Process token 201 on line 40 []: T_WHITESPACE =>  
		Process token 202 on line 40 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 192:T_IF
		Process token 203 on line 40 [opener:202;]: T_WHITESPACE => \n
		Process token 204 on line 41 [opener:202;]: T_WHITESPACE =>         
		Process token 205 on line 41 [opener:202;]: T_CONTINUE => continue
		Process token 206 on line 41 [opener:202;]: T_SEMICOLON => ;
		Process token 207 on line 41 [opener:202;]: T_WHITESPACE => \n
		Process token 208 on line 42 [opener:202;]: T_WHITESPACE =>         
		Process token 209 on line 42 [opener:202;]: T_BREAK => break
		Process token 210 on line 42 [opener:202;]: T_SEMICOLON => ;
		Process token 211 on line 42 [opener:202;]: T_WHITESPACE => \n
		Process token 212 on line 43 [opener:202;]: T_WHITESPACE =>     
		Process token 213 on line 43 [opener:202;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (213:T_CLOSE_CURLY_BRACKET) for 192:T_IF
	Process token 214 on line 43 [opener:189;]: T_WHITESPACE =>  
	Process token 215 on line 43 [opener:189;]: T_ELSE => else
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 215 with depth 2
		Process token 216 on line 43 []: T_WHITESPACE =>  
		Process token 217 on line 43 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 215:T_ELSE
		Process token 218 on line 43 [opener:217;]: T_WHITESPACE => \n
		Process token 219 on line 44 [opener:217;]: T_WHITESPACE =>         
		Process token 220 on line 44 [opener:217;]: T_CONTINUE => continue
		Process token 221 on line 44 [opener:217;]: T_SEMICOLON => ;
		Process token 222 on line 44 [opener:217;]: T_WHITESPACE => \n
		Process token 223 on line 45 [opener:217;]: T_WHITESPACE =>         
		Process token 224 on line 45 [opener:217;]: T_ECHO => echo
		Process token 225 on line 45 [opener:217;]: T_WHITESPACE =>  
		Process token 226 on line 45 [opener:217;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
		Process token 227 on line 45 [opener:217;]: T_SEMICOLON => ;
		Process token 228 on line 45 [opener:217;]: T_WHITESPACE => \n
		Process token 229 on line 46 [opener:217;]: T_WHITESPACE =>     
		Process token 230 on line 46 [opener:217;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (230:T_CLOSE_CURLY_BRACKET) for 215:T_ELSE
	Process token 231 on line 46 [opener:189;]: T_WHITESPACE => \n
	Process token 232 on line 47 [opener:189;]: T_WHITESPACE => \n
	Process token 233 on line 48 [opener:189;]: T_WHITESPACE =>     
	Process token 234 on line 48 [opener:189;]: T_ECHO => echo
	Process token 235 on line 48 [opener:189;]: T_WHITESPACE =>  
	Process token 236 on line 48 [opener:189;]: T_VARIABLE => $var
	Process token 237 on line 48 [opener:189;]: T_STRING_CONCAT => .
	Process token 238 on line 48 [opener:189;]: T_CONSTANT_ENCAPSED_STRING => "\n"
	Process token 239 on line 48 [opener:189;]: T_SEMICOLON => ;
	Process token 240 on line 48 [opener:189;]: T_WHITESPACE => \n
	Process token 241 on line 49 [opener:189;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (241:T_CLOSE_CURLY_BRACKET) for 179:T_FOREACH
	Start scope map at 244:T_SWITCH => switch
	=> Begin scope map recursion at token 244 with depth 1
	Process token 245 on line 51 []: T_WHITESPACE =>  
	Process token 246 on line 51 []: T_OPEN_PARENTHESIS => (
	Process token 247 on line 51 []: T_VARIABLE => $lowerVarType
	Process token 248 on line 51 []: T_CLOSE_PARENTHESIS => )
	Process token 249 on line 51 []: T_WHITESPACE =>  
	Process token 250 on line 51 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 244:T_SWITCH
	Process token 251 on line 51 [opener:250;]: T_WHITESPACE => \n
	Process token 252 on line 52 [opener:250;]: T_WHITESPACE =>     
	Process token 253 on line 52 [opener:250;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 253 with depth 1
	Process token 254 on line 52 []: T_WHITESPACE =>  
	Process token 255 on line 52 []: T_CONSTANT_ENCAPSED_STRING => 'bool'
	Process token 256 on line 52 []: T_COLON => :
	=> Found scope opener for 253:T_CASE
	Process token 257 on line 52 [opener:256;]: T_WHITESPACE => \n
	Process token 258 on line 53 [opener:256;]: T_WHITESPACE =>         
	Process token 259 on line 53 [opener:256;]: T_RETURN => return
	=> Found scope closer (259:T_RETURN) for 253:T_CASE
	Process token 257 on line 52 [opener:250;]: T_WHITESPACE => \n
	Process token 258 on line 53 [opener:250;]: T_WHITESPACE =>         
	Process token 259 on line 53 [opener:250;]: T_RETURN => return
	Process token 260 on line 53 [opener:250;]: T_WHITESPACE =>  
	Process token 261 on line 53 [opener:250;]: T_CONSTANT_ENCAPSED_STRING => 'boolean'
	Process token 262 on line 53 [opener:250;]: T_SEMICOLON => ;
	Process token 263 on line 53 [opener:250;]: T_WHITESPACE => \n
	Process token 264 on line 54 [opener:250;]: T_WHITESPACE =>         
	Process token 265 on line 54 [opener:250;]: T_ECHO => echo
	Process token 266 on line 54 [opener:250;]: T_WHITESPACE =>  
	Process token 267 on line 54 [opener:250;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token 268 on line 54 [opener:250;]: T_SEMICOLON => ;
	Process token 269 on line 54 [opener:250;]: T_WHITESPACE => \n
	Process token 270 on line 55 [opener:250;]: T_WHITESPACE =>     
	Process token 271 on line 55 [opener:250;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 271 with depth 1
	Process token 272 on line 55 []: T_WHITESPACE =>  
	Process token 273 on line 55 []: T_CONSTANT_ENCAPSED_STRING => 'double'
	Process token 274 on line 55 []: T_COLON => :
	=> Found scope opener for 271:T_CASE
	Process token 275 on line 55 [opener:274;]: T_WHITESPACE => \n
	Process token 276 on line 56 [opener:274;]: T_WHITESPACE =>     
	Process token 277 on line 56 [opener:274;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 277 with depth 1
	Process token 278 on line 56 []: T_WHITESPACE =>  
	Process token 279 on line 56 []: T_CONSTANT_ENCAPSED_STRING => 'real'
	Process token 280 on line 56 []: T_COLON => :
	=> Found scope opener for 277:T_CASE
	Process token 281 on line 56 [opener:280;]: T_WHITESPACE => \n
	Process token 282 on line 57 [opener:280;]: T_WHITESPACE =>         
	Process token 283 on line 57 [opener:280;]: T_RETURN => return
	=> Found scope closer (283:T_RETURN) for 277:T_CASE
	Process token 281 on line 56 [opener:274;]: T_WHITESPACE => \n
	Process token 282 on line 57 [opener:274;]: T_WHITESPACE =>         
	Process token 283 on line 57 [opener:274;]: T_RETURN => return
	=> Found scope closer (283:T_RETURN) for 271:T_CASE
	Process token 275 on line 55 [opener:250;]: T_WHITESPACE => \n
	Process token 276 on line 56 [opener:250;]: T_WHITESPACE =>     
	Process token 277 on line 56 [opener:250;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 278 on line 56 [opener:250;]: T_WHITESPACE =>  
	Process token 279 on line 56 [opener:250;]: T_CONSTANT_ENCAPSED_STRING => 'real'
	Process token 280 on line 56 [opener:250;]: T_COLON => :
	Process token 281 on line 56 [opener:250;]: T_WHITESPACE => \n
	Process token 282 on line 57 [opener:250;]: T_WHITESPACE =>         
	Process token 283 on line 57 [opener:250;]: T_RETURN => return
	Process token 284 on line 57 [opener:250;]: T_WHITESPACE =>  
	Process token 285 on line 57 [opener:250;]: T_CONSTANT_ENCAPSED_STRING => 'float'
	Process token 286 on line 57 [opener:250;]: T_SEMICOLON => ;
	Process token 287 on line 57 [opener:250;]: T_WHITESPACE => \n
	Process token 288 on line 58 [opener:250;]: T_WHITESPACE =>         
	Process token 289 on line 58 [opener:250;]: T_ECHO => echo
	Process token 290 on line 58 [opener:250;]: T_WHITESPACE =>  
	Process token 291 on line 58 [opener:250;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token 292 on line 58 [opener:250;]: T_SEMICOLON => ;
	Process token 293 on line 58 [opener:250;]: T_WHITESPACE => \n
	Process token 294 on line 59 [opener:250;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (294:T_CLOSE_CURLY_BRACKET) for 244:T_SWITCH
	Start scope map at 297:T_WHILE => while
	=> Begin scope map recursion at token 297 with depth 1
	Process token 298 on line 61 []: T_WHITESPACE =>  
	Process token 299 on line 61 []: T_OPEN_PARENTHESIS => (
	Process token 300 on line 61 []: T_VARIABLE => $line
	Process token 301 on line 61 []: T_EQUAL => =
	Process token 302 on line 61 []: T_STRING => fgets
	Process token 303 on line 61 []: T_OPEN_PARENTHESIS => (
	Process token 304 on line 61 []: T_VARIABLE => $fp
	Process token 305 on line 61 []: T_COMMA => ,
	Process token 306 on line 61 []: T_LNUMBER => 2
	Process token 307 on line 61 []: T_MULTIPLY => *
	Process token 308 on line 61 []: T_LNUMBER => 1024
	Process token 309 on line 61 []: T_MULTIPLY => *
	Process token 310 on line 61 []: T_LNUMBER => 1024
	Process token 311 on line 61 []: T_CLOSE_PARENTHESIS => )
	Process token 312 on line 61 []: T_CLOSE_PARENTHESIS => )
	Process token 313 on line 61 []: T_WHITESPACE => \n
	Process token 314 on line 62 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 297:T_WHILE
	Process token 315 on line 62 [opener:314;]: T_WHITESPACE => \n
	Process token 316 on line 63 [opener:314;]: T_WHITESPACE =>     
	Process token 317 on line 63 [opener:314;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 317 with depth 2
		Process token 318 on line 63 []: T_WHITESPACE =>  
		Process token 319 on line 63 []: T_OPEN_PARENTHESIS => (
		Process token 320 on line 63 []: T_BOOLEAN_NOT => !
		Process token 321 on line 63 []: T_STRING => preg_match
		Process token 322 on line 63 []: T_OPEN_PARENTHESIS => (
		Process token 323 on line 63 []: T_CONSTANT_ENCAPSED_STRING => "/^<([a-z0-9_]+)/"
		Process token 324 on line 63 []: T_COMMA => ,
		Process token 325 on line 63 []: T_VARIABLE => $line
		Process token 326 on line 63 []: T_COMMA => ,
		Process token 327 on line 63 []: T_VARIABLE => $matches
		Process token 328 on line 63 []: T_CLOSE_PARENTHESIS => )
		Process token 329 on line 63 []: T_CLOSE_PARENTHESIS => )
		Process token 330 on line 63 []: T_WHITESPACE => \n
		Process token 331 on line 64 []: T_WHITESPACE =>     
		Process token 332 on line 64 []: T_CONTINUE => continue
		Process token 333 on line 64 []: T_SEMICOLON => ;
		=> Found semicolon before scope opener for 317:T_IF, bailing
	Process token 334 on line 64 [opener:314;]: T_WHITESPACE => \n
	Process token 335 on line 65 [opener:314;]: T_WHITESPACE =>     
	Process token 336 on line 65 [opener:314;]: T_PRINT => print
	Process token 337 on line 65 [opener:314;]: T_WHITESPACE =>  
	Process token 338 on line 65 [opener:314;]: T_VARIABLE => $line
	Process token 339 on line 65 [opener:314;]: T_SEMICOLON => ;
	Process token 340 on line 65 [opener:314;]: T_WHITESPACE => \n
	Process token 341 on line 66 [opener:314;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (341:T_CLOSE_CURLY_BRACKET) for 297:T_WHILE
	Start scope map at 344:T_SWITCH => switch
	=> Begin scope map recursion at token 344 with depth 1
	Process token 345 on line 68 []: T_WHITESPACE =>  
	Process token 346 on line 68 []: T_OPEN_PARENTHESIS => (
	Process token 347 on line 68 []: T_VARIABLE => $var
	Process token 348 on line 68 []: T_CLOSE_PARENTHESIS => )
	Process token 349 on line 68 []: T_WHITESPACE =>  
	Process token 350 on line 68 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 344:T_SWITCH
	Process token 351 on line 68 [opener:350;]: T_WHITESPACE => \n
	Process token 352 on line 69 [opener:350;]: T_WHITESPACE =>     
	Process token 353 on line 69 [opener:350;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 353 with depth 1
	Process token 354 on line 69 []: T_WHITESPACE =>  
	Process token 355 on line 69 []: T_LNUMBER => 1
	Process token 356 on line 69 []: T_COLON => :
	=> Found scope opener for 353:T_CASE
	Process token 357 on line 69 [opener:356;]: T_WHITESPACE => \n
	Process token 358 on line 70 [opener:356;]: T_WHITESPACE =>         
	Process token 359 on line 70 [opener:356;]: T_ECHO => echo
	Process token 360 on line 70 [opener:356;]: T_WHITESPACE =>  
	Process token 361 on line 70 [opener:356;]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token 362 on line 70 [opener:356;]: T_SEMICOLON => ;
	Process token 363 on line 70 [opener:356;]: T_WHITESPACE => \n
	Process token 364 on line 71 [opener:356;]: T_WHITESPACE =>     
	Process token 365 on line 71 [opener:356;]: T_BREAK => break
	=> Found scope closer (365:T_BREAK) for 353:T_CASE
	Process token 357 on line 69 [opener:350;]: T_WHITESPACE => \n
	Process token 358 on line 70 [opener:350;]: T_WHITESPACE =>         
	Process token 359 on line 70 [opener:350;]: T_ECHO => echo
	Process token 360 on line 70 [opener:350;]: T_WHITESPACE =>  
	Process token 361 on line 70 [opener:350;]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token 362 on line 70 [opener:350;]: T_SEMICOLON => ;
	Process token 363 on line 70 [opener:350;]: T_WHITESPACE => \n
	Process token 364 on line 71 [opener:350;]: T_WHITESPACE =>     
	Process token 365 on line 71 [opener:350;]: T_BREAK => break
	Process token 366 on line 71 [opener:350;]: T_SEMICOLON => ;
	Process token 367 on line 71 [opener:350;]: T_WHITESPACE => \n
	Process token 368 on line 72 [opener:350;]: T_WHITESPACE => \n
	Process token 369 on line 73 [opener:350;]: T_WHITESPACE =>         
	Process token 370 on line 73 [opener:350;]: T_ECHO => echo
	Process token 371 on line 73 [opener:350;]: T_WHITESPACE =>  
	Process token 372 on line 73 [opener:350;]: T_CONSTANT_ENCAPSED_STRING => 'non-executable'
	Process token 373 on line 73 [opener:350;]: T_SEMICOLON => ;
	Process token 374 on line 73 [opener:350;]: T_WHITESPACE => \n
	Process token 375 on line 74 [opener:350;]: T_WHITESPACE =>     
	Process token 376 on line 74 [opener:350;]: T_DEFAULT => default
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 376 with depth 1
	Process token 377 on line 74 []: T_COLON => :
	=> Found scope opener for 376:T_DEFAULT
	Process token 378 on line 74 [opener:377;]: T_WHITESPACE => \n
	Process token 379 on line 75 [opener:377;]: T_WHITESPACE =>         
	Process token 380 on line 75 [opener:377;]: T_ECHO => echo
	Process token 381 on line 75 [opener:377;]: T_WHITESPACE =>  
	Process token 382 on line 75 [opener:377;]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token 383 on line 75 [opener:377;]: T_SEMICOLON => ;
	Process token 384 on line 75 [opener:377;]: T_WHITESPACE => \n
	Process token 385 on line 76 [opener:377;]: T_WHITESPACE =>     
	Process token 386 on line 76 [opener:377;]: T_BREAK => break
	=> Found scope closer (386:T_BREAK) for 376:T_DEFAULT
	Process token 378 on line 74 [opener:350;]: T_WHITESPACE => \n
	Process token 379 on line 75 [opener:350;]: T_WHITESPACE =>         
	Process token 380 on line 75 [opener:350;]: T_ECHO => echo
	Process token 381 on line 75 [opener:350;]: T_WHITESPACE =>  
	Process token 382 on line 75 [opener:350;]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token 383 on line 75 [opener:350;]: T_SEMICOLON => ;
	Process token 384 on line 75 [opener:350;]: T_WHITESPACE => \n
	Process token 385 on line 76 [opener:350;]: T_WHITESPACE =>     
	Process token 386 on line 76 [opener:350;]: T_BREAK => break
	Process token 387 on line 76 [opener:350;]: T_SEMICOLON => ;
	Process token 388 on line 76 [opener:350;]: T_WHITESPACE => \n
	Process token 389 on line 77 [opener:350;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (389:T_CLOSE_CURLY_BRACKET) for 344:T_SWITCH
	Start scope map at 392:T_SWITCH => switch
	=> Begin scope map recursion at token 392 with depth 1
	Process token 393 on line 79 []: T_WHITESPACE =>  
	Process token 394 on line 79 []: T_OPEN_PARENTHESIS => (
	Process token 395 on line 79 []: T_LNUMBER => 0
	Process token 396 on line 79 []: T_CLOSE_PARENTHESIS => )
	Process token 397 on line 79 []: T_WHITESPACE =>  
	Process token 398 on line 79 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 392:T_SWITCH
	Process token 399 on line 79 [opener:398;]: T_WHITESPACE => \n
	Process token 400 on line 80 [opener:398;]: T_WHITESPACE =>     
	Process token 401 on line 80 [opener:398;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 401 with depth 1
	Process token 402 on line 80 []: T_WHITESPACE =>  
	Process token 403 on line 80 []: T_LNUMBER => 1
	Process token 404 on line 80 []: T_COLON => :
	=> Found scope opener for 401:T_CASE
	Process token 405 on line 80 [opener:404;]: T_WHITESPACE => \n
	Process token 406 on line 81 [opener:404;]: T_WHITESPACE =>         
	Process token 407 on line 81 [opener:404;]: T_RETURN => return
	=> Found scope closer (407:T_RETURN) for 401:T_CASE
	Process token 405 on line 80 [opener:398;]: T_WHITESPACE => \n
	Process token 406 on line 81 [opener:398;]: T_WHITESPACE =>         
	Process token 407 on line 81 [opener:398;]: T_RETURN => return
	Process token 408 on line 81 [opener:398;]: T_WHITESPACE =>  
	Process token 409 on line 81 [opener:398;]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token 410 on line 81 [opener:398;]: T_SEMICOLON => ;
	Process token 411 on line 81 [opener:398;]: T_WHITESPACE => \n
	Process token 412 on line 82 [opener:398;]: T_WHITESPACE => \n
	Process token 413 on line 83 [opener:398;]: T_WHITESPACE =>         
	Process token 414 on line 83 [opener:398;]: T_ECHO => echo
	Process token 415 on line 83 [opener:398;]: T_WHITESPACE =>  
	Process token 416 on line 83 [opener:398;]: T_CONSTANT_ENCAPSED_STRING => 'non-executable'
	Process token 417 on line 83 [opener:398;]: T_SEMICOLON => ;
	Process token 418 on line 83 [opener:398;]: T_WHITESPACE => \n
	Process token 419 on line 84 [opener:398;]: T_WHITESPACE =>     
	Process token 420 on line 84 [opener:398;]: T_DEFAULT => default
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 420 with depth 1
	Process token 421 on line 84 []: T_COLON => :
	=> Found scope opener for 420:T_DEFAULT
	Process token 422 on line 84 [opener:421;]: T_WHITESPACE => \n
	Process token 423 on line 85 [opener:421;]: T_WHITESPACE =>     
	Process token 424 on line 85 [opener:421;]: T_BREAK => break
	=> Found scope closer (424:T_BREAK) for 420:T_DEFAULT
	Process token 422 on line 84 [opener:398;]: T_WHITESPACE => \n
	Process token 423 on line 85 [opener:398;]: T_WHITESPACE =>     
	Process token 424 on line 85 [opener:398;]: T_BREAK => break
	Process token 425 on line 85 [opener:398;]: T_SEMICOLON => ;
	Process token 426 on line 85 [opener:398;]: T_WHITESPACE => \n
	Process token 427 on line 86 [opener:398;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (427:T_CLOSE_CURLY_BRACKET) for 392:T_SWITCH
	Start scope map at 430:T_FUNCTION => function
	=> Begin scope map recursion at token 430 with depth 1
	Process token 431 on line 88 []: T_WHITESPACE =>  
	Process token 432 on line 88 []: T_STRING => myFunction
	Process token 433 on line 88 []: T_OPEN_PARENTHESIS => (
	Process token 434 on line 88 []: T_CLOSE_PARENTHESIS => )
	Process token 435 on line 88 []: T_WHITESPACE => \n
	Process token 436 on line 89 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 430:T_FUNCTION
	Process token 437 on line 89 [opener:436;]: T_WHITESPACE => \n
	Process token 438 on line 90 [opener:436;]: T_WHITESPACE =>     
	Process token 439 on line 90 [opener:436;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 439 with depth 2
		Process token 440 on line 90 []: T_WHITESPACE =>  
		Process token 441 on line 90 []: T_OPEN_PARENTHESIS => (
		Process token 442 on line 90 []: T_VARIABLE => $something
		Process token 443 on line 90 []: T_WHITESPACE =>  
		Process token 444 on line 90 []: T_IS_IDENTICAL => ===
		Process token 445 on line 90 []: T_WHITESPACE =>  
		Process token 446 on line 90 []: T_TRUE => TRUE
		Process token 447 on line 90 []: T_CLOSE_PARENTHESIS => )
		Process token 448 on line 90 []: T_WHITESPACE =>  
		Process token 449 on line 90 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 439:T_IF
		Process token 450 on line 90 [opener:449;]: T_WHITESPACE => \n
		Process token 451 on line 91 [opener:449;]: T_WHITESPACE =>         
		Process token 452 on line 91 [opener:449;]: T_RETURN => return
		Process token 453 on line 91 [opener:449;]: T_SEMICOLON => ;
		Process token 454 on line 91 [opener:449;]: T_WHITESPACE => \n
		Process token 455 on line 92 [opener:449;]: T_WHITESPACE =>     
		Process token 456 on line 92 [opener:449;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (456:T_CLOSE_CURLY_BRACKET) for 439:T_IF
	Process token 457 on line 92 [opener:436;]: T_WHITESPACE => \n
	Process token 458 on line 93 [opener:436;]: T_WHITESPACE => \n
	Process token 459 on line 94 [opener:436;]: T_WHITESPACE =>     
	Process token 460 on line 94 [opener:436;]: T_ECHO => echo
	Process token 461 on line 94 [opener:436;]: T_WHITESPACE =>  
	Process token 462 on line 94 [opener:436;]: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token 463 on line 94 [opener:436;]: T_SEMICOLON => ;
	Process token 464 on line 94 [opener:436;]: T_WHITESPACE => \n
	Process token 465 on line 95 [opener:436;]: T_WHITESPACE =>     
	Process token 466 on line 95 [opener:436;]: T_RETURN => return
	Process token 467 on line 95 [opener:436;]: T_SEMICOLON => ;
	Process token 468 on line 95 [opener:436;]: T_WHITESPACE => \n
	Process token 469 on line 96 [opener:436;]: T_WHITESPACE => \n
	Process token 470 on line 97 [opener:436;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (470:T_CLOSE_CURLY_BRACKET) for 430:T_FUNCTION
	Start scope map at 473:T_FUNCTION => function
	=> Begin scope map recursion at token 473 with depth 1
	Process token 474 on line 99 []: T_WHITESPACE =>  
	Process token 475 on line 99 []: T_STRING => myFunction
	Process token 476 on line 99 []: T_OPEN_PARENTHESIS => (
	Process token 477 on line 99 []: T_CLOSE_PARENTHESIS => )
	Process token 478 on line 99 []: T_WHITESPACE => \n
	Process token 479 on line 100 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 473:T_FUNCTION
	Process token 480 on line 100 [opener:479;]: T_WHITESPACE => \n
	Process token 481 on line 101 [opener:479;]: T_WHITESPACE =>     
	Process token 482 on line 101 [opener:479;]: T_RETURN => return
	Process token 483 on line 101 [opener:479;]: T_WHITESPACE =>  
	Process token 484 on line 101 [opener:479;]: T_STRING => uksort
	Process token 485 on line 101 [opener:479;]: T_OPEN_PARENTHESIS => (
	Process token 486 on line 101 [opener:479;]: T_WHITESPACE => \n
	Process token 487 on line 102 [opener:479;]: T_WHITESPACE =>         
	Process token 488 on line 102 [opener:479;]: T_VARIABLE => $array
	Process token 489 on line 102 [opener:479;]: T_COMMA => ,
	Process token 490 on line 102 [opener:479;]: T_WHITESPACE => \n
	Process token 491 on line 103 [opener:479;]: T_WHITESPACE =>         
	Process token 492 on line 103 [opener:479;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 492 with depth 2
		Process token 493 on line 103 []: T_OPEN_PARENTHESIS => (
		Process token 494 on line 103 []: T_CLOSE_PARENTHESIS => )
		Process token 495 on line 103 []: T_WHITESPACE =>  
		Process token 496 on line 103 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 492:T_FUNCTION
		Process token 497 on line 103 [opener:496;]: T_WHITESPACE => \n
		Process token 498 on line 104 [opener:496;]: T_WHITESPACE =>             
		Process token 499 on line 104 [opener:496;]: T_RETURN => return
		Process token 500 on line 104 [opener:496;]: T_WHITESPACE =>  
		Process token 501 on line 104 [opener:496;]: T_STRING => mt_rand
		Process token 502 on line 104 [opener:496;]: T_OPEN_PARENTHESIS => (
		Process token 503 on line 104 [opener:496;]: T_MINUS => -
		Process token 504 on line 104 [opener:496;]: T_LNUMBER => 1
		Process token 505 on line 104 [opener:496;]: T_COMMA => ,
		Process token 506 on line 104 [opener:496;]: T_WHITESPACE =>  
		Process token 507 on line 104 [opener:496;]: T_LNUMBER => 1
		Process token 508 on line 104 [opener:496;]: T_CLOSE_PARENTHESIS => )
		Process token 509 on line 104 [opener:496;]: T_SEMICOLON => ;
		Process token 510 on line 104 [opener:496;]: T_WHITESPACE => \n
		Process token 511 on line 105 [opener:496;]: T_WHITESPACE =>             
		Process token 512 on line 105 [opener:496;]: T_ECHO => echo
		Process token 513 on line 105 [opener:496;]: T_WHITESPACE =>  
		Process token 514 on line 105 [opener:496;]: T_CONSTANT_ENCAPSED_STRING => 'done'
		Process token 515 on line 105 [opener:496;]: T_SEMICOLON => ;
		Process token 516 on line 105 [opener:496;]: T_WHITESPACE => \n
		Process token 517 on line 106 [opener:496;]: T_WHITESPACE =>         
		Process token 518 on line 106 [opener:496;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (518:T_CLOSE_CURLY_BRACKET) for 492:T_FUNCTION
	Process token 519 on line 106 [opener:479;]: T_WHITESPACE => \n
	Process token 520 on line 107 [opener:479;]: T_WHITESPACE =>     
	Process token 521 on line 107 [opener:479;]: T_CLOSE_PARENTHESIS => )
	Process token 522 on line 107 [opener:479;]: T_SEMICOLON => ;
	Process token 523 on line 107 [opener:479;]: T_WHITESPACE => \n
	Process token 524 on line 108 [opener:479;]: T_WHITESPACE => \n
	Process token 525 on line 109 [opener:479;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (525:T_CLOSE_CURLY_BRACKET) for 473:T_FUNCTION
	Start scope map at 532:T_FUNCTION => function
	=> Begin scope map recursion at token 532 with depth 1
	Process token 533 on line 111 []: T_WHITESPACE =>  
	Process token 534 on line 111 []: T_STRING => thisCausesAnError
	Process token 535 on line 111 []: T_OPEN_PARENTHESIS => (
	Process token 536 on line 111 []: T_CLOSE_PARENTHESIS => )
	Process token 537 on line 111 []: T_WHITESPACE =>  
	Process token 538 on line 111 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 532:T_FUNCTION
	Process token 539 on line 111 [opener:538;]: T_WHITESPACE => \n
	Process token 540 on line 112 [opener:538;]: T_RETURN => return
	Process token 541 on line 112 [opener:538;]: T_WHITESPACE =>  
	Process token 542 on line 112 [opener:538;]: T_NEW => new
	Process token 543 on line 112 [opener:538;]: T_WHITESPACE =>  
	Process token 544 on line 112 [opener:538;]: T_STRING => foo
	Process token 545 on line 112 [opener:538;]: T_OPEN_PARENTHESIS => (
	Process token 546 on line 112 [opener:538;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 546 with depth 2
		Process token 547 on line 112 []: T_OPEN_PARENTHESIS => (
		Process token 548 on line 112 []: T_CLOSE_PARENTHESIS => )
		Process token 549 on line 112 []: T_WHITESPACE =>  
		Process token 550 on line 112 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 546:T_FUNCTION
		Process token 551 on line 112 [opener:550;]: T_RETURN => return
		Process token 552 on line 112 [opener:550;]: T_WHITESPACE =>  
		Process token 553 on line 112 [opener:550;]: T_VARIABLE => $foo
		Process token 554 on line 112 [opener:550;]: T_SEMICOLON => ;
		Process token 555 on line 112 [opener:550;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (555:T_CLOSE_CURLY_BRACKET) for 546:T_FUNCTION
	Process token 556 on line 112 [opener:538;]: T_WHITESPACE => \n
	Process token 557 on line 113 [opener:538;]: T_CLOSE_PARENTHESIS => )
	Process token 558 on line 113 [opener:538;]: T_SEMICOLON => ;
	Process token 559 on line 113 [opener:538;]: T_WHITESPACE => \n
	Process token 560 on line 114 [opener:538;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (560:T_CLOSE_CURLY_BRACKET) for 532:T_FUNCTION
	Start scope map at 563:T_FUNCTION => function
	=> Begin scope map recursion at token 563 with depth 1
	Process token 564 on line 116 []: T_WHITESPACE =>  
	Process token 565 on line 116 []: T_STRING => myFunction
	Process token 566 on line 116 []: T_OPEN_PARENTHESIS => (
	Process token 567 on line 116 []: T_CLOSE_PARENTHESIS => )
	Process token 568 on line 116 []: T_WHITESPACE => \n
	Process token 569 on line 117 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 563:T_FUNCTION
	Process token 570 on line 117 [opener:569;]: T_WHITESPACE => \n
	Process token 571 on line 118 [opener:569;]: T_WHITESPACE =>     
	Process token 572 on line 118 [opener:569;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 572 with depth 2
		Process token 573 on line 118 []: T_WHITESPACE =>  
		Process token 574 on line 118 []: T_OPEN_PARENTHESIS => (
		Process token 575 on line 118 []: T_VARIABLE => $something
		Process token 576 on line 118 []: T_WHITESPACE =>  
		Process token 577 on line 118 []: T_IS_IDENTICAL => ===
		Process token 578 on line 118 []: T_WHITESPACE =>  
		Process token 579 on line 118 []: T_TRUE => TRUE
		Process token 580 on line 118 []: T_CLOSE_PARENTHESIS => )
		Process token 581 on line 118 []: T_WHITESPACE =>  
		Process token 582 on line 118 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 572:T_IF
		Process token 583 on line 118 [opener:582;]: T_WHITESPACE => \n
		Process token 584 on line 119 [opener:582;]: T_WHITESPACE =>         
		Process token 585 on line 119 [opener:582;]: T_THROW => throw
		Process token 586 on line 119 [opener:582;]: T_WHITESPACE =>  
		Process token 587 on line 119 [opener:582;]: T_NEW => new
		Process token 588 on line 119 [opener:582;]: T_WHITESPACE =>  
		Process token 589 on line 119 [opener:582;]: T_STRING => Exception
		Process token 590 on line 119 [opener:582;]: T_OPEN_PARENTHESIS => (
		Process token 591 on line 119 [opener:582;]: T_CONSTANT_ENCAPSED_STRING => 'exception'
		Process token 592 on line 119 [opener:582;]: T_CLOSE_PARENTHESIS => )
		Process token 593 on line 119 [opener:582;]: T_SEMICOLON => ;
		Process token 594 on line 119 [opener:582;]: T_WHITESPACE => \n
		Process token 595 on line 120 [opener:582;]: T_WHITESPACE =>     
		Process token 596 on line 120 [opener:582;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (596:T_CLOSE_CURLY_BRACKET) for 572:T_IF
	Process token 597 on line 120 [opener:569;]: T_WHITESPACE => \n
	Process token 598 on line 121 [opener:569;]: T_WHITESPACE => \n
	Process token 599 on line 122 [opener:569;]: T_WHITESPACE =>     
	Process token 600 on line 122 [opener:569;]: T_THROW => throw
	Process token 601 on line 122 [opener:569;]: T_WHITESPACE =>  
	Process token 602 on line 122 [opener:569;]: T_NEW => new
	Process token 603 on line 122 [opener:569;]: T_WHITESPACE =>  
	Process token 604 on line 122 [opener:569;]: T_STRING => Exception
	Process token 605 on line 122 [opener:569;]: T_OPEN_PARENTHESIS => (
	Process token 606 on line 122 [opener:569;]: T_CONSTANT_ENCAPSED_STRING => 'exception'
	Process token 607 on line 122 [opener:569;]: T_CLOSE_PARENTHESIS => )
	Process token 608 on line 122 [opener:569;]: T_SEMICOLON => ;
	Process token 609 on line 122 [opener:569;]: T_WHITESPACE => \n
	Process token 610 on line 123 [opener:569;]: T_WHITESPACE =>     
	Process token 611 on line 123 [opener:569;]: T_ECHO => echo
	Process token 612 on line 123 [opener:569;]: T_WHITESPACE =>  
	Process token 613 on line 123 [opener:569;]: T_CONSTANT_ENCAPSED_STRING => 'non-executable'
	Process token 614 on line 123 [opener:569;]: T_SEMICOLON => ;
	Process token 615 on line 123 [opener:569;]: T_WHITESPACE => \n
	Process token 616 on line 124 [opener:569;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (616:T_CLOSE_CURLY_BRACKET) for 563:T_FUNCTION
	Start scope map at 619:T_SWITCH => switch
	=> Begin scope map recursion at token 619 with depth 1
	Process token 620 on line 126 []: T_WHITESPACE =>  
	Process token 621 on line 126 []: T_OPEN_PARENTHESIS => (
	Process token 622 on line 126 []: T_VARIABLE => $var
	Process token 623 on line 126 []: T_CLOSE_PARENTHESIS => )
	Process token 624 on line 126 []: T_WHITESPACE =>  
	Process token 625 on line 126 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 619:T_SWITCH
	Process token 626 on line 126 [opener:625;]: T_WHITESPACE => \n
	Process token 627 on line 127 [opener:625;]: T_WHITESPACE =>     
	Process token 628 on line 127 [opener:625;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 628 with depth 1
	Process token 629 on line 127 []: T_WHITESPACE =>  
	Process token 630 on line 127 []: T_LNUMBER => 1
	Process token 631 on line 127 []: T_COLON => :
	=> Found scope opener for 628:T_CASE
	Process token 632 on line 127 [opener:631;]: T_WHITESPACE =>  
	Process token 633 on line 127 [opener:631;]: T_OPEN_CURLY_BRACKET => {
	* ignoring curly brace *
	Process token 634 on line 127 [opener:631;ignore=1;]: T_WHITESPACE => \n
	Process token 635 on line 128 [opener:631;ignore=1;]: T_WHITESPACE =>         
	Process token 636 on line 128 [opener:631;ignore=1;]: T_RETURN => return
	=> Found scope closer (636:T_RETURN) for 628:T_CASE
	Process token 632 on line 127 [opener:625;]: T_WHITESPACE =>  
	Process token 633 on line 127 [opener:625;]: T_OPEN_CURLY_BRACKET => {
	* ignoring curly brace *
	Process token 634 on line 127 [opener:625;ignore=1;]: T_WHITESPACE => \n
	Process token 635 on line 128 [opener:625;ignore=1;]: T_WHITESPACE =>         
	Process token 636 on line 128 [opener:625;ignore=1;]: T_RETURN => return
	Process token 637 on line 128 [opener:625;ignore=1;]: T_WHITESPACE =>  
	Process token 638 on line 128 [opener:625;ignore=1;]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token 639 on line 128 [opener:625;ignore=1;]: T_SEMICOLON => ;
	Process token 640 on line 128 [opener:625;ignore=1;]: T_WHITESPACE => \n
	Process token 641 on line 129 [opener:625;ignore=1;]: T_WHITESPACE =>     
	Process token 642 on line 129 [opener:625;ignore=1;]: T_CLOSE_CURLY_BRACKET => }
	* finished ignoring curly brace *
	Process token 643 on line 129 [opener:625;]: T_WHITESPACE => \n
	Process token 644 on line 130 [opener:625;]: T_WHITESPACE => \n
	Process token 645 on line 131 [opener:625;]: T_WHITESPACE =>     
	Process token 646 on line 131 [opener:625;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 646 with depth 1
	Process token 647 on line 131 []: T_WHITESPACE =>  
	Process token 648 on line 131 []: T_LNUMBER => 2
	Process token 649 on line 131 []: T_COLON => :
	=> Found scope opener for 646:T_CASE
	Process token 650 on line 131 [opener:649;]: T_WHITESPACE =>  
	Process token 651 on line 131 [opener:649;]: T_OPEN_CURLY_BRACKET => {
	* ignoring curly brace *
	Process token 652 on line 131 [opener:649;ignore=1;]: T_WHITESPACE => \n
	Process token 653 on line 132 [opener:649;ignore=1;]: T_WHITESPACE =>         
	Process token 654 on line 132 [opener:649;ignore=1;]: T_RETURN => return
	=> Found scope closer (654:T_RETURN) for 646:T_CASE
	Process token 650 on line 131 [opener:625;]: T_WHITESPACE =>  
	Process token 651 on line 131 [opener:625;]: T_OPEN_CURLY_BRACKET => {
	* ignoring curly brace *
	Process token 652 on line 131 [opener:625;ignore=1;]: T_WHITESPACE => \n
	Process token 653 on line 132 [opener:625;ignore=1;]: T_WHITESPACE =>         
	Process token 654 on line 132 [opener:625;ignore=1;]: T_RETURN => return
	Process token 655 on line 132 [opener:625;ignore=1;]: T_WHITESPACE =>  
	Process token 656 on line 132 [opener:625;ignore=1;]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token 657 on line 132 [opener:625;ignore=1;]: T_SEMICOLON => ;
	Process token 658 on line 132 [opener:625;ignore=1;]: T_WHITESPACE => \n
	Process token 659 on line 133 [opener:625;ignore=1;]: T_WHITESPACE =>     
	Process token 660 on line 133 [opener:625;ignore=1;]: T_CLOSE_CURLY_BRACKET => }
	* finished ignoring curly brace *
	Process token 661 on line 133 [opener:625;]: T_WHITESPACE => \n
	Process token 662 on line 134 [opener:625;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (662:T_CLOSE_CURLY_BRACKET) for 619:T_SWITCH
	Start scope map at 691:T_INTERFACE => interface
	=> Begin scope map recursion at token 691 with depth 1
	Process token 692 on line 138 []: T_WHITESPACE =>  
	Process token 693 on line 138 []: T_STRING => myInterface
	Process token 694 on line 138 []: T_WHITESPACE =>  
	Process token 695 on line 138 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 691:T_INTERFACE
	Process token 696 on line 138 [opener:695;]: T_WHITESPACE => \n
	Process token 697 on line 139 [opener:695;]: T_WHITESPACE =>     
	Process token 698 on line 139 [opener:695;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 698 with depth 2
		Process token 699 on line 139 []: T_WHITESPACE =>  
		Process token 700 on line 139 []: T_STRING => myFunc
		Process token 701 on line 139 []: T_OPEN_PARENTHESIS => (
		Process token 702 on line 139 []: T_CLOSE_PARENTHESIS => )
		Process token 703 on line 139 []: T_SEMICOLON => ;
		Process token 704 on line 139 []: T_WHITESPACE => \n
		Process token 705 on line 140 []: T_CLOSE_CURLY_BRACKET => }
		=> Found curly brace closer before scope opener for 698:T_FUNCTION, bailing
	Process token 705 on line 140 [opener:695;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (705:T_CLOSE_CURLY_BRACKET) for 691:T_INTERFACE
	Start scope map at 713:T_FUNCTION => function
	=> Begin scope map recursion at token 713 with depth 1
	Process token 714 on line 143 []: T_WHITESPACE =>  
	Process token 715 on line 143 []: T_STRING => foo
	Process token 716 on line 143 []: T_OPEN_PARENTHESIS => (
	Process token 717 on line 143 []: T_VARIABLE => $color
	Process token 718 on line 143 []: T_CLOSE_PARENTHESIS => )
	Process token 719 on line 143 []: T_WHITESPACE =>  
	Process token 720 on line 143 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 713:T_FUNCTION
	Process token 721 on line 143 [opener:720;]: T_WHITESPACE => \n
	Process token 722 on line 144 [opener:720;]: T_WHITESPACE =>     
	Process token 723 on line 144 [opener:720;]: T_SWITCH => switch
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 723 with depth 2
		Process token 724 on line 144 []: T_WHITESPACE =>  
		Process token 725 on line 144 []: T_OPEN_PARENTHESIS => (
		Process token 726 on line 144 []: T_VARIABLE => $color
		Process token 727 on line 144 []: T_CLOSE_PARENTHESIS => )
		Process token 728 on line 144 []: T_WHITESPACE =>  
		Process token 729 on line 144 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 723:T_SWITCH
		Process token 730 on line 144 [opener:729;]: T_WHITESPACE => \n
		Process token 731 on line 145 [opener:729;]: T_WHITESPACE =>         
		Process token 732 on line 145 [opener:729;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 732 with depth 2
		Process token 733 on line 145 []: T_WHITESPACE =>  
		Process token 734 on line 145 []: T_CONSTANT_ENCAPSED_STRING => 'red'
		Process token 735 on line 145 []: T_COLON => :
		=> Found scope opener for 732:T_CASE
		Process token 736 on line 145 [opener:735;]: T_WHITESPACE => \n
		Process token 737 on line 146 [opener:735;]: T_WHITESPACE =>             
		Process token 738 on line 146 [opener:735;]: T_RETURN => return
		=> Found scope closer (738:T_RETURN) for 732:T_CASE
		Process token 736 on line 145 [opener:729;]: T_WHITESPACE => \n
		Process token 737 on line 146 [opener:729;]: T_WHITESPACE =>             
		Process token 738 on line 146 [opener:729;]: T_RETURN => return
		Process token 739 on line 146 [opener:729;]: T_WHITESPACE =>  
		Process token 740 on line 146 [opener:729;]: T_CONSTANT_ENCAPSED_STRING => 'yuck'
		Process token 741 on line 146 [opener:729;]: T_SEMICOLON => ;
		Process token 742 on line 146 [opener:729;]: T_WHITESPACE => \n
		Process token 743 on line 147 [opener:729;]: T_WHITESPACE =>             
		Process token 744 on line 147 [opener:729;]: T_BREAK => break
		Process token 745 on line 147 [opener:729;]: T_SEMICOLON => ;
		Process token 746 on line 147 [opener:729;]: T_WHITESPACE => \n
		Process token 747 on line 148 [opener:729;]: T_WHITESPACE =>         
		Process token 748 on line 148 [opener:729;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 748 with depth 2
		Process token 749 on line 148 []: T_WHITESPACE =>  
		Process token 750 on line 148 []: T_CONSTANT_ENCAPSED_STRING => 'blue'
		Process token 751 on line 148 []: T_COLON => :
		=> Found scope opener for 748:T_CASE
		Process token 752 on line 148 [opener:751;]: T_WHITESPACE => \n
		Process token 753 on line 149 [opener:751;]: T_WHITESPACE =>             
		Process token 754 on line 149 [opener:751;]: T_RETURN => return
		=> Found scope closer (754:T_RETURN) for 748:T_CASE
		Process token 752 on line 148 [opener:729;]: T_WHITESPACE => \n
		Process token 753 on line 149 [opener:729;]: T_WHITESPACE =>             
		Process token 754 on line 149 [opener:729;]: T_RETURN => return
		Process token 755 on line 149 [opener:729;]: T_WHITESPACE =>  
		Process token 756 on line 149 [opener:729;]: T_CONSTANT_ENCAPSED_STRING => 'yuck'
		Process token 757 on line 149 [opener:729;]: T_SEMICOLON => ;
		Process token 758 on line 149 [opener:729;]: T_WHITESPACE => \n
		Process token 759 on line 150 [opener:729;]: T_WHITESPACE =>             
		Process token 760 on line 150 [opener:729;]: T_BREAK => break
		Process token 761 on line 150 [opener:729;]: T_SEMICOLON => ;
		Process token 762 on line 150 [opener:729;]: T_WHITESPACE => \n
		Process token 763 on line 151 [opener:729;]: T_WHITESPACE =>         
		Process token 764 on line 151 [opener:729;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 764 with depth 2
		Process token 765 on line 151 []: T_WHITESPACE =>  
		Process token 766 on line 151 []: T_CONSTANT_ENCAPSED_STRING => 'orange'
		Process token 767 on line 151 []: T_COLON => :
		=> Found scope opener for 764:T_CASE
		Process token 768 on line 151 [opener:767;]: T_WHITESPACE => \n
		Process token 769 on line 152 [opener:767;]: T_WHITESPACE =>             
		Process token 770 on line 152 [opener:767;]: T_RETURN => return
		=> Found scope closer (770:T_RETURN) for 764:T_CASE
		Process token 768 on line 151 [opener:729;]: T_WHITESPACE => \n
		Process token 769 on line 152 [opener:729;]: T_WHITESPACE =>             
		Process token 770 on line 152 [opener:729;]: T_RETURN => return
		Process token 771 on line 152 [opener:729;]: T_WHITESPACE =>  
		Process token 772 on line 152 [opener:729;]: T_CONSTANT_ENCAPSED_STRING => 'yay'
		Process token 773 on line 152 [opener:729;]: T_SEMICOLON => ;
		Process token 774 on line 152 [opener:729;]: T_WHITESPACE => \n
		Process token 775 on line 153 [opener:729;]: T_WHITESPACE =>             
		Process token 776 on line 153 [opener:729;]: T_BREAK => break
		Process token 777 on line 153 [opener:729;]: T_SEMICOLON => ;
		Process token 778 on line 153 [opener:729;]: T_WHITESPACE => \n
		Process token 779 on line 154 [opener:729;]: T_WHITESPACE =>         
		Process token 780 on line 154 [opener:729;]: T_DEFAULT => default
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 780 with depth 2
		Process token 781 on line 154 []: T_COLON => :
		=> Found scope opener for 780:T_DEFAULT
		Process token 782 on line 154 [opener:781;]: T_WHITESPACE => \n
		Process token 783 on line 155 [opener:781;]: T_WHITESPACE =>             
		Process token 784 on line 155 [opener:781;]: T_RETURN => return
		=> Found scope closer (784:T_RETURN) for 780:T_DEFAULT
		Process token 782 on line 154 [opener:729;]: T_WHITESPACE => \n
		Process token 783 on line 155 [opener:729;]: T_WHITESPACE =>             
		Process token 784 on line 155 [opener:729;]: T_RETURN => return
		Process token 785 on line 155 [opener:729;]: T_WHITESPACE =>  
		Process token 786 on line 155 [opener:729;]: T_CONSTANT_ENCAPSED_STRING => 'boring'
		Process token 787 on line 155 [opener:729;]: T_SEMICOLON => ;
		Process token 788 on line 155 [opener:729;]: T_WHITESPACE => \n
		Process token 789 on line 156 [opener:729;]: T_WHITESPACE =>     
		Process token 790 on line 156 [opener:729;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (790:T_CLOSE_CURLY_BRACKET) for 723:T_SWITCH
	Process token 791 on line 156 [opener:720;]: T_WHITESPACE => \n
	Process token 792 on line 157 [opener:720;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (792:T_CLOSE_CURLY_BRACKET) for 713:T_FUNCTION
	Start scope map at 795:T_FUNCTION => function
	=> Begin scope map recursion at token 795 with depth 1
	Process token 796 on line 159 []: T_WHITESPACE =>  
	Process token 797 on line 159 []: T_STRING => returnOverMultipleLines
	Process token 798 on line 159 []: T_OPEN_PARENTHESIS => (
	Process token 799 on line 159 []: T_VARIABLE => $color
	Process token 800 on line 159 []: T_CLOSE_PARENTHESIS => )
	Process token 801 on line 159 []: T_WHITESPACE =>  
	Process token 802 on line 159 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 795:T_FUNCTION
	Process token 803 on line 159 [opener:802;]: T_WHITESPACE => \n
	Process token 804 on line 160 [opener:802;]: T_WHITESPACE =>     
	Process token 805 on line 160 [opener:802;]: T_SWITCH => switch
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 805 with depth 2
		Process token 806 on line 160 []: T_WHITESPACE =>  
		Process token 807 on line 160 []: T_OPEN_PARENTHESIS => (
		Process token 808 on line 160 []: T_VARIABLE => $color
		Process token 809 on line 160 []: T_CLOSE_PARENTHESIS => )
		Process token 810 on line 160 []: T_WHITESPACE =>  
		Process token 811 on line 160 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 805:T_SWITCH
		Process token 812 on line 160 [opener:811;]: T_WHITESPACE => \n
		Process token 813 on line 161 [opener:811;]: T_WHITESPACE =>         
		Process token 814 on line 161 [opener:811;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 814 with depth 2
		Process token 815 on line 161 []: T_WHITESPACE =>  
		Process token 816 on line 161 []: T_CONSTANT_ENCAPSED_STRING => 'red'
		Process token 817 on line 161 []: T_COLON => :
		=> Found scope opener for 814:T_CASE
		Process token 818 on line 161 [opener:817;]: T_WHITESPACE => \n
		Process token 819 on line 162 [opener:817;]: T_WHITESPACE =>             
		Process token 820 on line 162 [opener:817;]: T_RETURN => return
		=> Found scope closer (820:T_RETURN) for 814:T_CASE
		Process token 818 on line 161 [opener:811;]: T_WHITESPACE => \n
		Process token 819 on line 162 [opener:811;]: T_WHITESPACE =>             
		Process token 820 on line 162 [opener:811;]: T_RETURN => return
		Process token 821 on line 162 [opener:811;]: T_WHITESPACE =>  
		Process token 822 on line 162 [opener:811;]: T_STRING => someFunction
		Process token 823 on line 162 [opener:811;]: T_OPEN_PARENTHESIS => (
		Process token 824 on line 162 [opener:811;]: T_WHITESPACE => \n
		Process token 825 on line 163 [opener:811;]: T_WHITESPACE =>                 
		Process token 826 on line 163 [opener:811;]: T_CONSTANT_ENCAPSED_STRING => 'multiple'
		Process token 827 on line 163 [opener:811;]: T_COMMA => ,
		Process token 828 on line 163 [opener:811;]: T_WHITESPACE => \n
		Process token 829 on line 164 [opener:811;]: T_WHITESPACE =>                 
		Process token 830 on line 164 [opener:811;]: T_CONSTANT_ENCAPSED_STRING => 'arguments'
		Process token 831 on line 164 [opener:811;]: T_WHITESPACE => \n
		Process token 832 on line 165 [opener:811;]: T_WHITESPACE =>             
		Process token 833 on line 165 [opener:811;]: T_CLOSE_PARENTHESIS => )
		Process token 834 on line 165 [opener:811;]: T_SEMICOLON => ;
		Process token 835 on line 165 [opener:811;]: T_WHITESPACE => \n
		Process token 836 on line 166 [opener:811;]: T_WHITESPACE =>             
		Process token 837 on line 166 [opener:811;]: T_ECHO => echo
		Process token 838 on line 166 [opener:811;]: T_WHITESPACE =>  
		Process token 839 on line 166 [opener:811;]: T_VARIABLE => $foo
		Process token 840 on line 166 [opener:811;]: T_SEMICOLON => ;
		Process token 841 on line 166 [opener:811;]: T_WHITESPACE => \n
		Process token 842 on line 167 [opener:811;]: T_WHITESPACE =>         
		Process token 843 on line 167 [opener:811;]: T_DEFAULT => default
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 843 with depth 2
		Process token 844 on line 167 []: T_COLON => :
		=> Found scope opener for 843:T_DEFAULT
		Process token 845 on line 167 [opener:844;]: T_WHITESPACE => \n
		Process token 846 on line 168 [opener:844;]: T_WHITESPACE =>             
		Process token 847 on line 168 [opener:844;]: T_RETURN => return
		=> Found scope closer (847:T_RETURN) for 843:T_DEFAULT
		Process token 845 on line 167 [opener:811;]: T_WHITESPACE => \n
		Process token 846 on line 168 [opener:811;]: T_WHITESPACE =>             
		Process token 847 on line 168 [opener:811;]: T_RETURN => return
		Process token 848 on line 168 [opener:811;]: T_WHITESPACE =>  
		Process token 849 on line 168 [opener:811;]: T_ARRAY => array
		Process token 850 on line 168 [opener:811;]: T_OPEN_PARENTHESIS => (
		Process token 851 on line 168 [opener:811;]: T_WHITESPACE => \n
		Process token 852 on line 169 [opener:811;]: T_WHITESPACE =>                 
		Process token 853 on line 169 [opener:811;]: T_CONSTANT_ENCAPSED_STRING => 'multiline'
		Process token 854 on line 169 [opener:811;]: T_COMMA => ,
		Process token 855 on line 169 [opener:811;]: T_WHITESPACE => \n
		Process token 856 on line 170 [opener:811;]: T_WHITESPACE =>                 
		Process token 857 on line 170 [opener:811;]: T_CONSTANT_ENCAPSED_STRING => 'array'
		Process token 858 on line 170 [opener:811;]: T_WHITESPACE => \n
		Process token 859 on line 171 [opener:811;]: T_WHITESPACE =>             
		Process token 860 on line 171 [opener:811;]: T_CLOSE_PARENTHESIS => )
		Process token 861 on line 171 [opener:811;]: T_SEMICOLON => ;
		Process token 862 on line 171 [opener:811;]: T_WHITESPACE => \n
		Process token 863 on line 172 [opener:811;]: T_WHITESPACE =>     
		Process token 864 on line 172 [opener:811;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (864:T_CLOSE_CURLY_BRACKET) for 805:T_SWITCH
	Process token 865 on line 172 [opener:802;]: T_WHITESPACE => \n
	Process token 866 on line 173 [opener:802;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (866:T_CLOSE_CURLY_BRACKET) for 795:T_FUNCTION
	Start scope map at 869:T_FUNCTION => function
	=> Begin scope map recursion at token 869 with depth 1
	Process token 870 on line 175 []: T_WHITESPACE =>  
	Process token 871 on line 175 []: T_STRING => test
	Process token 872 on line 175 []: T_OPEN_PARENTHESIS => (
	Process token 873 on line 175 []: T_CLOSE_PARENTHESIS => )
	Process token 874 on line 175 []: T_WHITESPACE =>  
	Process token 875 on line 175 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 869:T_FUNCTION
	Process token 876 on line 175 [opener:875;]: T_WHITESPACE => \n
	Process token 877 on line 176 [opener:875;]: T_WHITESPACE =>     
	Process token 878 on line 176 [opener:875;]: T_RETURN => return
	Process token 879 on line 176 [opener:875;]: T_WHITESPACE =>  
	Process token 880 on line 176 [opener:875;]: T_ARRAY => array
	Process token 881 on line 176 [opener:875;]: T_OPEN_PARENTHESIS => (
	Process token 882 on line 176 [opener:875;]: T_WHITESPACE => \n
	Process token 883 on line 177 [opener:875;]: T_WHITESPACE =>                 
	Process token 884 on line 177 [opener:875;]: T_CONSTANT_ENCAPSED_STRING => 'multiline'
	Process token 885 on line 177 [opener:875;]: T_COMMA => ,
	Process token 886 on line 177 [opener:875;]: T_WHITESPACE => \n
	Process token 887 on line 178 [opener:875;]: T_WHITESPACE =>                 
	Process token 888 on line 178 [opener:875;]: T_CONSTANT_ENCAPSED_STRING => 'array'
	Process token 889 on line 178 [opener:875;]: T_WHITESPACE => \n
	Process token 890 on line 179 [opener:875;]: T_WHITESPACE =>             
	Process token 891 on line 179 [opener:875;]: T_CLOSE_PARENTHESIS => )
	Process token 892 on line 179 [opener:875;]: T_SEMICOLON => ;
	Process token 893 on line 179 [opener:875;]: T_WHITESPACE => \n
	Process token 894 on line 180 [opener:875;]: T_WHITESPACE =>     
	Process token 895 on line 180 [opener:875;]: T_ECHO => echo
	Process token 896 on line 180 [opener:875;]: T_WHITESPACE =>  
	Process token 897 on line 180 [opener:875;]: T_VARIABLE => $foo
	Process token 898 on line 180 [opener:875;]: T_SEMICOLON => ;
	Process token 899 on line 180 [opener:875;]: T_WHITESPACE => \n
	Process token 900 on line 181 [opener:875;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (900:T_CLOSE_CURLY_BRACKET) for 869:T_FUNCTION
	Start scope map at 903:T_FUNCTION => function
	=> Begin scope map recursion at token 903 with depth 1
	Process token 904 on line 183 []: T_WHITESPACE =>  
	Process token 905 on line 183 []: T_STRING => test
	Process token 906 on line 183 []: T_OPEN_PARENTHESIS => (
	Process token 907 on line 183 []: T_CLOSE_PARENTHESIS => )
	Process token 908 on line 183 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 903:T_FUNCTION
	Process token 909 on line 183 [opener:908;]: T_WHITESPACE => \n
	Process token 910 on line 184 [opener:908;]: T_WHITESPACE =>     
	Process token 911 on line 184 [opener:908;]: T_SWITCH => switch
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 911 with depth 2
		Process token 912 on line 184 []: T_OPEN_PARENTHESIS => (
		Process token 913 on line 184 []: T_VARIABLE => $a
		Process token 914 on line 184 []: T_CLOSE_PARENTHESIS => )
		Process token 915 on line 184 []: T_WHITESPACE =>  
		Process token 916 on line 184 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 911:T_SWITCH
		Process token 917 on line 184 [opener:916;]: T_WHITESPACE => \n
		Process token 918 on line 185 [opener:916;]: T_WHITESPACE =>         
		Process token 919 on line 185 [opener:916;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 919 with depth 2
		Process token 920 on line 185 []: T_WHITESPACE =>  
		Process token 921 on line 185 []: T_LNUMBER => 1
		Process token 922 on line 185 []: T_COLON => :
		=> Found scope opener for 919:T_CASE
		Process token 923 on line 185 [opener:922;]: T_WHITESPACE => \n
		Process token 924 on line 186 [opener:922;]: T_WHITESPACE =>             
		Process token 925 on line 186 [opener:922;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 925 with depth 3
			Process token 926 on line 186 []: T_WHITESPACE =>  
			Process token 927 on line 186 []: T_OPEN_PARENTHESIS => (
			Process token 928 on line 186 []: T_EMPTY => empty
			Process token 929 on line 186 []: T_OPEN_PARENTHESIS => (
			Process token 930 on line 186 []: T_VARIABLE => $b
			Process token 931 on line 186 []: T_CLOSE_PARENTHESIS => )
			Process token 932 on line 186 []: T_CLOSE_PARENTHESIS => )
			Process token 933 on line 186 []: T_WHITESPACE => \n
			Process token 934 on line 187 []: T_WHITESPACE =>                 
			Process token 935 on line 187 []: T_RETURN => return
			Process token 936 on line 187 []: T_WHITESPACE =>  
			Process token 937 on line 187 []: T_LNUMBER => 0
			Process token 938 on line 187 []: T_SEMICOLON => ;
			=> Found semicolon before scope opener for 925:T_IF, bailing
		Process token 939 on line 187 [opener:922;]: T_WHITESPACE => \n
		Process token 940 on line 188 [opener:922;]: T_WHITESPACE =>             
		Process token 941 on line 188 [opener:922;]: T_BREAK => break
		=> Found scope closer (941:T_BREAK) for 919:T_CASE
		Process token 923 on line 185 [opener:916;]: T_WHITESPACE => \n
		Process token 924 on line 186 [opener:916;]: T_WHITESPACE =>             
		Process token 925 on line 186 [opener:916;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 925 with depth 3
			Process token 926 on line 186 []: T_WHITESPACE =>  
			Process token 927 on line 186 []: T_OPEN_PARENTHESIS => (
			Process token 928 on line 186 []: T_EMPTY => empty
			Process token 929 on line 186 []: T_OPEN_PARENTHESIS => (
			Process token 930 on line 186 []: T_VARIABLE => $b
			Process token 931 on line 186 []: T_CLOSE_PARENTHESIS => )
			Process token 932 on line 186 []: T_CLOSE_PARENTHESIS => )
			Process token 933 on line 186 []: T_WHITESPACE => \n
			Process token 934 on line 187 []: T_WHITESPACE =>                 
			Process token 935 on line 187 []: T_RETURN => return
			Process token 936 on line 187 []: T_WHITESPACE =>  
			Process token 937 on line 187 []: T_LNUMBER => 0
			Process token 938 on line 187 []: T_SEMICOLON => ;
			=> Found semicolon before scope opener for 925:T_IF, bailing
		Process token 939 on line 187 [opener:916;]: T_WHITESPACE => \n
		Process token 940 on line 188 [opener:916;]: T_WHITESPACE =>             
		Process token 941 on line 188 [opener:916;]: T_BREAK => break
		Process token 942 on line 188 [opener:916;]: T_SEMICOLON => ;
		Process token 943 on line 188 [opener:916;]: T_WHITESPACE => \n
		Process token 944 on line 189 [opener:916;]: T_WHITESPACE =>         
		Process token 945 on line 189 [opener:916;]: T_DEFAULT => default
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 945 with depth 2
		Process token 946 on line 189 []: T_COLON => :
		=> Found scope opener for 945:T_DEFAULT
		Process token 947 on line 189 [opener:946;]: T_WHITESPACE => \n
		Process token 948 on line 190 [opener:946;]: T_WHITESPACE =>             
		Process token 949 on line 190 [opener:946;]: T_RETURN => return
		=> Found scope closer (949:T_RETURN) for 945:T_DEFAULT
		Process token 947 on line 189 [opener:916;]: T_WHITESPACE => \n
		Process token 948 on line 190 [opener:916;]: T_WHITESPACE =>             
		Process token 949 on line 190 [opener:916;]: T_RETURN => return
		Process token 950 on line 190 [opener:916;]: T_WHITESPACE =>  
		Process token 951 on line 190 [opener:916;]: T_LNUMBER => 2
		Process token 952 on line 190 [opener:916;]: T_SEMICOLON => ;
		Process token 953 on line 190 [opener:916;]: T_WHITESPACE => \n
		Process token 954 on line 191 [opener:916;]: T_WHITESPACE =>     
		Process token 955 on line 191 [opener:916;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (955:T_CLOSE_CURLY_BRACKET) for 911:T_SWITCH
	Process token 956 on line 191 [opener:908;]: T_WHITESPACE => \n
	Process token 957 on line 192 [opener:908;]: T_WHITESPACE => \n
	Process token 958 on line 193 [opener:908;]: T_WHITESPACE =>     
	Process token 959 on line 193 [opener:908;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 959 with depth 2
		Process token 960 on line 193 []: T_WHITESPACE =>  
		Process token 961 on line 193 []: T_OPEN_PARENTHESIS => (
		Process token 962 on line 193 []: T_EMPTY => empty
		Process token 963 on line 193 []: T_OPEN_PARENTHESIS => (
		Process token 964 on line 193 []: T_VARIABLE => $a
		Process token 965 on line 193 []: T_CLOSE_PARENTHESIS => )
		Process token 966 on line 193 []: T_CLOSE_PARENTHESIS => )
		Process token 967 on line 193 []: T_WHITESPACE => \n
		Process token 968 on line 194 []: T_WHITESPACE =>         
		Process token 969 on line 194 []: T_ECHO => echo
		Process token 970 on line 194 []: T_WHITESPACE =>  
		Process token 971 on line 194 []: T_CONSTANT_ENCAPSED_STRING => '1'
		Process token 972 on line 194 []: T_SEMICOLON => ;
		=> Found semicolon before scope opener for 959:T_IF, bailing
	Process token 973 on line 194 [opener:908;]: T_WHITESPACE => \n
	Process token 974 on line 195 [opener:908;]: T_WHITESPACE =>     
	Process token 975 on line 195 [opener:908;]: T_ELSEIF => elseif
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 975 with depth 2
		Process token 976 on line 195 []: T_WHITESPACE =>  
		Process token 977 on line 195 []: T_OPEN_PARENTHESIS => (
		Process token 978 on line 195 []: T_VARIABLE => $empty
		Process token 979 on line 195 []: T_OPEN_PARENTHESIS => (
		Process token 980 on line 195 []: T_VARIABLE => $b
		Process token 981 on line 195 []: T_CLOSE_PARENTHESIS => )
		Process token 982 on line 195 []: T_CLOSE_PARENTHESIS => )
		Process token 983 on line 195 []: T_WHITESPACE => \n
		Process token 984 on line 196 []: T_WHITESPACE =>         
		Process token 985 on line 196 []: T_RETURN => return
		Process token 986 on line 196 []: T_WHITESPACE =>  
		Process token 987 on line 196 []: T_LNUMBER => 0
		Process token 988 on line 196 []: T_SEMICOLON => ;
		Process token 989 on line 196 []: T_WHITESPACE => \n
		Process token 990 on line 197 []: T_WHITESPACE =>     
		Process token 991 on line 197 []: T_ELSE => else
		=> Found new opening condition before scope opener for 975:T_ELSEIF, continuing
	Process token 991 on line 197 [opener:908;]: T_ELSE => else
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 991 with depth 2
		Process token 992 on line 197 []: T_WHITESPACE => \n
		Process token 993 on line 198 []: T_WHITESPACE =>         
		Process token 994 on line 198 []: T_RETURN => return
		Process token 995 on line 198 []: T_WHITESPACE =>  
		Process token 996 on line 198 []: T_LNUMBER => 1
		Process token 997 on line 198 []: T_SEMICOLON => ;
		=> Found semicolon before scope opener for 991:T_ELSE, bailing
	Process token 998 on line 198 [opener:908;]: T_WHITESPACE => \n
	Process token 999 on line 199 [opener:908;]: T_WHITESPACE => \n
	Process token 1000 on line 200 [opener:908;]: T_WHITESPACE =>     
	Process token 1001 on line 200 [opener:908;]: T_ECHO => echo
	Process token 1002 on line 200 [opener:908;]: T_WHITESPACE =>  
	Process token 1003 on line 200 [opener:908;]: T_CONSTANT_ENCAPSED_STRING => "oi"
	Process token 1004 on line 200 [opener:908;]: T_SEMICOLON => ;
	Process token 1005 on line 200 [opener:908;]: T_WHITESPACE => \n
	Process token 1006 on line 201 [opener:908;]: T_WHITESPACE =>     
	Process token 1007 on line 201 [opener:908;]: T_RETURN => return
	Process token 1008 on line 201 [opener:908;]: T_WHITESPACE =>  
	Process token 1009 on line 201 [opener:908;]: T_LNUMBER => 1
	Process token 1010 on line 201 [opener:908;]: T_SEMICOLON => ;
	Process token 1011 on line 201 [opener:908;]: T_WHITESPACE => \n
	Process token 1012 on line 202 [opener:908;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (1012:T_CLOSE_CURLY_BRACKET) for 903:T_FUNCTION
	Start scope map at 1015:T_SWITCH => switch
	=> Begin scope map recursion at token 1015 with depth 1
	Process token 1016 on line 204 []: T_WHITESPACE =>  
	Process token 1017 on line 204 []: T_OPEN_PARENTHESIS => (
	Process token 1018 on line 204 []: T_VARIABLE => $foo
	Process token 1019 on line 204 []: T_CLOSE_PARENTHESIS => )
	Process token 1020 on line 204 []: T_WHITESPACE =>  
	Process token 1021 on line 204 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1015:T_SWITCH
	Process token 1022 on line 204 [opener:1021;]: T_WHITESPACE => \n
	Process token 1023 on line 205 [opener:1021;]: T_WHITESPACE =>     
	Process token 1024 on line 205 [opener:1021;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 1024 with depth 1
	Process token 1025 on line 205 []: T_WHITESPACE =>  
	Process token 1026 on line 205 []: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token 1027 on line 205 []: T_COLON => :
	=> Found scope opener for 1024:T_CASE
	Process token 1028 on line 205 [opener:1027;]: T_WHITESPACE => \n
	Process token 1029 on line 206 [opener:1027;]: T_WHITESPACE =>         
	Process token 1030 on line 206 [opener:1027;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 1030 with depth 2
		Process token 1031 on line 206 []: T_WHITESPACE =>  
		Process token 1032 on line 206 []: T_OPEN_PARENTHESIS => (
		Process token 1033 on line 206 []: T_VARIABLE => $foo
		Process token 1034 on line 206 []: T_CLOSE_PARENTHESIS => )
		Process token 1035 on line 206 []: T_WHITESPACE => \n
		Process token 1036 on line 207 []: T_WHITESPACE =>             
		Process token 1037 on line 207 []: T_RETURN => return
		Process token 1038 on line 207 []: T_WHITESPACE =>  
		Process token 1039 on line 207 []: T_VARIABLE => $foo
		Process token 1040 on line 207 []: T_SEMICOLON => ;
		=> Found semicolon before scope opener for 1030:T_IF, bailing
	Process token 1041 on line 207 [opener:1027;]: T_WHITESPACE => \n
	Process token 1042 on line 208 [opener:1027;]: T_WHITESPACE =>         
	Process token 1043 on line 208 [opener:1027;]: T_RETURN => return
	=> Found scope closer (1043:T_RETURN) for 1024:T_CASE
	Process token 1028 on line 205 [opener:1021;]: T_WHITESPACE => \n
	Process token 1029 on line 206 [opener:1021;]: T_WHITESPACE =>         
	Process token 1030 on line 206 [opener:1021;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 1030 with depth 2
		Process token 1031 on line 206 []: T_WHITESPACE =>  
		Process token 1032 on line 206 []: T_OPEN_PARENTHESIS => (
		Process token 1033 on line 206 []: T_VARIABLE => $foo
		Process token 1034 on line 206 []: T_CLOSE_PARENTHESIS => )
		Process token 1035 on line 206 []: T_WHITESPACE => \n
		Process token 1036 on line 207 []: T_WHITESPACE =>             
		Process token 1037 on line 207 []: T_RETURN => return
		Process token 1038 on line 207 []: T_WHITESPACE =>  
		Process token 1039 on line 207 []: T_VARIABLE => $foo
		Process token 1040 on line 207 []: T_SEMICOLON => ;
		=> Found semicolon before scope opener for 1030:T_IF, bailing
	Process token 1041 on line 207 [opener:1021;]: T_WHITESPACE => \n
	Process token 1042 on line 208 [opener:1021;]: T_WHITESPACE =>         
	Process token 1043 on line 208 [opener:1021;]: T_RETURN => return
	Process token 1044 on line 208 [opener:1021;]: T_WHITESPACE =>  
	Process token 1045 on line 208 [opener:1021;]: T_VARIABLE => $bar
	Process token 1046 on line 208 [opener:1021;]: T_SEMICOLON => ;
	Process token 1047 on line 208 [opener:1021;]: T_WHITESPACE => \n
	Process token 1048 on line 209 [opener:1021;]: T_WHITESPACE =>     
	Process token 1049 on line 209 [opener:1021;]: T_DEFAULT => default
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 1049 with depth 1
	Process token 1050 on line 209 []: T_COLON => :
	=> Found scope opener for 1049:T_DEFAULT
	Process token 1051 on line 209 [opener:1050;]: T_WHITESPACE => \n
	Process token 1052 on line 210 [opener:1050;]: T_WHITESPACE =>         
	Process token 1053 on line 210 [opener:1050;]: T_RETURN => return
	=> Found scope closer (1053:T_RETURN) for 1049:T_DEFAULT
	Process token 1051 on line 209 [opener:1021;]: T_WHITESPACE => \n
	Process token 1052 on line 210 [opener:1021;]: T_WHITESPACE =>         
	Process token 1053 on line 210 [opener:1021;]: T_RETURN => return
	Process token 1054 on line 210 [opener:1021;]: T_WHITESPACE =>  
	Process token 1055 on line 210 [opener:1021;]: T_VARIABLE => $bar
	Process token 1056 on line 210 [opener:1021;]: T_SEMICOLON => ;
	Process token 1057 on line 210 [opener:1021;]: T_WHITESPACE => \n
	Process token 1058 on line 211 [opener:1021;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (1058:T_CLOSE_CURLY_BRACKET) for 1015:T_SWITCH
	Start scope map at 1061:T_FUNCTION => function
	=> Begin scope map recursion at token 1061 with depth 1
	Process token 1062 on line 213 []: T_WHITESPACE =>  
	Process token 1063 on line 213 []: T_STRING => foo
	Process token 1064 on line 213 []: T_OPEN_PARENTHESIS => (
	Process token 1065 on line 213 []: T_CLOSE_PARENTHESIS => )
	Process token 1066 on line 213 []: T_WHITESPACE => \n
	Process token 1067 on line 214 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1061:T_FUNCTION
	Process token 1068 on line 214 [opener:1067;]: T_WHITESPACE => \n
	Process token 1069 on line 215 [opener:1067;]: T_WHITESPACE =>     
	Process token 1070 on line 215 [opener:1067;]: T_RETURN => return
	Process token 1071 on line 215 [opener:1067;]: T_WHITESPACE =>  
	Process token 1072 on line 215 [opener:1067;]: T_VARIABLE => $bar
	Process token 1073 on line 215 [opener:1067;]: T_OBJECT_OPERATOR => ->
	Process token 1074 on line 215 [opener:1067;]: T_OPEN_CURLY_BRACKET => {
	* ignoring curly brace *
	Process token 1075 on line 215 [opener:1067;ignore=1;]: T_VARIABLE => $action
	Process token 1076 on line 215 [opener:1067;ignore=1;]: T_WHITESPACE =>  
	Process token 1077 on line 215 [opener:1067;ignore=1;]: T_STRING_CONCAT => .
	Process token 1078 on line 215 [opener:1067;ignore=1;]: T_WHITESPACE =>  
	Process token 1079 on line 215 [opener:1067;ignore=1;]: T_CONSTANT_ENCAPSED_STRING => 'JsonAction'
	Process token 1080 on line 215 [opener:1067;ignore=1;]: T_CLOSE_CURLY_BRACKET => }
	* finished ignoring curly brace *
	Process token 1081 on line 215 [opener:1067;]: T_OPEN_PARENTHESIS => (
	Process token 1082 on line 215 [opener:1067;]: T_CLOSE_PARENTHESIS => )
	Process token 1083 on line 215 [opener:1067;]: T_SEMICOLON => ;
	Process token 1084 on line 215 [opener:1067;]: T_WHITESPACE => \n
	Process token 1085 on line 216 [opener:1067;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (1085:T_CLOSE_CURLY_BRACKET) for 1061:T_FUNCTION
	Start scope map at 1088:T_SWITCH => switch
	=> Begin scope map recursion at token 1088 with depth 1
	Process token 1089 on line 218 []: T_WHITESPACE =>  
	Process token 1090 on line 218 []: T_OPEN_PARENTHESIS => (
	Process token 1091 on line 218 []: T_TRUE => true
	Process token 1092 on line 218 []: T_CLOSE_PARENTHESIS => )
	Process token 1093 on line 218 []: T_WHITESPACE =>  
	Process token 1094 on line 218 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1088:T_SWITCH
	Process token 1095 on line 218 [opener:1094;]: T_WHITESPACE => \n
	Process token 1096 on line 219 [opener:1094;]: T_WHITESPACE =>     
	Process token 1097 on line 219 [opener:1094;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 1097 with depth 1
	Process token 1098 on line 219 []: T_WHITESPACE =>  
	Process token 1099 on line 219 []: T_LNUMBER => 1
	Process token 1100 on line 219 []: T_COLON => :
	=> Found scope opener for 1097:T_CASE
	Process token 1101 on line 219 [opener:1100;]: T_WHITESPACE => \n
	Process token 1102 on line 220 [opener:1100;]: T_WHITESPACE =>         
	Process token 1103 on line 220 [opener:1100;]: T_RETURN => return
	=> Found scope closer (1103:T_RETURN) for 1097:T_CASE
	Process token 1101 on line 219 [opener:1094;]: T_WHITESPACE => \n
	Process token 1102 on line 220 [opener:1094;]: T_WHITESPACE =>         
	Process token 1103 on line 220 [opener:1094;]: T_RETURN => return
	Process token 1104 on line 220 [opener:1094;]: T_WHITESPACE =>  
	Process token 1105 on line 220 [opener:1094;]: T_STRING => foo
	Process token 1106 on line 220 [opener:1094;]: T_OPEN_PARENTHESIS => (
	Process token 1107 on line 220 [opener:1094;]: T_WHITESPACE => \n
	Process token 1108 on line 221 [opener:1094;]: T_WHITESPACE =>             
	Process token 1109 on line 221 [opener:1094;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 1109 with depth 2
		Process token 1110 on line 221 []: T_WHITESPACE =>  
		Process token 1111 on line 221 []: T_OPEN_PARENTHESIS => (
		Process token 1112 on line 221 []: T_CLOSE_PARENTHESIS => )
		Process token 1113 on line 221 []: T_WHITESPACE =>  
		Process token 1114 on line 221 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 1109:T_FUNCTION
		Process token 1115 on line 221 [opener:1114;]: T_WHITESPACE => \n
		Process token 1116 on line 222 [opener:1114;]: T_WHITESPACE =>                 
		Process token 1117 on line 222 [opener:1114;]: T_VARIABLE => $foo
		Process token 1118 on line 222 [opener:1114;]: T_WHITESPACE =>  
		Process token 1119 on line 222 [opener:1114;]: T_EQUAL => =
		Process token 1120 on line 222 [opener:1114;]: T_WHITESPACE =>  
		Process token 1121 on line 222 [opener:1114;]: T_VARIABLE => $bar
		Process token 1122 on line 222 [opener:1114;]: T_SEMICOLON => ;
		Process token 1123 on line 222 [opener:1114;]: T_WHITESPACE =>   
		Process token 1124 on line 222 [opener:1114;]: T_COMMENT => // when this is removed it works ok\n
		Process token 1125 on line 223 [opener:1114;]: T_WHITESPACE =>                 
		Process token 1126 on line 223 [opener:1114;]: T_RETURN => return
		Process token 1127 on line 223 [opener:1114;]: T_WHITESPACE =>  
		Process token 1128 on line 223 [opener:1114;]: T_FALSE => false
		Process token 1129 on line 223 [opener:1114;]: T_SEMICOLON => ;
		Process token 1130 on line 223 [opener:1114;]: T_WHITESPACE =>  
		Process token 1131 on line 223 [opener:1114;]: T_COMMENT => // from here on it reports unreachable\n
		Process token 1132 on line 224 [opener:1114;]: T_WHITESPACE =>             
		Process token 1133 on line 224 [opener:1114;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (1133:T_CLOSE_CURLY_BRACKET) for 1109:T_FUNCTION
	Process token 1134 on line 224 [opener:1094;]: T_WHITESPACE => \n
	Process token 1135 on line 225 [opener:1094;]: T_WHITESPACE =>         
	Process token 1136 on line 225 [opener:1094;]: T_CLOSE_PARENTHESIS => )
	Process token 1137 on line 225 [opener:1094;]: T_SEMICOLON => ;
	Process token 1138 on line 225 [opener:1094;]: T_WHITESPACE => \n
	Process token 1139 on line 226 [opener:1094;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (1139:T_CLOSE_CURLY_BRACKET) for 1088:T_SWITCH
	Start scope map at 1142:T_FOR => for
	=> Begin scope map recursion at token 1142 with depth 1
	Process token 1143 on line 228 []: T_OPEN_PARENTHESIS => (
	Process token 1144 on line 228 []: T_VARIABLE => $i
	Process token 1145 on line 228 []: T_EQUAL => =
	Process token 1146 on line 228 []: T_LNUMBER => 0
	Process token 1147 on line 228 []: T_COMMA => ,
	Process token 1148 on line 228 []: T_VARIABLE => $j
	Process token 1149 on line 228 []: T_EQUAL => =
	Process token 1150 on line 228 []: T_LNUMBER => 50
	Process token 1151 on line 228 []: T_SEMICOLON => ;
	Process token 1152 on line 228 []: T_WHITESPACE =>  
	Process token 1153 on line 228 []: T_VARIABLE => $i
	Process token 1154 on line 228 []: T_LESS_THAN => <
	Process token 1155 on line 228 []: T_LNUMBER => 100
	Process token 1156 on line 228 []: T_SEMICOLON => ;
	Process token 1157 on line 228 []: T_WHITESPACE =>  
	Process token 1158 on line 228 []: T_VARIABLE => $i
	Process token 1159 on line 228 []: T_INC => ++
	Process token 1160 on line 228 []: T_CLOSE_PARENTHESIS => )
	Process token 1161 on line 228 []: T_WHITESPACE =>  
	Process token 1162 on line 228 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1142:T_FOR
	Process token 1163 on line 228 [opener:1162;]: T_WHITESPACE => \n
	Process token 1164 on line 229 [opener:1162;]: T_WHITESPACE =>   
	Process token 1165 on line 229 [opener:1162;]: T_WHILE => while
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 1165 with depth 2
		Process token 1166 on line 229 []: T_OPEN_PARENTHESIS => (
		Process token 1167 on line 229 []: T_VARIABLE => $j
		Process token 1168 on line 229 []: T_DEC => --
		Process token 1169 on line 229 []: T_CLOSE_PARENTHESIS => )
		Process token 1170 on line 229 []: T_WHITESPACE =>  
		Process token 1171 on line 229 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 1165:T_WHILE
		Process token 1172 on line 229 [opener:1171;]: T_WHITESPACE => \n
		Process token 1173 on line 230 [opener:1171;]: T_WHITESPACE =>     
		Process token 1174 on line 230 [opener:1171;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 1174 with depth 3
			Process token 1175 on line 230 []: T_OPEN_PARENTHESIS => (
			Process token 1176 on line 230 []: T_VARIABLE => $j
			Process token 1177 on line 230 []: T_IS_EQUAL => ==
			Process token 1178 on line 230 []: T_LNUMBER => 17
			Process token 1179 on line 230 []: T_CLOSE_PARENTHESIS => )
			Process token 1180 on line 230 []: T_WHITESPACE =>  
			Process token 1181 on line 230 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 1174:T_IF
			Process token 1182 on line 230 [opener:1181;]: T_WHITESPACE => \n
			Process token 1183 on line 231 [opener:1181;]: T_WHITESPACE => \t\t
			Process token 1184 on line 231 [opener:1181;]: T_GOTO => goto
			Process token 1185 on line 231 [opener:1181;]: T_WHITESPACE =>  
			Process token 1186 on line 231 [opener:1181;]: T_STRING => end
			Process token 1187 on line 231 [opener:1181;]: T_SEMICOLON => ;
			Process token 1188 on line 231 [opener:1181;]: T_WHITESPACE => \n
			Process token 1189 on line 232 [opener:1181;]: T_WHITESPACE => \t\t
			Process token 1190 on line 232 [opener:1181;]: T_ECHO => echo
			Process token 1191 on line 232 [opener:1181;]: T_WHITESPACE =>  
			Process token 1192 on line 232 [opener:1181;]: T_CONSTANT_ENCAPSED_STRING => 'unreachable'
			Process token 1193 on line 232 [opener:1181;]: T_SEMICOLON => ;
			Process token 1194 on line 232 [opener:1181;]: T_WHITESPACE => \n
			Process token 1195 on line 233 [opener:1181;]: T_WHITESPACE => \t
			Process token 1196 on line 233 [opener:1181;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (1196:T_CLOSE_CURLY_BRACKET) for 1174:T_IF
		Process token 1197 on line 233 [opener:1171;]: T_WHITESPACE => \n
		Process token 1198 on line 234 [opener:1171;]: T_WHITESPACE =>   
		Process token 1199 on line 234 [opener:1171;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (1199:T_CLOSE_CURLY_BRACKET) for 1165:T_WHILE
	Process token 1200 on line 234 [opener:1162;]: T_WHITESPACE => \n
	Process token 1201 on line 235 [opener:1162;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (1201:T_CLOSE_CURLY_BRACKET) for 1142:T_FOR
	Start scope map at 1204:T_SWITCH => switch
	=> Begin scope map recursion at token 1204 with depth 1
	Process token 1205 on line 237 []: T_WHITESPACE =>  
	Process token 1206 on line 237 []: T_OPEN_PARENTHESIS => (
	Process token 1207 on line 237 []: T_VARIABLE => $var
	Process token 1208 on line 237 []: T_CLOSE_PARENTHESIS => )
	Process token 1209 on line 237 []: T_WHITESPACE =>  
	Process token 1210 on line 237 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1204:T_SWITCH
	Process token 1211 on line 237 [opener:1210;]: T_WHITESPACE => \n
	Process token 1212 on line 238 [opener:1210;]: T_WHITESPACE =>     
	Process token 1213 on line 238 [opener:1210;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 1213 with depth 1
	Process token 1214 on line 238 []: T_WHITESPACE =>  
	Process token 1215 on line 238 []: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token 1216 on line 238 []: T_COLON => :
	=> Found scope opener for 1213:T_CASE
	Process token 1217 on line 238 [opener:1216;]: T_WHITESPACE => \n
	Process token 1218 on line 239 [opener:1216;]: T_WHITESPACE =>         
	Process token 1219 on line 239 [opener:1216;]: T_GOTO => goto
	Process token 1220 on line 239 [opener:1216;]: T_WHITESPACE =>  
	Process token 1221 on line 239 [opener:1216;]: T_STRING => end
	Process token 1222 on line 239 [opener:1216;]: T_SEMICOLON => ;
	Process token 1223 on line 239 [opener:1216;]: T_WHITESPACE => \n
	Process token 1224 on line 240 [opener:1216;]: T_WHITESPACE =>         
	Process token 1225 on line 240 [opener:1216;]: T_ECHO => echo
	Process token 1226 on line 240 [opener:1216;]: T_WHITESPACE =>  
	Process token 1227 on line 240 [opener:1216;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token 1228 on line 240 [opener:1216;]: T_SEMICOLON => ;
	Process token 1229 on line 240 [opener:1216;]: T_WHITESPACE => \n
	Process token 1230 on line 241 [opener:1216;]: T_WHITESPACE => \n
	Process token 1231 on line 242 [opener:1216;]: T_WHITESPACE =>     
	Process token 1232 on line 242 [opener:1216;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 1232 with depth 1
	Process token 1233 on line 242 []: T_WHITESPACE =>  
	Process token 1234 on line 242 []: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token 1235 on line 242 []: T_COLON => :
	=> Found scope opener for 1232:T_CASE
	Process token 1236 on line 242 [opener:1235;]: T_WHITESPACE => \n
	Process token 1237 on line 243 [opener:1235;]: T_WHITESPACE =>     
	Process token 1238 on line 243 [opener:1235;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 1238 with depth 1
	Process token 1239 on line 243 []: T_WHITESPACE =>  
	Process token 1240 on line 243 []: T_CONSTANT_ENCAPSED_STRING => '3'
	Process token 1241 on line 243 []: T_COLON => :
	=> Found scope opener for 1238:T_CASE
	Process token 1242 on line 243 [opener:1241;]: T_WHITESPACE => \n
	Process token 1243 on line 244 [opener:1241;]: T_WHITESPACE =>         
	Process token 1244 on line 244 [opener:1241;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 1244 with depth 2
		Process token 1245 on line 244 []: T_WHITESPACE =>  
		Process token 1246 on line 244 []: T_OPEN_PARENTHESIS => (
		Process token 1247 on line 244 []: T_VARIABLE => $something
		Process token 1248 on line 244 []: T_WHITESPACE =>  
		Process token 1249 on line 244 []: T_IS_IDENTICAL => ===
		Process token 1250 on line 244 []: T_WHITESPACE =>  
		Process token 1251 on line 244 []: T_TRUE => true
		Process token 1252 on line 244 []: T_CLOSE_PARENTHESIS => )
		Process token 1253 on line 244 []: T_WHITESPACE =>  
		Process token 1254 on line 244 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 1244:T_IF
		Process token 1255 on line 244 [opener:1254;]: T_WHITESPACE => \n
		Process token 1256 on line 245 [opener:1254;]: T_WHITESPACE =>             
		Process token 1257 on line 245 [opener:1254;]: T_GOTO => goto
		Process token 1258 on line 245 [opener:1254;]: T_WHITESPACE =>  
		Process token 1259 on line 245 [opener:1254;]: T_STRING => end
		Process token 1260 on line 245 [opener:1254;]: T_SEMICOLON => ;
		Process token 1261 on line 245 [opener:1254;]: T_WHITESPACE => \n
		Process token 1262 on line 246 [opener:1254;]: T_WHITESPACE =>             
		Process token 1263 on line 246 [opener:1254;]: T_ECHO => echo
		Process token 1264 on line 246 [opener:1254;]: T_WHITESPACE =>  
		Process token 1265 on line 246 [opener:1254;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
		Process token 1266 on line 246 [opener:1254;]: T_SEMICOLON => ;
		Process token 1267 on line 246 [opener:1254;]: T_WHITESPACE => \n
		Process token 1268 on line 247 [opener:1254;]: T_WHITESPACE =>         
		Process token 1269 on line 247 [opener:1254;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (1269:T_CLOSE_CURLY_BRACKET) for 1244:T_IF
	Process token 1270 on line 247 [opener:1241;]: T_WHITESPACE => \n
	Process token 1271 on line 248 [opener:1241;]: T_WHITESPACE =>     
	Process token 1272 on line 248 [opener:1241;]: T_BREAK => break
	=> Found scope closer (1272:T_BREAK) for 1238:T_CASE
	Process token 1242 on line 243 [opener:1235;]: T_WHITESPACE => \n
	Process token 1243 on line 244 [opener:1235;]: T_WHITESPACE =>         
	Process token 1244 on line 244 [opener:1235;]: T_IF => if
	* token is an opening condition *
	* already processed, skipping *
	Process token 1270 on line 247 [opener:1235;]: T_WHITESPACE => \n
	Process token 1271 on line 248 [opener:1235;]: T_WHITESPACE =>     
	Process token 1272 on line 248 [opener:1235;]: T_BREAK => break
	=> Found scope closer (1272:T_BREAK) for 1232:T_CASE
	Process token 1236 on line 242 [opener:1216;]: T_WHITESPACE => \n
	Process token 1237 on line 243 [opener:1216;]: T_WHITESPACE =>     
	Process token 1238 on line 243 [opener:1216;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 1239 on line 243 [opener:1216;]: T_WHITESPACE =>  
	Process token 1240 on line 243 [opener:1216;]: T_CONSTANT_ENCAPSED_STRING => '3'
	Process token 1241 on line 243 [opener:1216;]: T_COLON => :
	Process token 1242 on line 243 [opener:1216;]: T_WHITESPACE => \n
	Process token 1243 on line 244 [opener:1216;]: T_WHITESPACE =>         
	Process token 1244 on line 244 [opener:1216;]: T_IF => if
	* token is an opening condition *
	* already processed, skipping *
	Process token 1270 on line 247 [opener:1216;]: T_WHITESPACE => \n
	Process token 1271 on line 248 [opener:1216;]: T_WHITESPACE =>     
	Process token 1272 on line 248 [opener:1216;]: T_BREAK => break
	=> Found scope closer (1272:T_BREAK) for 1213:T_CASE
	Process token 1217 on line 238 [opener:1210;]: T_WHITESPACE => \n
	Process token 1218 on line 239 [opener:1210;]: T_WHITESPACE =>         
	Process token 1219 on line 239 [opener:1210;]: T_GOTO => goto
	Process token 1220 on line 239 [opener:1210;]: T_WHITESPACE =>  
	Process token 1221 on line 239 [opener:1210;]: T_STRING => end
	Process token 1222 on line 239 [opener:1210;]: T_SEMICOLON => ;
	Process token 1223 on line 239 [opener:1210;]: T_WHITESPACE => \n
	Process token 1224 on line 240 [opener:1210;]: T_WHITESPACE =>         
	Process token 1225 on line 240 [opener:1210;]: T_ECHO => echo
	Process token 1226 on line 240 [opener:1210;]: T_WHITESPACE =>  
	Process token 1227 on line 240 [opener:1210;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token 1228 on line 240 [opener:1210;]: T_SEMICOLON => ;
	Process token 1229 on line 240 [opener:1210;]: T_WHITESPACE => \n
	Process token 1230 on line 241 [opener:1210;]: T_WHITESPACE => \n
	Process token 1231 on line 242 [opener:1210;]: T_WHITESPACE =>     
	Process token 1232 on line 242 [opener:1210;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 1233 on line 242 [opener:1210;]: T_WHITESPACE =>  
	Process token 1234 on line 242 [opener:1210;]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token 1235 on line 242 [opener:1210;]: T_COLON => :
	Process token 1236 on line 242 [opener:1210;]: T_WHITESPACE => \n
	Process token 1237 on line 243 [opener:1210;]: T_WHITESPACE =>     
	Process token 1238 on line 243 [opener:1210;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 1239 on line 243 [opener:1210;]: T_WHITESPACE =>  
	Process token 1240 on line 243 [opener:1210;]: T_CONSTANT_ENCAPSED_STRING => '3'
	Process token 1241 on line 243 [opener:1210;]: T_COLON => :
	Process token 1242 on line 243 [opener:1210;]: T_WHITESPACE => \n
	Process token 1243 on line 244 [opener:1210;]: T_WHITESPACE =>         
	Process token 1244 on line 244 [opener:1210;]: T_IF => if
	* token is an opening condition *
	* already processed, skipping *
	Process token 1270 on line 247 [opener:1210;]: T_WHITESPACE => \n
	Process token 1271 on line 248 [opener:1210;]: T_WHITESPACE =>     
	Process token 1272 on line 248 [opener:1210;]: T_BREAK => break
	Process token 1273 on line 248 [opener:1210;]: T_SEMICOLON => ;
	Process token 1274 on line 248 [opener:1210;]: T_WHITESPACE => \n
	Process token 1275 on line 249 [opener:1210;]: T_WHITESPACE =>     
	Process token 1276 on line 249 [opener:1210;]: T_DEFAULT => default
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 1276 with depth 1
	Process token 1277 on line 249 []: T_COLON => :
	=> Found scope opener for 1276:T_DEFAULT
	Process token 1278 on line 249 [opener:1277;]: T_WHITESPACE => \n
	Process token 1279 on line 250 [opener:1277;]: T_WHITESPACE =>         
	Process token 1280 on line 250 [opener:1277;]: T_GOTO => goto
	Process token 1281 on line 250 [opener:1277;]: T_WHITESPACE =>  
	Process token 1282 on line 250 [opener:1277;]: T_STRING => end
	Process token 1283 on line 250 [opener:1277;]: T_SEMICOLON => ;
	Process token 1284 on line 250 [opener:1277;]: T_WHITESPACE => \n
	Process token 1285 on line 251 [opener:1277;]: T_WHITESPACE => \n
	Process token 1286 on line 252 [opener:1277;]: T_WHITESPACE =>         
	Process token 1287 on line 252 [opener:1277;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 1287 with depth 2
		Process token 1288 on line 252 []: T_WHITESPACE =>  
		Process token 1289 on line 252 []: T_OPEN_PARENTHESIS => (
		Process token 1290 on line 252 []: T_VARIABLE => $something
		Process token 1291 on line 252 []: T_WHITESPACE =>  
		Process token 1292 on line 252 []: T_IS_IDENTICAL => ===
		Process token 1293 on line 252 []: T_WHITESPACE =>  
		Process token 1294 on line 252 []: T_TRUE => true
		Process token 1295 on line 252 []: T_CLOSE_PARENTHESIS => )
		Process token 1296 on line 252 []: T_WHITESPACE =>  
		Process token 1297 on line 252 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 1287:T_IF
		Process token 1298 on line 252 [opener:1297;]: T_WHITESPACE => \n
		Process token 1299 on line 253 [opener:1297;]: T_WHITESPACE =>             
		Process token 1300 on line 253 [opener:1297;]: T_GOTO => goto
		Process token 1301 on line 253 [opener:1297;]: T_WHITESPACE =>  
		Process token 1302 on line 253 [opener:1297;]: T_STRING => end
		Process token 1303 on line 253 [opener:1297;]: T_SEMICOLON => ;
		Process token 1304 on line 253 [opener:1297;]: T_WHITESPACE => \n
		Process token 1305 on line 254 [opener:1297;]: T_WHITESPACE =>             
		Process token 1306 on line 254 [opener:1297;]: T_ECHO => echo
		Process token 1307 on line 254 [opener:1297;]: T_WHITESPACE =>  
		Process token 1308 on line 254 [opener:1297;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
		Process token 1309 on line 254 [opener:1297;]: T_SEMICOLON => ;
		Process token 1310 on line 254 [opener:1297;]: T_WHITESPACE => \n
		Process token 1311 on line 255 [opener:1297;]: T_WHITESPACE =>         
		Process token 1312 on line 255 [opener:1297;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (1312:T_CLOSE_CURLY_BRACKET) for 1287:T_IF
	Process token 1313 on line 255 [opener:1277;]: T_WHITESPACE => \n
	Process token 1314 on line 256 [opener:1277;]: T_CLOSE_CURLY_BRACKET => }
	=> Found (unexpected) scope closer for 1276:T_DEFAULT
	Process token 1314 on line 256 [opener:1210;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (1314:T_CLOSE_CURLY_BRACKET) for 1204:T_SWITCH
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:5;lvl:0;]: T_OPEN_TAG => <?php\n
	Process token 1 on line 2 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 2 on line 2 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 2 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 4 on line 2 [col:9;len:4;lvl:0;]: T_VARIABLE => $var
	Process token 5 on line 2 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 6 on line 2 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 2 [col:15;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1:T_SWITCH
		* level increased *
		* token 1:T_SWITCH added to conditions array *
		Process token 8 on line 2 [col:16;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 9 on line 3 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 10 on line 3 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 11 on line 3 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 12 on line 3 [col:10;len:3;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '1'
		Process token 13 on line 3 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 10:T_CASE
			* level increased *
			* token 10:T_CASE added to conditions array *
			Process token 14 on line 3 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 15 on line 4 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 16 on line 4 [col:9;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 13:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 17 on line 4 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 18 on line 4 [col:16;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 19 on line 5 [col:1;len:8;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>         
		Process token 20 on line 5 [col:9;len:4;lvl:1;conds;T_SWITCH;]: T_ECHO => echo
		Process token 21 on line 5 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 22 on line 5 [col:14;len:4;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
		Process token 23 on line 5 [col:18;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 24 on line 5 [col:19;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 25 on line 6 [col:1;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 26 on line 7 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 27 on line 7 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 28 on line 7 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 29 on line 7 [col:10;len:3;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '2'
		Process token 30 on line 7 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 27:T_CASE
			* level increased *
			* token 27:T_CASE added to conditions array *
			Process token 31 on line 7 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 32 on line 8 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 33 on line 8 [col:5;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_CASE => case
			Process token 34 on line 8 [col:9;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 35 on line 8 [col:10;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_CONSTANT_ENCAPSED_STRING => '3'
			Process token 36 on line 8 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_COLON => :
			=> Found scope opener for 33:T_CASE
			* shared closer, cleaning up 27:T_CASE *
			* cleaned 33:T_CASE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 34:T_WHITESPACE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 35:T_CONSTANT_ENCAPSED_STRING *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 36:T_COLON *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* token 27:T_CASE removed from conditions array *
			* level decreased *
			* level increased *
			* token 33:T_CASE added to conditions array *
			Process token 37 on line 8 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 38 on line 9 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 39 on line 9 [col:9;len:2;lvl:2;conds;T_SWITCH,T_CASE;]: T_IF => if
			Process token 40 on line 9 [col:11;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 41 on line 9 [col:12;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
			Process token 42 on line 9 [col:13;len:10;lvl:2;conds;T_SWITCH,T_CASE;]: T_VARIABLE => $something
			Process token 43 on line 9 [col:23;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 44 on line 9 [col:24;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_IS_IDENTICAL => ===
			Process token 45 on line 9 [col:27;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 46 on line 9 [col:28;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_TRUE => true
			Process token 47 on line 9 [col:32;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
			Process token 48 on line 9 [col:33;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 49 on line 9 [col:34;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 39:T_IF
				* level increased *
				* token 39:T_IF added to conditions array *
				Process token 50 on line 9 [col:35;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
				Process token 51 on line 10 [col:1;len:12;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
				Process token 52 on line 10 [col:13;len:5;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_BREAK => break
				Process token 53 on line 10 [col:18;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_SEMICOLON => ;
				Process token 54 on line 10 [col:19;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
				Process token 55 on line 11 [col:1;len:12;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
				Process token 56 on line 11 [col:13;len:4;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_ECHO => echo
				Process token 57 on line 11 [col:17;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>  
				Process token 58 on line 11 [col:18;len:4;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
				Process token 59 on line 11 [col:22;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_SEMICOLON => ;
				Process token 60 on line 11 [col:23;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
				Process token 61 on line 12 [col:1;len:8;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>         
				Process token 62 on line 12 [col:9;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 49:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 63 on line 12 [col:10;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 64 on line 13 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 65 on line 13 [col:5;len:5;lvl:2;conds;T_SWITCH,T_CASE;]: T_BREAK => break
			=> Found scope closer for 36:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 66 on line 13 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 67 on line 13 [col:11;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 68 on line 14 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 69 on line 14 [col:5;len:7;lvl:1;conds;T_SWITCH;]: T_DEFAULT => default
		Process token 70 on line 14 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 69:T_DEFAULT
			* level increased *
			* token 69:T_DEFAULT added to conditions array *
			Process token 71 on line 14 [col:13;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 72 on line 15 [col:1;len:8;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
			Process token 73 on line 15 [col:9;len:6;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_RETURN => return
			=> Found scope closer for 70:T_COLON
			* token T_DEFAULT removed from conditions array *
			* level decreased *
		Process token 74 on line 15 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 75 on line 15 [col:16;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 76 on line 16 [col:1;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 77 on line 17 [col:1;len:8;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>         
		Process token 78 on line 17 [col:9;len:2;lvl:1;conds;T_SWITCH;]: T_IF => if
		Process token 79 on line 17 [col:11;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 80 on line 17 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_OPEN_PARENTHESIS => (
		Process token 81 on line 17 [col:13;len:10;lvl:1;conds;T_SWITCH;]: T_VARIABLE => $something
		Process token 82 on line 17 [col:23;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 83 on line 17 [col:24;len:3;lvl:1;conds;T_SWITCH;]: T_IS_IDENTICAL => ===
		Process token 84 on line 17 [col:27;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 85 on line 17 [col:28;len:4;lvl:1;conds;T_SWITCH;]: T_TRUE => true
		Process token 86 on line 17 [col:32;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_PARENTHESIS => )
		Process token 87 on line 17 [col:33;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 88 on line 17 [col:34;len:1;lvl:1;conds;T_SWITCH;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 78:T_IF
			* level increased *
			* token 78:T_IF added to conditions array *
			Process token 89 on line 17 [col:35;len:0;lvl:2;conds;T_SWITCH,T_IF;]: T_WHITESPACE => \n
			Process token 90 on line 18 [col:1;len:12;lvl:2;conds;T_SWITCH,T_IF;]: T_WHITESPACE =>             
			Process token 91 on line 18 [col:13;len:5;lvl:2;conds;T_SWITCH,T_IF;]: T_BREAK => break
			Process token 92 on line 18 [col:18;len:1;lvl:2;conds;T_SWITCH,T_IF;]: T_SEMICOLON => ;
			Process token 93 on line 18 [col:19;len:0;lvl:2;conds;T_SWITCH,T_IF;]: T_WHITESPACE => \n
			Process token 94 on line 19 [col:1;len:12;lvl:2;conds;T_SWITCH,T_IF;]: T_WHITESPACE =>             
			Process token 95 on line 19 [col:13;len:4;lvl:2;conds;T_SWITCH,T_IF;]: T_ECHO => echo
			Process token 96 on line 19 [col:17;len:1;lvl:2;conds;T_SWITCH,T_IF;]: T_WHITESPACE =>  
			Process token 97 on line 19 [col:18;len:4;lvl:2;conds;T_SWITCH,T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
			Process token 98 on line 19 [col:22;len:1;lvl:2;conds;T_SWITCH,T_IF;]: T_SEMICOLON => ;
			Process token 99 on line 19 [col:23;len:0;lvl:2;conds;T_SWITCH,T_IF;]: T_WHITESPACE => \n
			Process token 100 on line 20 [col:1;len:8;lvl:2;conds;T_SWITCH,T_IF;]: T_WHITESPACE =>         
			Process token 101 on line 20 [col:9;len:1;lvl:2;conds;T_SWITCH,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 88:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 102 on line 20 [col:10;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 103 on line 21 [col:1;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 104 on line 22 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 7:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 105 on line 22 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 106 on line 23 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 107 on line 24 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 108 on line 24 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 109 on line 24 [col:10;len:10;lvl:0;]: T_STRING => myFunction
	Process token 110 on line 24 [col:20;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 111 on line 24 [col:21;len:4;lvl:0;]: T_VARIABLE => $var
	Process token 112 on line 24 [col:25;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 113 on line 24 [col:26;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 114 on line 25 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 107:T_FUNCTION
		* level increased *
		* token 107:T_FUNCTION added to conditions array *
		Process token 115 on line 25 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 116 on line 26 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 117 on line 26 [col:5;len:2;lvl:1;conds;T_FUNCTION;]: T_IF => if
		Process token 118 on line 26 [col:7;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 119 on line 26 [col:8;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 120 on line 26 [col:9;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $something
		Process token 121 on line 26 [col:19;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 122 on line 26 [col:20;len:3;lvl:1;conds;T_FUNCTION;]: T_IS_IDENTICAL => ===
		Process token 123 on line 26 [col:23;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 124 on line 26 [col:24;len:4;lvl:1;conds;T_FUNCTION;]: T_TRUE => TRUE
		Process token 125 on line 26 [col:28;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 126 on line 26 [col:29;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 127 on line 26 [col:30;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 117:T_IF
			* level increased *
			* token 117:T_IF added to conditions array *
			Process token 128 on line 26 [col:31;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 129 on line 27 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>         
			Process token 130 on line 27 [col:9;len:6;lvl:2;conds;T_FUNCTION,T_IF;]: T_RETURN => return
			Process token 131 on line 27 [col:15;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_SEMICOLON => ;
			Process token 132 on line 27 [col:16;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 133 on line 28 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>         
			Process token 134 on line 28 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_ECHO => echo
			Process token 135 on line 28 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>  
			Process token 136 on line 28 [col:14;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
			Process token 137 on line 28 [col:18;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_SEMICOLON => ;
			Process token 138 on line 28 [col:19;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 139 on line 29 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>     
			Process token 140 on line 29 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 127:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 141 on line 29 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 142 on line 30 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 143 on line 31 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 144 on line 31 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 145 on line 31 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 146 on line 31 [col:12;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 147 on line 32 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 148 on line 32 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 149 on line 32 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 150 on line 32 [col:12;len:5;lvl:1;conds;T_FUNCTION;]: T_FALSE => FALSE
		Process token 151 on line 32 [col:17;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 152 on line 32 [col:18;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 153 on line 33 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 154 on line 33 [col:5;len:2;lvl:1;conds;T_FUNCTION;]: T_IF => if
		Process token 155 on line 33 [col:7;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 156 on line 33 [col:8;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 157 on line 33 [col:9;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $something
		Process token 158 on line 33 [col:19;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 159 on line 33 [col:20;len:3;lvl:1;conds;T_FUNCTION;]: T_IS_IDENTICAL => ===
		Process token 160 on line 33 [col:23;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 161 on line 33 [col:24;len:4;lvl:1;conds;T_FUNCTION;]: T_TRUE => TRUE
		Process token 162 on line 33 [col:28;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 163 on line 33 [col:29;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 164 on line 33 [col:30;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 154:T_IF
			* level increased *
			* token 154:T_IF added to conditions array *
			Process token 165 on line 33 [col:31;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 166 on line 34 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>         
			Process token 167 on line 34 [col:9;len:6;lvl:2;conds;T_FUNCTION,T_IF;]: T_RETURN => return
			Process token 168 on line 34 [col:15;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>  
			Process token 169 on line 34 [col:16;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_TRUE => TRUE
			Process token 170 on line 34 [col:20;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_SEMICOLON => ;
			Process token 171 on line 34 [col:21;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 172 on line 35 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>     
			Process token 173 on line 35 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 164:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 174 on line 35 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 175 on line 36 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 176 on line 37 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 114:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 177 on line 37 [col:2;len:18;lvl:0;]: T_COMMENT => //end myFunction()\n
	Process token 178 on line 38 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 179 on line 39 [col:1;len:7;lvl:0;]: T_FOREACH => foreach
	Process token 180 on line 39 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 181 on line 39 [col:9;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 182 on line 39 [col:10;len:5;lvl:0;]: T_VARIABLE => $vars
	Process token 183 on line 39 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 184 on line 39 [col:16;len:2;lvl:0;]: T_AS => as
	Process token 185 on line 39 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 186 on line 39 [col:19;len:4;lvl:0;]: T_VARIABLE => $var
	Process token 187 on line 39 [col:23;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 188 on line 39 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 189 on line 39 [col:25;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 179:T_FOREACH
		* level increased *
		* token 179:T_FOREACH added to conditions array *
		Process token 190 on line 39 [col:26;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 191 on line 40 [col:1;len:4;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>     
		Process token 192 on line 40 [col:5;len:2;lvl:1;conds;T_FOREACH;]: T_IF => if
		Process token 193 on line 40 [col:7;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 194 on line 40 [col:8;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_PARENTHESIS => (
		Process token 195 on line 40 [col:9;len:10;lvl:1;conds;T_FOREACH;]: T_VARIABLE => $something
		Process token 196 on line 40 [col:19;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 197 on line 40 [col:20;len:3;lvl:1;conds;T_FOREACH;]: T_IS_IDENTICAL => ===
		Process token 198 on line 40 [col:23;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 199 on line 40 [col:24;len:4;lvl:1;conds;T_FOREACH;]: T_TRUE => TRUE
		Process token 200 on line 40 [col:28;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_PARENTHESIS => )
		Process token 201 on line 40 [col:29;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 202 on line 40 [col:30;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 192:T_IF
			* level increased *
			* token 192:T_IF added to conditions array *
			Process token 203 on line 40 [col:31;len:0;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE => \n
			Process token 204 on line 41 [col:1;len:8;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE =>         
			Process token 205 on line 41 [col:9;len:8;lvl:2;conds;T_FOREACH,T_IF;]: T_CONTINUE => continue
			Process token 206 on line 41 [col:17;len:1;lvl:2;conds;T_FOREACH,T_IF;]: T_SEMICOLON => ;
			Process token 207 on line 41 [col:18;len:0;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE => \n
			Process token 208 on line 42 [col:1;len:8;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE =>         
			Process token 209 on line 42 [col:9;len:5;lvl:2;conds;T_FOREACH,T_IF;]: T_BREAK => break
			Process token 210 on line 42 [col:14;len:1;lvl:2;conds;T_FOREACH,T_IF;]: T_SEMICOLON => ;
			Process token 211 on line 42 [col:15;len:0;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE => \n
			Process token 212 on line 43 [col:1;len:4;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE =>     
			Process token 213 on line 43 [col:5;len:1;lvl:2;conds;T_FOREACH,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 202:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 214 on line 43 [col:6;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 215 on line 43 [col:7;len:4;lvl:1;conds;T_FOREACH;]: T_ELSE => else
		Process token 216 on line 43 [col:11;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 217 on line 43 [col:12;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 215:T_ELSE
			* level increased *
			* token 215:T_ELSE added to conditions array *
			Process token 218 on line 43 [col:13;len:0;lvl:2;conds;T_FOREACH,T_ELSE;]: T_WHITESPACE => \n
			Process token 219 on line 44 [col:1;len:8;lvl:2;conds;T_FOREACH,T_ELSE;]: T_WHITESPACE =>         
			Process token 220 on line 44 [col:9;len:8;lvl:2;conds;T_FOREACH,T_ELSE;]: T_CONTINUE => continue
			Process token 221 on line 44 [col:17;len:1;lvl:2;conds;T_FOREACH,T_ELSE;]: T_SEMICOLON => ;
			Process token 222 on line 44 [col:18;len:0;lvl:2;conds;T_FOREACH,T_ELSE;]: T_WHITESPACE => \n
			Process token 223 on line 45 [col:1;len:8;lvl:2;conds;T_FOREACH,T_ELSE;]: T_WHITESPACE =>         
			Process token 224 on line 45 [col:9;len:4;lvl:2;conds;T_FOREACH,T_ELSE;]: T_ECHO => echo
			Process token 225 on line 45 [col:13;len:1;lvl:2;conds;T_FOREACH,T_ELSE;]: T_WHITESPACE =>  
			Process token 226 on line 45 [col:14;len:4;lvl:2;conds;T_FOREACH,T_ELSE;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
			Process token 227 on line 45 [col:18;len:1;lvl:2;conds;T_FOREACH,T_ELSE;]: T_SEMICOLON => ;
			Process token 228 on line 45 [col:19;len:0;lvl:2;conds;T_FOREACH,T_ELSE;]: T_WHITESPACE => \n
			Process token 229 on line 46 [col:1;len:4;lvl:2;conds;T_FOREACH,T_ELSE;]: T_WHITESPACE =>     
			Process token 230 on line 46 [col:5;len:1;lvl:2;conds;T_FOREACH,T_ELSE;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 217:T_OPEN_CURLY_BRACKET
			* token T_ELSE removed from conditions array *
			* level decreased *
		Process token 231 on line 46 [col:6;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 232 on line 47 [col:1;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 233 on line 48 [col:1;len:4;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>     
		Process token 234 on line 48 [col:5;len:4;lvl:1;conds;T_FOREACH;]: T_ECHO => echo
		Process token 235 on line 48 [col:9;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 236 on line 48 [col:10;len:4;lvl:1;conds;T_FOREACH;]: T_VARIABLE => $var
		Process token 237 on line 48 [col:14;len:1;lvl:1;conds;T_FOREACH;]: T_STRING_CONCAT => .
		Process token 238 on line 48 [col:15;len:4;lvl:1;conds;T_FOREACH;]: T_CONSTANT_ENCAPSED_STRING => "\n"
		Process token 239 on line 48 [col:19;len:1;lvl:1;conds;T_FOREACH;]: T_SEMICOLON => ;
		Process token 240 on line 48 [col:20;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 241 on line 49 [col:1;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 189:T_OPEN_CURLY_BRACKET
		* token T_FOREACH removed from conditions array *
		* level decreased *
	Process token 242 on line 49 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 243 on line 50 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 244 on line 51 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 245 on line 51 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 246 on line 51 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 247 on line 51 [col:9;len:13;lvl:0;]: T_VARIABLE => $lowerVarType
	Process token 248 on line 51 [col:22;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 249 on line 51 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 250 on line 51 [col:24;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 244:T_SWITCH
		* level increased *
		* token 244:T_SWITCH added to conditions array *
		Process token 251 on line 51 [col:25;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 252 on line 52 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 253 on line 52 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 254 on line 52 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 255 on line 52 [col:10;len:6;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'bool'
		Process token 256 on line 52 [col:16;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 253:T_CASE
			* level increased *
			* token 253:T_CASE added to conditions array *
			Process token 257 on line 52 [col:17;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 258 on line 53 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 259 on line 53 [col:9;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 256:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 260 on line 53 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 261 on line 53 [col:16;len:9;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'boolean'
		Process token 262 on line 53 [col:25;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 263 on line 53 [col:26;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 264 on line 54 [col:1;len:8;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>         
		Process token 265 on line 54 [col:9;len:4;lvl:1;conds;T_SWITCH;]: T_ECHO => echo
		Process token 266 on line 54 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 267 on line 54 [col:14;len:4;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
		Process token 268 on line 54 [col:18;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 269 on line 54 [col:19;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 270 on line 55 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 271 on line 55 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 272 on line 55 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 273 on line 55 [col:10;len:8;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'double'
		Process token 274 on line 55 [col:18;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 271:T_CASE
			* level increased *
			* token 271:T_CASE added to conditions array *
			Process token 275 on line 55 [col:19;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 276 on line 56 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 277 on line 56 [col:5;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_CASE => case
			Process token 278 on line 56 [col:9;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 279 on line 56 [col:10;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_CONSTANT_ENCAPSED_STRING => 'real'
			Process token 280 on line 56 [col:16;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_COLON => :
			=> Found scope opener for 277:T_CASE
			* shared closer, cleaning up 271:T_CASE *
			* cleaned 277:T_CASE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 278:T_WHITESPACE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 279:T_CONSTANT_ENCAPSED_STRING *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 280:T_COLON *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* token 271:T_CASE removed from conditions array *
			* level decreased *
			* level increased *
			* token 277:T_CASE added to conditions array *
			Process token 281 on line 56 [col:17;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 282 on line 57 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 283 on line 57 [col:9;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 280:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 284 on line 57 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 285 on line 57 [col:16;len:7;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'float'
		Process token 286 on line 57 [col:23;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 287 on line 57 [col:24;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 288 on line 58 [col:1;len:8;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>         
		Process token 289 on line 58 [col:9;len:4;lvl:1;conds;T_SWITCH;]: T_ECHO => echo
		Process token 290 on line 58 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 291 on line 58 [col:14;len:4;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
		Process token 292 on line 58 [col:18;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 293 on line 58 [col:19;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 294 on line 59 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 250:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 295 on line 59 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 296 on line 60 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 297 on line 61 [col:1;len:5;lvl:0;]: T_WHILE => while
	Process token 298 on line 61 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 299 on line 61 [col:7;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 300 on line 61 [col:8;len:5;lvl:0;]: T_VARIABLE => $line
	Process token 301 on line 61 [col:13;len:1;lvl:0;]: T_EQUAL => =
	Process token 302 on line 61 [col:14;len:5;lvl:0;]: T_STRING => fgets
	Process token 303 on line 61 [col:19;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 304 on line 61 [col:20;len:3;lvl:0;]: T_VARIABLE => $fp
	Process token 305 on line 61 [col:23;len:1;lvl:0;]: T_COMMA => ,
	Process token 306 on line 61 [col:24;len:1;lvl:0;]: T_LNUMBER => 2
	Process token 307 on line 61 [col:25;len:1;lvl:0;]: T_MULTIPLY => *
	Process token 308 on line 61 [col:26;len:4;lvl:0;]: T_LNUMBER => 1024
	Process token 309 on line 61 [col:30;len:1;lvl:0;]: T_MULTIPLY => *
	Process token 310 on line 61 [col:31;len:4;lvl:0;]: T_LNUMBER => 1024
	Process token 311 on line 61 [col:35;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 312 on line 61 [col:36;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 313 on line 61 [col:37;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 314 on line 62 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 297:T_WHILE
		* level increased *
		* token 297:T_WHILE added to conditions array *
		Process token 315 on line 62 [col:2;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 316 on line 63 [col:1;len:4;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>     
		Process token 317 on line 63 [col:5;len:2;lvl:1;conds;T_WHILE;]: T_IF => if
		Process token 318 on line 63 [col:7;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 319 on line 63 [col:8;len:1;lvl:1;conds;T_WHILE;]: T_OPEN_PARENTHESIS => (
		Process token 320 on line 63 [col:9;len:1;lvl:1;conds;T_WHILE;]: T_BOOLEAN_NOT => !
		Process token 321 on line 63 [col:10;len:10;lvl:1;conds;T_WHILE;]: T_STRING => preg_match
		Process token 322 on line 63 [col:20;len:1;lvl:1;conds;T_WHILE;]: T_OPEN_PARENTHESIS => (
		Process token 323 on line 63 [col:21;len:18;lvl:1;conds;T_WHILE;]: T_CONSTANT_ENCAPSED_STRING => "/^<([a-z0-9_]+)/"
		Process token 324 on line 63 [col:39;len:1;lvl:1;conds;T_WHILE;]: T_COMMA => ,
		Process token 325 on line 63 [col:40;len:5;lvl:1;conds;T_WHILE;]: T_VARIABLE => $line
		Process token 326 on line 63 [col:45;len:1;lvl:1;conds;T_WHILE;]: T_COMMA => ,
		Process token 327 on line 63 [col:46;len:8;lvl:1;conds;T_WHILE;]: T_VARIABLE => $matches
		Process token 328 on line 63 [col:54;len:1;lvl:1;conds;T_WHILE;]: T_CLOSE_PARENTHESIS => )
		Process token 329 on line 63 [col:55;len:1;lvl:1;conds;T_WHILE;]: T_CLOSE_PARENTHESIS => )
		Process token 330 on line 63 [col:56;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 331 on line 64 [col:1;len:4;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>     
		Process token 332 on line 64 [col:5;len:8;lvl:1;conds;T_WHILE;]: T_CONTINUE => continue
		Process token 333 on line 64 [col:13;len:1;lvl:1;conds;T_WHILE;]: T_SEMICOLON => ;
		Process token 334 on line 64 [col:14;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 335 on line 65 [col:1;len:4;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>     
		Process token 336 on line 65 [col:5;len:5;lvl:1;conds;T_WHILE;]: T_PRINT => print
		Process token 337 on line 65 [col:10;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 338 on line 65 [col:11;len:5;lvl:1;conds;T_WHILE;]: T_VARIABLE => $line
		Process token 339 on line 65 [col:16;len:1;lvl:1;conds;T_WHILE;]: T_SEMICOLON => ;
		Process token 340 on line 65 [col:17;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 341 on line 66 [col:1;len:1;lvl:1;conds;T_WHILE;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 314:T_OPEN_CURLY_BRACKET
		* token T_WHILE removed from conditions array *
		* level decreased *
	Process token 342 on line 66 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 343 on line 67 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 344 on line 68 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 345 on line 68 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 346 on line 68 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 347 on line 68 [col:9;len:4;lvl:0;]: T_VARIABLE => $var
	Process token 348 on line 68 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 349 on line 68 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 350 on line 68 [col:15;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 344:T_SWITCH
		* level increased *
		* token 344:T_SWITCH added to conditions array *
		Process token 351 on line 68 [col:16;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 352 on line 69 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 353 on line 69 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 354 on line 69 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 355 on line 69 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 1
		Process token 356 on line 69 [col:11;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 353:T_CASE
			* level increased *
			* token 353:T_CASE added to conditions array *
			Process token 357 on line 69 [col:12;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 358 on line 70 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 359 on line 70 [col:9;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_ECHO => echo
			Process token 360 on line 70 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 361 on line 70 [col:14;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_CONSTANT_ENCAPSED_STRING => '1'
			Process token 362 on line 70 [col:17;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_SEMICOLON => ;
			Process token 363 on line 70 [col:18;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 364 on line 71 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 365 on line 71 [col:5;len:5;lvl:2;conds;T_SWITCH,T_CASE;]: T_BREAK => break
			=> Found scope closer for 356:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 366 on line 71 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 367 on line 71 [col:11;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 368 on line 72 [col:1;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 369 on line 73 [col:1;len:8;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>         
		Process token 370 on line 73 [col:9;len:4;lvl:1;conds;T_SWITCH;]: T_ECHO => echo
		Process token 371 on line 73 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 372 on line 73 [col:14;len:16;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'non-executable'
		Process token 373 on line 73 [col:30;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 374 on line 73 [col:31;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 375 on line 74 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 376 on line 74 [col:5;len:7;lvl:1;conds;T_SWITCH;]: T_DEFAULT => default
		Process token 377 on line 74 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 376:T_DEFAULT
			* level increased *
			* token 376:T_DEFAULT added to conditions array *
			Process token 378 on line 74 [col:13;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 379 on line 75 [col:1;len:8;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
			Process token 380 on line 75 [col:9;len:4;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_ECHO => echo
			Process token 381 on line 75 [col:13;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
			Process token 382 on line 75 [col:14;len:3;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_CONSTANT_ENCAPSED_STRING => '2'
			Process token 383 on line 75 [col:17;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_SEMICOLON => ;
			Process token 384 on line 75 [col:18;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 385 on line 76 [col:1;len:4;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>     
			Process token 386 on line 76 [col:5;len:5;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_BREAK => break
			=> Found scope closer for 377:T_COLON
			* token T_DEFAULT removed from conditions array *
			* level decreased *
		Process token 387 on line 76 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 388 on line 76 [col:11;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 389 on line 77 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 350:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 390 on line 77 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 391 on line 78 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 392 on line 79 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 393 on line 79 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 394 on line 79 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 395 on line 79 [col:9;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 396 on line 79 [col:10;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 397 on line 79 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 398 on line 79 [col:12;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 392:T_SWITCH
		* level increased *
		* token 392:T_SWITCH added to conditions array *
		Process token 399 on line 79 [col:13;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 400 on line 80 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 401 on line 80 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 402 on line 80 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 403 on line 80 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 1
		Process token 404 on line 80 [col:11;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 401:T_CASE
			* level increased *
			* token 401:T_CASE added to conditions array *
			Process token 405 on line 80 [col:12;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 406 on line 81 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 407 on line 81 [col:9;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 404:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 408 on line 81 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 409 on line 81 [col:16;len:3;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '1'
		Process token 410 on line 81 [col:19;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 411 on line 81 [col:20;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 412 on line 82 [col:1;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 413 on line 83 [col:1;len:8;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>         
		Process token 414 on line 83 [col:9;len:4;lvl:1;conds;T_SWITCH;]: T_ECHO => echo
		Process token 415 on line 83 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 416 on line 83 [col:14;len:16;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'non-executable'
		Process token 417 on line 83 [col:30;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 418 on line 83 [col:31;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 419 on line 84 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 420 on line 84 [col:5;len:7;lvl:1;conds;T_SWITCH;]: T_DEFAULT => default
		Process token 421 on line 84 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 420:T_DEFAULT
			* level increased *
			* token 420:T_DEFAULT added to conditions array *
			Process token 422 on line 84 [col:13;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 423 on line 85 [col:1;len:4;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>     
			Process token 424 on line 85 [col:5;len:5;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_BREAK => break
			=> Found scope closer for 421:T_COLON
			* token T_DEFAULT removed from conditions array *
			* level decreased *
		Process token 425 on line 85 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 426 on line 85 [col:11;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 427 on line 86 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 398:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 428 on line 86 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 429 on line 87 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 430 on line 88 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 431 on line 88 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 432 on line 88 [col:10;len:10;lvl:0;]: T_STRING => myFunction
	Process token 433 on line 88 [col:20;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 434 on line 88 [col:21;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 435 on line 88 [col:22;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 436 on line 89 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 430:T_FUNCTION
		* level increased *
		* token 430:T_FUNCTION added to conditions array *
		Process token 437 on line 89 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 438 on line 90 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 439 on line 90 [col:5;len:2;lvl:1;conds;T_FUNCTION;]: T_IF => if
		Process token 440 on line 90 [col:7;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 441 on line 90 [col:8;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 442 on line 90 [col:9;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $something
		Process token 443 on line 90 [col:19;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 444 on line 90 [col:20;len:3;lvl:1;conds;T_FUNCTION;]: T_IS_IDENTICAL => ===
		Process token 445 on line 90 [col:23;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 446 on line 90 [col:24;len:4;lvl:1;conds;T_FUNCTION;]: T_TRUE => TRUE
		Process token 447 on line 90 [col:28;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 448 on line 90 [col:29;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 449 on line 90 [col:30;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 439:T_IF
			* level increased *
			* token 439:T_IF added to conditions array *
			Process token 450 on line 90 [col:31;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 451 on line 91 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>         
			Process token 452 on line 91 [col:9;len:6;lvl:2;conds;T_FUNCTION,T_IF;]: T_RETURN => return
			Process token 453 on line 91 [col:15;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_SEMICOLON => ;
			Process token 454 on line 91 [col:16;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 455 on line 92 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>     
			Process token 456 on line 92 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 449:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 457 on line 92 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 458 on line 93 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 459 on line 94 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 460 on line 94 [col:5;len:4;lvl:1;conds;T_FUNCTION;]: T_ECHO => echo
		Process token 461 on line 94 [col:9;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 462 on line 94 [col:10;len:5;lvl:1;conds;T_FUNCTION;]: T_CONSTANT_ENCAPSED_STRING => 'foo'
		Process token 463 on line 94 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 464 on line 94 [col:16;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 465 on line 95 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 466 on line 95 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 467 on line 95 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 468 on line 95 [col:12;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 469 on line 96 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 470 on line 97 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 436:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 471 on line 97 [col:2;len:18;lvl:0;]: T_COMMENT => //end myFunction()\n
	Process token 472 on line 98 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 473 on line 99 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 474 on line 99 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 475 on line 99 [col:10;len:10;lvl:0;]: T_STRING => myFunction
	Process token 476 on line 99 [col:20;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 477 on line 99 [col:21;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 478 on line 99 [col:22;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 479 on line 100 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 473:T_FUNCTION
		* level increased *
		* token 473:T_FUNCTION added to conditions array *
		Process token 480 on line 100 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 481 on line 101 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 482 on line 101 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 483 on line 101 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 484 on line 101 [col:12;len:6;lvl:1;conds;T_FUNCTION;]: T_STRING => uksort
		Process token 485 on line 101 [col:18;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 486 on line 101 [col:19;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 487 on line 102 [col:1;len:8;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>         
		Process token 488 on line 102 [col:9;len:6;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $array
		Process token 489 on line 102 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_COMMA => ,
		Process token 490 on line 102 [col:16;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 491 on line 103 [col:1;len:8;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>         
		Process token 492 on line 103 [col:9;len:8;lvl:1;conds;T_FUNCTION;]: T_FUNCTION => function
		Process token 493 on line 103 [col:17;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 494 on line 103 [col:18;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 495 on line 103 [col:19;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 496 on line 103 [col:20;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 492:T_FUNCTION
			* level increased *
			* token 492:T_FUNCTION added to conditions array *
			Process token 497 on line 103 [col:21;len:0;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 498 on line 104 [col:1;len:12;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_WHITESPACE =>             
			Process token 499 on line 104 [col:13;len:6;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_RETURN => return
			Process token 500 on line 104 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 501 on line 104 [col:20;len:7;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_STRING => mt_rand
			Process token 502 on line 104 [col:27;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_OPEN_PARENTHESIS => (
			Process token 503 on line 104 [col:28;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_MINUS => -
			Process token 504 on line 104 [col:29;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_LNUMBER => 1
			Process token 505 on line 104 [col:30;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_COMMA => ,
			Process token 506 on line 104 [col:31;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 507 on line 104 [col:32;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_LNUMBER => 1
			Process token 508 on line 104 [col:33;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
			Process token 509 on line 104 [col:34;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_SEMICOLON => ;
			Process token 510 on line 104 [col:35;len:0;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 511 on line 105 [col:1;len:12;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_WHITESPACE =>             
			Process token 512 on line 105 [col:13;len:4;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_ECHO => echo
			Process token 513 on line 105 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 514 on line 105 [col:18;len:6;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_CONSTANT_ENCAPSED_STRING => 'done'
			Process token 515 on line 105 [col:24;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_SEMICOLON => ;
			Process token 516 on line 105 [col:25;len:0;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 517 on line 106 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_WHITESPACE =>         
			Process token 518 on line 106 [col:9;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 496:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 519 on line 106 [col:10;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 520 on line 107 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 521 on line 107 [col:5;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 522 on line 107 [col:6;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 523 on line 107 [col:7;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 524 on line 108 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 525 on line 109 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 479:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 526 on line 109 [col:2;len:18;lvl:0;]: T_COMMENT => //end myFunction()\n
	Process token 527 on line 110 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 528 on line 111 [col:1;len:6;lvl:0;]: T_PUBLIC => public
	Process token 529 on line 111 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 530 on line 111 [col:8;len:6;lvl:0;]: T_STATIC => static
	Process token 531 on line 111 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 532 on line 111 [col:15;len:8;lvl:0;]: T_FUNCTION => function
	Process token 533 on line 111 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 534 on line 111 [col:24;len:17;lvl:0;]: T_STRING => thisCausesAnError
	Process token 535 on line 111 [col:41;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 536 on line 111 [col:42;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 537 on line 111 [col:43;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 538 on line 111 [col:44;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 532:T_FUNCTION
		* level increased *
		* token 532:T_FUNCTION added to conditions array *
		Process token 539 on line 111 [col:45;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 540 on line 112 [col:1;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 541 on line 112 [col:7;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 542 on line 112 [col:8;len:3;lvl:1;conds;T_FUNCTION;]: T_NEW => new
		Process token 543 on line 112 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 544 on line 112 [col:12;len:3;lvl:1;conds;T_FUNCTION;]: T_STRING => foo
		Process token 545 on line 112 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 546 on line 112 [col:16;len:8;lvl:1;conds;T_FUNCTION;]: T_FUNCTION => function
		Process token 547 on line 112 [col:24;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 548 on line 112 [col:25;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 549 on line 112 [col:26;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 550 on line 112 [col:27;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 546:T_FUNCTION
			* level increased *
			* token 546:T_FUNCTION added to conditions array *
			Process token 551 on line 112 [col:28;len:6;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_RETURN => return
			Process token 552 on line 112 [col:34;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 553 on line 112 [col:35;len:4;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_VARIABLE => $foo
			Process token 554 on line 112 [col:39;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_SEMICOLON => ;
			Process token 555 on line 112 [col:40;len:1;lvl:2;conds;T_FUNCTION,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 550:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 556 on line 112 [col:41;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 557 on line 113 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 558 on line 113 [col:2;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 559 on line 113 [col:3;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 560 on line 114 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 538:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 561 on line 114 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 562 on line 115 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 563 on line 116 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 564 on line 116 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 565 on line 116 [col:10;len:10;lvl:0;]: T_STRING => myFunction
	Process token 566 on line 116 [col:20;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 567 on line 116 [col:21;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 568 on line 116 [col:22;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 569 on line 117 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 563:T_FUNCTION
		* level increased *
		* token 563:T_FUNCTION added to conditions array *
		Process token 570 on line 117 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 571 on line 118 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 572 on line 118 [col:5;len:2;lvl:1;conds;T_FUNCTION;]: T_IF => if
		Process token 573 on line 118 [col:7;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 574 on line 118 [col:8;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 575 on line 118 [col:9;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $something
		Process token 576 on line 118 [col:19;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 577 on line 118 [col:20;len:3;lvl:1;conds;T_FUNCTION;]: T_IS_IDENTICAL => ===
		Process token 578 on line 118 [col:23;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 579 on line 118 [col:24;len:4;lvl:1;conds;T_FUNCTION;]: T_TRUE => TRUE
		Process token 580 on line 118 [col:28;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 581 on line 118 [col:29;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 582 on line 118 [col:30;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 572:T_IF
			* level increased *
			* token 572:T_IF added to conditions array *
			Process token 583 on line 118 [col:31;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 584 on line 119 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>         
			Process token 585 on line 119 [col:9;len:5;lvl:2;conds;T_FUNCTION,T_IF;]: T_THROW => throw
			Process token 586 on line 119 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>  
			Process token 587 on line 119 [col:15;len:3;lvl:2;conds;T_FUNCTION,T_IF;]: T_NEW => new
			Process token 588 on line 119 [col:18;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>  
			Process token 589 on line 119 [col:19;len:9;lvl:2;conds;T_FUNCTION,T_IF;]: T_STRING => Exception
			Process token 590 on line 119 [col:28;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_OPEN_PARENTHESIS => (
			Process token 591 on line 119 [col:29;len:11;lvl:2;conds;T_FUNCTION,T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'exception'
			Process token 592 on line 119 [col:40;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_CLOSE_PARENTHESIS => )
			Process token 593 on line 119 [col:41;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_SEMICOLON => ;
			Process token 594 on line 119 [col:42;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 595 on line 120 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>     
			Process token 596 on line 120 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 582:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 597 on line 120 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 598 on line 121 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 599 on line 122 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 600 on line 122 [col:5;len:5;lvl:1;conds;T_FUNCTION;]: T_THROW => throw
		Process token 601 on line 122 [col:10;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 602 on line 122 [col:11;len:3;lvl:1;conds;T_FUNCTION;]: T_NEW => new
		Process token 603 on line 122 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 604 on line 122 [col:15;len:9;lvl:1;conds;T_FUNCTION;]: T_STRING => Exception
		Process token 605 on line 122 [col:24;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 606 on line 122 [col:25;len:11;lvl:1;conds;T_FUNCTION;]: T_CONSTANT_ENCAPSED_STRING => 'exception'
		Process token 607 on line 122 [col:36;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 608 on line 122 [col:37;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 609 on line 122 [col:38;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 610 on line 123 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 611 on line 123 [col:5;len:4;lvl:1;conds;T_FUNCTION;]: T_ECHO => echo
		Process token 612 on line 123 [col:9;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 613 on line 123 [col:10;len:16;lvl:1;conds;T_FUNCTION;]: T_CONSTANT_ENCAPSED_STRING => 'non-executable'
		Process token 614 on line 123 [col:26;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 615 on line 123 [col:27;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 616 on line 124 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 569:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 617 on line 124 [col:2;len:18;lvl:0;]: T_COMMENT => //end myFunction()\n
	Process token 618 on line 125 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 619 on line 126 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 620 on line 126 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 621 on line 126 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 622 on line 126 [col:9;len:4;lvl:0;]: T_VARIABLE => $var
	Process token 623 on line 126 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 624 on line 126 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 625 on line 126 [col:15;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 619:T_SWITCH
		* level increased *
		* token 619:T_SWITCH added to conditions array *
		Process token 626 on line 126 [col:16;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 627 on line 127 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 628 on line 127 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 629 on line 127 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 630 on line 127 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 1
		Process token 631 on line 127 [col:11;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 628:T_CASE
			* level increased *
			* token 628:T_CASE added to conditions array *
			Process token 632 on line 127 [col:12;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 633 on line 127 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
			Process token 634 on line 127 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 635 on line 128 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 636 on line 128 [col:9;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 631:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 637 on line 128 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 638 on line 128 [col:16;len:3;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '1'
		Process token 639 on line 128 [col:19;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 640 on line 128 [col:20;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 641 on line 129 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 642 on line 129 [col:5;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		Process token 643 on line 129 [col:6;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 644 on line 130 [col:1;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 645 on line 131 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 646 on line 131 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 647 on line 131 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 648 on line 131 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 2
		Process token 649 on line 131 [col:11;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 646:T_CASE
			* level increased *
			* token 646:T_CASE added to conditions array *
			Process token 650 on line 131 [col:12;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 651 on line 131 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
			Process token 652 on line 131 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 653 on line 132 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 654 on line 132 [col:9;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 649:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 655 on line 132 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 656 on line 132 [col:16;len:3;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '2'
		Process token 657 on line 132 [col:19;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 658 on line 132 [col:20;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 659 on line 133 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 660 on line 133 [col:5;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		Process token 661 on line 133 [col:6;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 662 on line 134 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 625:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 663 on line 134 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 664 on line 135 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 665 on line 136 [col:1;len:7;lvl:0;]: T_STRING => defined
	Process token 666 on line 136 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 667 on line 136 [col:9;len:5;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'FOO'
	Process token 668 on line 136 [col:14;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 669 on line 136 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 670 on line 136 [col:16;len:2;lvl:0;]: T_LOGICAL_OR => or
	Process token 671 on line 136 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 672 on line 136 [col:19;len:3;lvl:0;]: T_EXIT => die
	Process token 673 on line 136 [col:22;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 674 on line 136 [col:23;len:7;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'error'
	Process token 675 on line 136 [col:30;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 676 on line 136 [col:31;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 677 on line 136 [col:32;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 678 on line 137 [col:1;len:7;lvl:0;]: T_STRING => defined
	Process token 679 on line 137 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 680 on line 137 [col:9;len:5;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'FOO'
	Process token 681 on line 137 [col:14;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 682 on line 137 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 683 on line 137 [col:16;len:2;lvl:0;]: T_BOOLEAN_OR => ||
	Process token 684 on line 137 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 685 on line 137 [col:19;len:3;lvl:0;]: T_EXIT => die
	Process token 686 on line 137 [col:22;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 687 on line 137 [col:23;len:7;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'error'
	Process token 688 on line 137 [col:30;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 689 on line 137 [col:31;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 690 on line 137 [col:32;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 691 on line 138 [col:1;len:9;lvl:0;]: T_INTERFACE => interface
	Process token 692 on line 138 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 693 on line 138 [col:11;len:11;lvl:0;]: T_STRING => myInterface
	Process token 694 on line 138 [col:22;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 695 on line 138 [col:23;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 691:T_INTERFACE
		* level increased *
		* token 691:T_INTERFACE added to conditions array *
		Process token 696 on line 138 [col:24;len:0;lvl:1;conds;T_INTERFACE;]: T_WHITESPACE => \n
		Process token 697 on line 139 [col:1;len:4;lvl:1;conds;T_INTERFACE;]: T_WHITESPACE =>     
		Process token 698 on line 139 [col:5;len:8;lvl:1;conds;T_INTERFACE;]: T_FUNCTION => function
		Process token 699 on line 139 [col:13;len:1;lvl:1;conds;T_INTERFACE;]: T_WHITESPACE =>  
		Process token 700 on line 139 [col:14;len:6;lvl:1;conds;T_INTERFACE;]: T_STRING => myFunc
		Process token 701 on line 139 [col:20;len:1;lvl:1;conds;T_INTERFACE;]: T_OPEN_PARENTHESIS => (
		Process token 702 on line 139 [col:21;len:1;lvl:1;conds;T_INTERFACE;]: T_CLOSE_PARENTHESIS => )
		Process token 703 on line 139 [col:22;len:1;lvl:1;conds;T_INTERFACE;]: T_SEMICOLON => ;
		Process token 704 on line 139 [col:23;len:0;lvl:1;conds;T_INTERFACE;]: T_WHITESPACE => \n
		Process token 705 on line 140 [col:1;len:1;lvl:1;conds;T_INTERFACE;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 695:T_OPEN_CURLY_BRACKET
		* token T_INTERFACE removed from conditions array *
		* level decreased *
	Process token 706 on line 140 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 707 on line 141 [col:1;len:4;lvl:0;]: T_ECHO => echo
	Process token 708 on line 141 [col:5;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 709 on line 141 [col:6;len:7;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'hello'
	Process token 710 on line 141 [col:13;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 711 on line 141 [col:14;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 712 on line 142 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 713 on line 143 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 714 on line 143 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 715 on line 143 [col:10;len:3;lvl:0;]: T_STRING => foo
	Process token 716 on line 143 [col:13;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 717 on line 143 [col:14;len:6;lvl:0;]: T_VARIABLE => $color
	Process token 718 on line 143 [col:20;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 719 on line 143 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 720 on line 143 [col:22;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 713:T_FUNCTION
		* level increased *
		* token 713:T_FUNCTION added to conditions array *
		Process token 721 on line 143 [col:23;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 722 on line 144 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 723 on line 144 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_SWITCH => switch
		Process token 724 on line 144 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 725 on line 144 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 726 on line 144 [col:13;len:6;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $color
		Process token 727 on line 144 [col:19;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 728 on line 144 [col:20;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 729 on line 144 [col:21;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 723:T_SWITCH
			* level increased *
			* token 723:T_SWITCH added to conditions array *
			Process token 730 on line 144 [col:22;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 731 on line 145 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 732 on line 145 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 733 on line 145 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 734 on line 145 [col:14;len:5;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'red'
			Process token 735 on line 145 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 732:T_CASE
				* level increased *
				* token 732:T_CASE added to conditions array *
				Process token 736 on line 145 [col:20;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 737 on line 146 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 738 on line 146 [col:13;len:6;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_RETURN => return
				=> Found scope closer for 735:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 739 on line 146 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 740 on line 146 [col:20;len:6;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'yuck'
			Process token 741 on line 146 [col:26;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 742 on line 146 [col:27;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 743 on line 147 [col:1;len:12;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>             
			Process token 744 on line 147 [col:13;len:5;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_BREAK => break
			Process token 745 on line 147 [col:18;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 746 on line 147 [col:19;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 747 on line 148 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 748 on line 148 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 749 on line 148 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 750 on line 148 [col:14;len:6;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'blue'
			Process token 751 on line 148 [col:20;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 748:T_CASE
				* level increased *
				* token 748:T_CASE added to conditions array *
				Process token 752 on line 148 [col:21;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 753 on line 149 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 754 on line 149 [col:13;len:6;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_RETURN => return
				=> Found scope closer for 751:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 755 on line 149 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 756 on line 149 [col:20;len:6;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'yuck'
			Process token 757 on line 149 [col:26;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 758 on line 149 [col:27;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 759 on line 150 [col:1;len:12;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>             
			Process token 760 on line 150 [col:13;len:5;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_BREAK => break
			Process token 761 on line 150 [col:18;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 762 on line 150 [col:19;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 763 on line 151 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 764 on line 151 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 765 on line 151 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 766 on line 151 [col:14;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'orange'
			Process token 767 on line 151 [col:22;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 764:T_CASE
				* level increased *
				* token 764:T_CASE added to conditions array *
				Process token 768 on line 151 [col:23;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 769 on line 152 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 770 on line 152 [col:13;len:6;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_RETURN => return
				=> Found scope closer for 767:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 771 on line 152 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 772 on line 152 [col:20;len:5;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'yay'
			Process token 773 on line 152 [col:25;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 774 on line 152 [col:26;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 775 on line 153 [col:1;len:12;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>             
			Process token 776 on line 153 [col:13;len:5;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_BREAK => break
			Process token 777 on line 153 [col:18;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 778 on line 153 [col:19;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 779 on line 154 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 780 on line 154 [col:9;len:7;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_DEFAULT => default
			Process token 781 on line 154 [col:16;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 780:T_DEFAULT
				* level increased *
				* token 780:T_DEFAULT added to conditions array *
				Process token 782 on line 154 [col:17;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
				Process token 783 on line 155 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>             
				Process token 784 on line 155 [col:13;len:6;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_RETURN => return
				=> Found scope closer for 781:T_COLON
				* token T_DEFAULT removed from conditions array *
				* level decreased *
			Process token 785 on line 155 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 786 on line 155 [col:20;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'boring'
			Process token 787 on line 155 [col:28;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 788 on line 155 [col:29;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 789 on line 156 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>     
			Process token 790 on line 156 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 729:T_OPEN_CURLY_BRACKET
			* token T_SWITCH removed from conditions array *
			* level decreased *
		Process token 791 on line 156 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 792 on line 157 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 720:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 793 on line 157 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 794 on line 158 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 795 on line 159 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 796 on line 159 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 797 on line 159 [col:10;len:23;lvl:0;]: T_STRING => returnOverMultipleLines
	Process token 798 on line 159 [col:33;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 799 on line 159 [col:34;len:6;lvl:0;]: T_VARIABLE => $color
	Process token 800 on line 159 [col:40;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 801 on line 159 [col:41;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 802 on line 159 [col:42;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 795:T_FUNCTION
		* level increased *
		* token 795:T_FUNCTION added to conditions array *
		Process token 803 on line 159 [col:43;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 804 on line 160 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 805 on line 160 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_SWITCH => switch
		Process token 806 on line 160 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 807 on line 160 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 808 on line 160 [col:13;len:6;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $color
		Process token 809 on line 160 [col:19;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 810 on line 160 [col:20;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 811 on line 160 [col:21;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 805:T_SWITCH
			* level increased *
			* token 805:T_SWITCH added to conditions array *
			Process token 812 on line 160 [col:22;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 813 on line 161 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 814 on line 161 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 815 on line 161 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 816 on line 161 [col:14;len:5;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'red'
			Process token 817 on line 161 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 814:T_CASE
				* level increased *
				* token 814:T_CASE added to conditions array *
				Process token 818 on line 161 [col:20;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 819 on line 162 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 820 on line 162 [col:13;len:6;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_RETURN => return
				=> Found scope closer for 817:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 821 on line 162 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 822 on line 162 [col:20;len:12;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_STRING => someFunction
			Process token 823 on line 162 [col:32;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_OPEN_PARENTHESIS => (
			Process token 824 on line 162 [col:33;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 825 on line 163 [col:1;len:16;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>                 
			Process token 826 on line 163 [col:17;len:10;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'multiple'
			Process token 827 on line 163 [col:27;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COMMA => ,
			Process token 828 on line 163 [col:28;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 829 on line 164 [col:1;len:16;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>                 
			Process token 830 on line 164 [col:17;len:11;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'arguments'
			Process token 831 on line 164 [col:28;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 832 on line 165 [col:1;len:12;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>             
			Process token 833 on line 165 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CLOSE_PARENTHESIS => )
			Process token 834 on line 165 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 835 on line 165 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 836 on line 166 [col:1;len:12;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>             
			Process token 837 on line 166 [col:13;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_ECHO => echo
			Process token 838 on line 166 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 839 on line 166 [col:18;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_VARIABLE => $foo
			Process token 840 on line 166 [col:22;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 841 on line 166 [col:23;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 842 on line 167 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 843 on line 167 [col:9;len:7;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_DEFAULT => default
			Process token 844 on line 167 [col:16;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 843:T_DEFAULT
				* level increased *
				* token 843:T_DEFAULT added to conditions array *
				Process token 845 on line 167 [col:17;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
				Process token 846 on line 168 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>             
				Process token 847 on line 168 [col:13;len:6;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_RETURN => return
				=> Found scope closer for 844:T_COLON
				* token T_DEFAULT removed from conditions array *
				* level decreased *
			Process token 848 on line 168 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 849 on line 168 [col:20;len:5;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_ARRAY => array
			Process token 850 on line 168 [col:25;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_OPEN_PARENTHESIS => (
			Process token 851 on line 168 [col:26;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 852 on line 169 [col:1;len:16;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>                 
			Process token 853 on line 169 [col:17;len:11;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'multiline'
			Process token 854 on line 169 [col:28;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COMMA => ,
			Process token 855 on line 169 [col:29;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 856 on line 170 [col:1;len:16;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>                 
			Process token 857 on line 170 [col:17;len:7;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'array'
			Process token 858 on line 170 [col:24;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 859 on line 171 [col:1;len:12;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>             
			Process token 860 on line 171 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CLOSE_PARENTHESIS => )
			Process token 861 on line 171 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 862 on line 171 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 863 on line 172 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>     
			Process token 864 on line 172 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 811:T_OPEN_CURLY_BRACKET
			* token T_SWITCH removed from conditions array *
			* level decreased *
		Process token 865 on line 172 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 866 on line 173 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 802:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 867 on line 173 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 868 on line 174 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 869 on line 175 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 870 on line 175 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 871 on line 175 [col:10;len:4;lvl:0;]: T_STRING => test
	Process token 872 on line 175 [col:14;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 873 on line 175 [col:15;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 874 on line 175 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 875 on line 175 [col:17;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 869:T_FUNCTION
		* level increased *
		* token 869:T_FUNCTION added to conditions array *
		Process token 876 on line 175 [col:18;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 877 on line 176 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 878 on line 176 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 879 on line 176 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 880 on line 176 [col:12;len:5;lvl:1;conds;T_FUNCTION;]: T_ARRAY => array
		Process token 881 on line 176 [col:17;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 882 on line 176 [col:18;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 883 on line 177 [col:1;len:16;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>                 
		Process token 884 on line 177 [col:17;len:11;lvl:1;conds;T_FUNCTION;]: T_CONSTANT_ENCAPSED_STRING => 'multiline'
		Process token 885 on line 177 [col:28;len:1;lvl:1;conds;T_FUNCTION;]: T_COMMA => ,
		Process token 886 on line 177 [col:29;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 887 on line 178 [col:1;len:16;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>                 
		Process token 888 on line 178 [col:17;len:7;lvl:1;conds;T_FUNCTION;]: T_CONSTANT_ENCAPSED_STRING => 'array'
		Process token 889 on line 178 [col:24;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 890 on line 179 [col:1;len:12;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>             
		Process token 891 on line 179 [col:13;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 892 on line 179 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 893 on line 179 [col:15;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 894 on line 180 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 895 on line 180 [col:5;len:4;lvl:1;conds;T_FUNCTION;]: T_ECHO => echo
		Process token 896 on line 180 [col:9;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 897 on line 180 [col:10;len:4;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $foo
		Process token 898 on line 180 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 899 on line 180 [col:15;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 900 on line 181 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 875:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 901 on line 181 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 902 on line 182 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 903 on line 183 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 904 on line 183 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 905 on line 183 [col:10;len:4;lvl:0;]: T_STRING => test
	Process token 906 on line 183 [col:14;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 907 on line 183 [col:15;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 908 on line 183 [col:16;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 903:T_FUNCTION
		* level increased *
		* token 903:T_FUNCTION added to conditions array *
		Process token 909 on line 183 [col:17;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 910 on line 184 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 911 on line 184 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_SWITCH => switch
		Process token 912 on line 184 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 913 on line 184 [col:12;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $a
		Process token 914 on line 184 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 915 on line 184 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 916 on line 184 [col:16;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 911:T_SWITCH
			* level increased *
			* token 911:T_SWITCH added to conditions array *
			Process token 917 on line 184 [col:17;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 918 on line 185 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 919 on line 185 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 920 on line 185 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 921 on line 185 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_LNUMBER => 1
			Process token 922 on line 185 [col:15;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 919:T_CASE
				* level increased *
				* token 919:T_CASE added to conditions array *
				Process token 923 on line 185 [col:16;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 924 on line 186 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 925 on line 186 [col:13;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_IF => if
				Process token 926 on line 186 [col:15;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 927 on line 186 [col:16;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 928 on line 186 [col:17;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_EMPTY => empty
				Process token 929 on line 186 [col:22;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 930 on line 186 [col:23;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $b
				Process token 931 on line 186 [col:25;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 932 on line 186 [col:26;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 933 on line 186 [col:27;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 934 on line 187 [col:1;len:16;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>                 
				Process token 935 on line 187 [col:17;len:6;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_RETURN => return
				Process token 936 on line 187 [col:23;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 937 on line 187 [col:24;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_LNUMBER => 0
				Process token 938 on line 187 [col:25;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_SEMICOLON => ;
				Process token 939 on line 187 [col:26;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 940 on line 188 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 941 on line 188 [col:13;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 922:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 942 on line 188 [col:18;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 943 on line 188 [col:19;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 944 on line 189 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 945 on line 189 [col:9;len:7;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_DEFAULT => default
			Process token 946 on line 189 [col:16;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 945:T_DEFAULT
				* level increased *
				* token 945:T_DEFAULT added to conditions array *
				Process token 947 on line 189 [col:17;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
				Process token 948 on line 190 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>             
				Process token 949 on line 190 [col:13;len:6;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_RETURN => return
				=> Found scope closer for 946:T_COLON
				* token T_DEFAULT removed from conditions array *
				* level decreased *
			Process token 950 on line 190 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 951 on line 190 [col:20;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_LNUMBER => 2
			Process token 952 on line 190 [col:21;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 953 on line 190 [col:22;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 954 on line 191 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>     
			Process token 955 on line 191 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 916:T_OPEN_CURLY_BRACKET
			* token T_SWITCH removed from conditions array *
			* level decreased *
		Process token 956 on line 191 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 957 on line 192 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 958 on line 193 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 959 on line 193 [col:5;len:2;lvl:1;conds;T_FUNCTION;]: T_IF => if
		Process token 960 on line 193 [col:7;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 961 on line 193 [col:8;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 962 on line 193 [col:9;len:5;lvl:1;conds;T_FUNCTION;]: T_EMPTY => empty
		Process token 963 on line 193 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 964 on line 193 [col:15;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $a
		Process token 965 on line 193 [col:17;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 966 on line 193 [col:18;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 967 on line 193 [col:19;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 968 on line 194 [col:1;len:8;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>         
		Process token 969 on line 194 [col:9;len:4;lvl:1;conds;T_FUNCTION;]: T_ECHO => echo
		Process token 970 on line 194 [col:13;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 971 on line 194 [col:14;len:3;lvl:1;conds;T_FUNCTION;]: T_CONSTANT_ENCAPSED_STRING => '1'
		Process token 972 on line 194 [col:17;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 973 on line 194 [col:18;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 974 on line 195 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 975 on line 195 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_ELSEIF => elseif
		Process token 976 on line 195 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 977 on line 195 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 978 on line 195 [col:13;len:6;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $empty
		Process token 979 on line 195 [col:19;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 980 on line 195 [col:20;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $b
		Process token 981 on line 195 [col:22;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 982 on line 195 [col:23;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 983 on line 195 [col:24;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 984 on line 196 [col:1;len:8;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>         
		Process token 985 on line 196 [col:9;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 986 on line 196 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 987 on line 196 [col:16;len:1;lvl:1;conds;T_FUNCTION;]: T_LNUMBER => 0
		Process token 988 on line 196 [col:17;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 989 on line 196 [col:18;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 990 on line 197 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 991 on line 197 [col:5;len:4;lvl:1;conds;T_FUNCTION;]: T_ELSE => else
		Process token 992 on line 197 [col:9;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 993 on line 198 [col:1;len:8;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>         
		Process token 994 on line 198 [col:9;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 995 on line 198 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 996 on line 198 [col:16;len:1;lvl:1;conds;T_FUNCTION;]: T_LNUMBER => 1
		Process token 997 on line 198 [col:17;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 998 on line 198 [col:18;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 999 on line 199 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 1000 on line 200 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 1001 on line 200 [col:5;len:4;lvl:1;conds;T_FUNCTION;]: T_ECHO => echo
		Process token 1002 on line 200 [col:9;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 1003 on line 200 [col:10;len:4;lvl:1;conds;T_FUNCTION;]: T_CONSTANT_ENCAPSED_STRING => "oi"
		Process token 1004 on line 200 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 1005 on line 200 [col:15;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 1006 on line 201 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 1007 on line 201 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 1008 on line 201 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 1009 on line 201 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_LNUMBER => 1
		Process token 1010 on line 201 [col:13;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 1011 on line 201 [col:14;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 1012 on line 202 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 908:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 1013 on line 202 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1014 on line 203 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1015 on line 204 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 1016 on line 204 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1017 on line 204 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 1018 on line 204 [col:9;len:4;lvl:0;]: T_VARIABLE => $foo
	Process token 1019 on line 204 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 1020 on line 204 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1021 on line 204 [col:15;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1015:T_SWITCH
		* level increased *
		* token 1015:T_SWITCH added to conditions array *
		Process token 1022 on line 204 [col:16;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 1023 on line 205 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 1024 on line 205 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 1025 on line 205 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 1026 on line 205 [col:10;len:5;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'foo'
		Process token 1027 on line 205 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 1024:T_CASE
			* level increased *
			* token 1024:T_CASE added to conditions array *
			Process token 1028 on line 205 [col:16;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 1029 on line 206 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 1030 on line 206 [col:9;len:2;lvl:2;conds;T_SWITCH,T_CASE;]: T_IF => if
			Process token 1031 on line 206 [col:11;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 1032 on line 206 [col:12;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
			Process token 1033 on line 206 [col:13;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_VARIABLE => $foo
			Process token 1034 on line 206 [col:17;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
			Process token 1035 on line 206 [col:18;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 1036 on line 207 [col:1;len:12;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>             
			Process token 1037 on line 207 [col:13;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			Process token 1038 on line 207 [col:19;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 1039 on line 207 [col:20;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_VARIABLE => $foo
			Process token 1040 on line 207 [col:24;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_SEMICOLON => ;
			Process token 1041 on line 207 [col:25;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 1042 on line 208 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 1043 on line 208 [col:9;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 1027:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 1044 on line 208 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 1045 on line 208 [col:16;len:4;lvl:1;conds;T_SWITCH;]: T_VARIABLE => $bar
		Process token 1046 on line 208 [col:20;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 1047 on line 208 [col:21;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 1048 on line 209 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 1049 on line 209 [col:5;len:7;lvl:1;conds;T_SWITCH;]: T_DEFAULT => default
		Process token 1050 on line 209 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 1049:T_DEFAULT
			* level increased *
			* token 1049:T_DEFAULT added to conditions array *
			Process token 1051 on line 209 [col:13;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 1052 on line 210 [col:1;len:8;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
			Process token 1053 on line 210 [col:9;len:6;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_RETURN => return
			=> Found scope closer for 1050:T_COLON
			* token T_DEFAULT removed from conditions array *
			* level decreased *
		Process token 1054 on line 210 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 1055 on line 210 [col:16;len:4;lvl:1;conds;T_SWITCH;]: T_VARIABLE => $bar
		Process token 1056 on line 210 [col:20;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 1057 on line 210 [col:21;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 1058 on line 211 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 1021:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 1059 on line 211 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1060 on line 212 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1061 on line 213 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 1062 on line 213 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1063 on line 213 [col:10;len:3;lvl:0;]: T_STRING => foo
	Process token 1064 on line 213 [col:13;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 1065 on line 213 [col:14;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 1066 on line 213 [col:15;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1067 on line 214 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1061:T_FUNCTION
		* level increased *
		* token 1061:T_FUNCTION added to conditions array *
		Process token 1068 on line 214 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 1069 on line 215 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 1070 on line 215 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 1071 on line 215 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 1072 on line 215 [col:12;len:4;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $bar
		Process token 1073 on line 215 [col:16;len:2;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => ->
		Process token 1074 on line 215 [col:18;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		Process token 1075 on line 215 [col:19;len:7;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $action
		Process token 1076 on line 215 [col:26;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 1077 on line 215 [col:27;len:1;lvl:1;conds;T_FUNCTION;]: T_STRING_CONCAT => .
		Process token 1078 on line 215 [col:28;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 1079 on line 215 [col:29;len:12;lvl:1;conds;T_FUNCTION;]: T_CONSTANT_ENCAPSED_STRING => 'JsonAction'
		Process token 1080 on line 215 [col:41;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		Process token 1081 on line 215 [col:42;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 1082 on line 215 [col:43;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 1083 on line 215 [col:44;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 1084 on line 215 [col:45;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 1085 on line 216 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 1067:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 1086 on line 216 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1087 on line 217 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1088 on line 218 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 1089 on line 218 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1090 on line 218 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 1091 on line 218 [col:9;len:4;lvl:0;]: T_TRUE => true
	Process token 1092 on line 218 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 1093 on line 218 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1094 on line 218 [col:15;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1088:T_SWITCH
		* level increased *
		* token 1088:T_SWITCH added to conditions array *
		Process token 1095 on line 218 [col:16;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 1096 on line 219 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 1097 on line 219 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 1098 on line 219 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 1099 on line 219 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 1
		Process token 1100 on line 219 [col:11;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 1097:T_CASE
			* level increased *
			* token 1097:T_CASE added to conditions array *
			Process token 1101 on line 219 [col:12;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 1102 on line 220 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 1103 on line 220 [col:9;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 1100:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 1104 on line 220 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 1105 on line 220 [col:16;len:3;lvl:1;conds;T_SWITCH;]: T_STRING => foo
		Process token 1106 on line 220 [col:19;len:1;lvl:1;conds;T_SWITCH;]: T_OPEN_PARENTHESIS => (
		Process token 1107 on line 220 [col:20;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 1108 on line 221 [col:1;len:12;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>             
		Process token 1109 on line 221 [col:13;len:8;lvl:1;conds;T_SWITCH;]: T_FUNCTION => function
		Process token 1110 on line 221 [col:21;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 1111 on line 221 [col:22;len:1;lvl:1;conds;T_SWITCH;]: T_OPEN_PARENTHESIS => (
		Process token 1112 on line 221 [col:23;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_PARENTHESIS => )
		Process token 1113 on line 221 [col:24;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 1114 on line 221 [col:25;len:1;lvl:1;conds;T_SWITCH;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 1109:T_FUNCTION
			* level increased *
			* token 1109:T_FUNCTION added to conditions array *
			Process token 1115 on line 221 [col:26;len:0;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 1116 on line 222 [col:1;len:16;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_WHITESPACE =>                 
			Process token 1117 on line 222 [col:17;len:4;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_VARIABLE => $foo
			Process token 1118 on line 222 [col:21;len:1;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 1119 on line 222 [col:22;len:1;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_EQUAL => =
			Process token 1120 on line 222 [col:23;len:1;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 1121 on line 222 [col:24;len:4;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_VARIABLE => $bar
			Process token 1122 on line 222 [col:28;len:1;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_SEMICOLON => ;
			Process token 1123 on line 222 [col:29;len:2;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_WHITESPACE =>   
			Process token 1124 on line 222 [col:31;len:35;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_COMMENT => // when this is removed it works ok\n
			Process token 1125 on line 223 [col:1;len:16;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_WHITESPACE =>                 
			Process token 1126 on line 223 [col:17;len:6;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_RETURN => return
			Process token 1127 on line 223 [col:23;len:1;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 1128 on line 223 [col:24;len:5;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_FALSE => false
			Process token 1129 on line 223 [col:29;len:1;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_SEMICOLON => ;
			Process token 1130 on line 223 [col:30;len:1;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 1131 on line 223 [col:31;len:38;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_COMMENT => // from here on it reports unreachable\n
			Process token 1132 on line 224 [col:1;len:12;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_WHITESPACE =>             
			Process token 1133 on line 224 [col:13;len:1;lvl:2;conds;T_SWITCH,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 1114:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 1134 on line 224 [col:14;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 1135 on line 225 [col:1;len:8;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>         
		Process token 1136 on line 225 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_PARENTHESIS => )
		Process token 1137 on line 225 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 1138 on line 225 [col:11;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 1139 on line 226 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 1094:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 1140 on line 226 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1141 on line 227 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1142 on line 228 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 1143 on line 228 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 1144 on line 228 [col:5;len:2;lvl:0;]: T_VARIABLE => $i
	Process token 1145 on line 228 [col:7;len:1;lvl:0;]: T_EQUAL => =
	Process token 1146 on line 228 [col:8;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 1147 on line 228 [col:9;len:1;lvl:0;]: T_COMMA => ,
	Process token 1148 on line 228 [col:10;len:2;lvl:0;]: T_VARIABLE => $j
	Process token 1149 on line 228 [col:12;len:1;lvl:0;]: T_EQUAL => =
	Process token 1150 on line 228 [col:13;len:2;lvl:0;]: T_LNUMBER => 50
	Process token 1151 on line 228 [col:15;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 1152 on line 228 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1153 on line 228 [col:17;len:2;lvl:0;]: T_VARIABLE => $i
	Process token 1154 on line 228 [col:19;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 1155 on line 228 [col:20;len:3;lvl:0;]: T_LNUMBER => 100
	Process token 1156 on line 228 [col:23;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 1157 on line 228 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1158 on line 228 [col:25;len:2;lvl:0;]: T_VARIABLE => $i
	Process token 1159 on line 228 [col:27;len:2;lvl:0;]: T_INC => ++
	Process token 1160 on line 228 [col:29;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 1161 on line 228 [col:30;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1162 on line 228 [col:31;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1142:T_FOR
		* level increased *
		* token 1142:T_FOR added to conditions array *
		Process token 1163 on line 228 [col:32;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 1164 on line 229 [col:1;len:2;lvl:1;conds;T_FOR;]: T_WHITESPACE =>   
		Process token 1165 on line 229 [col:3;len:5;lvl:1;conds;T_FOR;]: T_WHILE => while
		Process token 1166 on line 229 [col:8;len:1;lvl:1;conds;T_FOR;]: T_OPEN_PARENTHESIS => (
		Process token 1167 on line 229 [col:9;len:2;lvl:1;conds;T_FOR;]: T_VARIABLE => $j
		Process token 1168 on line 229 [col:11;len:2;lvl:1;conds;T_FOR;]: T_DEC => --
		Process token 1169 on line 229 [col:13;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_PARENTHESIS => )
		Process token 1170 on line 229 [col:14;len:1;lvl:1;conds;T_FOR;]: T_WHITESPACE =>  
		Process token 1171 on line 229 [col:15;len:1;lvl:1;conds;T_FOR;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 1165:T_WHILE
			* level increased *
			* token 1165:T_WHILE added to conditions array *
			Process token 1172 on line 229 [col:16;len:0;lvl:2;conds;T_FOR,T_WHILE;]: T_WHITESPACE => \n
			Process token 1173 on line 230 [col:1;len:4;lvl:2;conds;T_FOR,T_WHILE;]: T_WHITESPACE =>     
			Process token 1174 on line 230 [col:5;len:2;lvl:2;conds;T_FOR,T_WHILE;]: T_IF => if
			Process token 1175 on line 230 [col:7;len:1;lvl:2;conds;T_FOR,T_WHILE;]: T_OPEN_PARENTHESIS => (
			Process token 1176 on line 230 [col:8;len:2;lvl:2;conds;T_FOR,T_WHILE;]: T_VARIABLE => $j
			Process token 1177 on line 230 [col:10;len:2;lvl:2;conds;T_FOR,T_WHILE;]: T_IS_EQUAL => ==
			Process token 1178 on line 230 [col:12;len:2;lvl:2;conds;T_FOR,T_WHILE;]: T_LNUMBER => 17
			Process token 1179 on line 230 [col:14;len:1;lvl:2;conds;T_FOR,T_WHILE;]: T_CLOSE_PARENTHESIS => )
			Process token 1180 on line 230 [col:15;len:1;lvl:2;conds;T_FOR,T_WHILE;]: T_WHITESPACE =>  
			Process token 1181 on line 230 [col:16;len:1;lvl:2;conds;T_FOR,T_WHILE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 1174:T_IF
				* level increased *
				* token 1174:T_IF added to conditions array *
				Process token 1182 on line 230 [col:17;len:0;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_WHITESPACE => \n
				Process token 1183 on line 231 [col:1;len:2;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_WHITESPACE => \t\t
				Process token 1184 on line 231 [col:3;len:4;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_GOTO => goto
				Process token 1185 on line 231 [col:7;len:1;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_WHITESPACE =>  
				Process token 1186 on line 231 [col:8;len:3;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_STRING => end
				Process token 1187 on line 231 [col:11;len:1;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_SEMICOLON => ;
				Process token 1188 on line 231 [col:12;len:0;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_WHITESPACE => \n
				Process token 1189 on line 232 [col:1;len:2;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_WHITESPACE => \t\t
				Process token 1190 on line 232 [col:3;len:4;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_ECHO => echo
				Process token 1191 on line 232 [col:7;len:1;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_WHITESPACE =>  
				Process token 1192 on line 232 [col:8;len:13;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'unreachable'
				Process token 1193 on line 232 [col:21;len:1;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_SEMICOLON => ;
				Process token 1194 on line 232 [col:22;len:0;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_WHITESPACE => \n
				Process token 1195 on line 233 [col:1;len:1;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_WHITESPACE => \t
				Process token 1196 on line 233 [col:2;len:1;lvl:3;conds;T_FOR,T_WHILE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 1181:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 1197 on line 233 [col:3;len:0;lvl:2;conds;T_FOR,T_WHILE;]: T_WHITESPACE => \n
			Process token 1198 on line 234 [col:1;len:2;lvl:2;conds;T_FOR,T_WHILE;]: T_WHITESPACE =>   
			Process token 1199 on line 234 [col:3;len:1;lvl:2;conds;T_FOR,T_WHILE;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 1171:T_OPEN_CURLY_BRACKET
			* token T_WHILE removed from conditions array *
			* level decreased *
		Process token 1200 on line 234 [col:4;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 1201 on line 235 [col:1;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 1162:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 1202 on line 235 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1203 on line 236 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1204 on line 237 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 1205 on line 237 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1206 on line 237 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 1207 on line 237 [col:9;len:4;lvl:0;]: T_VARIABLE => $var
	Process token 1208 on line 237 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 1209 on line 237 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1210 on line 237 [col:15;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1204:T_SWITCH
		* level increased *
		* token 1204:T_SWITCH added to conditions array *
		Process token 1211 on line 237 [col:16;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 1212 on line 238 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 1213 on line 238 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 1214 on line 238 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 1215 on line 238 [col:10;len:3;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '1'
		Process token 1216 on line 238 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 1213:T_CASE
			* level increased *
			* token 1213:T_CASE added to conditions array *
			Process token 1217 on line 238 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 1218 on line 239 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 1219 on line 239 [col:9;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_GOTO => goto
			Process token 1220 on line 239 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 1221 on line 239 [col:14;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_STRING => end
			Process token 1222 on line 239 [col:17;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_SEMICOLON => ;
			Process token 1223 on line 239 [col:18;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 1224 on line 240 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 1225 on line 240 [col:9;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_ECHO => echo
			Process token 1226 on line 240 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 1227 on line 240 [col:14;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
			Process token 1228 on line 240 [col:18;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_SEMICOLON => ;
			Process token 1229 on line 240 [col:19;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 1230 on line 241 [col:1;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 1231 on line 242 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 1232 on line 242 [col:5;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_CASE => case
			Process token 1233 on line 242 [col:9;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 1234 on line 242 [col:10;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_CONSTANT_ENCAPSED_STRING => '2'
			Process token 1235 on line 242 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_COLON => :
			=> Found scope opener for 1232:T_CASE
			* shared closer, cleaning up 1213:T_CASE *
			* cleaned 1232:T_CASE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 1233:T_WHITESPACE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 1234:T_CONSTANT_ENCAPSED_STRING *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 1235:T_COLON *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* token 1213:T_CASE removed from conditions array *
			* level decreased *
			* level increased *
			* token 1232:T_CASE added to conditions array *
			Process token 1236 on line 242 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 1237 on line 243 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 1238 on line 243 [col:5;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_CASE => case
			Process token 1239 on line 243 [col:9;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 1240 on line 243 [col:10;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_CONSTANT_ENCAPSED_STRING => '3'
			Process token 1241 on line 243 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_COLON => :
			=> Found scope opener for 1238:T_CASE
			* shared closer, cleaning up 1232:T_CASE *
			* cleaned 1238:T_CASE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 1239:T_WHITESPACE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 1240:T_CONSTANT_ENCAPSED_STRING *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 1241:T_COLON *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* token 1232:T_CASE removed from conditions array *
			* level decreased *
			* level increased *
			* token 1238:T_CASE added to conditions array *
			Process token 1242 on line 243 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 1243 on line 244 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 1244 on line 244 [col:9;len:2;lvl:2;conds;T_SWITCH,T_CASE;]: T_IF => if
			Process token 1245 on line 244 [col:11;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 1246 on line 244 [col:12;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
			Process token 1247 on line 244 [col:13;len:10;lvl:2;conds;T_SWITCH,T_CASE;]: T_VARIABLE => $something
			Process token 1248 on line 244 [col:23;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 1249 on line 244 [col:24;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_IS_IDENTICAL => ===
			Process token 1250 on line 244 [col:27;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 1251 on line 244 [col:28;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_TRUE => true
			Process token 1252 on line 244 [col:32;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
			Process token 1253 on line 244 [col:33;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 1254 on line 244 [col:34;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 1244:T_IF
				* level increased *
				* token 1244:T_IF added to conditions array *
				Process token 1255 on line 244 [col:35;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
				Process token 1256 on line 245 [col:1;len:12;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
				Process token 1257 on line 245 [col:13;len:4;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_GOTO => goto
				Process token 1258 on line 245 [col:17;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>  
				Process token 1259 on line 245 [col:18;len:3;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_STRING => end
				Process token 1260 on line 245 [col:21;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_SEMICOLON => ;
				Process token 1261 on line 245 [col:22;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
				Process token 1262 on line 246 [col:1;len:12;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
				Process token 1263 on line 246 [col:13;len:4;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_ECHO => echo
				Process token 1264 on line 246 [col:17;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>  
				Process token 1265 on line 246 [col:18;len:4;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
				Process token 1266 on line 246 [col:22;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_SEMICOLON => ;
				Process token 1267 on line 246 [col:23;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
				Process token 1268 on line 247 [col:1;len:8;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>         
				Process token 1269 on line 247 [col:9;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 1254:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 1270 on line 247 [col:10;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 1271 on line 248 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 1272 on line 248 [col:5;len:5;lvl:2;conds;T_SWITCH,T_CASE;]: T_BREAK => break
			=> Found scope closer for 1241:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 1273 on line 248 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 1274 on line 248 [col:11;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 1275 on line 249 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 1276 on line 249 [col:5;len:7;lvl:1;conds;T_SWITCH;]: T_DEFAULT => default
		Process token 1277 on line 249 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 1276:T_DEFAULT
			* level increased *
			* token 1276:T_DEFAULT added to conditions array *
			Process token 1278 on line 249 [col:13;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 1279 on line 250 [col:1;len:8;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
			Process token 1280 on line 250 [col:9;len:4;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_GOTO => goto
			Process token 1281 on line 250 [col:13;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
			Process token 1282 on line 250 [col:14;len:3;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_STRING => end
			Process token 1283 on line 250 [col:17;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_SEMICOLON => ;
			Process token 1284 on line 250 [col:18;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 1285 on line 251 [col:1;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 1286 on line 252 [col:1;len:8;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
			Process token 1287 on line 252 [col:9;len:2;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_IF => if
			Process token 1288 on line 252 [col:11;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
			Process token 1289 on line 252 [col:12;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_OPEN_PARENTHESIS => (
			Process token 1290 on line 252 [col:13;len:10;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_VARIABLE => $something
			Process token 1291 on line 252 [col:23;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
			Process token 1292 on line 252 [col:24;len:3;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_IS_IDENTICAL => ===
			Process token 1293 on line 252 [col:27;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
			Process token 1294 on line 252 [col:28;len:4;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_TRUE => true
			Process token 1295 on line 252 [col:32;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_CLOSE_PARENTHESIS => )
			Process token 1296 on line 252 [col:33;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
			Process token 1297 on line 252 [col:34;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 1287:T_IF
				* level increased *
				* token 1287:T_IF added to conditions array *
				Process token 1298 on line 252 [col:35;len:0;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE => \n
				Process token 1299 on line 253 [col:1;len:12;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>             
				Process token 1300 on line 253 [col:13;len:4;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_GOTO => goto
				Process token 1301 on line 253 [col:17;len:1;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>  
				Process token 1302 on line 253 [col:18;len:3;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_STRING => end
				Process token 1303 on line 253 [col:21;len:1;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_SEMICOLON => ;
				Process token 1304 on line 253 [col:22;len:0;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE => \n
				Process token 1305 on line 254 [col:1;len:12;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>             
				Process token 1306 on line 254 [col:13;len:4;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_ECHO => echo
				Process token 1307 on line 254 [col:17;len:1;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>  
				Process token 1308 on line 254 [col:18;len:4;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
				Process token 1309 on line 254 [col:22;len:1;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_SEMICOLON => ;
				Process token 1310 on line 254 [col:23;len:0;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE => \n
				Process token 1311 on line 255 [col:1;len:8;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>         
				Process token 1312 on line 255 [col:9;len:1;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 1297:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 1313 on line 255 [col:10;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 1314 on line 256 [col:1;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 1277:T_COLON
			* token T_DEFAULT removed from conditions array *
			* level decreased *
		=> Found scope closer for 1210:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 1315 on line 256 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1316 on line 257 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1317 on line 258 [col:1;len:4;lvl:0;]: T_GOTO_LABEL => end:
	Process token 1318 on line 258 [col:5;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1319 on line 259 [col:1;len:4;lvl:0;]: T_ECHO => echo
	Process token 1320 on line 259 [col:5;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1321 on line 259 [col:6;len:10;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'j hit 17'
	Process token 1322 on line 259 [col:16;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 1323 on line 259 [col:17;len:0;lvl:0;]: T_WHITESPACE => \n
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	* token 1232 (T_CASE) on line 242 closer changed from 1272 (T_BREAK) to 1272 (T_BREAK)
	* token 1109 on line 221 changed from T_FUNCTION to T_CLOSURE
		* cleaned 1115 (T_WHITESPACE) *
		* cleaned 1116 (T_WHITESPACE) *
		* cleaned 1117 (T_VARIABLE) *
		* cleaned 1118 (T_WHITESPACE) *
		* cleaned 1119 (T_EQUAL) *
		* cleaned 1120 (T_WHITESPACE) *
		* cleaned 1121 (T_VARIABLE) *
		* cleaned 1122 (T_SEMICOLON) *
		* cleaned 1123 (T_WHITESPACE) *
		* cleaned 1124 (T_COMMENT) *
		* cleaned 1125 (T_WHITESPACE) *
		* cleaned 1126 (T_RETURN) *
		* cleaned 1127 (T_WHITESPACE) *
		* cleaned 1128 (T_FALSE) *
		* cleaned 1129 (T_SEMICOLON) *
		* cleaned 1130 (T_WHITESPACE) *
		* cleaned 1131 (T_COMMENT) *
		* cleaned 1132 (T_WHITESPACE) *
	* token 646 (T_CASE) on line 131 opener changed from 649 (T_COLON) to 651 (T_OPEN_CURLY_BRACKET)
	* token 646 (T_CASE) on line 131 closer changed from 654 (T_RETURN) to 660 (T_CLOSE_CURLY_BRACKET)
	* token 628 (T_CASE) on line 127 opener changed from 631 (T_COLON) to 633 (T_OPEN_CURLY_BRACKET)
	* token 628 (T_CASE) on line 127 closer changed from 636 (T_RETURN) to 642 (T_CLOSE_CURLY_BRACKET)
	* token 546 on line 112 changed from T_FUNCTION to T_CLOSURE
		* cleaned 551 (T_RETURN) *
		* cleaned 552 (T_WHITESPACE) *
		* cleaned 553 (T_VARIABLE) *
		* cleaned 554 (T_SEMICOLON) *
	* token 492 on line 103 changed from T_FUNCTION to T_CLOSURE
		* cleaned 497 (T_WHITESPACE) *
		* cleaned 498 (T_WHITESPACE) *
		* cleaned 499 (T_RETURN) *
		* cleaned 500 (T_WHITESPACE) *
		* cleaned 501 (T_STRING) *
		* cleaned 502 (T_OPEN_PARENTHESIS) *
		* cleaned 503 (T_MINUS) *
		* cleaned 504 (T_LNUMBER) *
		* cleaned 505 (T_COMMA) *
		* cleaned 506 (T_WHITESPACE) *
		* cleaned 507 (T_LNUMBER) *
		* cleaned 508 (T_CLOSE_PARENTHESIS) *
		* cleaned 509 (T_SEMICOLON) *
		* cleaned 510 (T_WHITESPACE) *
		* cleaned 511 (T_WHITESPACE) *
		* cleaned 512 (T_ECHO) *
		* cleaned 513 (T_WHITESPACE) *
		* cleaned 514 (T_CONSTANT_ENCAPSED_STRING) *
		* cleaned 515 (T_SEMICOLON) *
		* cleaned 516 (T_WHITESPACE) *
		* cleaned 517 (T_WHITESPACE) *
	* token 271 (T_CASE) on line 55 closer changed from 283 (T_RETURN) to 283 (T_RETURN)
	* token 27 (T_CASE) on line 7 closer changed from 65 (T_BREAK) to 65 (T_BREAK)
	*** END ADDITIONAL PHP PROCESSING ***
[PHP => 1324 tokens in 259 lines]... 
DONE in 789ms (82 fixable violations)
	=> Fixing file: 82/82 violations remaining	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 9 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 26 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 32 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 38 (T_WHITESPACE) "        if" => "    if"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 51 (T_WHITESPACE) "            break" => "        break"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 55 (T_WHITESPACE) "            echo" => "        echo"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 61 (T_WHITESPACE) "        }" => "    }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 68 (T_WHITESPACE) "    default" => "default"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 77 (T_WHITESPACE) "        if" => "if"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 90 (T_WHITESPACE) "            break" => "    break"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 94 (T_WHITESPACE) "            echo" => "    echo"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 100 (T_WHITESPACE) "        }" => "}"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 252 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 270 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 276 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 352 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 358 (T_WHITESPACE) "        echo" => "    echo"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 375 (T_WHITESPACE) "    default" => "default"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 379 (T_WHITESPACE) "        echo" => "    echo"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 400 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 419 (T_WHITESPACE) "    default" => "default"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 540 (T_RETURN) "return" => "    return"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 557 (T_CLOSE_PARENTHESIS) ")" => "    )"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 627 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 635 (T_WHITESPACE) "        return" => "    return"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 641 (T_WHITESPACE) "    }" => "}"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 645 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 653 (T_WHITESPACE) "        return" => "    return"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 659 (T_WHITESPACE) "    }" => "}"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 731 (T_WHITESPACE) "        case" => "    case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 747 (T_WHITESPACE) "        case" => "    case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 763 (T_WHITESPACE) "        case" => "    case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 779 (T_WHITESPACE) "        default" => "    default"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 813 (T_WHITESPACE) "        case" => "    case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 842 (T_WHITESPACE) "        default" => "    default"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 918 (T_WHITESPACE) "        case" => "    case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 924 (T_WHITESPACE) "            if" => "        if"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 934 (T_WHITESPACE) "                return" => "            return"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 944 (T_WHITESPACE) "        default" => "    default"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1023 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1029 (T_WHITESPACE) "        if" => "    if"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1036 (T_WHITESPACE) "            return" => "        return"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1048 (T_WHITESPACE) "    default" => "default"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1096 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1164 (T_WHITESPACE) "  while" => "    while"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1173 (T_WHITESPACE) "    if" => "      if"
	* token 1173 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1183 (T_WHITESPACE) "\t\tgoto" => "    goto"
	* token 1183 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1189 (T_WHITESPACE) "\t\techo" => "    echo"
	* token 1189 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1195 (T_WHITESPACE) "\t}" => "   }"
	* token 1195 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1198 (T_WHITESPACE) "  }" => "    }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1212 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1218 (T_WHITESPACE) "        goto" => "    goto"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1224 (T_WHITESPACE) "        echo" => "    echo"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1231 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1237 (T_WHITESPACE) "    case" => "case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1243 (T_WHITESPACE) "        if" => "    if"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1256 (T_WHITESPACE) "            goto" => "        goto"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1262 (T_WHITESPACE) "            echo" => "        echo"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1268 (T_WHITESPACE) "        }" => "    }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1275 (T_WHITESPACE) "    default" => "default"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1279 (T_WHITESPACE) "        goto" => "    goto"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1286 (T_WHITESPACE) "        if" => "    if"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1299 (T_WHITESPACE) "            goto" => "        goto"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1305 (T_WHITESPACE) "            echo" => "        echo"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1311 (T_WHITESPACE) "        }" => "    }"
	* token 1183 has already been modified, skipping *
	* token 1189 has already been modified, skipping *
	* token 1195 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 64 (T_WHITESPACE) "    break" => "break"
	* token 64 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff (line 74) replaced token 124 (T_TRUE) "TRUE" => "true"
	PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff (line 74) replaced token 150 (T_FALSE) "FALSE" => "false"
	PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff (line 74) replaced token 161 (T_TRUE) "TRUE" => "true"
	PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff (line 74) replaced token 169 (T_TRUE) "TRUE" => "true"
	PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff (line 74) replaced token 199 (T_TRUE) "TRUE" => "true"
	PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\FunctionCallArgumentSpacingSniff (line 136) replaced token 305 (T_COMMA) "," => ", "
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 329 (T_CLOSE_PARENTHESIS) ")" => ") {"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 293) replaced token 333 (T_SEMICOLON) ";" => ";\n    }"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 329 (T_CLOSE_PARENTHESIS) ")" => ") {"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 333 (T_SEMICOLON) ";" => ";\n    }"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\FunctionCallArgumentSpacingSniff (line 136) replaced token 324 (T_COMMA) "," => ", "
	PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\FunctionCallArgumentSpacingSniff (line 136) replaced token 326 (T_COMMA) "," => ", "
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 364 (T_WHITESPACE) "    break" => "break"
	* token 364 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 385 (T_WHITESPACE) "    break" => "break"
	* token 385 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 423 (T_WHITESPACE) "    break" => "break"
	* token 423 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff (line 74) replaced token 446 (T_TRUE) "TRUE" => "true"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionDeclarationSniff (line 94) replaced token 492 (T_CLOSURE) "function" => "function "
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 537 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 538 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 537 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 538 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 399) replaced token 545 (T_OPEN_PARENTHESIS) "(" => "(\n    "
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionDeclarationSniff (line 94) replaced token 546 (T_CLOSURE) "function" => "function "
	PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceKernighanRitchieSniff (line 144) replaced token 550 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 111) replaced token 555 (T_CLOSE_CURLY_BRACKET) "}" => "\n}"
	PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff (line 74) replaced token 579 (T_TRUE) "TRUE" => "true"
	=> Changeset started by PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 64)
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 66) replaced token 694 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 69) replaced token 695 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 70) replaced token 694 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 70) replaced token 695 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 719 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 720 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 719 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 720 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 801 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 802 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 801 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 802 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 874 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 875 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 874 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 875 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 908 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 908 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 932 (T_CLOSE_PARENTHESIS) ")" => ") {"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 293) replaced token 938 (T_SEMICOLON) ";" => ";\n            }"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 932 (T_CLOSE_PARENTHESIS) ")" => ") {"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 938 (T_SEMICOLON) ";" => ";\n            }"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 966 (T_CLOSE_PARENTHESIS) ")" => ") {"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 271) replaced token 975 (T_ELSEIF) "elseif" => "} elseif"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 966 (T_CLOSE_PARENTHESIS) ")" => ") {"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 975 (T_ELSEIF) "elseif" => "} elseif"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 982 (T_CLOSE_PARENTHESIS) ")" => ") {"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 271) replaced token 991 (T_ELSE) "else" => "} else"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 982 (T_CLOSE_PARENTHESIS) ")" => ") {"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 991 (T_ELSE) "else" => "} else"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 991 (T_ELSE) "} else" => "} else {"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 293) replaced token 997 (T_SEMICOLON) ";" => ";\n    }"
		* token 991 has already been modified, skipping *
	=> Changeset failed to apply
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 1034 (T_CLOSE_PARENTHESIS) ")" => ") {"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 293) replaced token 1040 (T_SEMICOLON) ";" => ";\n        }"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 1034 (T_CLOSE_PARENTHESIS) ")" => ") {"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 1040 (T_SEMICOLON) ";" => ";\n        }"
	=> Changeset ended: 2 changes applied
	* token 1195 has already been modified, skipping *
	* token 1195 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 1271 (T_WHITESPACE) "    break" => "break"
	* token 1271 has already been modified, skipping *
                                                                                	=> Fixing file: 106/82 violations remaining [made 1 pass]... 	* fixed 106 violations, starting loop 2 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 326 (T_WHITESPACE) "    continue" => "        continue"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 548 (T_RETURN) "return" => "        return"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 553 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 938 (T_WHITESPACE) "            }" => "        }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1052 (T_WHITESPACE) "        }" => "    }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1184 (T_WHITESPACE) "      if" => "        if"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1194 (T_WHITESPACE) "    goto" => "      goto"
	* token 1194 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1200 (T_WHITESPACE) "    echo" => "      echo"
	* token 1200 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1206 (T_WHITESPACE) "   }" => "        }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 14 (T_WHITESPACE) "        return" => "return"
	* token 14 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 61 (T_BREAK) "break" => "    break"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 67 (T_WHITESPACE) "        return" => "return"
	* token 67 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 250 (T_WHITESPACE) "        return" => "return"
	* token 250 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 272 (T_WHITESPACE) "        return" => "return"
	* token 272 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 361 (T_BREAK) "break" => "    break"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 380 (T_BREAK) "break" => "    break"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 399 (T_WHITESPACE) "        return" => "return"
	* token 399 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 415 (T_BREAK) "break" => "    break"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 531) replaced token 540 (T_WHITESPACE) "    function" => "        function"
	* token 548 has already been modified, skipping *
	* token 553 has already been modified, skipping *
	* token 553 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 732 (T_WHITESPACE) "            return" => "return"
	* token 732 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 748 (T_WHITESPACE) "            return" => "return"
	* token 748 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 764 (T_WHITESPACE) "            return" => "return"
	* token 764 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 778 (T_WHITESPACE) "            return" => "return"
	* token 778 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 814 (T_WHITESPACE) "            return" => "return"
	* token 814 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 841 (T_WHITESPACE) "            return" => "return"
	* token 841 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 941 (T_WHITESPACE) "            break" => "break"
	* token 941 has already been modified, skipping *
	* token 938 has already been modified, skipping *
	* token 938 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 949 (T_WHITESPACE) "            return" => "return"
	* token 949 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 1000 (T_ELSE) "else" => "else {"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 293) replaced token 1006 (T_SEMICOLON) ";" => ";\n    }"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 1000 (T_ELSE) "else" => "else {"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 1006 (T_SEMICOLON) ";" => ";\n    }"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 1055 (T_WHITESPACE) "        return" => "return"
	* token 1055 has already been modified, skipping *
	* token 1052 has already been modified, skipping *
	* token 1052 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 1064 (T_WHITESPACE) "        return" => "return"
	* token 1064 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 172) replaced token 1113 (T_WHITESPACE) "        return" => "return"
	* token 1113 has already been modified, skipping *
	* token 1206 has already been modified, skipping *
	* token 1206 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 1279 (T_BREAK) "break" => "    break"
                                                                                	=> Fixing file: 33/82 violations remaining [made 2 passes]... 	* fixed 33 violations, starting loop 3 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 547 (T_WHITESPACE) "        return" => "            return"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 553 (T_WHITESPACE) "    }" => "        }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1189 (T_WHITESPACE) "      goto" => "            goto"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1195 (T_WHITESPACE) "      echo" => "            echo"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 14 (T_RETURN) "return" => "    return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 67 (T_RETURN) "return" => "    return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 249 (T_RETURN) "return" => "    return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 270 (T_RETURN) "return" => "    return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 398 (T_RETURN) "return" => "    return"
	* token 553 has already been modified, skipping *
	* token 553 has already been modified, skipping *
	* token 553 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 733 (T_RETURN) "return" => "        return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 748 (T_RETURN) "return" => "        return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 763 (T_RETURN) "return" => "        return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 776 (T_RETURN) "return" => "        return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 811 (T_RETURN) "return" => "        return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 531) replaced token 816 (T_WHITESPACE) "                'multiple'" => "    'multiple'"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 531) replaced token 820 (T_WHITESPACE) "                'arguments'" => "    'arguments'"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 531) replaced token 823 (T_WHITESPACE) "            )" => ")"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 837 (T_RETURN) "return" => "        return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 936 (T_BREAK) "break" => "        break"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 943 (T_RETURN) "return" => "        return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 1053 (T_RETURN) "return" => "    return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 1061 (T_RETURN) "return" => "    return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 170) replaced token 1109 (T_RETURN) "return" => "    return"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 531) replaced token 1114 (T_WHITESPACE) "            function" => "    function"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 531) replaced token 1141 (T_WHITESPACE) "        )" => ")"
                                                                                	=> Fixing file: 25/82 violations remaining [made 3 passes]... 	* fixed 25 violations, starting loop 4 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 833 (T_CLOSE_PARENTHESIS) ")" => "    )"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1153 (T_WHITESPACE) "            }" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 531) replaced token 826 (T_WHITESPACE) "    'multiple'" => "            'multiple'"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 531) replaced token 830 (T_WHITESPACE) "    'arguments'" => "            'arguments'"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 531) replaced token 1129 (T_WHITESPACE) "    function" => "        function"
	* token 1153 has already been modified, skipping *
	* token 1153 has already been modified, skipping *
                                                                                	=> Fixing file: 5/82 violations remaining [made 4 passes]... 	* fixed 5 violations, starting loop 5 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1154 (T_WHITESPACE) "    }" => "        }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 531) replaced token 833 (T_WHITESPACE) "    )" => "        )"
	* token 1154 has already been modified, skipping *
	* token 1154 has already been modified, skipping *
	* token 1154 has already been modified, skipping *
                                                                                	=> Fixing file: 2/82 violations remaining [made 5 passes]... 	* fixed 2 violations, starting loop 6 *
                                                                                	=> Fixing file: 0/82 violations remaining [made 6 passes]... DONE in 1.66 secs
	=> Fixed file written to NonExecutableCodeUnitTest.1.inc.pear-fixed

PHPCBF RESULT SUMMARY
------------------------------------------------------------------------------------------
FILE                                                                      FIXED  REMAINING
------------------------------------------------------------------------------------------
...Sniffer\src\Standards\Squiz\Tests\PHP\NonExecutableCodeUnitTest.1.inc  82     18
------------------------------------------------------------------------------------------
A TOTAL OF 82 ERRORS WERE FIXED IN 1 FILE
------------------------------------------------------------------------------------------

Time: 3.39 secs; Memory: 6MB


