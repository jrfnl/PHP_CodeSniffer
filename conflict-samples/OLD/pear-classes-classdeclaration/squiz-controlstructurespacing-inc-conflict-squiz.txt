PHP 7.2.11 (cli) (built: Oct 10 2018 02:39:52) ( ZTS MSVC15 (Visual C++ 2017) x86 )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies
    with Xdebug v2.6.0, Copyright (c) 2002-2018, by Derick Rethans

PHP_CodeSniffer version 3.4.0 (stable) by Squiz (http://www.squiz.net)

Processing ruleset D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\ruleset.xml
	Adding sniff files from D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs directory
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayBracketSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\ClassFileNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\DuplicatePropertySniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\LowercaseClassKeywordsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\SelfMemberReferenceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\ValidClassNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\BlockCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\ClassCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\DocCommentAlignmentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\EmptyCatchCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\FileCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\FunctionCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\FunctionCommentThrowTagSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\LongConditionClosingCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\PostStatementCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\VariableCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ElseIfDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ForEachLoopDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\InlineIfDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\LowercaseDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ClassDefinitionClosingBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ClassDefinitionNameSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ClassDefinitionOpeningBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ColonSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ColourDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\DisallowMultipleStyleDefinitionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\DuplicateClassDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\DuplicateStyleDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\EmptyClassDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\EmptyStyleDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ForbiddenStylesSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\IndentationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\LowercaseStyleDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\MissingColonSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\NamedColoursSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\OpacitySniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\SemicolonSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ShorthandSizeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Debug\JavaScriptLintSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Debug\JSLintSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Files\FileExtensionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\FunctionDeclarationArgumentSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\FunctionDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\FunctionDuplicateArgumentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\GlobalFunctionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\LowercaseFunctionKeywordsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\MultiLineFunctionDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidFunctionNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidVariableNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Objects\DisallowObjectStringIndexSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Objects\ObjectInstantiationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Objects\ObjectMemberCommaSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Operators\ComparisonOperatorUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Operators\IncrementDecrementUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Operators\ValidLogicalOperatorsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\CommentedOutCodeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowBooleanStatementSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowComparisonAssignmentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowInlineIfSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowMultipleAssignmentsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowSizeFunctionsInLoopsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DiscouragedFunctionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\EvalSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\GlobalKeywordSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\HeredocSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\InnerFunctionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\LowercasePHPFunctionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\NonExecutableCodeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Scope\MemberVarScopeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Scope\MethodScopeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Scope\StaticThisUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Strings\ConcatenationSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Strings\DoubleQuoteUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Strings\EchoedStringsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\CastSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\FunctionOpeningBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\LogicalOperatorSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\MemberVarSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ObjectOperatorSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\OperatorSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\PropertyLabelSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ScopeKeywordSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff.php
	Processing rule "Generic.Arrays.DisallowLongArraySyntax"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Arrays\DisallowLongArraySyntaxSniff.php
	Processing rule "Generic.CodeAnalysis.EmptyStatement"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\CodeAnalysis\EmptyStatementSniff.php
	Processing rule "Generic.Commenting.Todo"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Commenting\TodoSniff.php
	Processing rule "Generic.Commenting.DocComment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Commenting\DocCommentSniff.php
	Processing rule "Generic.ControlStructures.InlineControlStructure"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff.php
	Processing rule "Generic.Formatting.DisallowMultipleStatements"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Formatting\DisallowMultipleStatementsSniff.php
	Processing rule "Generic.Formatting.SpaceAfterCast"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Formatting\SpaceAfterCastSniff.php
	Processing rule "Generic.Functions.FunctionCallArgumentSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Functions\FunctionCallArgumentSpacingSniff.php
	Processing rule "Generic.NamingConventions.ConstructorName"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\NamingConventions\ConstructorNameSniff.php
	Processing rule "Generic.NamingConventions.UpperCaseConstantName"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\NamingConventions\UpperCaseConstantNameSniff.php
	Processing rule "Generic.PHP.DeprecatedFunctions"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\DeprecatedFunctionsSniff.php
	Processing rule "Generic.PHP.DisallowShortOpenTag"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\DisallowShortOpenTagSniff.php
	Processing rule "Generic.PHP.LowerCaseKeyword"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\LowerCaseKeywordSniff.php
	Processing rule "Generic.PHP.LowerCaseConstant"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff.php
	Processing rule "Generic.Strings.UnnecessaryStringConcat"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Strings\UnnecessaryStringConcatSniff.php
	Processing rule "Generic.WhiteSpace.DisallowTabIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\DisallowTabIndentSniff.php
	Processing rule "Generic.WhiteSpace.LanguageConstructSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
	Processing rule "Generic.WhiteSpace.IncrementDecrementSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\IncrementDecrementSpacingSniff.php
	Processing rule "Generic.WhiteSpace.ScopeIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff.php
	Processing rule "PEAR.ControlStructures.MultiLineCondition"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\ControlStructures\MultiLineConditionSniff.php
	Processing rule "PEAR.Files.IncludingFile"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Files\IncludingFileSniff.php
	Processing rule "PEAR.Formatting.MultiLineAssignment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Formatting\MultiLineAssignmentSniff.php
	Processing rule "PEAR.Functions.ValidDefaultValue"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Functions\ValidDefaultValueSniff.php
	Processing rule "PSR2.Files.EndFileNewline"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff.php
	Processing rule "Zend.Files.ClosingTag"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Zend\Sniffs\Files\ClosingTagSniff.php
	Processing rule "Zend.Debug.CodeAnalyzer"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Zend\Sniffs\Debug\CodeAnalyzerSniff.php
	Processing rule "Generic.Files.LineLength"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Files\LineLengthSniff.php
		=> property "lineLimit" set to "120"
		=> property "absoluteLineLimit" set to "0"
	Processing rule "Generic.Files.LineEndings"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Files\LineEndingsSniff.php
		=> property "eolChar" set to "\n"
	Processing rule "Generic.Formatting.MultipleStatementAlignment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Formatting\MultipleStatementAlignmentSniff.php
		=> property "maxPadding" set to "20"
		=> property "error" set to "true"
	Processing rule "Generic.PHP.ForbiddenFunctions"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\ForbiddenFunctionsSniff.php
		=> array property "forbiddenFunctions" set to "sizeof=>count,delete=>unset,print=>echo,is_null=>null,create_function=>null"
	Processing rule "Generic.CodeAnalysis.EmptyStatement.DetectedCATCH"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\CodeAnalysis\EmptyStatementSniff.php
		=> severity set to 0
	Processing rule "Generic.Debug.ClosureLinter"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Debug\ClosureLinterSniff.php
		=> array property "errorCodes" set to "0210"
		=> array property "ignoreCodes" set to "0001,0110,0240"
	Processing rule "Generic.Debug.ClosureLinter.ExternalToolError"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Debug\ClosureLinterSniff.php
		=> message set to %2$s
	Processing rule "PEAR.Functions.FunctionCallSignature"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff.php
		=> property "allowMultipleArguments" set to "false"
	Processing rule "Generic.Arrays.ArrayIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Arrays\ArrayIndentSniff.php
	Processing rule "Squiz.Arrays.ArrayDeclaration.KeyNotAligned"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.ValueNotAligned"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.WhiteSpace.LanguageConstructSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
		=> severity set to 0
	Processing rule "Squiz.Commenting.InlineComment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff.php
		Excluding rule "Squiz.Commenting.InlineComment.SpacingAfterAtFunctionEnd"
		=> severity set to 0
	Processing rule "Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidFunctionNameSniff.php
		=> severity set to 0
	Processing rule "PSR2.Methods.MethodDeclaration.Underscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PSR2\Sniffs\Methods\MethodDeclarationSniff.php
		Excluding sniff "PSR2.Methods.MethodDeclaration" except for "Underscore"
		=> message type set to error
	Processing rule "Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidVariableNameSniff.php
		=> severity set to 0
	Processing rule "PSR2.Classes.PropertyDeclaration.Underscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PSR2\Sniffs\Classes\PropertyDeclarationSniff.php
		Excluding sniff "PSR2.Classes.PropertyDeclaration" except for "Underscore"
		=> message type set to error
=> Ruleset processing complete; included 133 sniffs and excluded 0
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_FUNCTION => function
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_SEMICOLON => ;
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_FUNCTION => function
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_ABSTRACT => abstract
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_FUNCTION => function
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_SEMICOLON => ;
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
Creating file list... DONE (1 files in queue)
Changing into directory D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Tests\WhiteSpace
Processing ControlStructureSpacingUnitTest.inc 
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php\n
	Process token [1]: T_IF => if
	Process token [2]: T_WHITESPACE =>  
	Process token  3 : T_OPEN_PARENTHESIS => (
	Process token [4]: T_VARIABLE => $something
	Process token  5 : T_CLOSE_PARENTHESIS => )
	Process token [6]: T_WHITESPACE =>  
	Process token  7 : T_OPEN_CURLY_BRACKET => {
	Process token [8]: T_WHITESPACE => \n
	Process token  9 : T_CLOSE_CURLY_BRACKET => }
	Process token [10]: T_WHITESPACE => \n
	Process token [11]: T_FOREACH => foreach
	Process token [12]: T_WHITESPACE =>  
	Process token  13 : T_OPEN_PARENTHESIS => (
	Process token [14]: T_VARIABLE => $this
	Process token [15]: T_WHITESPACE =>  
	Process token [16]: T_AS => as
	Process token [17]: T_WHITESPACE =>  
	Process token [18]: T_VARIABLE => $that
	Process token  19 : T_CLOSE_PARENTHESIS => )
	Process token [20]: T_WHITESPACE =>  
	Process token  21 : T_OPEN_CURLY_BRACKET => {
	Process token [22]: T_WHITESPACE => \n
	Process token  23 : T_CLOSE_CURLY_BRACKET => }
	Process token [24]: T_WHITESPACE => \n
	Process token [25]: T_WHILE => while
	Process token [26]: T_WHITESPACE =>  
	Process token  27 : T_OPEN_PARENTHESIS => (
	Process token [28]: T_STRING => true
	Process token  29 : T_CLOSE_PARENTHESIS => )
	Process token [30]: T_WHITESPACE =>  
	Process token  31 : T_OPEN_CURLY_BRACKET => {
	Process token [32]: T_WHITESPACE => \n    
	Process token [33]: T_FOR => for
	Process token [34]: T_WHITESPACE =>  
	Process token  35 : T_OPEN_PARENTHESIS => (
	Process token [36]: T_VARIABLE => $i
	Process token [37]: T_WHITESPACE =>  
	Process token  38 : T_EQUAL => =
	Process token [39]: T_WHITESPACE =>  
	Process token [40]: T_LNUMBER => 0
	Process token  41 : T_SEMICOLON => ;
	Process token [42]: T_WHITESPACE =>  
	Process token [43]: T_VARIABLE => $i
	Process token [44]: T_WHITESPACE =>  
	Process token  45 : T_LESS_THAN => <
	Process token [46]: T_WHITESPACE =>  
	Process token [47]: T_LNUMBER => 10
	Process token  48 : T_SEMICOLON => ;
	Process token [49]: T_WHITESPACE =>  
	Process token [50]: T_VARIABLE => $i
	Process token [51]: T_INC => ++
	Process token  52 : T_CLOSE_PARENTHESIS => )
	Process token [53]: T_WHITESPACE =>  
	Process token  54 : T_OPEN_CURLY_BRACKET => {
	Process token [55]: T_WHITESPACE => \n    
	Process token  56 : T_CLOSE_CURLY_BRACKET => }
	Process token [57]: T_WHITESPACE => \n    
	Process token [58]: T_IF => if
	Process token [59]: T_WHITESPACE =>  
	Process token  60 : T_OPEN_PARENTHESIS => (
	Process token [61]: T_VARIABLE => $something
	Process token  62 : T_CLOSE_PARENTHESIS => )
	Process token [63]: T_WHITESPACE =>  
	Process token  64 : T_OPEN_CURLY_BRACKET => {
	Process token [65]: T_WHITESPACE => \n    
	Process token  66 : T_CLOSE_CURLY_BRACKET => }
	Process token [67]: T_WHITESPACE => \n\n    
	Process token [68]: T_FOREACH => foreach
	Process token [69]: T_WHITESPACE =>  
	Process token  70 : T_OPEN_PARENTHESIS => (
	Process token [71]: T_VARIABLE => $this
	Process token [72]: T_WHITESPACE =>  
	Process token [73]: T_AS => as
	Process token [74]: T_WHITESPACE =>  
	Process token [75]: T_VARIABLE => $that
	Process token  76 : T_CLOSE_PARENTHESIS => )
	Process token [77]: T_WHITESPACE =>  
	Process token  78 : T_OPEN_CURLY_BRACKET => {
	Process token [79]: T_WHITESPACE => \n        
	Process token [80]: T_DO => do
	Process token [81]: T_WHITESPACE =>  
	Process token  82 : T_OPEN_CURLY_BRACKET => {
	Process token [83]: T_WHITESPACE => \n        
	Process token  84 : T_CLOSE_CURLY_BRACKET => }
	Process token [85]: T_WHITESPACE =>  
	Process token [86]: T_WHILE => while
	Process token [87]: T_WHITESPACE =>  
	Process token  88 : T_OPEN_PARENTHESIS => (
	Process token [89]: T_STRING => true
	Process token  90 : T_CLOSE_PARENTHESIS => )
	Process token  91 : T_SEMICOLON => ;
	Process token [92]: T_WHITESPACE => \n\n    
	Process token  93 : T_CLOSE_CURLY_BRACKET => }
	Process token [94]: T_WHITESPACE => \n
	Process token  95 : T_CLOSE_CURLY_BRACKET => }
	Process token [96]: T_WHITESPACE => \n\n
	Process token [97]: T_IF => if
	Process token [98]: T_WHITESPACE =>  
	Process token  99 : T_OPEN_PARENTHESIS => (
	Process token [100]: T_VARIABLE => $one
	Process token  101 : T_CLOSE_PARENTHESIS => )
	Process token [102]: T_WHITESPACE =>  
	Process token  103 : T_OPEN_CURLY_BRACKET => {
	Process token [104]: T_WHITESPACE => \n
	Process token  105 : T_CLOSE_CURLY_BRACKET => }
	Process token [106]: T_WHITESPACE =>  
	Process token [107]: T_ELSE => else
	Process token [108]: T_WHITESPACE =>  
	Process token  109 : T_OPEN_PARENTHESIS => (
	Process token [110]: T_VARIABLE => $two
	Process token  111 : T_CLOSE_PARENTHESIS => )
	Process token [112]: T_WHITESPACE =>  
	Process token  113 : T_OPEN_CURLY_BRACKET => {
	Process token [114]: T_WHITESPACE => \n
	Process token  115 : T_CLOSE_CURLY_BRACKET => }
	Process token [116]: T_WHITESPACE =>  
	Process token [117]: T_ELSE => else
	Process token [118]: T_WHITESPACE =>  
	Process token [119]: T_IF => if
	Process token [120]: T_WHITESPACE =>  
	Process token  121 : T_OPEN_PARENTHESIS => (
	Process token [122]: T_VARIABLE => $three
	Process token  123 : T_CLOSE_PARENTHESIS => )
	Process token [124]: T_WHITESPACE =>  
	Process token  125 : T_OPEN_CURLY_BRACKET => {
	Process token [126]: T_WHITESPACE => \n
	Process token  127 : T_CLOSE_CURLY_BRACKET => }
	Process token [128]: T_WHITESPACE =>  
	Process token [129]: T_ELSEIF => elseif
	Process token [130]: T_WHITESPACE =>  
	Process token  131 : T_OPEN_PARENTHESIS => (
	Process token [132]: T_VARIABLE => $four
	Process token  133 : T_CLOSE_PARENTHESIS => )
	Process token [134]: T_WHITESPACE =>  
	Process token  135 : T_OPEN_CURLY_BRACKET => {
	Process token [136]: T_WHITESPACE => \n
	Process token  137 : T_CLOSE_CURLY_BRACKET => }
	Process token [138]: T_WHITESPACE => \n
	Process token [139]: T_IF => if
	Process token [140]: T_WHITESPACE =>  
	Process token  141 : T_OPEN_PARENTHESIS => (
	Process token [142]: T_VARIABLE => $one
	Process token  143 : T_CLOSE_PARENTHESIS => )
	Process token [144]: T_WHITESPACE =>  
	Process token  145 : T_OPEN_CURLY_BRACKET => {
	Process token [146]: T_WHITESPACE => \n
	Process token  147 : T_CLOSE_CURLY_BRACKET => }
	Process token [148]: T_WHITESPACE =>  
	Process token [149]: T_ELSE => else
	Process token [150]: T_WHITESPACE =>  
	Process token  151 : T_OPEN_PARENTHESIS => (
	Process token [152]: T_VARIABLE => $two
	Process token  153 : T_CLOSE_PARENTHESIS => )
	Process token [154]: T_WHITESPACE =>  
	Process token  155 : T_OPEN_CURLY_BRACKET => {
	Process token [156]: T_WHITESPACE => \n
	Process token  157 : T_CLOSE_CURLY_BRACKET => }
	Process token [158]: T_WHITESPACE =>  
	Process token [159]: T_ELSE => else
	Process token [160]: T_WHITESPACE =>  
	Process token [161]: T_IF => if
	Process token [162]: T_WHITESPACE =>  
	Process token  163 : T_OPEN_PARENTHESIS => (
	Process token [164]: T_VARIABLE => $three
	Process token  165 : T_CLOSE_PARENTHESIS => )
	Process token [166]: T_WHITESPACE =>  
	Process token  167 : T_OPEN_CURLY_BRACKET => {
	Process token [168]: T_WHITESPACE => \n
	Process token  169 : T_CLOSE_CURLY_BRACKET => }
	Process token [170]: T_WHITESPACE =>  
	Process token [171]: T_ELSEIF => elseif
	Process token [172]: T_WHITESPACE =>  
	Process token  173 : T_OPEN_PARENTHESIS => (
	Process token [174]: T_VARIABLE => $four
	Process token  175 : T_CLOSE_PARENTHESIS => )
	Process token [176]: T_WHITESPACE =>  
	Process token  177 : T_OPEN_CURLY_BRACKET => {
	Process token [178]: T_WHITESPACE => \n
	Process token  179 : T_CLOSE_CURLY_BRACKET => }
	Process token [180]: T_WHITESPACE => \n
	Process token [181]: T_CLOSE_TAG => ?>\n
	Process token [182]: T_INLINE_HTML => <table>\n    <tr>\n        <td align="center" valign="center">\n        
	Process token [183]: T_OPEN_TAG => <?php\n
	Process token [184]: T_WHITESPACE =>         
	Process token [185]: T_FOREACH => foreach
	Process token [186]: T_WHITESPACE =>  
	Process token  187 : T_OPEN_PARENTHESIS => (
	Process token [188]: T_VARIABLE => $this
	Process token [189]: T_OBJECT_OPERATOR => ->
	Process token [190]: T_STRING => children
	Process token [191]: T_WHITESPACE =>  
	Process token [192]: T_AS => as
	Process token [193]: T_WHITESPACE =>  
	Process token [194]: T_VARIABLE => $child
	Process token  195 : T_CLOSE_PARENTHESIS => )
	Process token [196]: T_WHITESPACE =>  
	Process token  197 : T_OPEN_CURLY_BRACKET => {
	Process token [198]: T_WHITESPACE => \n            
	Process token [199]: T_COMMENT => // There should be no error after this\n
	Process token [200]: T_WHITESPACE =>             
	Process token [201]: T_COMMENT => // foreach, because it is followed by a\n
	Process token [202]: T_WHITESPACE =>             
	Process token [203]: T_COMMENT => // close PHP tag.\n
	Process token [204]: T_WHITESPACE =>         
	Process token  205 : T_CLOSE_CURLY_BRACKET => }
	Process token [206]: T_WHITESPACE => \n        
	Process token [207]: T_CLOSE_TAG => ?>\n
	Process token [208]: T_INLINE_HTML =>         </td>\n    </tr>\n</table>\n
	Process token [209]: T_OPEN_TAG => <?php\n
	Process token [210]: T_WHITESPACE => \n
	Process token [211]: T_SWITCH => switch
	Process token [212]: T_WHITESPACE =>  
	Process token  213 : T_OPEN_PARENTHESIS => (
	Process token [214]: T_VARIABLE => $blah
	Process token  215 : T_CLOSE_PARENTHESIS => )
	Process token [216]: T_WHITESPACE =>  
	Process token  217 : T_OPEN_CURLY_BRACKET => {
	Process token [218]: T_WHITESPACE => \n    
	Process token [219]: T_CASE => case
	Process token [220]: T_WHITESPACE =>  
	Process token [221]: T_CONSTANT_ENCAPSED_STRING => 'one'
	Process token  222 : T_COLON => :
	Process token [223]: T_WHITESPACE => \n        
	Process token [224]: T_IF => if
	Process token [225]: T_WHITESPACE =>  
	Process token  226 : T_OPEN_PARENTHESIS => (
	Process token [227]: T_VARIABLE => $blah
	Process token  228 : T_CLOSE_PARENTHESIS => )
	Process token [229]: T_WHITESPACE =>  
	Process token  230 : T_OPEN_CURLY_BRACKET => {
	Process token [231]: T_WHITESPACE => \n            
	Process token [232]: T_COMMENT => // There are no spaces before break.\n
	Process token [233]: T_WHITESPACE =>         
	Process token  234 : T_CLOSE_CURLY_BRACKET => }
	Process token [235]: T_WHITESPACE => \n    
	Process token [236]: T_BREAK => break
	Process token  237 : T_SEMICOLON => ;
	Process token [238]: T_WHITESPACE => \n\n    
	Process token [239]: T_DEFAULT => default
	Process token  240 : T_COLON => :
	Process token [241]: T_WHITESPACE => \n        
	Process token [242]: T_IF => if
	Process token [243]: T_WHITESPACE =>  
	Process token  244 : T_OPEN_PARENTHESIS => (
	Process token [245]: T_VARIABLE => $blah
	Process token  246 : T_CLOSE_PARENTHESIS => )
	Process token [247]: T_WHITESPACE =>  
	Process token  248 : T_OPEN_CURLY_BRACKET => {
	Process token [249]: T_WHITESPACE => \n            
	Process token [250]: T_COMMENT => // There are no spaces before break.\n
	Process token [251]: T_WHITESPACE =>         
	Process token  252 : T_CLOSE_CURLY_BRACKET => }
	Process token [253]: T_WHITESPACE => \n    
	Process token [254]: T_BREAK => break
	Process token  255 : T_SEMICOLON => ;
	Process token [256]: T_WHITESPACE => \n
	Process token  257 : T_CLOSE_CURLY_BRACKET => }
	Process token [258]: T_WHITESPACE => \n\n
	Process token [259]: T_SWITCH => switch
	Process token [260]: T_WHITESPACE =>  
	Process token  261 : T_OPEN_PARENTHESIS => (
	Process token [262]: T_VARIABLE => $blah
	Process token  263 : T_CLOSE_PARENTHESIS => )
	Process token [264]: T_WHITESPACE =>  
	Process token  265 : T_OPEN_CURLY_BRACKET => {
	Process token [266]: T_WHITESPACE => \n    
	Process token [267]: T_CASE => case
	Process token [268]: T_WHITESPACE =>  
	Process token [269]: T_CONSTANT_ENCAPSED_STRING => 'one'
	Process token  270 : T_COLON => :
	Process token [271]: T_WHITESPACE => \n        
	Process token [272]: T_IF => if
	Process token [273]: T_WHITESPACE =>  
	Process token  274 : T_OPEN_PARENTHESIS => (
	Process token [275]: T_VARIABLE => $blah
	Process token  276 : T_CLOSE_PARENTHESIS => )
	Process token [277]: T_WHITESPACE =>  
	Process token  278 : T_OPEN_CURLY_BRACKET => {
	Process token [279]: T_WHITESPACE => \n            
	Process token [280]: T_COMMENT => // There are no spaces before break.\n
	Process token [281]: T_WHITESPACE =>         
	Process token  282 : T_CLOSE_CURLY_BRACKET => }
	Process token [283]: T_WHITESPACE => \n    
	Process token [284]: T_BREAK => break
	Process token  285 : T_SEMICOLON => ;
	Process token [286]: T_WHITESPACE => \n\n    
	Process token [287]: T_DEFAULT => default
	Process token  288 : T_COLON => :
	Process token [289]: T_WHITESPACE => \n        
	Process token [290]: T_IF => if
	Process token [291]: T_WHITESPACE =>  
	Process token  292 : T_OPEN_PARENTHESIS => (
	Process token [293]: T_VARIABLE => $blah
	Process token  294 : T_CLOSE_PARENTHESIS => )
	Process token [295]: T_WHITESPACE =>  
	Process token  296 : T_OPEN_CURLY_BRACKET => {
	Process token [297]: T_WHITESPACE => \n            
	Process token [298]: T_COMMENT => // Code here.\n
	Process token [299]: T_WHITESPACE =>         
	Process token  300 : T_CLOSE_CURLY_BRACKET => }
	Process token [301]: T_WHITESPACE => \n
	Process token  302 : T_CLOSE_CURLY_BRACKET => }
	Process token [303]: T_WHITESPACE => \n\n
	Process token [304]: T_FOREACH => foreach
	Process token [305]: T_WHITESPACE =>  
	Process token  306 : T_OPEN_PARENTHESIS => (
	Process token [307]: T_VARIABLE => $blah
	Process token [308]: T_WHITESPACE =>  
	Process token [309]: T_AS => as
	Process token [310]: T_WHITESPACE =>  
	Process token [311]: T_VARIABLE => $var
	Process token  312 : T_CLOSE_PARENTHESIS => )
	Process token [313]: T_WHITESPACE =>  
	Process token  314 : T_OPEN_CURLY_BRACKET => {
	Process token [315]: T_WHITESPACE => \n    
	Process token [316]: T_IF => if
	Process token [317]: T_WHITESPACE =>  
	Process token  318 : T_OPEN_PARENTHESIS => (
	Process token [319]: T_VARIABLE => $blah
	Process token  320 : T_CLOSE_PARENTHESIS => )
	Process token [321]: T_WHITESPACE =>  
	Process token  322 : T_OPEN_CURLY_BRACKET => {
	Process token [323]: T_WHITESPACE => \n    
	Process token  324 : T_CLOSE_CURLY_BRACKET => }
	Process token [325]: T_WHITESPACE => \n    
	Process token [326]: T_BREAK => break
	Process token  327 : T_SEMICOLON => ;
	Process token [328]: T_WHITESPACE => \n
	Process token  329 : T_CLOSE_CURLY_BRACKET => }
	Process token [330]: T_WHITESPACE => \n\n
	Process token [331]: T_WHILE => while
	Process token [332]: T_WHITESPACE =>  
	Process token  333 : T_OPEN_PARENTHESIS => (
	Process token [334]: T_STRING => true
	Process token  335 : T_CLOSE_PARENTHESIS => )
	Process token [336]: T_WHITESPACE =>  
	Process token  337 : T_OPEN_CURLY_BRACKET => {
	Process token [338]: T_WHITESPACE => \n    
	Process token [339]: T_FOR => for
	Process token [340]: T_WHITESPACE =>  
	Process token  341 : T_OPEN_PARENTHESIS => (
	Process token [342]: T_VARIABLE => $i
	Process token [343]: T_WHITESPACE =>  
	Process token  344 : T_EQUAL => =
	Process token [345]: T_WHITESPACE =>  
	Process token [346]: T_LNUMBER => 0
	Process token  347 : T_SEMICOLON => ;
	Process token [348]: T_WHITESPACE =>  
	Process token [349]: T_VARIABLE => $i
	Process token [350]: T_WHITESPACE =>  
	Process token  351 : T_LESS_THAN => <
	Process token [352]: T_WHITESPACE =>  
	Process token [353]: T_LNUMBER => 10
	Process token  354 : T_SEMICOLON => ;
	Process token [355]: T_WHITESPACE =>  
	Process token [356]: T_VARIABLE => $i
	Process token [357]: T_INC => ++
	Process token  358 : T_CLOSE_PARENTHESIS => )
	Process token [359]: T_WHITESPACE =>  
	Process token  360 : T_OPEN_CURLY_BRACKET => {
	Process token [361]: T_WHITESPACE => \n\n        
	Process token [362]: T_IF => if
	Process token [363]: T_WHITESPACE =>  
	Process token  364 : T_OPEN_PARENTHESIS => (
	Process token [365]: T_VARIABLE => $something
	Process token  366 : T_CLOSE_PARENTHESIS => )
	Process token [367]: T_WHITESPACE =>  
	Process token  368 : T_OPEN_CURLY_BRACKET => {
	Process token [369]: T_WHITESPACE => \n        
	Process token  370 : T_CLOSE_CURLY_BRACKET => }
	Process token [371]: T_WHITESPACE => \n\n    
	Process token  372 : T_CLOSE_CURLY_BRACKET => }
	Process token [373]: T_WHITESPACE => \n\n    
	Process token [374]: T_FOREACH => foreach
	Process token [375]: T_WHITESPACE =>  
	Process token  376 : T_OPEN_PARENTHESIS => (
	Process token [377]: T_VARIABLE => $this
	Process token [378]: T_WHITESPACE =>  
	Process token [379]: T_AS => as
	Process token [380]: T_WHITESPACE =>  
	Process token [381]: T_VARIABLE => $that
	Process token  382 : T_CLOSE_PARENTHESIS => )
	Process token [383]: T_WHITESPACE =>  
	Process token  384 : T_OPEN_CURLY_BRACKET => {
	Process token [385]: T_WHITESPACE => \n        
	Process token [386]: T_DO => do
	Process token [387]: T_WHITESPACE =>  
	Process token  388 : T_OPEN_CURLY_BRACKET => {
	Process token [389]: T_WHITESPACE => \n\n            
	Process token [390]: T_ECHO => echo
	Process token [391]: T_WHITESPACE =>  
	Process token [392]: T_VARIABLE => $i
	Process token  393 : T_SEMICOLON => ;
	Process token [394]: T_WHITESPACE => \n        
	Process token  395 : T_CLOSE_CURLY_BRACKET => }
	Process token [396]: T_WHITESPACE =>  
	Process token [397]: T_WHILE => while
	Process token [398]: T_WHITESPACE =>  
	Process token  399 : T_OPEN_PARENTHESIS => (
	Process token [400]: T_STRING => true
	Process token  401 : T_CLOSE_PARENTHESIS => )
	Process token  402 : T_SEMICOLON => ;
	Process token [403]: T_WHITESPACE => \n    
	Process token  404 : T_CLOSE_CURLY_BRACKET => }
	Process token [405]: T_WHITESPACE => \n
	Process token  406 : T_CLOSE_CURLY_BRACKET => }
	Process token [407]: T_WHITESPACE => \n\n
	Process token [408]: T_FUNCTION => function
	Process token [409]: T_WHITESPACE =>  
	Process token [410]: T_STRING => myFunction
	Process token  411 : T_OPEN_PARENTHESIS => (
	Process token  412 : T_CLOSE_PARENTHESIS => )
	Process token [413]: T_WHITESPACE => \n
	Process token  414 : T_OPEN_CURLY_BRACKET => {
	Process token [415]: T_WHITESPACE => \n    
	Process token [416]: T_IF => if
	Process token [417]: T_WHITESPACE =>  
	Process token  418 : T_OPEN_PARENTHESIS => (
	Process token [419]: T_VARIABLE => $blah
	Process token  420 : T_CLOSE_PARENTHESIS => )
	Process token [421]: T_WHITESPACE =>  
	Process token  422 : T_OPEN_CURLY_BRACKET => {
	Process token [423]: T_WHITESPACE => \n    
	Process token  424 : T_CLOSE_CURLY_BRACKET => }
	Process token [425]: T_WHITESPACE => \n\n
	Process token  426 : T_CLOSE_CURLY_BRACKET => }
	Process token [427]: T_COMMENT => //end myFunction()\n
	Process token [428]: T_WHITESPACE => \n
	Process token [429]: T_FOREACH => foreach
	Process token [430]: T_WHITESPACE =>  
	Process token  431 : T_OPEN_PARENTHESIS => (
	Process token [432]: T_VARIABLE => $this
	Process token [433]: T_OBJECT_OPERATOR => ->
	Process token [434]: T_STRING => children
	Process token [435]: T_WHITESPACE =>  
	Process token [436]: T_AS => as
	Process token [437]: T_WHITESPACE =>  
	Process token [438]: T_VARIABLE => $child
	Process token  439 : T_CLOSE_PARENTHESIS => )
	Process token [440]: T_WHITESPACE =>  
	Process token  441 : T_OPEN_CURLY_BRACKET => {
	Process token [442]: T_WHITESPACE => \n    
	Process token [443]: T_ECHO => echo
	Process token [444]: T_WHITESPACE =>  
	Process token [445]: T_VARIABLE => $child
	Process token  446 : T_SEMICOLON => ;
	Process token [447]: T_WHITESPACE => \n\n
	Process token  448 : T_CLOSE_CURLY_BRACKET => }
	Process token [449]: T_WHITESPACE => \n\n
	Process token [450]: T_IF => if
	Process token [451]: T_WHITESPACE =>  
	Process token  452 : T_OPEN_PARENTHESIS => (
	Process token [453]: T_VARIABLE => $defaultPageDesign
	Process token [454]: T_WHITESPACE =>  
	Process token [455]: T_IS_IDENTICAL => ===
	Process token [456]: T_WHITESPACE =>  
	Process token [457]: T_LNUMBER => 0
	Process token [458]: T_WHITESPACE => \n    
	Process token [459]: T_BOOLEAN_AND => &&
	Process token [460]: T_WHITESPACE =>  
	Process token [461]: T_VARIABLE => $defaultCascade
	Process token [462]: T_WHITESPACE =>  
	Process token [463]: T_IS_IDENTICAL => ===
	Process token [464]: T_WHITESPACE =>  
	Process token [465]: T_STRING => TRUE
	Process token [466]: T_WHITESPACE => \n    
	Process token [467]: T_BOOLEAN_AND => &&
	Process token [468]: T_WHITESPACE =>  
	Process token [469]: T_VARIABLE => $defaultChildDesign
	Process token [470]: T_WHITESPACE =>  
	Process token [471]: T_IS_IDENTICAL => ===
	Process token [472]: T_WHITESPACE =>  
	Process token [473]: T_LNUMBER => 0
	Process token [474]: T_WHITESPACE => \n
	Process token  475 : T_CLOSE_PARENTHESIS => )
	Process token [476]: T_WHITESPACE =>  
	Process token  477 : T_OPEN_CURLY_BRACKET => {
	Process token [478]: T_WHITESPACE => \n    
	Process token [479]: T_VARIABLE => $settingsUpdated
	Process token [480]: T_WHITESPACE =>  
	Process token  481 : T_EQUAL => =
	Process token [482]: T_WHITESPACE =>  
	Process token [483]: T_STRING => FALSE
	Process token  484 : T_SEMICOLON => ;
	Process token [485]: T_WHITESPACE => \n
	Process token  486 : T_CLOSE_CURLY_BRACKET => }
	Process token [487]: T_WHITESPACE => \n\n
	Process token [488]: T_FOREACH => foreach
	Process token [489]: T_WHITESPACE =>  
	Process token  490 : T_OPEN_PARENTHESIS => (
	Process token [491]: T_WHITESPACE =>  
	Process token [492]: T_VARIABLE => $blah
	Process token [493]: T_WHITESPACE =>  
	Process token [494]: T_AS => as
	Process token [495]: T_WHITESPACE =>  
	Process token [496]: T_VARIABLE => $var
	Process token [497]: T_WHITESPACE =>  
	Process token  498 : T_CLOSE_PARENTHESIS => )
	Process token [499]: T_WHITESPACE =>  
	Process token  500 : T_OPEN_CURLY_BRACKET => {
	Process token [501]: T_WHITESPACE => \n    
	Process token [502]: T_IF => if
	Process token [503]: T_WHITESPACE =>  
	Process token  504 : T_OPEN_PARENTHESIS => (
	Process token [505]: T_WHITESPACE =>   
	Process token [506]: T_VARIABLE => $blah
	Process token [507]: T_WHITESPACE =>     
	Process token  508 : T_CLOSE_PARENTHESIS => )
	Process token [509]: T_WHITESPACE =>  
	Process token  510 : T_OPEN_CURLY_BRACKET => {
	Process token [511]: T_WHITESPACE => \n    
	Process token  512 : T_CLOSE_CURLY_BRACKET => }
	Process token [513]: T_WHITESPACE => \n
	Process token  514 : T_CLOSE_CURLY_BRACKET => }
	Process token [515]: T_WHITESPACE => \n\n
	Process token [516]: T_IF => if
	Process token [517]: T_WHITESPACE =>  
	Process token  518 : T_OPEN_PARENTHESIS => (
	Process token [519]: T_WHITESPACE => \n    
	Process token [520]: T_VARIABLE => $defaultPageDesign
	Process token [521]: T_WHITESPACE =>  
	Process token [522]: T_IS_IDENTICAL => ===
	Process token [523]: T_WHITESPACE =>  
	Process token [524]: T_LNUMBER => 0
	Process token [525]: T_WHITESPACE => \n    
	Process token [526]: T_BOOLEAN_AND => &&
	Process token [527]: T_WHITESPACE =>  
	Process token [528]: T_VARIABLE => $defaultCascade
	Process token [529]: T_WHITESPACE =>  
	Process token [530]: T_IS_IDENTICAL => ===
	Process token [531]: T_WHITESPACE =>  
	Process token [532]: T_STRING => TRUE
	Process token [533]: T_WHITESPACE => \n    
	Process token [534]: T_BOOLEAN_AND => &&
	Process token [535]: T_WHITESPACE =>  
	Process token [536]: T_VARIABLE => $defaultChildDesign
	Process token [537]: T_WHITESPACE =>  
	Process token [538]: T_IS_IDENTICAL => ===
	Process token [539]: T_WHITESPACE =>  
	Process token [540]: T_LNUMBER => 0
	Process token [541]: T_WHITESPACE => \n
	Process token  542 : T_CLOSE_PARENTHESIS => )
	Process token [543]: T_WHITESPACE =>  
	Process token  544 : T_OPEN_CURLY_BRACKET => {
	Process token [545]: T_WHITESPACE => \n    
	Process token [546]: T_VARIABLE => $settingsUpdated
	Process token [547]: T_WHITESPACE =>  
	Process token  548 : T_EQUAL => =
	Process token [549]: T_WHITESPACE =>  
	Process token [550]: T_STRING => FALSE
	Process token  551 : T_SEMICOLON => ;
	Process token [552]: T_WHITESPACE => \n
	Process token  553 : T_CLOSE_CURLY_BRACKET => }
	Process token [554]: T_WHITESPACE => \n\n
	Process token [555]: T_VARIABLE => $moo
	Process token [556]: T_WHITESPACE =>  
	Process token  557 : T_EQUAL => =
	Process token [558]: T_WHITESPACE =>  
	Process token [559]: T_CONSTANT_ENCAPSED_STRING => 'blar'
	Process token  560 : T_SEMICOLON => ;
	Process token [561]: T_WHITESPACE => \n
	Process token [562]: T_SWITCH => switch
	Process token [563]: T_WHITESPACE =>  
	Process token  564 : T_OPEN_PARENTHESIS => (
	Process token [565]: T_VARIABLE => $moo
	Process token  566 : T_CLOSE_PARENTHESIS => )
	Process token [567]: T_WHITESPACE => \n
	Process token  568 : T_OPEN_CURLY_BRACKET => {
	Process token [569]: T_WHITESPACE => \n    
	Process token [570]: T_CASE => case
	Process token [571]: T_WHITESPACE =>  
	Process token [572]: T_CONSTANT_ENCAPSED_STRING => 'blar'
	Process token  573 : T_COLON => :
	Process token [574]: T_WHITESPACE => \n        
	Process token [575]: T_IF => if
	Process token [576]: T_WHITESPACE =>  
	Process token  577 : T_OPEN_PARENTHESIS => (
	Process token [578]: T_VARIABLE => $moo
	Process token [579]: T_WHITESPACE =>  
	Process token [580]: T_IS_IDENTICAL => ===
	Process token [581]: T_WHITESPACE =>  
	Process token [582]: T_CONSTANT_ENCAPSED_STRING => 'blar2'
	Process token  583 : T_CLOSE_PARENTHESIS => )
	Process token [584]: T_WHITESPACE =>  
	Process token  585 : T_OPEN_CURLY_BRACKET => {
	Process token [586]: T_WHITESPACE => \n            
	Process token [587]: T_VARIABLE => $moo
	Process token [588]: T_WHITESPACE =>  
	Process token  589 : T_EQUAL => =
	Process token [590]: T_WHITESPACE =>  
	Process token [591]: T_CONSTANT_ENCAPSED_STRING => 'blar'
	Process token [592]: T_WHITESPACE => \n        
	Process token  593 : T_CLOSE_CURLY_BRACKET => }
	Process token [594]: T_WHITESPACE => \n    
	Process token [595]: T_RETURN => return
	Process token [596]: T_WHITESPACE =>  
	Process token [597]: T_VARIABLE => $moo
	Process token  598 : T_SEMICOLON => ;
	Process token [599]: T_WHITESPACE => \n\n    
	Process token [600]: T_DEFAULT => default
	Process token  601 : T_COLON => :
	Process token [602]: T_WHITESPACE => \n        
	Process token [603]: T_VARIABLE => $moo
	Process token [604]: T_WHITESPACE =>  
	Process token  605 : T_EQUAL => =
	Process token [606]: T_WHITESPACE =>  
	Process token [607]: T_CONSTANT_ENCAPSED_STRING => 'moo'
	Process token  608 : T_SEMICOLON => ;
	Process token [609]: T_WHITESPACE => \n    
	Process token [610]: T_BREAK => break
	Process token  611 : T_SEMICOLON => ;
	Process token [612]: T_WHITESPACE => \n
	Process token  613 : T_CLOSE_CURLY_BRACKET => }
	Process token [614]: T_WHITESPACE => \n\n
	Process token [615]: T_DO => do
	Process token [616]: T_WHITESPACE =>  
	Process token  617 : T_OPEN_CURLY_BRACKET => {
	Process token [618]: T_WHITESPACE => \n
	Process token  619 : T_CLOSE_CURLY_BRACKET => }
	Process token [620]: T_WHITESPACE => \n
	Process token [621]: T_WHILE => while
	Process token [622]: T_WHITESPACE =>  
	Process token  623 : T_OPEN_PARENTHESIS => (
	Process token [624]: T_STRING => true
	Process token  625 : T_CLOSE_PARENTHESIS => )
	Process token  626 : T_SEMICOLON => ;
	Process token [627]: T_WHITESPACE => \n\n
	Process token [628]: T_TRY => try
	Process token [629]: T_WHITESPACE =>  
	Process token  630 : T_OPEN_CURLY_BRACKET => {
	Process token [631]: T_WHITESPACE => \n    
	Process token [632]: T_COMMENT => // Something\n
	Process token  633 : T_CLOSE_CURLY_BRACKET => }
	Process token [634]: T_WHITESPACE =>  
	Process token [635]: T_CATCH => catch
	Process token [636]: T_WHITESPACE =>  
	Process token  637 : T_OPEN_PARENTHESIS => (
	Process token [638]: T_STRING => Exception
	Process token [639]: T_WHITESPACE =>  
	Process token [640]: T_VARIABLE => $e
	Process token  641 : T_CLOSE_PARENTHESIS => )
	Process token [642]: T_WHITESPACE =>  
	Process token  643 : T_OPEN_CURLY_BRACKET => {
	Process token [644]: T_WHITESPACE => \n    
	Process token [645]: T_COMMENT => // Something\n
	Process token  646 : T_CLOSE_CURLY_BRACKET => }
	Process token [647]: T_WHITESPACE => \n\n
	Process token [648]: T_TRY => try
	Process token [649]: T_WHITESPACE =>  
	Process token  650 : T_OPEN_CURLY_BRACKET => {
	Process token [651]: T_WHITESPACE => \n\n    
	Process token [652]: T_COMMENT => // Something\n
	Process token [653]: T_WHITESPACE => \n
	Process token  654 : T_CLOSE_CURLY_BRACKET => }
	Process token [655]: T_WHITESPACE =>  
	Process token [656]: T_CATCH => catch
	Process token [657]: T_WHITESPACE =>  
	Process token  658 : T_OPEN_PARENTHESIS => (
	Process token [659]: T_STRING => Exception
	Process token [660]: T_WHITESPACE =>  
	Process token [661]: T_VARIABLE => $e
	Process token  662 : T_CLOSE_PARENTHESIS => )
	Process token [663]: T_WHITESPACE =>  
	Process token  664 : T_OPEN_CURLY_BRACKET => {
	Process token [665]: T_WHITESPACE => \n\n    
	Process token [666]: T_COMMENT => // Something\n
	Process token [667]: T_WHITESPACE => \n
	Process token  668 : T_CLOSE_CURLY_BRACKET => }
	Process token [669]: T_WHITESPACE => \n\n
	Process token [670]: T_IF => if
	Process token [671]: T_WHITESPACE =>  
	Process token  672 : T_OPEN_PARENTHESIS => (
	Process token [673]: T_VARIABLE => $one
	Process token  674 : T_CLOSE_PARENTHESIS => )
	Process token [675]: T_WHITESPACE =>  
	Process token  676 : T_OPEN_CURLY_BRACKET => {
	Process token [677]: T_WHITESPACE => \n
	Process token  678 : T_CLOSE_CURLY_BRACKET => }
	Process token [679]: T_WHITESPACE => \n
	Process token [680]: T_ELSEIF => elseif
	Process token [681]: T_WHITESPACE =>  
	Process token  682 : T_OPEN_PARENTHESIS => (
	Process token [683]: T_VARIABLE => $two
	Process token  684 : T_CLOSE_PARENTHESIS => )
	Process token [685]: T_WHITESPACE =>  
	Process token  686 : T_OPEN_CURLY_BRACKET => {
	Process token [687]: T_WHITESPACE => \n
	Process token  688 : T_CLOSE_CURLY_BRACKET => }
	Process token [689]: T_WHITESPACE => \n
	Process token [690]: T_COMMENT => // else if something\n
	Process token [691]: T_ELSE => else
	Process token [692]: T_WHITESPACE =>  
	Process token [693]: T_IF => if
	Process token [694]: T_WHITESPACE =>  
	Process token  695 : T_OPEN_PARENTHESIS => (
	Process token [696]: T_VARIABLE => $three
	Process token  697 : T_CLOSE_PARENTHESIS => )
	Process token [698]: T_WHITESPACE =>  
	Process token  699 : T_OPEN_CURLY_BRACKET => {
	Process token [700]: T_WHITESPACE => \n
	Process token  701 : T_CLOSE_CURLY_BRACKET => }
	Process token [702]: T_WHITESPACE =>  
	Process token [703]: T_COMMENT => // else do something\n
	Process token [704]: T_ELSE => else
	Process token [705]: T_WHITESPACE =>  
	Process token  706 : T_OPEN_CURLY_BRACKET => {
	Process token [707]: T_WHITESPACE => \n
	Process token  708 : T_CLOSE_CURLY_BRACKET => }
	Process token [709]: T_WHITESPACE => \n\n
	Process token [710]: T_IF => if
	Process token [711]: T_WHITESPACE =>  
	Process token  712 : T_OPEN_PARENTHESIS => (
	Process token [713]: T_VARIABLE => $one
	Process token  714 : T_CLOSE_PARENTHESIS => )
	Process token [715]: T_WHITESPACE =>  
	Process token  716 : T_OPEN_CURLY_BRACKET => {
	Process token [717]: T_WHITESPACE => \n\n
	Process token  718 : T_CLOSE_CURLY_BRACKET => }
	Process token [719]: T_WHITESPACE => \n\n
	Process token [720]: T_DO => do
	Process token [721]: T_WHITESPACE =>  
	Process token  722 : T_OPEN_CURLY_BRACKET => {
	Process token [723]: T_WHITESPACE => \n    
	Process token [724]: T_ECHO => echo
	Process token [725]: T_WHITESPACE =>  
	Process token [726]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  727 : T_SEMICOLON => ;
	Process token [728]: T_WHITESPACE => \n
	Process token  729 : T_CLOSE_CURLY_BRACKET => }
	Process token [730]: T_WHITESPACE =>  
	Process token [731]: T_WHILE => while
	Process token [732]: T_WHITESPACE =>  
	Process token  733 : T_OPEN_PARENTHESIS => (
	Process token [734]: T_WHITESPACE =>   
	Process token [735]: T_VARIABLE => $blah
	Process token [736]: T_WHITESPACE =>   
	Process token  737 : T_CLOSE_PARENTHESIS => )
	Process token  738 : T_SEMICOLON => ;
	Process token [739]: T_WHITESPACE => \n\n
	Process token [740]: T_IF => if
	Process token [741]: T_WHITESPACE =>  
	Process token  742 : T_OPEN_PARENTHESIS => (
	Process token [743]: T_VARIABLE => $one
	Process token  744 : T_CLOSE_PARENTHESIS => )
	Process token [745]: T_WHITESPACE =>  
	Process token  746 : T_OPEN_CURLY_BRACKET => {
	Process token [747]: T_WHITESPACE => \n
	Process token  748 : T_CLOSE_CURLY_BRACKET => }
	Process token [749]: T_WHITESPACE => \n
	Process token [750]: T_COMMENT => // No blank line here.\n
	Process token [751]: T_IF => if
	Process token [752]: T_WHITESPACE =>  
	Process token  753 : T_OPEN_PARENTHESIS => (
	Process token [754]: T_VARIABLE => $two
	Process token  755 : T_CLOSE_PARENTHESIS => )
	Process token [756]: T_WHITESPACE =>  
	Process token  757 : T_OPEN_CURLY_BRACKET => {
	Process token [758]: T_WHITESPACE => \n
	Process token  759 : T_CLOSE_CURLY_BRACKET => }
	Process token [760]: T_WHITESPACE => \n\n
	Process token [761]: T_SWITCH => switch
	Process token [762]: T_WHITESPACE =>  
	Process token  763 : T_OPEN_PARENTHESIS => (
	Process token [764]: T_VARIABLE => $moo
	Process token  765 : T_CLOSE_PARENTHESIS => )
	Process token [766]: T_WHITESPACE => \n
	Process token  767 : T_OPEN_CURLY_BRACKET => {
	Process token [768]: T_WHITESPACE => \n    
	Process token [769]: T_CASE => case
	Process token [770]: T_WHITESPACE =>  
	Process token [771]: T_CONSTANT_ENCAPSED_STRING => 'blar'
	Process token  772 : T_COLON => :
	Process token [773]: T_WHITESPACE => \n        
	Process token [774]: T_IF => if
	Process token [775]: T_WHITESPACE =>  
	Process token  776 : T_OPEN_PARENTHESIS => (
	Process token [777]: T_VARIABLE => $moo
	Process token [778]: T_WHITESPACE =>  
	Process token [779]: T_IS_IDENTICAL => ===
	Process token [780]: T_WHITESPACE =>  
	Process token [781]: T_CONSTANT_ENCAPSED_STRING => 'blar2'
	Process token  782 : T_CLOSE_PARENTHESIS => )
	Process token [783]: T_WHITESPACE =>  
	Process token  784 : T_OPEN_CURLY_BRACKET => {
	Process token [785]: T_WHITESPACE => \n            
	Process token [786]: T_VARIABLE => $moo
	Process token [787]: T_WHITESPACE =>  
	Process token  788 : T_EQUAL => =
	Process token [789]: T_WHITESPACE =>  
	Process token [790]: T_CONSTANT_ENCAPSED_STRING => 'blar'
	Process token [791]: T_WHITESPACE => \n        
	Process token  792 : T_CLOSE_CURLY_BRACKET => }
	Process token [793]: T_WHITESPACE => \n\n    
	Process token [794]: T_RETURN => return
	Process token [795]: T_WHITESPACE =>  
	Process token [796]: T_VARIABLE => $moo
	Process token  797 : T_SEMICOLON => ;
	Process token [798]: T_WHITESPACE => \n
	Process token  799 : T_CLOSE_CURLY_BRACKET => }
	Process token [800]: T_WHITESPACE => \n\n
	Process token [801]: T_TRY => try
	Process token [802]: T_WHITESPACE =>  
	Process token  803 : T_OPEN_CURLY_BRACKET => {
	Process token [804]: T_WHITESPACE => \n    
	Process token [805]: T_COMMENT => // Something\n
	Process token  806 : T_CLOSE_CURLY_BRACKET => }
	Process token [807]: T_WHITESPACE => \n
	Process token [808]: T_CATCH => catch
	Process token [809]: T_WHITESPACE =>  
	Process token  810 : T_OPEN_PARENTHESIS => (
	Process token [811]: T_STRING => Exception
	Process token [812]: T_WHITESPACE =>  
	Process token [813]: T_VARIABLE => $e
	Process token  814 : T_CLOSE_PARENTHESIS => )
	Process token [815]: T_WHITESPACE =>  
	Process token  816 : T_OPEN_CURLY_BRACKET => {
	Process token [817]: T_WHITESPACE => \n    
	Process token [818]: T_COMMENT => // Something\n
	Process token  819 : T_CLOSE_CURLY_BRACKET => }
	Process token [820]: T_WHITESPACE => \n
	Process token [821]: T_FINALLY => finally
	Process token [822]: T_WHITESPACE =>  
	Process token  823 : T_OPEN_CURLY_BRACKET => {
	Process token [824]: T_WHITESPACE => \n    
	Process token [825]: T_COMMENT => // Something\n
	Process token  826 : T_CLOSE_CURLY_BRACKET => }
	Process token [827]: T_WHITESPACE => \n\n
	Process token [828]: T_IF => if
	Process token [829]: T_WHITESPACE =>  
	Process token  830 : T_OPEN_PARENTHESIS => (
	Process token [831]: T_VARIABLE => $foo
	Process token  832 : T_CLOSE_PARENTHESIS => )
	Process token [833]: T_WHITESPACE =>  
	Process token  834 : T_OPEN_CURLY_BRACKET => {
	Process token [835]: T_WHITESPACE => \n\n\n    
	Process token [836]: T_DOC_COMMENT => /**\n     * Comment\n     */
		*** START COMMENT TOKENIZING ***
		Create comment token: T_DOC_COMMENT_OPEN_TAG => /**
		Create comment token: T_DOC_COMMENT_WHITESPACE => \n
		Create comment token: T_DOC_COMMENT_WHITESPACE =>      
		Create comment token: T_DOC_COMMENT_STAR => *
		Create comment token: T_DOC_COMMENT_WHITESPACE =>  
		Create comment token: T_DOC_COMMENT_STRING => Comment
		Create comment token: T_DOC_COMMENT_WHITESPACE => \n
		Create comment token: T_DOC_COMMENT_WHITESPACE =>      
		Create comment token: T_DOC_COMMENT_CLOSE_TAG => */
		*** END COMMENT TOKENIZING ***
	Process token [837]: T_WHITESPACE => \n    
	Process token [838]: T_FUNCTION => function
	Process token [839]: T_WHITESPACE =>  
	Process token [840]: T_STRING => foo
	Process token  841 : T_OPEN_PARENTHESIS => (
	Process token  842 : T_CLOSE_PARENTHESIS => )
	Process token [843]: T_WHITESPACE =>  
	Process token  844 : T_OPEN_CURLY_BRACKET => {
	Process token [845]: T_WHITESPACE => \n        
	Process token [846]: T_COMMENT => // Code here\n
	Process token [847]: T_WHITESPACE =>     
	Process token  848 : T_CLOSE_CURLY_BRACKET => }
	Process token [849]: T_WHITESPACE => \n\n\n    
	Process token [850]: T_DOC_COMMENT => /**\n     * Comment\n     */
		*** START COMMENT TOKENIZING ***
		Create comment token: T_DOC_COMMENT_OPEN_TAG => /**
		Create comment token: T_DOC_COMMENT_WHITESPACE => \n
		Create comment token: T_DOC_COMMENT_WHITESPACE =>      
		Create comment token: T_DOC_COMMENT_STAR => *
		Create comment token: T_DOC_COMMENT_WHITESPACE =>  
		Create comment token: T_DOC_COMMENT_STRING => Comment
		Create comment token: T_DOC_COMMENT_WHITESPACE => \n
		Create comment token: T_DOC_COMMENT_WHITESPACE =>      
		Create comment token: T_DOC_COMMENT_CLOSE_TAG => */
		*** END COMMENT TOKENIZING ***
	Process token [851]: T_WHITESPACE => \n    
	Process token [852]: T_CLASS => class
	Process token [853]: T_WHITESPACE =>  
	Process token [854]: T_STRING => bar
	Process token  855 : T_OPEN_PARENTHESIS => (
	Process token  856 : T_CLOSE_PARENTHESIS => )
	Process token [857]: T_WHITESPACE =>  
	Process token  858 : T_OPEN_CURLY_BRACKET => {
	Process token [859]: T_WHITESPACE => \n\n    
	Process token  860 : T_CLOSE_CURLY_BRACKET => }
	Process token [861]: T_COMMENT => //end class\n
	Process token [862]: T_WHITESPACE => \n\n
	Process token  863 : T_CLOSE_CURLY_BRACKET => }
	Process token [864]: T_WHITESPACE => \n\n
	Process token [865]: T_IF => if
	Process token [866]: T_WHITESPACE =>  
	Process token  867 : T_OPEN_PARENTHESIS => (
	Process token [868]: T_STRING => true
	Process token  869 : T_CLOSE_PARENTHESIS => )
	Process token [870]: T_WHITESPACE =>  
	Process token  871 : T_OPEN_CURLY_BRACKET => {
	Process token [872]: T_WHITESPACE =>  
	Process token [873]: T_COMMENT => // some comment goes here\n
	Process token [874]: T_WHITESPACE => \n    
	Process token [875]: T_ECHO => echo
	Process token [876]: T_WHITESPACE =>  
	Process token [877]: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token  878 : T_SEMICOLON => ;
	Process token [879]: T_WHITESPACE => \n
	Process token  880 : T_CLOSE_CURLY_BRACKET => }
	Process token [881]: T_WHITESPACE => \n\n
	Process token [882]: T_IF => if
	Process token [883]: T_WHITESPACE =>  
	Process token  884 : T_OPEN_PARENTHESIS => (
	Process token [885]: T_STRING => true
	Process token  886 : T_CLOSE_PARENTHESIS => )
	Process token [887]: T_WHITESPACE =>  
	Process token  888 : T_OPEN_CURLY_BRACKET => {
	Process token [889]: T_WHITESPACE =>  
	Process token [890]: T_ECHO => echo
	Process token [891]: T_WHITESPACE =>  
	Process token [892]: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token  893 : T_SEMICOLON => ;
	Process token [894]: T_WHITESPACE => \n\n    
	Process token [895]: T_ECHO => echo
	Process token [896]: T_WHITESPACE =>  
	Process token [897]: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token  898 : T_SEMICOLON => ;
	Process token [899]: T_WHITESPACE => \n
	Process token  900 : T_CLOSE_CURLY_BRACKET => }
	Process token [901]: T_WHITESPACE => \n\n
	Process token [902]: T_IF => if
	Process token [903]: T_WHITESPACE =>  
	Process token  904 : T_OPEN_PARENTHESIS => (
	Process token [905]: T_VARIABLE => $true
	Process token  906 : T_CLOSE_PARENTHESIS => )
	Process token [907]: T_WHITESPACE =>  
	Process token  908 : T_OPEN_CURLY_BRACKET => {
	Process token [909]: T_WHITESPACE => \n    
	Process token [910]: T_ECHO => echo
	Process token [911]: T_WHITESPACE =>  
	Process token [912]: T_CONSTANT_ENCAPSED_STRING => 'hi 2'
	Process token  913 : T_SEMICOLON => ;
	Process token [914]: T_WHITESPACE => \n
	Process token  915 : T_CLOSE_CURLY_BRACKET => }
	Process token [916]: T_COMMENT => //end if\n
	Process token [917]: T_ECHO => echo
	Process token [918]: T_WHITESPACE =>  
	Process token [919]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  920 : T_SEMICOLON => ;
	Process token [921]: T_WHITESPACE => \n\n
	Process token [922]: T_IF => if
	Process token [923]: T_WHITESPACE =>  
	Process token  924 : T_OPEN_PARENTHESIS => (
	Process token [925]: T_VARIABLE => $true
	Process token  926 : T_CLOSE_PARENTHESIS => )
	Process token [927]: T_WHITESPACE =>  
	Process token  928 : T_OPEN_CURLY_BRACKET => {
	Process token [929]: T_WHITESPACE => \n    
	Process token [930]: T_ECHO => echo
	Process token [931]: T_WHITESPACE =>  
	Process token [932]: T_CONSTANT_ENCAPSED_STRING => 'hi 2'
	Process token  933 : T_SEMICOLON => ;
	Process token [934]: T_WHITESPACE => \n
	Process token  935 : T_CLOSE_CURLY_BRACKET => }
	Process token [936]: T_WHITESPACE =>  
	Process token [937]: T_COMMENT => // phpcs:enable Standard.Category.Sniff -- for reasons.\n
	Process token [938]: T_ECHO => echo
	Process token [939]: T_WHITESPACE =>  
	Process token [940]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  941 : T_SEMICOLON => ;
	Process token [942]: T_WHITESPACE => \n\n
	Process token [943]: T_CLOSE_TAG => ?>\n
	Process token [944]: T_OPEN_TAG => <?php 
	Process token [945]: T_FOREACH => foreach
	Process token  946 : T_OPEN_PARENTHESIS => (
	Process token [947]: T_VARIABLE => $formset
	Process token  948 : T_OPEN_SQUARE_BRACKET => [
	Process token [949]: T_CONSTANT_ENCAPSED_STRING => 'Fieldset'
	Process token  950 : T_CLOSE_SQUARE_BRACKET => ]
	Process token [951]: T_WHITESPACE =>  
	Process token [952]: T_AS => as
	Process token [953]: T_WHITESPACE =>  
	Process token [954]: T_VARIABLE => $fieldset
	Process token  955 : T_CLOSE_PARENTHESIS => )
	Process token  956 : T_COLON => :
	Process token [957]: T_WHITESPACE =>  
	Process token [958]: T_CLOSE_TAG => ?>\n
	Process token [959]: T_INLINE_HTML => \n    
	Process token [960]: T_OPEN_TAG => <?php 
	Process token [961]: T_FOREACH => foreach
	Process token  962 : T_OPEN_PARENTHESIS => (
	Process token [963]: T_VARIABLE => $fieldset
	Process token  964 : T_OPEN_SQUARE_BRACKET => [
	Process token [965]: T_CONSTANT_ENCAPSED_STRING => 'Field'
	Process token  966 : T_CLOSE_SQUARE_BRACKET => ]
	Process token [967]: T_WHITESPACE =>  
	Process token [968]: T_AS => as
	Process token [969]: T_WHITESPACE =>  
	Process token [970]: T_VARIABLE => $field
	Process token  971 : T_CLOSE_PARENTHESIS => )
	Process token  972 : T_COLON => :
	Process token [973]: T_WHITESPACE => \n\n        
	Process token [974]: T_ECHO => echo
	Process token [975]: T_WHITESPACE =>  
	Process token [976]: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token  977 : T_SEMICOLON => ;
	Process token [978]: T_WHITESPACE => \n    
	Process token [979]: T_CLOSE_TAG => ?>\n
	Process token [980]: T_INLINE_HTML =>     
	Process token [981]: T_OPEN_TAG => <?php 
	Process token [982]: T_ENDFOREACH => endforeach
	Process token  983 : T_SEMICOLON => ;
	Process token [984]: T_WHITESPACE =>  
	Process token [985]: T_CLOSE_TAG => ?>\n
	Process token [986]: T_OPEN_TAG => <?php 
	Process token [987]: T_ENDFOREACH => endforeach
	Process token  988 : T_SEMICOLON => ;
	Process token [989]: T_WHITESPACE =>  
	Process token [990]: T_CLOSE_TAG => ?>\n
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	=> Found curly bracket opener at 7
	=> Found curly bracket closer at 9 for 7
	=> Found curly bracket opener at 21
	=> Found curly bracket closer at 23 for 21
	=> Found curly bracket opener at 31
		=> Found curly bracket opener at 55
		=> Found curly bracket closer at 58 for 55
		=> Found curly bracket opener at 67
		=> Found curly bracket closer at 70 for 67
		=> Found curly bracket opener at 84
			=> Found curly bracket opener at 89
			=> Found curly bracket closer at 92 for 89
		=> Found curly bracket closer at 103 for 84
	=> Found curly bracket closer at 105 for 31
	=> Found curly bracket opener at 114
	=> Found curly bracket closer at 116 for 114
	=> Found curly bracket opener at 124
	=> Found curly bracket closer at 126 for 124
	=> Found curly bracket opener at 136
	=> Found curly bracket closer at 138 for 136
	=> Found curly bracket opener at 146
	=> Found curly bracket closer at 148 for 146
	=> Found curly bracket opener at 156
	=> Found curly bracket closer at 158 for 156
	=> Found curly bracket opener at 166
	=> Found curly bracket closer at 168 for 166
	=> Found curly bracket opener at 178
	=> Found curly bracket closer at 180 for 178
	=> Found curly bracket opener at 188
	=> Found curly bracket closer at 190 for 188
	=> Found curly bracket opener at 211
	=> Found curly bracket closer at 220 for 211
	=> Found curly bracket opener at 235
		=> Found curly bracket opener at 250
		=> Found curly bracket closer at 255 for 250
		=> Found curly bracket opener at 273
		=> Found curly bracket closer at 278 for 273
	=> Found curly bracket closer at 284 for 235
	=> Found curly bracket opener at 293
		=> Found curly bracket opener at 308
		=> Found curly bracket closer at 313 for 308
		=> Found curly bracket opener at 331
		=> Found curly bracket closer at 336 for 331
	=> Found curly bracket closer at 338 for 293
	=> Found curly bracket opener at 351
		=> Found curly bracket opener at 360
		=> Found curly bracket closer at 363 for 360
	=> Found curly bracket closer at 369 for 351
	=> Found curly bracket opener at 378
		=> Found curly bracket opener at 402
			=> Found curly bracket opener at 412
			=> Found curly bracket closer at 415 for 412
		=> Found curly bracket closer at 419 for 402
		=> Found curly bracket opener at 433
			=> Found curly bracket opener at 438
			=> Found curly bracket closer at 448 for 438
		=> Found curly bracket closer at 458 for 433
	=> Found curly bracket closer at 460 for 378
	=> Found curly bracket opener at 469
		=> Found curly bracket opener at 478
		=> Found curly bracket closer at 481 for 478
	=> Found curly bracket closer at 484 for 469
	=> Found curly bracket opener at 499
	=> Found curly bracket closer at 508 for 499
	=> Found curly bracket opener at 540
	=> Found curly bracket closer at 550 for 540
	=> Found curly bracket opener at 565
		=> Found curly bracket opener at 576
		=> Found curly bracket closer at 579 for 576
	=> Found curly bracket closer at 581 for 565
	=> Found curly bracket opener at 615
	=> Found curly bracket closer at 625 for 615
	=> Found curly bracket opener at 641
		=> Found curly bracket opener at 660
		=> Found curly bracket closer at 670 for 660
	=> Found curly bracket closer at 695 for 641
	=> Found curly bracket opener at 700
	=> Found curly bracket closer at 702 for 700
	=> Found curly bracket opener at 714
	=> Found curly bracket closer at 718 for 714
	=> Found curly bracket opener at 728
	=> Found curly bracket closer at 732 for 728
	=> Found curly bracket opener at 737
	=> Found curly bracket closer at 743 for 737
	=> Found curly bracket opener at 753
	=> Found curly bracket closer at 759 for 753
	=> Found curly bracket opener at 768
	=> Found curly bracket closer at 770 for 768
	=> Found curly bracket opener at 778
	=> Found curly bracket closer at 780 for 778
	=> Found curly bracket opener at 791
	=> Found curly bracket closer at 793 for 791
	=> Found curly bracket opener at 798
	=> Found curly bracket closer at 800 for 798
	=> Found curly bracket opener at 809
	=> Found curly bracket closer at 812 for 809
	=> Found curly bracket opener at 817
	=> Found curly bracket closer at 825 for 817
	=> Found curly bracket opener at 843
	=> Found curly bracket closer at 845 for 843
	=> Found curly bracket opener at 854
	=> Found curly bracket closer at 856 for 854
	=> Found curly bracket opener at 865
		=> Found curly bracket opener at 884
		=> Found curly bracket closer at 894 for 884
	=> Found curly bracket closer at 903 for 865
	=> Found curly bracket opener at 908
	=> Found curly bracket closer at 912 for 908
	=> Found curly bracket opener at 922
	=> Found curly bracket closer at 926 for 922
	=> Found curly bracket opener at 930
	=> Found curly bracket closer at 934 for 930
	=> Found curly bracket opener at 943
		=> Found curly bracket opener at 965
		=> Found curly bracket closer at 970 for 965
		=> Found curly bracket opener at 992
		=> Found curly bracket closer at 996 for 992
	=> Found curly bracket closer at 1000 for 943
	=> Found curly bracket opener at 1009
	=> Found curly bracket closer at 1019 for 1009
	=> Found curly bracket opener at 1028
	=> Found curly bracket closer at 1042 for 1028
	=> Found curly bracket opener at 1051
	=> Found curly bracket closer at 1059 for 1051
	=> Found curly bracket opener at 1073
	=> Found curly bracket closer at 1081 for 1073
	=> Found square bracket opener at 1095
	=> Found square bracket closer at 1097 for 1095
	=> Found square bracket opener at 1112
	=> Found square bracket closer at 1114 for 1112
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 1:T_IF => if
	=> Begin scope map recursion at token 1 with depth 1
	Process token 2 on line 2 []: T_WHITESPACE =>  
	Process token 3 on line 2 []: T_OPEN_PARENTHESIS => (
	Process token 4 on line 2 []: T_VARIABLE => $something
	Process token 5 on line 2 []: T_CLOSE_PARENTHESIS => )
	Process token 6 on line 2 []: T_WHITESPACE =>  
	Process token 7 on line 2 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1:T_IF
	Process token 8 on line 2 [opener:7;]: T_WHITESPACE => \n
	Process token 9 on line 3 [opener:7;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (9:T_CLOSE_CURLY_BRACKET) for 1:T_IF
	Start scope map at 11:T_FOREACH => foreach
	=> Begin scope map recursion at token 11 with depth 1
	Process token 12 on line 4 []: T_WHITESPACE =>  
	Process token 13 on line 4 []: T_OPEN_PARENTHESIS => (
	Process token 14 on line 4 []: T_VARIABLE => $this
	Process token 15 on line 4 []: T_WHITESPACE =>  
	Process token 16 on line 4 []: T_AS => as
	Process token 17 on line 4 []: T_WHITESPACE =>  
	Process token 18 on line 4 []: T_VARIABLE => $that
	Process token 19 on line 4 []: T_CLOSE_PARENTHESIS => )
	Process token 20 on line 4 []: T_WHITESPACE =>  
	Process token 21 on line 4 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 11:T_FOREACH
	Process token 22 on line 4 [opener:21;]: T_WHITESPACE => \n
	Process token 23 on line 5 [opener:21;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (23:T_CLOSE_CURLY_BRACKET) for 11:T_FOREACH
	Start scope map at 25:T_WHILE => while
	=> Begin scope map recursion at token 25 with depth 1
	Process token 26 on line 6 []: T_WHITESPACE =>  
	Process token 27 on line 6 []: T_OPEN_PARENTHESIS => (
	Process token 28 on line 6 []: T_TRUE => true
	Process token 29 on line 6 []: T_CLOSE_PARENTHESIS => )
	Process token 30 on line 6 []: T_WHITESPACE =>  
	Process token 31 on line 6 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 25:T_WHILE
	Process token 32 on line 6 [opener:31;]: T_WHITESPACE => \n
	Process token 33 on line 7 [opener:31;]: T_WHITESPACE =>     
	Process token 34 on line 7 [opener:31;]: T_FOR => for
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 34 with depth 2
		Process token 35 on line 7 []: T_WHITESPACE =>  
		Process token 36 on line 7 []: T_OPEN_PARENTHESIS => (
		Process token 37 on line 7 []: T_VARIABLE => $i
		Process token 38 on line 7 []: T_WHITESPACE =>  
		Process token 39 on line 7 []: T_EQUAL => =
		Process token 40 on line 7 []: T_WHITESPACE =>  
		Process token 41 on line 7 []: T_LNUMBER => 0
		Process token 42 on line 7 []: T_SEMICOLON => ;
		Process token 43 on line 7 []: T_WHITESPACE =>  
		Process token 44 on line 7 []: T_VARIABLE => $i
		Process token 45 on line 7 []: T_WHITESPACE =>  
		Process token 46 on line 7 []: T_LESS_THAN => <
		Process token 47 on line 7 []: T_WHITESPACE =>  
		Process token 48 on line 7 []: T_LNUMBER => 10
		Process token 49 on line 7 []: T_SEMICOLON => ;
		Process token 50 on line 7 []: T_WHITESPACE =>  
		Process token 51 on line 7 []: T_VARIABLE => $i
		Process token 52 on line 7 []: T_INC => ++
		Process token 53 on line 7 []: T_CLOSE_PARENTHESIS => )
		Process token 54 on line 7 []: T_WHITESPACE =>  
		Process token 55 on line 7 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 34:T_FOR
		Process token 56 on line 7 [opener:55;]: T_WHITESPACE => \n
		Process token 57 on line 8 [opener:55;]: T_WHITESPACE =>     
		Process token 58 on line 8 [opener:55;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (58:T_CLOSE_CURLY_BRACKET) for 34:T_FOR
	Process token 59 on line 8 [opener:31;]: T_WHITESPACE => \n
	Process token 60 on line 9 [opener:31;]: T_WHITESPACE =>     
	Process token 61 on line 9 [opener:31;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 61 with depth 2
		Process token 62 on line 9 []: T_WHITESPACE =>  
		Process token 63 on line 9 []: T_OPEN_PARENTHESIS => (
		Process token 64 on line 9 []: T_VARIABLE => $something
		Process token 65 on line 9 []: T_CLOSE_PARENTHESIS => )
		Process token 66 on line 9 []: T_WHITESPACE =>  
		Process token 67 on line 9 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 61:T_IF
		Process token 68 on line 9 [opener:67;]: T_WHITESPACE => \n
		Process token 69 on line 10 [opener:67;]: T_WHITESPACE =>     
		Process token 70 on line 10 [opener:67;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (70:T_CLOSE_CURLY_BRACKET) for 61:T_IF
	Process token 71 on line 10 [opener:31;]: T_WHITESPACE => \n
	Process token 72 on line 11 [opener:31;]: T_WHITESPACE => \n
	Process token 73 on line 12 [opener:31;]: T_WHITESPACE =>     
	Process token 74 on line 12 [opener:31;]: T_FOREACH => foreach
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 74 with depth 2
		Process token 75 on line 12 []: T_WHITESPACE =>  
		Process token 76 on line 12 []: T_OPEN_PARENTHESIS => (
		Process token 77 on line 12 []: T_VARIABLE => $this
		Process token 78 on line 12 []: T_WHITESPACE =>  
		Process token 79 on line 12 []: T_AS => as
		Process token 80 on line 12 []: T_WHITESPACE =>  
		Process token 81 on line 12 []: T_VARIABLE => $that
		Process token 82 on line 12 []: T_CLOSE_PARENTHESIS => )
		Process token 83 on line 12 []: T_WHITESPACE =>  
		Process token 84 on line 12 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 74:T_FOREACH
		Process token 85 on line 12 [opener:84;]: T_WHITESPACE => \n
		Process token 86 on line 13 [opener:84;]: T_WHITESPACE =>         
		Process token 87 on line 13 [opener:84;]: T_DO => do
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 87 with depth 3
			Process token 88 on line 13 []: T_WHITESPACE =>  
			Process token 89 on line 13 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 87:T_DO
			Process token 90 on line 13 [opener:89;]: T_WHITESPACE => \n
			Process token 91 on line 14 [opener:89;]: T_WHITESPACE =>         
			Process token 92 on line 14 [opener:89;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (92:T_CLOSE_CURLY_BRACKET) for 87:T_DO
		Process token 93 on line 14 [opener:84;]: T_WHITESPACE =>  
		Process token 94 on line 14 [opener:84;]: T_WHILE => while
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 94 with depth 3
			Process token 95 on line 14 []: T_WHITESPACE =>  
			Process token 96 on line 14 []: T_OPEN_PARENTHESIS => (
			Process token 97 on line 14 []: T_TRUE => true
			Process token 98 on line 14 []: T_CLOSE_PARENTHESIS => )
			Process token 99 on line 14 []: T_SEMICOLON => ;
			Process token 100 on line 14 []: T_WHITESPACE => \n
			Process token 101 on line 15 []: T_WHITESPACE => \n
			Process token 102 on line 16 []: T_WHITESPACE =>     
			Process token 103 on line 16 []: T_CLOSE_CURLY_BRACKET => }
			=> Found curly brace closer before scope opener for 94:T_WHILE, bailing
		Process token 103 on line 16 [opener:84;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (103:T_CLOSE_CURLY_BRACKET) for 74:T_FOREACH
	Process token 104 on line 16 [opener:31;]: T_WHITESPACE => \n
	Process token 105 on line 17 [opener:31;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (105:T_CLOSE_CURLY_BRACKET) for 25:T_WHILE
	Start scope map at 108:T_IF => if
	=> Begin scope map recursion at token 108 with depth 1
	Process token 109 on line 19 []: T_WHITESPACE =>  
	Process token 110 on line 19 []: T_OPEN_PARENTHESIS => (
	Process token 111 on line 19 []: T_VARIABLE => $one
	Process token 112 on line 19 []: T_CLOSE_PARENTHESIS => )
	Process token 113 on line 19 []: T_WHITESPACE =>  
	Process token 114 on line 19 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 108:T_IF
	Process token 115 on line 19 [opener:114;]: T_WHITESPACE => \n
	Process token 116 on line 20 [opener:114;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (116:T_CLOSE_CURLY_BRACKET) for 108:T_IF
	Start scope map at 118:T_ELSE => else
	=> Begin scope map recursion at token 118 with depth 1
	Process token 119 on line 20 []: T_WHITESPACE =>  
	Process token 120 on line 20 []: T_OPEN_PARENTHESIS => (
	Process token 121 on line 20 []: T_VARIABLE => $two
	Process token 122 on line 20 []: T_CLOSE_PARENTHESIS => )
	Process token 123 on line 20 []: T_WHITESPACE =>  
	Process token 124 on line 20 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 118:T_ELSE
	Process token 125 on line 20 [opener:124;]: T_WHITESPACE => \n
	Process token 126 on line 21 [opener:124;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (126:T_CLOSE_CURLY_BRACKET) for 118:T_ELSE
	Start scope map at 128:T_ELSE => else
	=> Begin scope map recursion at token 128 with depth 1
	Process token 129 on line 21 []: T_WHITESPACE =>  
	Process token 130 on line 21 []: T_IF => if
	=> Found new opening condition before scope opener for 128:T_ELSE, backtracking
	Start scope map at 130:T_IF => if
	=> Begin scope map recursion at token 130 with depth 1
	Process token 131 on line 21 []: T_WHITESPACE =>  
	Process token 132 on line 21 []: T_OPEN_PARENTHESIS => (
	Process token 133 on line 21 []: T_VARIABLE => $three
	Process token 134 on line 21 []: T_CLOSE_PARENTHESIS => )
	Process token 135 on line 21 []: T_WHITESPACE =>  
	Process token 136 on line 21 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 130:T_IF
	Process token 137 on line 21 [opener:136;]: T_WHITESPACE => \n
	Process token 138 on line 22 [opener:136;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (138:T_CLOSE_CURLY_BRACKET) for 130:T_IF
	Start scope map at 140:T_ELSEIF => elseif
	=> Begin scope map recursion at token 140 with depth 1
	Process token 141 on line 22 []: T_WHITESPACE =>  
	Process token 142 on line 22 []: T_OPEN_PARENTHESIS => (
	Process token 143 on line 22 []: T_VARIABLE => $four
	Process token 144 on line 22 []: T_CLOSE_PARENTHESIS => )
	Process token 145 on line 22 []: T_WHITESPACE =>  
	Process token 146 on line 22 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 140:T_ELSEIF
	Process token 147 on line 22 [opener:146;]: T_WHITESPACE => \n
	Process token 148 on line 23 [opener:146;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (148:T_CLOSE_CURLY_BRACKET) for 140:T_ELSEIF
	Start scope map at 150:T_IF => if
	=> Begin scope map recursion at token 150 with depth 1
	Process token 151 on line 24 []: T_WHITESPACE =>  
	Process token 152 on line 24 []: T_OPEN_PARENTHESIS => (
	Process token 153 on line 24 []: T_VARIABLE => $one
	Process token 154 on line 24 []: T_CLOSE_PARENTHESIS => )
	Process token 155 on line 24 []: T_WHITESPACE =>  
	Process token 156 on line 24 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 150:T_IF
	Process token 157 on line 24 [opener:156;]: T_WHITESPACE => \n
	Process token 158 on line 25 [opener:156;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (158:T_CLOSE_CURLY_BRACKET) for 150:T_IF
	Start scope map at 160:T_ELSE => else
	=> Begin scope map recursion at token 160 with depth 1
	Process token 161 on line 25 []: T_WHITESPACE =>  
	Process token 162 on line 25 []: T_OPEN_PARENTHESIS => (
	Process token 163 on line 25 []: T_VARIABLE => $two
	Process token 164 on line 25 []: T_CLOSE_PARENTHESIS => )
	Process token 165 on line 25 []: T_WHITESPACE =>  
	Process token 166 on line 25 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 160:T_ELSE
	Process token 167 on line 25 [opener:166;]: T_WHITESPACE => \n
	Process token 168 on line 26 [opener:166;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (168:T_CLOSE_CURLY_BRACKET) for 160:T_ELSE
	Start scope map at 170:T_ELSE => else
	=> Begin scope map recursion at token 170 with depth 1
	Process token 171 on line 26 []: T_WHITESPACE =>  
	Process token 172 on line 26 []: T_IF => if
	=> Found new opening condition before scope opener for 170:T_ELSE, backtracking
	Start scope map at 172:T_IF => if
	=> Begin scope map recursion at token 172 with depth 1
	Process token 173 on line 26 []: T_WHITESPACE =>  
	Process token 174 on line 26 []: T_OPEN_PARENTHESIS => (
	Process token 175 on line 26 []: T_VARIABLE => $three
	Process token 176 on line 26 []: T_CLOSE_PARENTHESIS => )
	Process token 177 on line 26 []: T_WHITESPACE =>  
	Process token 178 on line 26 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 172:T_IF
	Process token 179 on line 26 [opener:178;]: T_WHITESPACE => \n
	Process token 180 on line 27 [opener:178;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (180:T_CLOSE_CURLY_BRACKET) for 172:T_IF
	Start scope map at 182:T_ELSEIF => elseif
	=> Begin scope map recursion at token 182 with depth 1
	Process token 183 on line 27 []: T_WHITESPACE =>  
	Process token 184 on line 27 []: T_OPEN_PARENTHESIS => (
	Process token 185 on line 27 []: T_VARIABLE => $four
	Process token 186 on line 27 []: T_CLOSE_PARENTHESIS => )
	Process token 187 on line 27 []: T_WHITESPACE =>  
	Process token 188 on line 27 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 182:T_ELSEIF
	Process token 189 on line 27 [opener:188;]: T_WHITESPACE => \n
	Process token 190 on line 28 [opener:188;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (190:T_CLOSE_CURLY_BRACKET) for 182:T_ELSEIF
	Start scope map at 199:T_FOREACH => foreach
	=> Begin scope map recursion at token 199 with depth 1
	Process token 200 on line 34 []: T_WHITESPACE =>  
	Process token 201 on line 34 []: T_OPEN_PARENTHESIS => (
	Process token 202 on line 34 []: T_VARIABLE => $this
	Process token 203 on line 34 []: T_OBJECT_OPERATOR => ->
	Process token 204 on line 34 []: T_STRING => children
	Process token 205 on line 34 []: T_WHITESPACE =>  
	Process token 206 on line 34 []: T_AS => as
	Process token 207 on line 34 []: T_WHITESPACE =>  
	Process token 208 on line 34 []: T_VARIABLE => $child
	Process token 209 on line 34 []: T_CLOSE_PARENTHESIS => )
	Process token 210 on line 34 []: T_WHITESPACE =>  
	Process token 211 on line 34 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 199:T_FOREACH
	Process token 212 on line 34 [opener:211;]: T_WHITESPACE => \n
	Process token 213 on line 35 [opener:211;]: T_WHITESPACE =>             
	Process token 214 on line 35 [opener:211;]: T_COMMENT => // There should be no error after this\n
	Process token 215 on line 36 [opener:211;]: T_WHITESPACE =>             
	Process token 216 on line 36 [opener:211;]: T_COMMENT => // foreach, because it is followed by a\n
	Process token 217 on line 37 [opener:211;]: T_WHITESPACE =>             
	Process token 218 on line 37 [opener:211;]: T_COMMENT => // close PHP tag.\n
	Process token 219 on line 38 [opener:211;]: T_WHITESPACE =>         
	Process token 220 on line 38 [opener:211;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (220:T_CLOSE_CURLY_BRACKET) for 199:T_FOREACH
	Start scope map at 229:T_SWITCH => switch
	=> Begin scope map recursion at token 229 with depth 1
	Process token 230 on line 45 []: T_WHITESPACE =>  
	Process token 231 on line 45 []: T_OPEN_PARENTHESIS => (
	Process token 232 on line 45 []: T_VARIABLE => $blah
	Process token 233 on line 45 []: T_CLOSE_PARENTHESIS => )
	Process token 234 on line 45 []: T_WHITESPACE =>  
	Process token 235 on line 45 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 229:T_SWITCH
	Process token 236 on line 45 [opener:235;]: T_WHITESPACE => \n
	Process token 237 on line 46 [opener:235;]: T_WHITESPACE =>     
	Process token 238 on line 46 [opener:235;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 238 with depth 1
	Process token 239 on line 46 []: T_WHITESPACE =>  
	Process token 240 on line 46 []: T_CONSTANT_ENCAPSED_STRING => 'one'
	Process token 241 on line 46 []: T_COLON => :
	=> Found scope opener for 238:T_CASE
	Process token 242 on line 46 [opener:241;]: T_WHITESPACE => \n
	Process token 243 on line 47 [opener:241;]: T_WHITESPACE =>         
	Process token 244 on line 47 [opener:241;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 244 with depth 2
		Process token 245 on line 47 []: T_WHITESPACE =>  
		Process token 246 on line 47 []: T_OPEN_PARENTHESIS => (
		Process token 247 on line 47 []: T_VARIABLE => $blah
		Process token 248 on line 47 []: T_CLOSE_PARENTHESIS => )
		Process token 249 on line 47 []: T_WHITESPACE =>  
		Process token 250 on line 47 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 244:T_IF
		Process token 251 on line 47 [opener:250;]: T_WHITESPACE => \n
		Process token 252 on line 48 [opener:250;]: T_WHITESPACE =>             
		Process token 253 on line 48 [opener:250;]: T_COMMENT => // There are no spaces before break.\n
		Process token 254 on line 49 [opener:250;]: T_WHITESPACE =>         
		Process token 255 on line 49 [opener:250;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (255:T_CLOSE_CURLY_BRACKET) for 244:T_IF
	Process token 256 on line 49 [opener:241;]: T_WHITESPACE => \n
	Process token 257 on line 50 [opener:241;]: T_WHITESPACE =>     
	Process token 258 on line 50 [opener:241;]: T_BREAK => break
	=> Found scope closer (258:T_BREAK) for 238:T_CASE
	Process token 242 on line 46 [opener:235;]: T_WHITESPACE => \n
	Process token 243 on line 47 [opener:235;]: T_WHITESPACE =>         
	Process token 244 on line 47 [opener:235;]: T_IF => if
	* token is an opening condition *
	* already processed, skipping *
	Process token 256 on line 49 [opener:235;]: T_WHITESPACE => \n
	Process token 257 on line 50 [opener:235;]: T_WHITESPACE =>     
	Process token 258 on line 50 [opener:235;]: T_BREAK => break
	Process token 259 on line 50 [opener:235;]: T_SEMICOLON => ;
	Process token 260 on line 50 [opener:235;]: T_WHITESPACE => \n
	Process token 261 on line 51 [opener:235;]: T_WHITESPACE => \n
	Process token 262 on line 52 [opener:235;]: T_WHITESPACE =>     
	Process token 263 on line 52 [opener:235;]: T_DEFAULT => default
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 263 with depth 1
	Process token 264 on line 52 []: T_COLON => :
	=> Found scope opener for 263:T_DEFAULT
	Process token 265 on line 52 [opener:264;]: T_WHITESPACE => \n
	Process token 266 on line 53 [opener:264;]: T_WHITESPACE =>         
	Process token 267 on line 53 [opener:264;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 267 with depth 2
		Process token 268 on line 53 []: T_WHITESPACE =>  
		Process token 269 on line 53 []: T_OPEN_PARENTHESIS => (
		Process token 270 on line 53 []: T_VARIABLE => $blah
		Process token 271 on line 53 []: T_CLOSE_PARENTHESIS => )
		Process token 272 on line 53 []: T_WHITESPACE =>  
		Process token 273 on line 53 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 267:T_IF
		Process token 274 on line 53 [opener:273;]: T_WHITESPACE => \n
		Process token 275 on line 54 [opener:273;]: T_WHITESPACE =>             
		Process token 276 on line 54 [opener:273;]: T_COMMENT => // There are no spaces before break.\n
		Process token 277 on line 55 [opener:273;]: T_WHITESPACE =>         
		Process token 278 on line 55 [opener:273;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (278:T_CLOSE_CURLY_BRACKET) for 267:T_IF
	Process token 279 on line 55 [opener:264;]: T_WHITESPACE => \n
	Process token 280 on line 56 [opener:264;]: T_WHITESPACE =>     
	Process token 281 on line 56 [opener:264;]: T_BREAK => break
	=> Found scope closer (281:T_BREAK) for 263:T_DEFAULT
	Process token 265 on line 52 [opener:235;]: T_WHITESPACE => \n
	Process token 266 on line 53 [opener:235;]: T_WHITESPACE =>         
	Process token 267 on line 53 [opener:235;]: T_IF => if
	* token is an opening condition *
	* already processed, skipping *
	Process token 279 on line 55 [opener:235;]: T_WHITESPACE => \n
	Process token 280 on line 56 [opener:235;]: T_WHITESPACE =>     
	Process token 281 on line 56 [opener:235;]: T_BREAK => break
	Process token 282 on line 56 [opener:235;]: T_SEMICOLON => ;
	Process token 283 on line 56 [opener:235;]: T_WHITESPACE => \n
	Process token 284 on line 57 [opener:235;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (284:T_CLOSE_CURLY_BRACKET) for 229:T_SWITCH
	Start scope map at 287:T_SWITCH => switch
	=> Begin scope map recursion at token 287 with depth 1
	Process token 288 on line 59 []: T_WHITESPACE =>  
	Process token 289 on line 59 []: T_OPEN_PARENTHESIS => (
	Process token 290 on line 59 []: T_VARIABLE => $blah
	Process token 291 on line 59 []: T_CLOSE_PARENTHESIS => )
	Process token 292 on line 59 []: T_WHITESPACE =>  
	Process token 293 on line 59 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 287:T_SWITCH
	Process token 294 on line 59 [opener:293;]: T_WHITESPACE => \n
	Process token 295 on line 60 [opener:293;]: T_WHITESPACE =>     
	Process token 296 on line 60 [opener:293;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 296 with depth 1
	Process token 297 on line 60 []: T_WHITESPACE =>  
	Process token 298 on line 60 []: T_CONSTANT_ENCAPSED_STRING => 'one'
	Process token 299 on line 60 []: T_COLON => :
	=> Found scope opener for 296:T_CASE
	Process token 300 on line 60 [opener:299;]: T_WHITESPACE => \n
	Process token 301 on line 61 [opener:299;]: T_WHITESPACE =>         
	Process token 302 on line 61 [opener:299;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 302 with depth 2
		Process token 303 on line 61 []: T_WHITESPACE =>  
		Process token 304 on line 61 []: T_OPEN_PARENTHESIS => (
		Process token 305 on line 61 []: T_VARIABLE => $blah
		Process token 306 on line 61 []: T_CLOSE_PARENTHESIS => )
		Process token 307 on line 61 []: T_WHITESPACE =>  
		Process token 308 on line 61 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 302:T_IF
		Process token 309 on line 61 [opener:308;]: T_WHITESPACE => \n
		Process token 310 on line 62 [opener:308;]: T_WHITESPACE =>             
		Process token 311 on line 62 [opener:308;]: T_COMMENT => // There are no spaces before break.\n
		Process token 312 on line 63 [opener:308;]: T_WHITESPACE =>         
		Process token 313 on line 63 [opener:308;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (313:T_CLOSE_CURLY_BRACKET) for 302:T_IF
	Process token 314 on line 63 [opener:299;]: T_WHITESPACE => \n
	Process token 315 on line 64 [opener:299;]: T_WHITESPACE =>     
	Process token 316 on line 64 [opener:299;]: T_BREAK => break
	=> Found scope closer (316:T_BREAK) for 296:T_CASE
	Process token 300 on line 60 [opener:293;]: T_WHITESPACE => \n
	Process token 301 on line 61 [opener:293;]: T_WHITESPACE =>         
	Process token 302 on line 61 [opener:293;]: T_IF => if
	* token is an opening condition *
	* already processed, skipping *
	Process token 314 on line 63 [opener:293;]: T_WHITESPACE => \n
	Process token 315 on line 64 [opener:293;]: T_WHITESPACE =>     
	Process token 316 on line 64 [opener:293;]: T_BREAK => break
	Process token 317 on line 64 [opener:293;]: T_SEMICOLON => ;
	Process token 318 on line 64 [opener:293;]: T_WHITESPACE => \n
	Process token 319 on line 65 [opener:293;]: T_WHITESPACE => \n
	Process token 320 on line 66 [opener:293;]: T_WHITESPACE =>     
	Process token 321 on line 66 [opener:293;]: T_DEFAULT => default
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 321 with depth 1
	Process token 322 on line 66 []: T_COLON => :
	=> Found scope opener for 321:T_DEFAULT
	Process token 323 on line 66 [opener:322;]: T_WHITESPACE => \n
	Process token 324 on line 67 [opener:322;]: T_WHITESPACE =>         
	Process token 325 on line 67 [opener:322;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 325 with depth 2
		Process token 326 on line 67 []: T_WHITESPACE =>  
		Process token 327 on line 67 []: T_OPEN_PARENTHESIS => (
		Process token 328 on line 67 []: T_VARIABLE => $blah
		Process token 329 on line 67 []: T_CLOSE_PARENTHESIS => )
		Process token 330 on line 67 []: T_WHITESPACE =>  
		Process token 331 on line 67 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 325:T_IF
		Process token 332 on line 67 [opener:331;]: T_WHITESPACE => \n
		Process token 333 on line 68 [opener:331;]: T_WHITESPACE =>             
		Process token 334 on line 68 [opener:331;]: T_COMMENT => // Code here.\n
		Process token 335 on line 69 [opener:331;]: T_WHITESPACE =>         
		Process token 336 on line 69 [opener:331;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (336:T_CLOSE_CURLY_BRACKET) for 325:T_IF
	Process token 337 on line 69 [opener:322;]: T_WHITESPACE => \n
	Process token 338 on line 70 [opener:322;]: T_CLOSE_CURLY_BRACKET => }
	=> Found (unexpected) scope closer for 321:T_DEFAULT
	Process token 338 on line 70 [opener:293;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (338:T_CLOSE_CURLY_BRACKET) for 287:T_SWITCH
	Start scope map at 341:T_FOREACH => foreach
	=> Begin scope map recursion at token 341 with depth 1
	Process token 342 on line 72 []: T_WHITESPACE =>  
	Process token 343 on line 72 []: T_OPEN_PARENTHESIS => (
	Process token 344 on line 72 []: T_VARIABLE => $blah
	Process token 345 on line 72 []: T_WHITESPACE =>  
	Process token 346 on line 72 []: T_AS => as
	Process token 347 on line 72 []: T_WHITESPACE =>  
	Process token 348 on line 72 []: T_VARIABLE => $var
	Process token 349 on line 72 []: T_CLOSE_PARENTHESIS => )
	Process token 350 on line 72 []: T_WHITESPACE =>  
	Process token 351 on line 72 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 341:T_FOREACH
	Process token 352 on line 72 [opener:351;]: T_WHITESPACE => \n
	Process token 353 on line 73 [opener:351;]: T_WHITESPACE =>     
	Process token 354 on line 73 [opener:351;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 354 with depth 2
		Process token 355 on line 73 []: T_WHITESPACE =>  
		Process token 356 on line 73 []: T_OPEN_PARENTHESIS => (
		Process token 357 on line 73 []: T_VARIABLE => $blah
		Process token 358 on line 73 []: T_CLOSE_PARENTHESIS => )
		Process token 359 on line 73 []: T_WHITESPACE =>  
		Process token 360 on line 73 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 354:T_IF
		Process token 361 on line 73 [opener:360;]: T_WHITESPACE => \n
		Process token 362 on line 74 [opener:360;]: T_WHITESPACE =>     
		Process token 363 on line 74 [opener:360;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (363:T_CLOSE_CURLY_BRACKET) for 354:T_IF
	Process token 364 on line 74 [opener:351;]: T_WHITESPACE => \n
	Process token 365 on line 75 [opener:351;]: T_WHITESPACE =>     
	Process token 366 on line 75 [opener:351;]: T_BREAK => break
	Process token 367 on line 75 [opener:351;]: T_SEMICOLON => ;
	Process token 368 on line 75 [opener:351;]: T_WHITESPACE => \n
	Process token 369 on line 76 [opener:351;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (369:T_CLOSE_CURLY_BRACKET) for 341:T_FOREACH
	Start scope map at 372:T_WHILE => while
	=> Begin scope map recursion at token 372 with depth 1
	Process token 373 on line 78 []: T_WHITESPACE =>  
	Process token 374 on line 78 []: T_OPEN_PARENTHESIS => (
	Process token 375 on line 78 []: T_TRUE => true
	Process token 376 on line 78 []: T_CLOSE_PARENTHESIS => )
	Process token 377 on line 78 []: T_WHITESPACE =>  
	Process token 378 on line 78 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 372:T_WHILE
	Process token 379 on line 78 [opener:378;]: T_WHITESPACE => \n
	Process token 380 on line 79 [opener:378;]: T_WHITESPACE =>     
	Process token 381 on line 79 [opener:378;]: T_FOR => for
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 381 with depth 2
		Process token 382 on line 79 []: T_WHITESPACE =>  
		Process token 383 on line 79 []: T_OPEN_PARENTHESIS => (
		Process token 384 on line 79 []: T_VARIABLE => $i
		Process token 385 on line 79 []: T_WHITESPACE =>  
		Process token 386 on line 79 []: T_EQUAL => =
		Process token 387 on line 79 []: T_WHITESPACE =>  
		Process token 388 on line 79 []: T_LNUMBER => 0
		Process token 389 on line 79 []: T_SEMICOLON => ;
		Process token 390 on line 79 []: T_WHITESPACE =>  
		Process token 391 on line 79 []: T_VARIABLE => $i
		Process token 392 on line 79 []: T_WHITESPACE =>  
		Process token 393 on line 79 []: T_LESS_THAN => <
		Process token 394 on line 79 []: T_WHITESPACE =>  
		Process token 395 on line 79 []: T_LNUMBER => 10
		Process token 396 on line 79 []: T_SEMICOLON => ;
		Process token 397 on line 79 []: T_WHITESPACE =>  
		Process token 398 on line 79 []: T_VARIABLE => $i
		Process token 399 on line 79 []: T_INC => ++
		Process token 400 on line 79 []: T_CLOSE_PARENTHESIS => )
		Process token 401 on line 79 []: T_WHITESPACE =>  
		Process token 402 on line 79 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 381:T_FOR
		Process token 403 on line 79 [opener:402;]: T_WHITESPACE => \n
		Process token 404 on line 80 [opener:402;]: T_WHITESPACE => \n
		Process token 405 on line 81 [opener:402;]: T_WHITESPACE =>         
		Process token 406 on line 81 [opener:402;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 406 with depth 3
			Process token 407 on line 81 []: T_WHITESPACE =>  
			Process token 408 on line 81 []: T_OPEN_PARENTHESIS => (
			Process token 409 on line 81 []: T_VARIABLE => $something
			Process token 410 on line 81 []: T_CLOSE_PARENTHESIS => )
			Process token 411 on line 81 []: T_WHITESPACE =>  
			Process token 412 on line 81 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 406:T_IF
			Process token 413 on line 81 [opener:412;]: T_WHITESPACE => \n
			Process token 414 on line 82 [opener:412;]: T_WHITESPACE =>         
			Process token 415 on line 82 [opener:412;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (415:T_CLOSE_CURLY_BRACKET) for 406:T_IF
		Process token 416 on line 82 [opener:402;]: T_WHITESPACE => \n
		Process token 417 on line 83 [opener:402;]: T_WHITESPACE => \n
		Process token 418 on line 84 [opener:402;]: T_WHITESPACE =>     
		Process token 419 on line 84 [opener:402;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (419:T_CLOSE_CURLY_BRACKET) for 381:T_FOR
	Process token 420 on line 84 [opener:378;]: T_WHITESPACE => \n
	Process token 421 on line 85 [opener:378;]: T_WHITESPACE => \n
	Process token 422 on line 86 [opener:378;]: T_WHITESPACE =>     
	Process token 423 on line 86 [opener:378;]: T_FOREACH => foreach
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 423 with depth 2
		Process token 424 on line 86 []: T_WHITESPACE =>  
		Process token 425 on line 86 []: T_OPEN_PARENTHESIS => (
		Process token 426 on line 86 []: T_VARIABLE => $this
		Process token 427 on line 86 []: T_WHITESPACE =>  
		Process token 428 on line 86 []: T_AS => as
		Process token 429 on line 86 []: T_WHITESPACE =>  
		Process token 430 on line 86 []: T_VARIABLE => $that
		Process token 431 on line 86 []: T_CLOSE_PARENTHESIS => )
		Process token 432 on line 86 []: T_WHITESPACE =>  
		Process token 433 on line 86 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 423:T_FOREACH
		Process token 434 on line 86 [opener:433;]: T_WHITESPACE => \n
		Process token 435 on line 87 [opener:433;]: T_WHITESPACE =>         
		Process token 436 on line 87 [opener:433;]: T_DO => do
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 436 with depth 3
			Process token 437 on line 87 []: T_WHITESPACE =>  
			Process token 438 on line 87 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 436:T_DO
			Process token 439 on line 87 [opener:438;]: T_WHITESPACE => \n
			Process token 440 on line 88 [opener:438;]: T_WHITESPACE => \n
			Process token 441 on line 89 [opener:438;]: T_WHITESPACE =>             
			Process token 442 on line 89 [opener:438;]: T_ECHO => echo
			Process token 443 on line 89 [opener:438;]: T_WHITESPACE =>  
			Process token 444 on line 89 [opener:438;]: T_VARIABLE => $i
			Process token 445 on line 89 [opener:438;]: T_SEMICOLON => ;
			Process token 446 on line 89 [opener:438;]: T_WHITESPACE => \n
			Process token 447 on line 90 [opener:438;]: T_WHITESPACE =>         
			Process token 448 on line 90 [opener:438;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (448:T_CLOSE_CURLY_BRACKET) for 436:T_DO
		Process token 449 on line 90 [opener:433;]: T_WHITESPACE =>  
		Process token 450 on line 90 [opener:433;]: T_WHILE => while
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 450 with depth 3
			Process token 451 on line 90 []: T_WHITESPACE =>  
			Process token 452 on line 90 []: T_OPEN_PARENTHESIS => (
			Process token 453 on line 90 []: T_TRUE => true
			Process token 454 on line 90 []: T_CLOSE_PARENTHESIS => )
			Process token 455 on line 90 []: T_SEMICOLON => ;
			Process token 456 on line 90 []: T_WHITESPACE => \n
			Process token 457 on line 91 []: T_WHITESPACE =>     
			Process token 458 on line 91 []: T_CLOSE_CURLY_BRACKET => }
			=> Found curly brace closer before scope opener for 450:T_WHILE, bailing
		Process token 458 on line 91 [opener:433;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (458:T_CLOSE_CURLY_BRACKET) for 423:T_FOREACH
	Process token 459 on line 91 [opener:378;]: T_WHITESPACE => \n
	Process token 460 on line 92 [opener:378;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (460:T_CLOSE_CURLY_BRACKET) for 372:T_WHILE
	Start scope map at 463:T_FUNCTION => function
	=> Begin scope map recursion at token 463 with depth 1
	Process token 464 on line 94 []: T_WHITESPACE =>  
	Process token 465 on line 94 []: T_STRING => myFunction
	Process token 466 on line 94 []: T_OPEN_PARENTHESIS => (
	Process token 467 on line 94 []: T_CLOSE_PARENTHESIS => )
	Process token 468 on line 94 []: T_WHITESPACE => \n
	Process token 469 on line 95 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 463:T_FUNCTION
	Process token 470 on line 95 [opener:469;]: T_WHITESPACE => \n
	Process token 471 on line 96 [opener:469;]: T_WHITESPACE =>     
	Process token 472 on line 96 [opener:469;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 472 with depth 2
		Process token 473 on line 96 []: T_WHITESPACE =>  
		Process token 474 on line 96 []: T_OPEN_PARENTHESIS => (
		Process token 475 on line 96 []: T_VARIABLE => $blah
		Process token 476 on line 96 []: T_CLOSE_PARENTHESIS => )
		Process token 477 on line 96 []: T_WHITESPACE =>  
		Process token 478 on line 96 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 472:T_IF
		Process token 479 on line 96 [opener:478;]: T_WHITESPACE => \n
		Process token 480 on line 97 [opener:478;]: T_WHITESPACE =>     
		Process token 481 on line 97 [opener:478;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (481:T_CLOSE_CURLY_BRACKET) for 472:T_IF
	Process token 482 on line 97 [opener:469;]: T_WHITESPACE => \n
	Process token 483 on line 98 [opener:469;]: T_WHITESPACE => \n
	Process token 484 on line 99 [opener:469;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (484:T_CLOSE_CURLY_BRACKET) for 463:T_FUNCTION
	Start scope map at 487:T_FOREACH => foreach
	=> Begin scope map recursion at token 487 with depth 1
	Process token 488 on line 101 []: T_WHITESPACE =>  
	Process token 489 on line 101 []: T_OPEN_PARENTHESIS => (
	Process token 490 on line 101 []: T_VARIABLE => $this
	Process token 491 on line 101 []: T_OBJECT_OPERATOR => ->
	Process token 492 on line 101 []: T_STRING => children
	Process token 493 on line 101 []: T_WHITESPACE =>  
	Process token 494 on line 101 []: T_AS => as
	Process token 495 on line 101 []: T_WHITESPACE =>  
	Process token 496 on line 101 []: T_VARIABLE => $child
	Process token 497 on line 101 []: T_CLOSE_PARENTHESIS => )
	Process token 498 on line 101 []: T_WHITESPACE =>  
	Process token 499 on line 101 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 487:T_FOREACH
	Process token 500 on line 101 [opener:499;]: T_WHITESPACE => \n
	Process token 501 on line 102 [opener:499;]: T_WHITESPACE =>     
	Process token 502 on line 102 [opener:499;]: T_ECHO => echo
	Process token 503 on line 102 [opener:499;]: T_WHITESPACE =>  
	Process token 504 on line 102 [opener:499;]: T_VARIABLE => $child
	Process token 505 on line 102 [opener:499;]: T_SEMICOLON => ;
	Process token 506 on line 102 [opener:499;]: T_WHITESPACE => \n
	Process token 507 on line 103 [opener:499;]: T_WHITESPACE => \n
	Process token 508 on line 104 [opener:499;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (508:T_CLOSE_CURLY_BRACKET) for 487:T_FOREACH
	Start scope map at 511:T_IF => if
	=> Begin scope map recursion at token 511 with depth 1
	Process token 512 on line 106 []: T_WHITESPACE =>  
	Process token 513 on line 106 []: T_OPEN_PARENTHESIS => (
	Process token 514 on line 106 []: T_VARIABLE => $defaultPageDesign
	Process token 515 on line 106 []: T_WHITESPACE =>  
	Process token 516 on line 106 []: T_IS_IDENTICAL => ===
	Process token 517 on line 106 []: T_WHITESPACE =>  
	Process token 518 on line 106 []: T_LNUMBER => 0
	Process token 519 on line 106 []: T_WHITESPACE => \n
	Process token 520 on line 107 []: T_WHITESPACE =>     
	Process token 521 on line 107 []: T_BOOLEAN_AND => &&
	Process token 522 on line 107 []: T_WHITESPACE =>  
	Process token 523 on line 107 []: T_VARIABLE => $defaultCascade
	Process token 524 on line 107 []: T_WHITESPACE =>  
	Process token 525 on line 107 []: T_IS_IDENTICAL => ===
	Process token 526 on line 107 []: T_WHITESPACE =>  
	Process token 527 on line 107 []: T_TRUE => TRUE
	Process token 528 on line 107 []: T_WHITESPACE => \n
	Process token 529 on line 108 []: T_WHITESPACE =>     
	Process token 530 on line 108 []: T_BOOLEAN_AND => &&
	Process token 531 on line 108 []: T_WHITESPACE =>  
	Process token 532 on line 108 []: T_VARIABLE => $defaultChildDesign
	Process token 533 on line 108 []: T_WHITESPACE =>  
	Process token 534 on line 108 []: T_IS_IDENTICAL => ===
	Process token 535 on line 108 []: T_WHITESPACE =>  
	Process token 536 on line 108 []: T_LNUMBER => 0
	Process token 537 on line 108 []: T_WHITESPACE => \n
	Process token 538 on line 109 []: T_CLOSE_PARENTHESIS => )
	Process token 539 on line 109 []: T_WHITESPACE =>  
	Process token 540 on line 109 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 511:T_IF
	Process token 541 on line 109 [opener:540;]: T_WHITESPACE => \n
	Process token 542 on line 110 [opener:540;]: T_WHITESPACE =>     
	Process token 543 on line 110 [opener:540;]: T_VARIABLE => $settingsUpdated
	Process token 544 on line 110 [opener:540;]: T_WHITESPACE =>  
	Process token 545 on line 110 [opener:540;]: T_EQUAL => =
	Process token 546 on line 110 [opener:540;]: T_WHITESPACE =>  
	Process token 547 on line 110 [opener:540;]: T_FALSE => FALSE
	Process token 548 on line 110 [opener:540;]: T_SEMICOLON => ;
	Process token 549 on line 110 [opener:540;]: T_WHITESPACE => \n
	Process token 550 on line 111 [opener:540;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (550:T_CLOSE_CURLY_BRACKET) for 511:T_IF
	Start scope map at 553:T_FOREACH => foreach
	=> Begin scope map recursion at token 553 with depth 1
	Process token 554 on line 113 []: T_WHITESPACE =>  
	Process token 555 on line 113 []: T_OPEN_PARENTHESIS => (
	Process token 556 on line 113 []: T_WHITESPACE =>  
	Process token 557 on line 113 []: T_VARIABLE => $blah
	Process token 558 on line 113 []: T_WHITESPACE =>  
	Process token 559 on line 113 []: T_AS => as
	Process token 560 on line 113 []: T_WHITESPACE =>  
	Process token 561 on line 113 []: T_VARIABLE => $var
	Process token 562 on line 113 []: T_WHITESPACE =>  
	Process token 563 on line 113 []: T_CLOSE_PARENTHESIS => )
	Process token 564 on line 113 []: T_WHITESPACE =>  
	Process token 565 on line 113 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 553:T_FOREACH
	Process token 566 on line 113 [opener:565;]: T_WHITESPACE => \n
	Process token 567 on line 114 [opener:565;]: T_WHITESPACE =>     
	Process token 568 on line 114 [opener:565;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 568 with depth 2
		Process token 569 on line 114 []: T_WHITESPACE =>  
		Process token 570 on line 114 []: T_OPEN_PARENTHESIS => (
		Process token 571 on line 114 []: T_WHITESPACE =>   
		Process token 572 on line 114 []: T_VARIABLE => $blah
		Process token 573 on line 114 []: T_WHITESPACE =>     
		Process token 574 on line 114 []: T_CLOSE_PARENTHESIS => )
		Process token 575 on line 114 []: T_WHITESPACE =>  
		Process token 576 on line 114 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 568:T_IF
		Process token 577 on line 114 [opener:576;]: T_WHITESPACE => \n
		Process token 578 on line 115 [opener:576;]: T_WHITESPACE =>     
		Process token 579 on line 115 [opener:576;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (579:T_CLOSE_CURLY_BRACKET) for 568:T_IF
	Process token 580 on line 115 [opener:565;]: T_WHITESPACE => \n
	Process token 581 on line 116 [opener:565;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (581:T_CLOSE_CURLY_BRACKET) for 553:T_FOREACH
	Start scope map at 584:T_IF => if
	=> Begin scope map recursion at token 584 with depth 1
	Process token 585 on line 118 []: T_WHITESPACE =>  
	Process token 586 on line 118 []: T_OPEN_PARENTHESIS => (
	Process token 587 on line 118 []: T_WHITESPACE => \n
	Process token 588 on line 119 []: T_WHITESPACE =>     
	Process token 589 on line 119 []: T_VARIABLE => $defaultPageDesign
	Process token 590 on line 119 []: T_WHITESPACE =>  
	Process token 591 on line 119 []: T_IS_IDENTICAL => ===
	Process token 592 on line 119 []: T_WHITESPACE =>  
	Process token 593 on line 119 []: T_LNUMBER => 0
	Process token 594 on line 119 []: T_WHITESPACE => \n
	Process token 595 on line 120 []: T_WHITESPACE =>     
	Process token 596 on line 120 []: T_BOOLEAN_AND => &&
	Process token 597 on line 120 []: T_WHITESPACE =>  
	Process token 598 on line 120 []: T_VARIABLE => $defaultCascade
	Process token 599 on line 120 []: T_WHITESPACE =>  
	Process token 600 on line 120 []: T_IS_IDENTICAL => ===
	Process token 601 on line 120 []: T_WHITESPACE =>  
	Process token 602 on line 120 []: T_TRUE => TRUE
	Process token 603 on line 120 []: T_WHITESPACE => \n
	Process token 604 on line 121 []: T_WHITESPACE =>     
	Process token 605 on line 121 []: T_BOOLEAN_AND => &&
	Process token 606 on line 121 []: T_WHITESPACE =>  
	Process token 607 on line 121 []: T_VARIABLE => $defaultChildDesign
	Process token 608 on line 121 []: T_WHITESPACE =>  
	Process token 609 on line 121 []: T_IS_IDENTICAL => ===
	Process token 610 on line 121 []: T_WHITESPACE =>  
	Process token 611 on line 121 []: T_LNUMBER => 0
	Process token 612 on line 121 []: T_WHITESPACE => \n
	Process token 613 on line 122 []: T_CLOSE_PARENTHESIS => )
	Process token 614 on line 122 []: T_WHITESPACE =>  
	Process token 615 on line 122 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 584:T_IF
	Process token 616 on line 122 [opener:615;]: T_WHITESPACE => \n
	Process token 617 on line 123 [opener:615;]: T_WHITESPACE =>     
	Process token 618 on line 123 [opener:615;]: T_VARIABLE => $settingsUpdated
	Process token 619 on line 123 [opener:615;]: T_WHITESPACE =>  
	Process token 620 on line 123 [opener:615;]: T_EQUAL => =
	Process token 621 on line 123 [opener:615;]: T_WHITESPACE =>  
	Process token 622 on line 123 [opener:615;]: T_FALSE => FALSE
	Process token 623 on line 123 [opener:615;]: T_SEMICOLON => ;
	Process token 624 on line 123 [opener:615;]: T_WHITESPACE => \n
	Process token 625 on line 124 [opener:615;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (625:T_CLOSE_CURLY_BRACKET) for 584:T_IF
	Start scope map at 635:T_SWITCH => switch
	=> Begin scope map recursion at token 635 with depth 1
	Process token 636 on line 127 []: T_WHITESPACE =>  
	Process token 637 on line 127 []: T_OPEN_PARENTHESIS => (
	Process token 638 on line 127 []: T_VARIABLE => $moo
	Process token 639 on line 127 []: T_CLOSE_PARENTHESIS => )
	Process token 640 on line 127 []: T_WHITESPACE => \n
	Process token 641 on line 128 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 635:T_SWITCH
	Process token 642 on line 128 [opener:641;]: T_WHITESPACE => \n
	Process token 643 on line 129 [opener:641;]: T_WHITESPACE =>     
	Process token 644 on line 129 [opener:641;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 644 with depth 1
	Process token 645 on line 129 []: T_WHITESPACE =>  
	Process token 646 on line 129 []: T_CONSTANT_ENCAPSED_STRING => 'blar'
	Process token 647 on line 129 []: T_COLON => :
	=> Found scope opener for 644:T_CASE
	Process token 648 on line 129 [opener:647;]: T_WHITESPACE => \n
	Process token 649 on line 130 [opener:647;]: T_WHITESPACE =>         
	Process token 650 on line 130 [opener:647;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 650 with depth 2
		Process token 651 on line 130 []: T_WHITESPACE =>  
		Process token 652 on line 130 []: T_OPEN_PARENTHESIS => (
		Process token 653 on line 130 []: T_VARIABLE => $moo
		Process token 654 on line 130 []: T_WHITESPACE =>  
		Process token 655 on line 130 []: T_IS_IDENTICAL => ===
		Process token 656 on line 130 []: T_WHITESPACE =>  
		Process token 657 on line 130 []: T_CONSTANT_ENCAPSED_STRING => 'blar2'
		Process token 658 on line 130 []: T_CLOSE_PARENTHESIS => )
		Process token 659 on line 130 []: T_WHITESPACE =>  
		Process token 660 on line 130 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 650:T_IF
		Process token 661 on line 130 [opener:660;]: T_WHITESPACE => \n
		Process token 662 on line 131 [opener:660;]: T_WHITESPACE =>             
		Process token 663 on line 131 [opener:660;]: T_VARIABLE => $moo
		Process token 664 on line 131 [opener:660;]: T_WHITESPACE =>  
		Process token 665 on line 131 [opener:660;]: T_EQUAL => =
		Process token 666 on line 131 [opener:660;]: T_WHITESPACE =>  
		Process token 667 on line 131 [opener:660;]: T_CONSTANT_ENCAPSED_STRING => 'blar'
		Process token 668 on line 131 [opener:660;]: T_WHITESPACE => \n
		Process token 669 on line 132 [opener:660;]: T_WHITESPACE =>         
		Process token 670 on line 132 [opener:660;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (670:T_CLOSE_CURLY_BRACKET) for 650:T_IF
	Process token 671 on line 132 [opener:647;]: T_WHITESPACE => \n
	Process token 672 on line 133 [opener:647;]: T_WHITESPACE =>     
	Process token 673 on line 133 [opener:647;]: T_RETURN => return
	=> Found scope closer (673:T_RETURN) for 644:T_CASE
	Process token 648 on line 129 [opener:641;]: T_WHITESPACE => \n
	Process token 649 on line 130 [opener:641;]: T_WHITESPACE =>         
	Process token 650 on line 130 [opener:641;]: T_IF => if
	* token is an opening condition *
	* already processed, skipping *
	Process token 671 on line 132 [opener:641;]: T_WHITESPACE => \n
	Process token 672 on line 133 [opener:641;]: T_WHITESPACE =>     
	Process token 673 on line 133 [opener:641;]: T_RETURN => return
	Process token 674 on line 133 [opener:641;]: T_WHITESPACE =>  
	Process token 675 on line 133 [opener:641;]: T_VARIABLE => $moo
	Process token 676 on line 133 [opener:641;]: T_SEMICOLON => ;
	Process token 677 on line 133 [opener:641;]: T_WHITESPACE => \n
	Process token 678 on line 134 [opener:641;]: T_WHITESPACE => \n
	Process token 679 on line 135 [opener:641;]: T_WHITESPACE =>     
	Process token 680 on line 135 [opener:641;]: T_DEFAULT => default
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 680 with depth 1
	Process token 681 on line 135 []: T_COLON => :
	=> Found scope opener for 680:T_DEFAULT
	Process token 682 on line 135 [opener:681;]: T_WHITESPACE => \n
	Process token 683 on line 136 [opener:681;]: T_WHITESPACE =>         
	Process token 684 on line 136 [opener:681;]: T_VARIABLE => $moo
	Process token 685 on line 136 [opener:681;]: T_WHITESPACE =>  
	Process token 686 on line 136 [opener:681;]: T_EQUAL => =
	Process token 687 on line 136 [opener:681;]: T_WHITESPACE =>  
	Process token 688 on line 136 [opener:681;]: T_CONSTANT_ENCAPSED_STRING => 'moo'
	Process token 689 on line 136 [opener:681;]: T_SEMICOLON => ;
	Process token 690 on line 136 [opener:681;]: T_WHITESPACE => \n
	Process token 691 on line 137 [opener:681;]: T_WHITESPACE =>     
	Process token 692 on line 137 [opener:681;]: T_BREAK => break
	=> Found scope closer (692:T_BREAK) for 680:T_DEFAULT
	Process token 682 on line 135 [opener:641;]: T_WHITESPACE => \n
	Process token 683 on line 136 [opener:641;]: T_WHITESPACE =>         
	Process token 684 on line 136 [opener:641;]: T_VARIABLE => $moo
	Process token 685 on line 136 [opener:641;]: T_WHITESPACE =>  
	Process token 686 on line 136 [opener:641;]: T_EQUAL => =
	Process token 687 on line 136 [opener:641;]: T_WHITESPACE =>  
	Process token 688 on line 136 [opener:641;]: T_CONSTANT_ENCAPSED_STRING => 'moo'
	Process token 689 on line 136 [opener:641;]: T_SEMICOLON => ;
	Process token 690 on line 136 [opener:641;]: T_WHITESPACE => \n
	Process token 691 on line 137 [opener:641;]: T_WHITESPACE =>     
	Process token 692 on line 137 [opener:641;]: T_BREAK => break
	Process token 693 on line 137 [opener:641;]: T_SEMICOLON => ;
	Process token 694 on line 137 [opener:641;]: T_WHITESPACE => \n
	Process token 695 on line 138 [opener:641;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (695:T_CLOSE_CURLY_BRACKET) for 635:T_SWITCH
	Start scope map at 698:T_DO => do
	=> Begin scope map recursion at token 698 with depth 1
	Process token 699 on line 140 []: T_WHITESPACE =>  
	Process token 700 on line 140 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 698:T_DO
	Process token 701 on line 140 [opener:700;]: T_WHITESPACE => \n
	Process token 702 on line 141 [opener:700;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (702:T_CLOSE_CURLY_BRACKET) for 698:T_DO
	Start scope map at 704:T_WHILE => while
	=> Begin scope map recursion at token 704 with depth 1
	Process token 705 on line 142 []: T_WHITESPACE =>  
	Process token 706 on line 142 []: T_OPEN_PARENTHESIS => (
	Process token 707 on line 142 []: T_TRUE => true
	Process token 708 on line 142 []: T_CLOSE_PARENTHESIS => )
	Process token 709 on line 142 []: T_SEMICOLON => ;
	Process token 710 on line 142 []: T_WHITESPACE => \n
	Process token 711 on line 143 []: T_WHITESPACE => \n
	Process token 712 on line 144 []: T_TRY => try
	=> Found new opening condition before scope opener for 704:T_WHILE, backtracking
	Start scope map at 712:T_TRY => try
	=> Begin scope map recursion at token 712 with depth 1
	Process token 713 on line 144 []: T_WHITESPACE =>  
	Process token 714 on line 144 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 712:T_TRY
	Process token 715 on line 144 [opener:714;]: T_WHITESPACE => \n
	Process token 716 on line 145 [opener:714;]: T_WHITESPACE =>     
	Process token 717 on line 145 [opener:714;]: T_COMMENT => // Something\n
	Process token 718 on line 146 [opener:714;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (718:T_CLOSE_CURLY_BRACKET) for 712:T_TRY
	Start scope map at 720:T_CATCH => catch
	=> Begin scope map recursion at token 720 with depth 1
	Process token 721 on line 146 []: T_WHITESPACE =>  
	Process token 722 on line 146 []: T_OPEN_PARENTHESIS => (
	Process token 723 on line 146 []: T_STRING => Exception
	Process token 724 on line 146 []: T_WHITESPACE =>  
	Process token 725 on line 146 []: T_VARIABLE => $e
	Process token 726 on line 146 []: T_CLOSE_PARENTHESIS => )
	Process token 727 on line 146 []: T_WHITESPACE =>  
	Process token 728 on line 146 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 720:T_CATCH
	Process token 729 on line 146 [opener:728;]: T_WHITESPACE => \n
	Process token 730 on line 147 [opener:728;]: T_WHITESPACE =>     
	Process token 731 on line 147 [opener:728;]: T_COMMENT => // Something\n
	Process token 732 on line 148 [opener:728;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (732:T_CLOSE_CURLY_BRACKET) for 720:T_CATCH
	Start scope map at 735:T_TRY => try
	=> Begin scope map recursion at token 735 with depth 1
	Process token 736 on line 150 []: T_WHITESPACE =>  
	Process token 737 on line 150 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 735:T_TRY
	Process token 738 on line 150 [opener:737;]: T_WHITESPACE => \n
	Process token 739 on line 151 [opener:737;]: T_WHITESPACE => \n
	Process token 740 on line 152 [opener:737;]: T_WHITESPACE =>     
	Process token 741 on line 152 [opener:737;]: T_COMMENT => // Something\n
	Process token 742 on line 153 [opener:737;]: T_WHITESPACE => \n
	Process token 743 on line 154 [opener:737;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (743:T_CLOSE_CURLY_BRACKET) for 735:T_TRY
	Start scope map at 745:T_CATCH => catch
	=> Begin scope map recursion at token 745 with depth 1
	Process token 746 on line 154 []: T_WHITESPACE =>  
	Process token 747 on line 154 []: T_OPEN_PARENTHESIS => (
	Process token 748 on line 154 []: T_STRING => Exception
	Process token 749 on line 154 []: T_WHITESPACE =>  
	Process token 750 on line 154 []: T_VARIABLE => $e
	Process token 751 on line 154 []: T_CLOSE_PARENTHESIS => )
	Process token 752 on line 154 []: T_WHITESPACE =>  
	Process token 753 on line 154 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 745:T_CATCH
	Process token 754 on line 154 [opener:753;]: T_WHITESPACE => \n
	Process token 755 on line 155 [opener:753;]: T_WHITESPACE => \n
	Process token 756 on line 156 [opener:753;]: T_WHITESPACE =>     
	Process token 757 on line 156 [opener:753;]: T_COMMENT => // Something\n
	Process token 758 on line 157 [opener:753;]: T_WHITESPACE => \n
	Process token 759 on line 158 [opener:753;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (759:T_CLOSE_CURLY_BRACKET) for 745:T_CATCH
	Start scope map at 762:T_IF => if
	=> Begin scope map recursion at token 762 with depth 1
	Process token 763 on line 160 []: T_WHITESPACE =>  
	Process token 764 on line 160 []: T_OPEN_PARENTHESIS => (
	Process token 765 on line 160 []: T_VARIABLE => $one
	Process token 766 on line 160 []: T_CLOSE_PARENTHESIS => )
	Process token 767 on line 160 []: T_WHITESPACE =>  
	Process token 768 on line 160 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 762:T_IF
	Process token 769 on line 160 [opener:768;]: T_WHITESPACE => \n
	Process token 770 on line 161 [opener:768;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (770:T_CLOSE_CURLY_BRACKET) for 762:T_IF
	Start scope map at 772:T_ELSEIF => elseif
	=> Begin scope map recursion at token 772 with depth 1
	Process token 773 on line 162 []: T_WHITESPACE =>  
	Process token 774 on line 162 []: T_OPEN_PARENTHESIS => (
	Process token 775 on line 162 []: T_VARIABLE => $two
	Process token 776 on line 162 []: T_CLOSE_PARENTHESIS => )
	Process token 777 on line 162 []: T_WHITESPACE =>  
	Process token 778 on line 162 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 772:T_ELSEIF
	Process token 779 on line 162 [opener:778;]: T_WHITESPACE => \n
	Process token 780 on line 163 [opener:778;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (780:T_CLOSE_CURLY_BRACKET) for 772:T_ELSEIF
	Start scope map at 783:T_ELSE => else
	=> Begin scope map recursion at token 783 with depth 1
	Process token 784 on line 165 []: T_WHITESPACE =>  
	Process token 785 on line 165 []: T_IF => if
	=> Found new opening condition before scope opener for 783:T_ELSE, backtracking
	Start scope map at 785:T_IF => if
	=> Begin scope map recursion at token 785 with depth 1
	Process token 786 on line 165 []: T_WHITESPACE =>  
	Process token 787 on line 165 []: T_OPEN_PARENTHESIS => (
	Process token 788 on line 165 []: T_VARIABLE => $three
	Process token 789 on line 165 []: T_CLOSE_PARENTHESIS => )
	Process token 790 on line 165 []: T_WHITESPACE =>  
	Process token 791 on line 165 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 785:T_IF
	Process token 792 on line 165 [opener:791;]: T_WHITESPACE => \n
	Process token 793 on line 166 [opener:791;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (793:T_CLOSE_CURLY_BRACKET) for 785:T_IF
	Start scope map at 796:T_ELSE => else
	=> Begin scope map recursion at token 796 with depth 1
	Process token 797 on line 167 []: T_WHITESPACE =>  
	Process token 798 on line 167 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 796:T_ELSE
	Process token 799 on line 167 [opener:798;]: T_WHITESPACE => \n
	Process token 800 on line 168 [opener:798;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (800:T_CLOSE_CURLY_BRACKET) for 796:T_ELSE
	Start scope map at 803:T_IF => if
	=> Begin scope map recursion at token 803 with depth 1
	Process token 804 on line 170 []: T_WHITESPACE =>  
	Process token 805 on line 170 []: T_OPEN_PARENTHESIS => (
	Process token 806 on line 170 []: T_VARIABLE => $one
	Process token 807 on line 170 []: T_CLOSE_PARENTHESIS => )
	Process token 808 on line 170 []: T_WHITESPACE =>  
	Process token 809 on line 170 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 803:T_IF
	Process token 810 on line 170 [opener:809;]: T_WHITESPACE => \n
	Process token 811 on line 171 [opener:809;]: T_WHITESPACE => \n
	Process token 812 on line 172 [opener:809;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (812:T_CLOSE_CURLY_BRACKET) for 803:T_IF
	Start scope map at 815:T_DO => do
	=> Begin scope map recursion at token 815 with depth 1
	Process token 816 on line 174 []: T_WHITESPACE =>  
	Process token 817 on line 174 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 815:T_DO
	Process token 818 on line 174 [opener:817;]: T_WHITESPACE => \n
	Process token 819 on line 175 [opener:817;]: T_WHITESPACE =>     
	Process token 820 on line 175 [opener:817;]: T_ECHO => echo
	Process token 821 on line 175 [opener:817;]: T_WHITESPACE =>  
	Process token 822 on line 175 [opener:817;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token 823 on line 175 [opener:817;]: T_SEMICOLON => ;
	Process token 824 on line 175 [opener:817;]: T_WHITESPACE => \n
	Process token 825 on line 176 [opener:817;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (825:T_CLOSE_CURLY_BRACKET) for 815:T_DO
	Start scope map at 827:T_WHILE => while
	=> Begin scope map recursion at token 827 with depth 1
	Process token 828 on line 176 []: T_WHITESPACE =>  
	Process token 829 on line 176 []: T_OPEN_PARENTHESIS => (
	Process token 830 on line 176 []: T_WHITESPACE =>   
	Process token 831 on line 176 []: T_VARIABLE => $blah
	Process token 832 on line 176 []: T_WHITESPACE =>   
	Process token 833 on line 176 []: T_CLOSE_PARENTHESIS => )
	Process token 834 on line 176 []: T_SEMICOLON => ;
	Process token 835 on line 176 []: T_WHITESPACE => \n
	Process token 836 on line 177 []: T_WHITESPACE => \n
	Process token 837 on line 178 []: T_IF => if
	=> Found new opening condition before scope opener for 827:T_WHILE, backtracking
	Start scope map at 837:T_IF => if
	=> Begin scope map recursion at token 837 with depth 1
	Process token 838 on line 178 []: T_WHITESPACE =>  
	Process token 839 on line 178 []: T_OPEN_PARENTHESIS => (
	Process token 840 on line 178 []: T_VARIABLE => $one
	Process token 841 on line 178 []: T_CLOSE_PARENTHESIS => )
	Process token 842 on line 178 []: T_WHITESPACE =>  
	Process token 843 on line 178 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 837:T_IF
	Process token 844 on line 178 [opener:843;]: T_WHITESPACE => \n
	Process token 845 on line 179 [opener:843;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (845:T_CLOSE_CURLY_BRACKET) for 837:T_IF
	Start scope map at 848:T_IF => if
	=> Begin scope map recursion at token 848 with depth 1
	Process token 849 on line 181 []: T_WHITESPACE =>  
	Process token 850 on line 181 []: T_OPEN_PARENTHESIS => (
	Process token 851 on line 181 []: T_VARIABLE => $two
	Process token 852 on line 181 []: T_CLOSE_PARENTHESIS => )
	Process token 853 on line 181 []: T_WHITESPACE =>  
	Process token 854 on line 181 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 848:T_IF
	Process token 855 on line 181 [opener:854;]: T_WHITESPACE => \n
	Process token 856 on line 182 [opener:854;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (856:T_CLOSE_CURLY_BRACKET) for 848:T_IF
	Start scope map at 859:T_SWITCH => switch
	=> Begin scope map recursion at token 859 with depth 1
	Process token 860 on line 184 []: T_WHITESPACE =>  
	Process token 861 on line 184 []: T_OPEN_PARENTHESIS => (
	Process token 862 on line 184 []: T_VARIABLE => $moo
	Process token 863 on line 184 []: T_CLOSE_PARENTHESIS => )
	Process token 864 on line 184 []: T_WHITESPACE => \n
	Process token 865 on line 185 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 859:T_SWITCH
	Process token 866 on line 185 [opener:865;]: T_WHITESPACE => \n
	Process token 867 on line 186 [opener:865;]: T_WHITESPACE =>     
	Process token 868 on line 186 [opener:865;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 868 with depth 1
	Process token 869 on line 186 []: T_WHITESPACE =>  
	Process token 870 on line 186 []: T_CONSTANT_ENCAPSED_STRING => 'blar'
	Process token 871 on line 186 []: T_COLON => :
	=> Found scope opener for 868:T_CASE
	Process token 872 on line 186 [opener:871;]: T_WHITESPACE => \n
	Process token 873 on line 187 [opener:871;]: T_WHITESPACE =>         
	Process token 874 on line 187 [opener:871;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 874 with depth 2
		Process token 875 on line 187 []: T_WHITESPACE =>  
		Process token 876 on line 187 []: T_OPEN_PARENTHESIS => (
		Process token 877 on line 187 []: T_VARIABLE => $moo
		Process token 878 on line 187 []: T_WHITESPACE =>  
		Process token 879 on line 187 []: T_IS_IDENTICAL => ===
		Process token 880 on line 187 []: T_WHITESPACE =>  
		Process token 881 on line 187 []: T_CONSTANT_ENCAPSED_STRING => 'blar2'
		Process token 882 on line 187 []: T_CLOSE_PARENTHESIS => )
		Process token 883 on line 187 []: T_WHITESPACE =>  
		Process token 884 on line 187 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 874:T_IF
		Process token 885 on line 187 [opener:884;]: T_WHITESPACE => \n
		Process token 886 on line 188 [opener:884;]: T_WHITESPACE =>             
		Process token 887 on line 188 [opener:884;]: T_VARIABLE => $moo
		Process token 888 on line 188 [opener:884;]: T_WHITESPACE =>  
		Process token 889 on line 188 [opener:884;]: T_EQUAL => =
		Process token 890 on line 188 [opener:884;]: T_WHITESPACE =>  
		Process token 891 on line 188 [opener:884;]: T_CONSTANT_ENCAPSED_STRING => 'blar'
		Process token 892 on line 188 [opener:884;]: T_WHITESPACE => \n
		Process token 893 on line 189 [opener:884;]: T_WHITESPACE =>         
		Process token 894 on line 189 [opener:884;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (894:T_CLOSE_CURLY_BRACKET) for 874:T_IF
	Process token 895 on line 189 [opener:871;]: T_WHITESPACE => \n
	Process token 896 on line 190 [opener:871;]: T_WHITESPACE => \n
	Process token 897 on line 191 [opener:871;]: T_WHITESPACE =>     
	Process token 898 on line 191 [opener:871;]: T_RETURN => return
	=> Found scope closer (898:T_RETURN) for 868:T_CASE
	Process token 872 on line 186 [opener:865;]: T_WHITESPACE => \n
	Process token 873 on line 187 [opener:865;]: T_WHITESPACE =>         
	Process token 874 on line 187 [opener:865;]: T_IF => if
	* token is an opening condition *
	* already processed, skipping *
	Process token 895 on line 189 [opener:865;]: T_WHITESPACE => \n
	Process token 896 on line 190 [opener:865;]: T_WHITESPACE => \n
	Process token 897 on line 191 [opener:865;]: T_WHITESPACE =>     
	Process token 898 on line 191 [opener:865;]: T_RETURN => return
	Process token 899 on line 191 [opener:865;]: T_WHITESPACE =>  
	Process token 900 on line 191 [opener:865;]: T_VARIABLE => $moo
	Process token 901 on line 191 [opener:865;]: T_SEMICOLON => ;
	Process token 902 on line 191 [opener:865;]: T_WHITESPACE => \n
	Process token 903 on line 192 [opener:865;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (903:T_CLOSE_CURLY_BRACKET) for 859:T_SWITCH
	Start scope map at 906:T_TRY => try
	=> Begin scope map recursion at token 906 with depth 1
	Process token 907 on line 194 []: T_WHITESPACE =>  
	Process token 908 on line 194 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 906:T_TRY
	Process token 909 on line 194 [opener:908;]: T_WHITESPACE => \n
	Process token 910 on line 195 [opener:908;]: T_WHITESPACE =>     
	Process token 911 on line 195 [opener:908;]: T_COMMENT => // Something\n
	Process token 912 on line 196 [opener:908;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (912:T_CLOSE_CURLY_BRACKET) for 906:T_TRY
	Start scope map at 914:T_CATCH => catch
	=> Begin scope map recursion at token 914 with depth 1
	Process token 915 on line 197 []: T_WHITESPACE =>  
	Process token 916 on line 197 []: T_OPEN_PARENTHESIS => (
	Process token 917 on line 197 []: T_STRING => Exception
	Process token 918 on line 197 []: T_WHITESPACE =>  
	Process token 919 on line 197 []: T_VARIABLE => $e
	Process token 920 on line 197 []: T_CLOSE_PARENTHESIS => )
	Process token 921 on line 197 []: T_WHITESPACE =>  
	Process token 922 on line 197 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 914:T_CATCH
	Process token 923 on line 197 [opener:922;]: T_WHITESPACE => \n
	Process token 924 on line 198 [opener:922;]: T_WHITESPACE =>     
	Process token 925 on line 198 [opener:922;]: T_COMMENT => // Something\n
	Process token 926 on line 199 [opener:922;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (926:T_CLOSE_CURLY_BRACKET) for 914:T_CATCH
	Start scope map at 928:T_FINALLY => finally
	=> Begin scope map recursion at token 928 with depth 1
	Process token 929 on line 200 []: T_WHITESPACE =>  
	Process token 930 on line 200 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 928:T_FINALLY
	Process token 931 on line 200 [opener:930;]: T_WHITESPACE => \n
	Process token 932 on line 201 [opener:930;]: T_WHITESPACE =>     
	Process token 933 on line 201 [opener:930;]: T_COMMENT => // Something\n
	Process token 934 on line 202 [opener:930;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (934:T_CLOSE_CURLY_BRACKET) for 928:T_FINALLY
	Start scope map at 937:T_IF => if
	=> Begin scope map recursion at token 937 with depth 1
	Process token 938 on line 204 []: T_WHITESPACE =>  
	Process token 939 on line 204 []: T_OPEN_PARENTHESIS => (
	Process token 940 on line 204 []: T_VARIABLE => $foo
	Process token 941 on line 204 []: T_CLOSE_PARENTHESIS => )
	Process token 942 on line 204 []: T_WHITESPACE =>  
	Process token 943 on line 204 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 937:T_IF
	Process token 944 on line 204 [opener:943;]: T_WHITESPACE => \n
	Process token 945 on line 205 [opener:943;]: T_WHITESPACE => \n
	Process token 946 on line 206 [opener:943;]: T_WHITESPACE => \n
	Process token 947 on line 207 [opener:943;]: T_WHITESPACE =>     
	Process token 948 on line 207 [opener:943;]: T_DOC_COMMENT_OPEN_TAG => /**
	Process token 949 on line 207 [opener:943;]: T_DOC_COMMENT_WHITESPACE => \n
	Process token 950 on line 208 [opener:943;]: T_DOC_COMMENT_WHITESPACE =>      
	Process token 951 on line 208 [opener:943;]: T_DOC_COMMENT_STAR => *
	Process token 952 on line 208 [opener:943;]: T_DOC_COMMENT_WHITESPACE =>  
	Process token 953 on line 208 [opener:943;]: T_DOC_COMMENT_STRING => Comment
	Process token 954 on line 208 [opener:943;]: T_DOC_COMMENT_WHITESPACE => \n
	Process token 955 on line 209 [opener:943;]: T_DOC_COMMENT_WHITESPACE =>      
	Process token 956 on line 209 [opener:943;]: T_DOC_COMMENT_CLOSE_TAG => */
	Process token 957 on line 209 [opener:943;]: T_WHITESPACE => \n
	Process token 958 on line 210 [opener:943;]: T_WHITESPACE =>     
	Process token 959 on line 210 [opener:943;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 959 with depth 2
		Process token 960 on line 210 []: T_WHITESPACE =>  
		Process token 961 on line 210 []: T_STRING => foo
		Process token 962 on line 210 []: T_OPEN_PARENTHESIS => (
		Process token 963 on line 210 []: T_CLOSE_PARENTHESIS => )
		Process token 964 on line 210 []: T_WHITESPACE =>  
		Process token 965 on line 210 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 959:T_FUNCTION
		Process token 966 on line 210 [opener:965;]: T_WHITESPACE => \n
		Process token 967 on line 211 [opener:965;]: T_WHITESPACE =>         
		Process token 968 on line 211 [opener:965;]: T_COMMENT => // Code here\n
		Process token 969 on line 212 [opener:965;]: T_WHITESPACE =>     
		Process token 970 on line 212 [opener:965;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (970:T_CLOSE_CURLY_BRACKET) for 959:T_FUNCTION
	Process token 971 on line 212 [opener:943;]: T_WHITESPACE => \n
	Process token 972 on line 213 [opener:943;]: T_WHITESPACE => \n
	Process token 973 on line 214 [opener:943;]: T_WHITESPACE => \n
	Process token 974 on line 215 [opener:943;]: T_WHITESPACE =>     
	Process token 975 on line 215 [opener:943;]: T_DOC_COMMENT_OPEN_TAG => /**
	Process token 976 on line 215 [opener:943;]: T_DOC_COMMENT_WHITESPACE => \n
	Process token 977 on line 216 [opener:943;]: T_DOC_COMMENT_WHITESPACE =>      
	Process token 978 on line 216 [opener:943;]: T_DOC_COMMENT_STAR => *
	Process token 979 on line 216 [opener:943;]: T_DOC_COMMENT_WHITESPACE =>  
	Process token 980 on line 216 [opener:943;]: T_DOC_COMMENT_STRING => Comment
	Process token 981 on line 216 [opener:943;]: T_DOC_COMMENT_WHITESPACE => \n
	Process token 982 on line 217 [opener:943;]: T_DOC_COMMENT_WHITESPACE =>      
	Process token 983 on line 217 [opener:943;]: T_DOC_COMMENT_CLOSE_TAG => */
	Process token 984 on line 217 [opener:943;]: T_WHITESPACE => \n
	Process token 985 on line 218 [opener:943;]: T_WHITESPACE =>     
	Process token 986 on line 218 [opener:943;]: T_CLASS => class
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 986 with depth 2
		Process token 987 on line 218 []: T_WHITESPACE =>  
		Process token 988 on line 218 []: T_STRING => bar
		Process token 989 on line 218 []: T_OPEN_PARENTHESIS => (
		Process token 990 on line 218 []: T_CLOSE_PARENTHESIS => )
		Process token 991 on line 218 []: T_WHITESPACE =>  
		Process token 992 on line 218 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 986:T_CLASS
		Process token 993 on line 218 [opener:992;]: T_WHITESPACE => \n
		Process token 994 on line 219 [opener:992;]: T_WHITESPACE => \n
		Process token 995 on line 220 [opener:992;]: T_WHITESPACE =>     
		Process token 996 on line 220 [opener:992;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (996:T_CLOSE_CURLY_BRACKET) for 986:T_CLASS
	Process token 997 on line 220 [opener:943;]: T_COMMENT => //end class\n
	Process token 998 on line 221 [opener:943;]: T_WHITESPACE => \n
	Process token 999 on line 222 [opener:943;]: T_WHITESPACE => \n
	Process token 1000 on line 223 [opener:943;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (1000:T_CLOSE_CURLY_BRACKET) for 937:T_IF
	Start scope map at 1003:T_IF => if
	=> Begin scope map recursion at token 1003 with depth 1
	Process token 1004 on line 225 []: T_WHITESPACE =>  
	Process token 1005 on line 225 []: T_OPEN_PARENTHESIS => (
	Process token 1006 on line 225 []: T_TRUE => true
	Process token 1007 on line 225 []: T_CLOSE_PARENTHESIS => )
	Process token 1008 on line 225 []: T_WHITESPACE =>  
	Process token 1009 on line 225 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1003:T_IF
	Process token 1010 on line 225 [opener:1009;]: T_WHITESPACE =>  
	Process token 1011 on line 225 [opener:1009;]: T_COMMENT => // some comment goes here\n
	Process token 1012 on line 226 [opener:1009;]: T_WHITESPACE => \n
	Process token 1013 on line 227 [opener:1009;]: T_WHITESPACE =>     
	Process token 1014 on line 227 [opener:1009;]: T_ECHO => echo
	Process token 1015 on line 227 [opener:1009;]: T_WHITESPACE =>  
	Process token 1016 on line 227 [opener:1009;]: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token 1017 on line 227 [opener:1009;]: T_SEMICOLON => ;
	Process token 1018 on line 227 [opener:1009;]: T_WHITESPACE => \n
	Process token 1019 on line 228 [opener:1009;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (1019:T_CLOSE_CURLY_BRACKET) for 1003:T_IF
	Start scope map at 1022:T_IF => if
	=> Begin scope map recursion at token 1022 with depth 1
	Process token 1023 on line 230 []: T_WHITESPACE =>  
	Process token 1024 on line 230 []: T_OPEN_PARENTHESIS => (
	Process token 1025 on line 230 []: T_TRUE => true
	Process token 1026 on line 230 []: T_CLOSE_PARENTHESIS => )
	Process token 1027 on line 230 []: T_WHITESPACE =>  
	Process token 1028 on line 230 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1022:T_IF
	Process token 1029 on line 230 [opener:1028;]: T_WHITESPACE =>  
	Process token 1030 on line 230 [opener:1028;]: T_ECHO => echo
	Process token 1031 on line 230 [opener:1028;]: T_WHITESPACE =>  
	Process token 1032 on line 230 [opener:1028;]: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token 1033 on line 230 [opener:1028;]: T_SEMICOLON => ;
	Process token 1034 on line 230 [opener:1028;]: T_WHITESPACE => \n
	Process token 1035 on line 231 [opener:1028;]: T_WHITESPACE => \n
	Process token 1036 on line 232 [opener:1028;]: T_WHITESPACE =>     
	Process token 1037 on line 232 [opener:1028;]: T_ECHO => echo
	Process token 1038 on line 232 [opener:1028;]: T_WHITESPACE =>  
	Process token 1039 on line 232 [opener:1028;]: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token 1040 on line 232 [opener:1028;]: T_SEMICOLON => ;
	Process token 1041 on line 232 [opener:1028;]: T_WHITESPACE => \n
	Process token 1042 on line 233 [opener:1028;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (1042:T_CLOSE_CURLY_BRACKET) for 1022:T_IF
	Start scope map at 1045:T_IF => if
	=> Begin scope map recursion at token 1045 with depth 1
	Process token 1046 on line 235 []: T_WHITESPACE =>  
	Process token 1047 on line 235 []: T_OPEN_PARENTHESIS => (
	Process token 1048 on line 235 []: T_VARIABLE => $true
	Process token 1049 on line 235 []: T_CLOSE_PARENTHESIS => )
	Process token 1050 on line 235 []: T_WHITESPACE =>  
	Process token 1051 on line 235 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1045:T_IF
	Process token 1052 on line 235 [opener:1051;]: T_WHITESPACE => \n
	Process token 1053 on line 236 [opener:1051;]: T_WHITESPACE =>     
	Process token 1054 on line 236 [opener:1051;]: T_ECHO => echo
	Process token 1055 on line 236 [opener:1051;]: T_WHITESPACE =>  
	Process token 1056 on line 236 [opener:1051;]: T_CONSTANT_ENCAPSED_STRING => 'hi 2'
	Process token 1057 on line 236 [opener:1051;]: T_SEMICOLON => ;
	Process token 1058 on line 236 [opener:1051;]: T_WHITESPACE => \n
	Process token 1059 on line 237 [opener:1051;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (1059:T_CLOSE_CURLY_BRACKET) for 1045:T_IF
	Start scope map at 1067:T_IF => if
	=> Begin scope map recursion at token 1067 with depth 1
	Process token 1068 on line 240 []: T_WHITESPACE =>  
	Process token 1069 on line 240 []: T_OPEN_PARENTHESIS => (
	Process token 1070 on line 240 []: T_VARIABLE => $true
	Process token 1071 on line 240 []: T_CLOSE_PARENTHESIS => )
	Process token 1072 on line 240 []: T_WHITESPACE =>  
	Process token 1073 on line 240 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1067:T_IF
	Process token 1074 on line 240 [opener:1073;]: T_WHITESPACE => \n
	Process token 1075 on line 241 [opener:1073;]: T_WHITESPACE =>     
	Process token 1076 on line 241 [opener:1073;]: T_ECHO => echo
	Process token 1077 on line 241 [opener:1073;]: T_WHITESPACE =>  
	Process token 1078 on line 241 [opener:1073;]: T_CONSTANT_ENCAPSED_STRING => 'hi 2'
	Process token 1079 on line 241 [opener:1073;]: T_SEMICOLON => ;
	Process token 1080 on line 241 [opener:1073;]: T_WHITESPACE => \n
	Process token 1081 on line 242 [opener:1073;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (1081:T_CLOSE_CURLY_BRACKET) for 1067:T_IF
	Start scope map at 1092:T_FOREACH => foreach
	=> Begin scope map recursion at token 1092 with depth 1
	Process token 1093 on line 246 []: T_OPEN_PARENTHESIS => (
	Process token 1094 on line 246 []: T_VARIABLE => $formset
	Process token 1095 on line 246 []: T_OPEN_SQUARE_BRACKET => [
	Process token 1096 on line 246 []: T_CONSTANT_ENCAPSED_STRING => 'Fieldset'
	Process token 1097 on line 246 []: T_CLOSE_SQUARE_BRACKET => ]
	Process token 1098 on line 246 []: T_WHITESPACE =>  
	Process token 1099 on line 246 []: T_AS => as
	Process token 1100 on line 246 []: T_WHITESPACE =>  
	Process token 1101 on line 246 []: T_VARIABLE => $fieldset
	Process token 1102 on line 246 []: T_CLOSE_PARENTHESIS => )
	Process token 1103 on line 246 []: T_COLON => :
	=> Found scope opener for 1092:T_FOREACH
	Process token 1104 on line 246 [opener:1103;]: T_WHITESPACE =>  
	Process token 1105 on line 246 [opener:1103;]: T_CLOSE_TAG => ?>\n
	Process token 1106 on line 247 [opener:1103;]: T_INLINE_HTML => \n
	Process token 1107 on line 248 [opener:1103;]: T_INLINE_HTML =>     
	Process token 1108 on line 248 [opener:1103;]: T_OPEN_TAG => <?php 
	Process token 1109 on line 248 [opener:1103;]: T_FOREACH => foreach
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 1109 with depth 2
		Process token 1110 on line 248 []: T_OPEN_PARENTHESIS => (
		Process token 1111 on line 248 []: T_VARIABLE => $fieldset
		Process token 1112 on line 248 []: T_OPEN_SQUARE_BRACKET => [
		Process token 1113 on line 248 []: T_CONSTANT_ENCAPSED_STRING => 'Field'
		Process token 1114 on line 248 []: T_CLOSE_SQUARE_BRACKET => ]
		Process token 1115 on line 248 []: T_WHITESPACE =>  
		Process token 1116 on line 248 []: T_AS => as
		Process token 1117 on line 248 []: T_WHITESPACE =>  
		Process token 1118 on line 248 []: T_VARIABLE => $field
		Process token 1119 on line 248 []: T_CLOSE_PARENTHESIS => )
		Process token 1120 on line 248 []: T_COLON => :
		=> Found scope opener for 1109:T_FOREACH
		Process token 1121 on line 248 [opener:1120;]: T_WHITESPACE => \n
		Process token 1122 on line 249 [opener:1120;]: T_WHITESPACE => \n
		Process token 1123 on line 250 [opener:1120;]: T_WHITESPACE =>         
		Process token 1124 on line 250 [opener:1120;]: T_ECHO => echo
		Process token 1125 on line 250 [opener:1120;]: T_WHITESPACE =>  
		Process token 1126 on line 250 [opener:1120;]: T_CONSTANT_ENCAPSED_STRING => 'foo'
		Process token 1127 on line 250 [opener:1120;]: T_SEMICOLON => ;
		Process token 1128 on line 250 [opener:1120;]: T_WHITESPACE => \n
		Process token 1129 on line 251 [opener:1120;]: T_WHITESPACE =>     
		Process token 1130 on line 251 [opener:1120;]: T_CLOSE_TAG => ?>\n
		Process token 1131 on line 252 [opener:1120;]: T_INLINE_HTML =>     
		Process token 1132 on line 252 [opener:1120;]: T_OPEN_TAG => <?php 
		Process token 1133 on line 252 [opener:1120;]: T_ENDFOREACH => endforeach
		=> Found scope closer (1133:T_ENDFOREACH) for 1109:T_FOREACH
	Process token 1134 on line 252 [opener:1103;]: T_SEMICOLON => ;
	Process token 1135 on line 252 [opener:1103;]: T_WHITESPACE =>  
	Process token 1136 on line 252 [opener:1103;]: T_CLOSE_TAG => ?>\n
	Process token 1137 on line 253 [opener:1103;]: T_OPEN_TAG => <?php 
	Process token 1138 on line 253 [opener:1103;]: T_ENDFOREACH => endforeach
	=> Found scope closer (1138:T_ENDFOREACH) for 1092:T_FOREACH
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:5;lvl:0;]: T_OPEN_TAG => <?php\n
	Process token 1 on line 2 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 2 on line 2 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 2 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 4 on line 2 [col:5;len:10;lvl:0;]: T_VARIABLE => $something
	Process token 5 on line 2 [col:15;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 6 on line 2 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 2 [col:17;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1:T_IF
		* level increased *
		* token 1:T_IF added to conditions array *
		Process token 8 on line 2 [col:18;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 9 on line 3 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 7:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 10 on line 3 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 11 on line 4 [col:1;len:7;lvl:0;]: T_FOREACH => foreach
	Process token 12 on line 4 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 13 on line 4 [col:9;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 14 on line 4 [col:10;len:5;lvl:0;]: T_VARIABLE => $this
	Process token 15 on line 4 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 16 on line 4 [col:16;len:2;lvl:0;]: T_AS => as
	Process token 17 on line 4 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 18 on line 4 [col:19;len:5;lvl:0;]: T_VARIABLE => $that
	Process token 19 on line 4 [col:24;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 20 on line 4 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 21 on line 4 [col:26;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 11:T_FOREACH
		* level increased *
		* token 11:T_FOREACH added to conditions array *
		Process token 22 on line 4 [col:27;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 23 on line 5 [col:1;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 21:T_OPEN_CURLY_BRACKET
		* token T_FOREACH removed from conditions array *
		* level decreased *
	Process token 24 on line 5 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 25 on line 6 [col:1;len:5;lvl:0;]: T_WHILE => while
	Process token 26 on line 6 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 27 on line 6 [col:7;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 28 on line 6 [col:8;len:4;lvl:0;]: T_TRUE => true
	Process token 29 on line 6 [col:12;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 30 on line 6 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 31 on line 6 [col:14;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 25:T_WHILE
		* level increased *
		* token 25:T_WHILE added to conditions array *
		Process token 32 on line 6 [col:15;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 33 on line 7 [col:1;len:4;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>     
		Process token 34 on line 7 [col:5;len:3;lvl:1;conds;T_WHILE;]: T_FOR => for
		Process token 35 on line 7 [col:8;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 36 on line 7 [col:9;len:1;lvl:1;conds;T_WHILE;]: T_OPEN_PARENTHESIS => (
		Process token 37 on line 7 [col:10;len:2;lvl:1;conds;T_WHILE;]: T_VARIABLE => $i
		Process token 38 on line 7 [col:12;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 39 on line 7 [col:13;len:1;lvl:1;conds;T_WHILE;]: T_EQUAL => =
		Process token 40 on line 7 [col:14;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 41 on line 7 [col:15;len:1;lvl:1;conds;T_WHILE;]: T_LNUMBER => 0
		Process token 42 on line 7 [col:16;len:1;lvl:1;conds;T_WHILE;]: T_SEMICOLON => ;
		Process token 43 on line 7 [col:17;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 44 on line 7 [col:18;len:2;lvl:1;conds;T_WHILE;]: T_VARIABLE => $i
		Process token 45 on line 7 [col:20;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 46 on line 7 [col:21;len:1;lvl:1;conds;T_WHILE;]: T_LESS_THAN => <
		Process token 47 on line 7 [col:22;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 48 on line 7 [col:23;len:2;lvl:1;conds;T_WHILE;]: T_LNUMBER => 10
		Process token 49 on line 7 [col:25;len:1;lvl:1;conds;T_WHILE;]: T_SEMICOLON => ;
		Process token 50 on line 7 [col:26;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 51 on line 7 [col:27;len:2;lvl:1;conds;T_WHILE;]: T_VARIABLE => $i
		Process token 52 on line 7 [col:29;len:2;lvl:1;conds;T_WHILE;]: T_INC => ++
		Process token 53 on line 7 [col:31;len:1;lvl:1;conds;T_WHILE;]: T_CLOSE_PARENTHESIS => )
		Process token 54 on line 7 [col:32;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 55 on line 7 [col:33;len:1;lvl:1;conds;T_WHILE;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 34:T_FOR
			* level increased *
			* token 34:T_FOR added to conditions array *
			Process token 56 on line 7 [col:34;len:0;lvl:2;conds;T_WHILE,T_FOR;]: T_WHITESPACE => \n
			Process token 57 on line 8 [col:1;len:4;lvl:2;conds;T_WHILE,T_FOR;]: T_WHITESPACE =>     
			Process token 58 on line 8 [col:5;len:1;lvl:2;conds;T_WHILE,T_FOR;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 55:T_OPEN_CURLY_BRACKET
			* token T_FOR removed from conditions array *
			* level decreased *
		Process token 59 on line 8 [col:6;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 60 on line 9 [col:1;len:4;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>     
		Process token 61 on line 9 [col:5;len:2;lvl:1;conds;T_WHILE;]: T_IF => if
		Process token 62 on line 9 [col:7;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 63 on line 9 [col:8;len:1;lvl:1;conds;T_WHILE;]: T_OPEN_PARENTHESIS => (
		Process token 64 on line 9 [col:9;len:10;lvl:1;conds;T_WHILE;]: T_VARIABLE => $something
		Process token 65 on line 9 [col:19;len:1;lvl:1;conds;T_WHILE;]: T_CLOSE_PARENTHESIS => )
		Process token 66 on line 9 [col:20;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 67 on line 9 [col:21;len:1;lvl:1;conds;T_WHILE;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 61:T_IF
			* level increased *
			* token 61:T_IF added to conditions array *
			Process token 68 on line 9 [col:22;len:0;lvl:2;conds;T_WHILE,T_IF;]: T_WHITESPACE => \n
			Process token 69 on line 10 [col:1;len:4;lvl:2;conds;T_WHILE,T_IF;]: T_WHITESPACE =>     
			Process token 70 on line 10 [col:5;len:1;lvl:2;conds;T_WHILE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 67:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 71 on line 10 [col:6;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 72 on line 11 [col:1;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 73 on line 12 [col:1;len:4;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>     
		Process token 74 on line 12 [col:5;len:7;lvl:1;conds;T_WHILE;]: T_FOREACH => foreach
		Process token 75 on line 12 [col:12;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 76 on line 12 [col:13;len:1;lvl:1;conds;T_WHILE;]: T_OPEN_PARENTHESIS => (
		Process token 77 on line 12 [col:14;len:5;lvl:1;conds;T_WHILE;]: T_VARIABLE => $this
		Process token 78 on line 12 [col:19;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 79 on line 12 [col:20;len:2;lvl:1;conds;T_WHILE;]: T_AS => as
		Process token 80 on line 12 [col:22;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 81 on line 12 [col:23;len:5;lvl:1;conds;T_WHILE;]: T_VARIABLE => $that
		Process token 82 on line 12 [col:28;len:1;lvl:1;conds;T_WHILE;]: T_CLOSE_PARENTHESIS => )
		Process token 83 on line 12 [col:29;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 84 on line 12 [col:30;len:1;lvl:1;conds;T_WHILE;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 74:T_FOREACH
			* level increased *
			* token 74:T_FOREACH added to conditions array *
			Process token 85 on line 12 [col:31;len:0;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE => \n
			Process token 86 on line 13 [col:1;len:8;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE =>         
			Process token 87 on line 13 [col:9;len:2;lvl:2;conds;T_WHILE,T_FOREACH;]: T_DO => do
			Process token 88 on line 13 [col:11;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE =>  
			Process token 89 on line 13 [col:12;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 87:T_DO
				* level increased *
				* token 87:T_DO added to conditions array *
				Process token 90 on line 13 [col:13;len:0;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_WHITESPACE => \n
				Process token 91 on line 14 [col:1;len:8;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_WHITESPACE =>         
				Process token 92 on line 14 [col:9;len:1;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 89:T_OPEN_CURLY_BRACKET
				* token T_DO removed from conditions array *
				* level decreased *
			Process token 93 on line 14 [col:10;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE =>  
			Process token 94 on line 14 [col:11;len:5;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHILE => while
			Process token 95 on line 14 [col:16;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE =>  
			Process token 96 on line 14 [col:17;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_OPEN_PARENTHESIS => (
			Process token 97 on line 14 [col:18;len:4;lvl:2;conds;T_WHILE,T_FOREACH;]: T_TRUE => true
			Process token 98 on line 14 [col:22;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_CLOSE_PARENTHESIS => )
			Process token 99 on line 14 [col:23;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_SEMICOLON => ;
			Process token 100 on line 14 [col:24;len:0;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE => \n
			Process token 101 on line 15 [col:1;len:0;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE => \n
			Process token 102 on line 16 [col:1;len:4;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE =>     
			Process token 103 on line 16 [col:5;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 84:T_OPEN_CURLY_BRACKET
			* token T_FOREACH removed from conditions array *
			* level decreased *
		Process token 104 on line 16 [col:6;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 105 on line 17 [col:1;len:1;lvl:1;conds;T_WHILE;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 31:T_OPEN_CURLY_BRACKET
		* token T_WHILE removed from conditions array *
		* level decreased *
	Process token 106 on line 17 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 107 on line 18 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 108 on line 19 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 109 on line 19 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 110 on line 19 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 111 on line 19 [col:5;len:4;lvl:0;]: T_VARIABLE => $one
	Process token 112 on line 19 [col:9;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 113 on line 19 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 114 on line 19 [col:11;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 108:T_IF
		* level increased *
		* token 108:T_IF added to conditions array *
		Process token 115 on line 19 [col:12;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 116 on line 20 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 114:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 117 on line 20 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 118 on line 20 [col:3;len:4;lvl:0;]: T_ELSE => else
	Process token 119 on line 20 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 120 on line 20 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 121 on line 20 [col:9;len:4;lvl:0;]: T_VARIABLE => $two
	Process token 122 on line 20 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 123 on line 20 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 124 on line 20 [col:15;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 118:T_ELSE
		* level increased *
		* token 118:T_ELSE added to conditions array *
		Process token 125 on line 20 [col:16;len:0;lvl:1;conds;T_ELSE;]: T_WHITESPACE => \n
		Process token 126 on line 21 [col:1;len:1;lvl:1;conds;T_ELSE;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 124:T_OPEN_CURLY_BRACKET
		* token T_ELSE removed from conditions array *
		* level decreased *
	Process token 127 on line 21 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 128 on line 21 [col:3;len:4;lvl:0;]: T_ELSE => else
	Process token 129 on line 21 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 130 on line 21 [col:8;len:2;lvl:0;]: T_IF => if
	Process token 131 on line 21 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 132 on line 21 [col:11;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 133 on line 21 [col:12;len:6;lvl:0;]: T_VARIABLE => $three
	Process token 134 on line 21 [col:18;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 135 on line 21 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 136 on line 21 [col:20;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 130:T_IF
		* level increased *
		* token 130:T_IF added to conditions array *
		Process token 137 on line 21 [col:21;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 138 on line 22 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 136:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 139 on line 22 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 140 on line 22 [col:3;len:6;lvl:0;]: T_ELSEIF => elseif
	Process token 141 on line 22 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 142 on line 22 [col:10;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 143 on line 22 [col:11;len:5;lvl:0;]: T_VARIABLE => $four
	Process token 144 on line 22 [col:16;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 145 on line 22 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 146 on line 22 [col:18;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 140:T_ELSEIF
		* level increased *
		* token 140:T_ELSEIF added to conditions array *
		Process token 147 on line 22 [col:19;len:0;lvl:1;conds;T_ELSEIF;]: T_WHITESPACE => \n
		Process token 148 on line 23 [col:1;len:1;lvl:1;conds;T_ELSEIF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 146:T_OPEN_CURLY_BRACKET
		* token T_ELSEIF removed from conditions array *
		* level decreased *
	Process token 149 on line 23 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 150 on line 24 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 151 on line 24 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 152 on line 24 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 153 on line 24 [col:5;len:4;lvl:0;]: T_VARIABLE => $one
	Process token 154 on line 24 [col:9;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 155 on line 24 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 156 on line 24 [col:11;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 150:T_IF
		* level increased *
		* token 150:T_IF added to conditions array *
		Process token 157 on line 24 [col:12;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 158 on line 25 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 156:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 159 on line 25 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 160 on line 25 [col:3;len:4;lvl:0;]: T_ELSE => else
	Process token 161 on line 25 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 162 on line 25 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 163 on line 25 [col:9;len:4;lvl:0;]: T_VARIABLE => $two
	Process token 164 on line 25 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 165 on line 25 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 166 on line 25 [col:15;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 160:T_ELSE
		* level increased *
		* token 160:T_ELSE added to conditions array *
		Process token 167 on line 25 [col:16;len:0;lvl:1;conds;T_ELSE;]: T_WHITESPACE => \n
		Process token 168 on line 26 [col:1;len:1;lvl:1;conds;T_ELSE;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 166:T_OPEN_CURLY_BRACKET
		* token T_ELSE removed from conditions array *
		* level decreased *
	Process token 169 on line 26 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 170 on line 26 [col:3;len:4;lvl:0;]: T_ELSE => else
	Process token 171 on line 26 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 172 on line 26 [col:8;len:2;lvl:0;]: T_IF => if
	Process token 173 on line 26 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 174 on line 26 [col:11;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 175 on line 26 [col:12;len:6;lvl:0;]: T_VARIABLE => $three
	Process token 176 on line 26 [col:18;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 177 on line 26 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 178 on line 26 [col:20;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 172:T_IF
		* level increased *
		* token 172:T_IF added to conditions array *
		Process token 179 on line 26 [col:21;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 180 on line 27 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 178:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 181 on line 27 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 182 on line 27 [col:3;len:6;lvl:0;]: T_ELSEIF => elseif
	Process token 183 on line 27 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 184 on line 27 [col:10;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 185 on line 27 [col:11;len:5;lvl:0;]: T_VARIABLE => $four
	Process token 186 on line 27 [col:16;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 187 on line 27 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 188 on line 27 [col:18;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 182:T_ELSEIF
		* level increased *
		* token 182:T_ELSEIF added to conditions array *
		Process token 189 on line 27 [col:19;len:0;lvl:1;conds;T_ELSEIF;]: T_WHITESPACE => \n
		Process token 190 on line 28 [col:1;len:1;lvl:1;conds;T_ELSEIF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 188:T_OPEN_CURLY_BRACKET
		* token T_ELSEIF removed from conditions array *
		* level decreased *
	Process token 191 on line 28 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 192 on line 29 [col:1;len:2;lvl:0;]: T_CLOSE_TAG => ?>\n
	Process token 193 on line 30 [col:1;len:7;lvl:0;]: T_INLINE_HTML => <table>\n
	Process token 194 on line 31 [col:1;len:8;lvl:0;]: T_INLINE_HTML =>     <tr>\n
	Process token 195 on line 32 [col:1;len:43;lvl:0;]: T_INLINE_HTML =>         <td align="center" valign="center">\n
	Process token 196 on line 33 [col:1;len:8;lvl:0;]: T_INLINE_HTML =>         
	Process token 197 on line 33 [col:9;len:5;lvl:0;]: T_OPEN_TAG => <?php\n
	Process token 198 on line 34 [col:1;len:8;lvl:0;]: T_WHITESPACE =>         
	Process token 199 on line 34 [col:9;len:7;lvl:0;]: T_FOREACH => foreach
	Process token 200 on line 34 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 201 on line 34 [col:17;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 202 on line 34 [col:18;len:5;lvl:0;]: T_VARIABLE => $this
	Process token 203 on line 34 [col:23;len:2;lvl:0;]: T_OBJECT_OPERATOR => ->
	Process token 204 on line 34 [col:25;len:8;lvl:0;]: T_STRING => children
	Process token 205 on line 34 [col:33;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 206 on line 34 [col:34;len:2;lvl:0;]: T_AS => as
	Process token 207 on line 34 [col:36;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 208 on line 34 [col:37;len:6;lvl:0;]: T_VARIABLE => $child
	Process token 209 on line 34 [col:43;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 210 on line 34 [col:44;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 211 on line 34 [col:45;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 199:T_FOREACH
		* level increased *
		* token 199:T_FOREACH added to conditions array *
		Process token 212 on line 34 [col:46;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 213 on line 35 [col:1;len:12;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>             
		Process token 214 on line 35 [col:13;len:38;lvl:1;conds;T_FOREACH;]: T_COMMENT => // There should be no error after this\n
		Process token 215 on line 36 [col:1;len:12;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>             
		Process token 216 on line 36 [col:13;len:39;lvl:1;conds;T_FOREACH;]: T_COMMENT => // foreach, because it is followed by a\n
		Process token 217 on line 37 [col:1;len:12;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>             
		Process token 218 on line 37 [col:13;len:17;lvl:1;conds;T_FOREACH;]: T_COMMENT => // close PHP tag.\n
		Process token 219 on line 38 [col:1;len:8;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>         
		Process token 220 on line 38 [col:9;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 211:T_OPEN_CURLY_BRACKET
		* token T_FOREACH removed from conditions array *
		* level decreased *
	Process token 221 on line 38 [col:10;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 222 on line 39 [col:1;len:8;lvl:0;]: T_WHITESPACE =>         
	Process token 223 on line 39 [col:9;len:2;lvl:0;]: T_CLOSE_TAG => ?>\n
	Process token 224 on line 40 [col:1;len:13;lvl:0;]: T_INLINE_HTML =>         </td>\n
	Process token 225 on line 41 [col:1;len:9;lvl:0;]: T_INLINE_HTML =>     </tr>\n
	Process token 226 on line 42 [col:1;len:8;lvl:0;]: T_INLINE_HTML => </table>\n
	Process token 227 on line 43 [col:1;len:5;lvl:0;]: T_OPEN_TAG => <?php\n
	Process token 228 on line 44 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 229 on line 45 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 230 on line 45 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 231 on line 45 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 232 on line 45 [col:9;len:5;lvl:0;]: T_VARIABLE => $blah
	Process token 233 on line 45 [col:14;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 234 on line 45 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 235 on line 45 [col:16;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 229:T_SWITCH
		* level increased *
		* token 229:T_SWITCH added to conditions array *
		Process token 236 on line 45 [col:17;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 237 on line 46 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 238 on line 46 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 239 on line 46 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 240 on line 46 [col:10;len:5;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'one'
		Process token 241 on line 46 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 238:T_CASE
			* level increased *
			* token 238:T_CASE added to conditions array *
			Process token 242 on line 46 [col:16;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 243 on line 47 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 244 on line 47 [col:9;len:2;lvl:2;conds;T_SWITCH,T_CASE;]: T_IF => if
			Process token 245 on line 47 [col:11;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 246 on line 47 [col:12;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
			Process token 247 on line 47 [col:13;len:5;lvl:2;conds;T_SWITCH,T_CASE;]: T_VARIABLE => $blah
			Process token 248 on line 47 [col:18;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
			Process token 249 on line 47 [col:19;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 250 on line 47 [col:20;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 244:T_IF
				* level increased *
				* token 244:T_IF added to conditions array *
				Process token 251 on line 47 [col:21;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
				Process token 252 on line 48 [col:1;len:12;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
				Process token 253 on line 48 [col:13;len:36;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_COMMENT => // There are no spaces before break.\n
				Process token 254 on line 49 [col:1;len:8;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>         
				Process token 255 on line 49 [col:9;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 250:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 256 on line 49 [col:10;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 257 on line 50 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 258 on line 50 [col:5;len:5;lvl:2;conds;T_SWITCH,T_CASE;]: T_BREAK => break
			=> Found scope closer for 241:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 259 on line 50 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 260 on line 50 [col:11;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 261 on line 51 [col:1;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 262 on line 52 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 263 on line 52 [col:5;len:7;lvl:1;conds;T_SWITCH;]: T_DEFAULT => default
		Process token 264 on line 52 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 263:T_DEFAULT
			* level increased *
			* token 263:T_DEFAULT added to conditions array *
			Process token 265 on line 52 [col:13;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 266 on line 53 [col:1;len:8;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
			Process token 267 on line 53 [col:9;len:2;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_IF => if
			Process token 268 on line 53 [col:11;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
			Process token 269 on line 53 [col:12;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_OPEN_PARENTHESIS => (
			Process token 270 on line 53 [col:13;len:5;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_VARIABLE => $blah
			Process token 271 on line 53 [col:18;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_CLOSE_PARENTHESIS => )
			Process token 272 on line 53 [col:19;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
			Process token 273 on line 53 [col:20;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 267:T_IF
				* level increased *
				* token 267:T_IF added to conditions array *
				Process token 274 on line 53 [col:21;len:0;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE => \n
				Process token 275 on line 54 [col:1;len:12;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>             
				Process token 276 on line 54 [col:13;len:36;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_COMMENT => // There are no spaces before break.\n
				Process token 277 on line 55 [col:1;len:8;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>         
				Process token 278 on line 55 [col:9;len:1;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 273:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 279 on line 55 [col:10;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 280 on line 56 [col:1;len:4;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>     
			Process token 281 on line 56 [col:5;len:5;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_BREAK => break
			=> Found scope closer for 264:T_COLON
			* token T_DEFAULT removed from conditions array *
			* level decreased *
		Process token 282 on line 56 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 283 on line 56 [col:11;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 284 on line 57 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 235:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 285 on line 57 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 286 on line 58 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 287 on line 59 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 288 on line 59 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 289 on line 59 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 290 on line 59 [col:9;len:5;lvl:0;]: T_VARIABLE => $blah
	Process token 291 on line 59 [col:14;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 292 on line 59 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 293 on line 59 [col:16;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 287:T_SWITCH
		* level increased *
		* token 287:T_SWITCH added to conditions array *
		Process token 294 on line 59 [col:17;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 295 on line 60 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 296 on line 60 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 297 on line 60 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 298 on line 60 [col:10;len:5;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'one'
		Process token 299 on line 60 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 296:T_CASE
			* level increased *
			* token 296:T_CASE added to conditions array *
			Process token 300 on line 60 [col:16;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 301 on line 61 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 302 on line 61 [col:9;len:2;lvl:2;conds;T_SWITCH,T_CASE;]: T_IF => if
			Process token 303 on line 61 [col:11;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 304 on line 61 [col:12;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
			Process token 305 on line 61 [col:13;len:5;lvl:2;conds;T_SWITCH,T_CASE;]: T_VARIABLE => $blah
			Process token 306 on line 61 [col:18;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
			Process token 307 on line 61 [col:19;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 308 on line 61 [col:20;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 302:T_IF
				* level increased *
				* token 302:T_IF added to conditions array *
				Process token 309 on line 61 [col:21;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
				Process token 310 on line 62 [col:1;len:12;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
				Process token 311 on line 62 [col:13;len:36;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_COMMENT => // There are no spaces before break.\n
				Process token 312 on line 63 [col:1;len:8;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>         
				Process token 313 on line 63 [col:9;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 308:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 314 on line 63 [col:10;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 315 on line 64 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 316 on line 64 [col:5;len:5;lvl:2;conds;T_SWITCH,T_CASE;]: T_BREAK => break
			=> Found scope closer for 299:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 317 on line 64 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 318 on line 64 [col:11;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 319 on line 65 [col:1;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 320 on line 66 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 321 on line 66 [col:5;len:7;lvl:1;conds;T_SWITCH;]: T_DEFAULT => default
		Process token 322 on line 66 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 321:T_DEFAULT
			* level increased *
			* token 321:T_DEFAULT added to conditions array *
			Process token 323 on line 66 [col:13;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 324 on line 67 [col:1;len:8;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
			Process token 325 on line 67 [col:9;len:2;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_IF => if
			Process token 326 on line 67 [col:11;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
			Process token 327 on line 67 [col:12;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_OPEN_PARENTHESIS => (
			Process token 328 on line 67 [col:13;len:5;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_VARIABLE => $blah
			Process token 329 on line 67 [col:18;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_CLOSE_PARENTHESIS => )
			Process token 330 on line 67 [col:19;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
			Process token 331 on line 67 [col:20;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 325:T_IF
				* level increased *
				* token 325:T_IF added to conditions array *
				Process token 332 on line 67 [col:21;len:0;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE => \n
				Process token 333 on line 68 [col:1;len:12;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>             
				Process token 334 on line 68 [col:13;len:13;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_COMMENT => // Code here.\n
				Process token 335 on line 69 [col:1;len:8;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>         
				Process token 336 on line 69 [col:9;len:1;lvl:3;conds;T_SWITCH,T_DEFAULT,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 331:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 337 on line 69 [col:10;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 338 on line 70 [col:1;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 322:T_COLON
			* token T_DEFAULT removed from conditions array *
			* level decreased *
		=> Found scope closer for 293:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 339 on line 70 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 340 on line 71 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 341 on line 72 [col:1;len:7;lvl:0;]: T_FOREACH => foreach
	Process token 342 on line 72 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 343 on line 72 [col:9;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 344 on line 72 [col:10;len:5;lvl:0;]: T_VARIABLE => $blah
	Process token 345 on line 72 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 346 on line 72 [col:16;len:2;lvl:0;]: T_AS => as
	Process token 347 on line 72 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 348 on line 72 [col:19;len:4;lvl:0;]: T_VARIABLE => $var
	Process token 349 on line 72 [col:23;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 350 on line 72 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 351 on line 72 [col:25;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 341:T_FOREACH
		* level increased *
		* token 341:T_FOREACH added to conditions array *
		Process token 352 on line 72 [col:26;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 353 on line 73 [col:1;len:4;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>     
		Process token 354 on line 73 [col:5;len:2;lvl:1;conds;T_FOREACH;]: T_IF => if
		Process token 355 on line 73 [col:7;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 356 on line 73 [col:8;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_PARENTHESIS => (
		Process token 357 on line 73 [col:9;len:5;lvl:1;conds;T_FOREACH;]: T_VARIABLE => $blah
		Process token 358 on line 73 [col:14;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_PARENTHESIS => )
		Process token 359 on line 73 [col:15;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 360 on line 73 [col:16;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 354:T_IF
			* level increased *
			* token 354:T_IF added to conditions array *
			Process token 361 on line 73 [col:17;len:0;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE => \n
			Process token 362 on line 74 [col:1;len:4;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE =>     
			Process token 363 on line 74 [col:5;len:1;lvl:2;conds;T_FOREACH,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 360:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 364 on line 74 [col:6;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 365 on line 75 [col:1;len:4;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>     
		Process token 366 on line 75 [col:5;len:5;lvl:1;conds;T_FOREACH;]: T_BREAK => break
		Process token 367 on line 75 [col:10;len:1;lvl:1;conds;T_FOREACH;]: T_SEMICOLON => ;
		Process token 368 on line 75 [col:11;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 369 on line 76 [col:1;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 351:T_OPEN_CURLY_BRACKET
		* token T_FOREACH removed from conditions array *
		* level decreased *
	Process token 370 on line 76 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 371 on line 77 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 372 on line 78 [col:1;len:5;lvl:0;]: T_WHILE => while
	Process token 373 on line 78 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 374 on line 78 [col:7;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 375 on line 78 [col:8;len:4;lvl:0;]: T_TRUE => true
	Process token 376 on line 78 [col:12;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 377 on line 78 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 378 on line 78 [col:14;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 372:T_WHILE
		* level increased *
		* token 372:T_WHILE added to conditions array *
		Process token 379 on line 78 [col:15;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 380 on line 79 [col:1;len:4;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>     
		Process token 381 on line 79 [col:5;len:3;lvl:1;conds;T_WHILE;]: T_FOR => for
		Process token 382 on line 79 [col:8;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 383 on line 79 [col:9;len:1;lvl:1;conds;T_WHILE;]: T_OPEN_PARENTHESIS => (
		Process token 384 on line 79 [col:10;len:2;lvl:1;conds;T_WHILE;]: T_VARIABLE => $i
		Process token 385 on line 79 [col:12;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 386 on line 79 [col:13;len:1;lvl:1;conds;T_WHILE;]: T_EQUAL => =
		Process token 387 on line 79 [col:14;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 388 on line 79 [col:15;len:1;lvl:1;conds;T_WHILE;]: T_LNUMBER => 0
		Process token 389 on line 79 [col:16;len:1;lvl:1;conds;T_WHILE;]: T_SEMICOLON => ;
		Process token 390 on line 79 [col:17;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 391 on line 79 [col:18;len:2;lvl:1;conds;T_WHILE;]: T_VARIABLE => $i
		Process token 392 on line 79 [col:20;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 393 on line 79 [col:21;len:1;lvl:1;conds;T_WHILE;]: T_LESS_THAN => <
		Process token 394 on line 79 [col:22;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 395 on line 79 [col:23;len:2;lvl:1;conds;T_WHILE;]: T_LNUMBER => 10
		Process token 396 on line 79 [col:25;len:1;lvl:1;conds;T_WHILE;]: T_SEMICOLON => ;
		Process token 397 on line 79 [col:26;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 398 on line 79 [col:27;len:2;lvl:1;conds;T_WHILE;]: T_VARIABLE => $i
		Process token 399 on line 79 [col:29;len:2;lvl:1;conds;T_WHILE;]: T_INC => ++
		Process token 400 on line 79 [col:31;len:1;lvl:1;conds;T_WHILE;]: T_CLOSE_PARENTHESIS => )
		Process token 401 on line 79 [col:32;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 402 on line 79 [col:33;len:1;lvl:1;conds;T_WHILE;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 381:T_FOR
			* level increased *
			* token 381:T_FOR added to conditions array *
			Process token 403 on line 79 [col:34;len:0;lvl:2;conds;T_WHILE,T_FOR;]: T_WHITESPACE => \n
			Process token 404 on line 80 [col:1;len:0;lvl:2;conds;T_WHILE,T_FOR;]: T_WHITESPACE => \n
			Process token 405 on line 81 [col:1;len:8;lvl:2;conds;T_WHILE,T_FOR;]: T_WHITESPACE =>         
			Process token 406 on line 81 [col:9;len:2;lvl:2;conds;T_WHILE,T_FOR;]: T_IF => if
			Process token 407 on line 81 [col:11;len:1;lvl:2;conds;T_WHILE,T_FOR;]: T_WHITESPACE =>  
			Process token 408 on line 81 [col:12;len:1;lvl:2;conds;T_WHILE,T_FOR;]: T_OPEN_PARENTHESIS => (
			Process token 409 on line 81 [col:13;len:10;lvl:2;conds;T_WHILE,T_FOR;]: T_VARIABLE => $something
			Process token 410 on line 81 [col:23;len:1;lvl:2;conds;T_WHILE,T_FOR;]: T_CLOSE_PARENTHESIS => )
			Process token 411 on line 81 [col:24;len:1;lvl:2;conds;T_WHILE,T_FOR;]: T_WHITESPACE =>  
			Process token 412 on line 81 [col:25;len:1;lvl:2;conds;T_WHILE,T_FOR;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 406:T_IF
				* level increased *
				* token 406:T_IF added to conditions array *
				Process token 413 on line 81 [col:26;len:0;lvl:3;conds;T_WHILE,T_FOR,T_IF;]: T_WHITESPACE => \n
				Process token 414 on line 82 [col:1;len:8;lvl:3;conds;T_WHILE,T_FOR,T_IF;]: T_WHITESPACE =>         
				Process token 415 on line 82 [col:9;len:1;lvl:3;conds;T_WHILE,T_FOR,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 412:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 416 on line 82 [col:10;len:0;lvl:2;conds;T_WHILE,T_FOR;]: T_WHITESPACE => \n
			Process token 417 on line 83 [col:1;len:0;lvl:2;conds;T_WHILE,T_FOR;]: T_WHITESPACE => \n
			Process token 418 on line 84 [col:1;len:4;lvl:2;conds;T_WHILE,T_FOR;]: T_WHITESPACE =>     
			Process token 419 on line 84 [col:5;len:1;lvl:2;conds;T_WHILE,T_FOR;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 402:T_OPEN_CURLY_BRACKET
			* token T_FOR removed from conditions array *
			* level decreased *
		Process token 420 on line 84 [col:6;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 421 on line 85 [col:1;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 422 on line 86 [col:1;len:4;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>     
		Process token 423 on line 86 [col:5;len:7;lvl:1;conds;T_WHILE;]: T_FOREACH => foreach
		Process token 424 on line 86 [col:12;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 425 on line 86 [col:13;len:1;lvl:1;conds;T_WHILE;]: T_OPEN_PARENTHESIS => (
		Process token 426 on line 86 [col:14;len:5;lvl:1;conds;T_WHILE;]: T_VARIABLE => $this
		Process token 427 on line 86 [col:19;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 428 on line 86 [col:20;len:2;lvl:1;conds;T_WHILE;]: T_AS => as
		Process token 429 on line 86 [col:22;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 430 on line 86 [col:23;len:5;lvl:1;conds;T_WHILE;]: T_VARIABLE => $that
		Process token 431 on line 86 [col:28;len:1;lvl:1;conds;T_WHILE;]: T_CLOSE_PARENTHESIS => )
		Process token 432 on line 86 [col:29;len:1;lvl:1;conds;T_WHILE;]: T_WHITESPACE =>  
		Process token 433 on line 86 [col:30;len:1;lvl:1;conds;T_WHILE;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 423:T_FOREACH
			* level increased *
			* token 423:T_FOREACH added to conditions array *
			Process token 434 on line 86 [col:31;len:0;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE => \n
			Process token 435 on line 87 [col:1;len:8;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE =>         
			Process token 436 on line 87 [col:9;len:2;lvl:2;conds;T_WHILE,T_FOREACH;]: T_DO => do
			Process token 437 on line 87 [col:11;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE =>  
			Process token 438 on line 87 [col:12;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 436:T_DO
				* level increased *
				* token 436:T_DO added to conditions array *
				Process token 439 on line 87 [col:13;len:0;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_WHITESPACE => \n
				Process token 440 on line 88 [col:1;len:0;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_WHITESPACE => \n
				Process token 441 on line 89 [col:1;len:12;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_WHITESPACE =>             
				Process token 442 on line 89 [col:13;len:4;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_ECHO => echo
				Process token 443 on line 89 [col:17;len:1;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_WHITESPACE =>  
				Process token 444 on line 89 [col:18;len:2;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_VARIABLE => $i
				Process token 445 on line 89 [col:20;len:1;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_SEMICOLON => ;
				Process token 446 on line 89 [col:21;len:0;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_WHITESPACE => \n
				Process token 447 on line 90 [col:1;len:8;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_WHITESPACE =>         
				Process token 448 on line 90 [col:9;len:1;lvl:3;conds;T_WHILE,T_FOREACH,T_DO;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 438:T_OPEN_CURLY_BRACKET
				* token T_DO removed from conditions array *
				* level decreased *
			Process token 449 on line 90 [col:10;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE =>  
			Process token 450 on line 90 [col:11;len:5;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHILE => while
			Process token 451 on line 90 [col:16;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE =>  
			Process token 452 on line 90 [col:17;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_OPEN_PARENTHESIS => (
			Process token 453 on line 90 [col:18;len:4;lvl:2;conds;T_WHILE,T_FOREACH;]: T_TRUE => true
			Process token 454 on line 90 [col:22;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_CLOSE_PARENTHESIS => )
			Process token 455 on line 90 [col:23;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_SEMICOLON => ;
			Process token 456 on line 90 [col:24;len:0;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE => \n
			Process token 457 on line 91 [col:1;len:4;lvl:2;conds;T_WHILE,T_FOREACH;]: T_WHITESPACE =>     
			Process token 458 on line 91 [col:5;len:1;lvl:2;conds;T_WHILE,T_FOREACH;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 433:T_OPEN_CURLY_BRACKET
			* token T_FOREACH removed from conditions array *
			* level decreased *
		Process token 459 on line 91 [col:6;len:0;lvl:1;conds;T_WHILE;]: T_WHITESPACE => \n
		Process token 460 on line 92 [col:1;len:1;lvl:1;conds;T_WHILE;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 378:T_OPEN_CURLY_BRACKET
		* token T_WHILE removed from conditions array *
		* level decreased *
	Process token 461 on line 92 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 462 on line 93 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 463 on line 94 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 464 on line 94 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 465 on line 94 [col:10;len:10;lvl:0;]: T_STRING => myFunction
	Process token 466 on line 94 [col:20;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 467 on line 94 [col:21;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 468 on line 94 [col:22;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 469 on line 95 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 463:T_FUNCTION
		* level increased *
		* token 463:T_FUNCTION added to conditions array *
		Process token 470 on line 95 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 471 on line 96 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 472 on line 96 [col:5;len:2;lvl:1;conds;T_FUNCTION;]: T_IF => if
		Process token 473 on line 96 [col:7;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 474 on line 96 [col:8;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 475 on line 96 [col:9;len:5;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $blah
		Process token 476 on line 96 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 477 on line 96 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 478 on line 96 [col:16;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 472:T_IF
			* level increased *
			* token 472:T_IF added to conditions array *
			Process token 479 on line 96 [col:17;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 480 on line 97 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>     
			Process token 481 on line 97 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 478:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 482 on line 97 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 483 on line 98 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 484 on line 99 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 469:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 485 on line 99 [col:2;len:18;lvl:0;]: T_COMMENT => //end myFunction()\n
	Process token 486 on line 100 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 487 on line 101 [col:1;len:7;lvl:0;]: T_FOREACH => foreach
	Process token 488 on line 101 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 489 on line 101 [col:9;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 490 on line 101 [col:10;len:5;lvl:0;]: T_VARIABLE => $this
	Process token 491 on line 101 [col:15;len:2;lvl:0;]: T_OBJECT_OPERATOR => ->
	Process token 492 on line 101 [col:17;len:8;lvl:0;]: T_STRING => children
	Process token 493 on line 101 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 494 on line 101 [col:26;len:2;lvl:0;]: T_AS => as
	Process token 495 on line 101 [col:28;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 496 on line 101 [col:29;len:6;lvl:0;]: T_VARIABLE => $child
	Process token 497 on line 101 [col:35;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 498 on line 101 [col:36;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 499 on line 101 [col:37;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 487:T_FOREACH
		* level increased *
		* token 487:T_FOREACH added to conditions array *
		Process token 500 on line 101 [col:38;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 501 on line 102 [col:1;len:4;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>     
		Process token 502 on line 102 [col:5;len:4;lvl:1;conds;T_FOREACH;]: T_ECHO => echo
		Process token 503 on line 102 [col:9;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 504 on line 102 [col:10;len:6;lvl:1;conds;T_FOREACH;]: T_VARIABLE => $child
		Process token 505 on line 102 [col:16;len:1;lvl:1;conds;T_FOREACH;]: T_SEMICOLON => ;
		Process token 506 on line 102 [col:17;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 507 on line 103 [col:1;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 508 on line 104 [col:1;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 499:T_OPEN_CURLY_BRACKET
		* token T_FOREACH removed from conditions array *
		* level decreased *
	Process token 509 on line 104 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 510 on line 105 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 511 on line 106 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 512 on line 106 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 513 on line 106 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 514 on line 106 [col:5;len:18;lvl:0;]: T_VARIABLE => $defaultPageDesign
	Process token 515 on line 106 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 516 on line 106 [col:24;len:3;lvl:0;]: T_IS_IDENTICAL => ===
	Process token 517 on line 106 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 518 on line 106 [col:28;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 519 on line 106 [col:29;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 520 on line 107 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 521 on line 107 [col:5;len:2;lvl:0;]: T_BOOLEAN_AND => &&
	Process token 522 on line 107 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 523 on line 107 [col:8;len:15;lvl:0;]: T_VARIABLE => $defaultCascade
	Process token 524 on line 107 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 525 on line 107 [col:24;len:3;lvl:0;]: T_IS_IDENTICAL => ===
	Process token 526 on line 107 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 527 on line 107 [col:28;len:4;lvl:0;]: T_TRUE => TRUE
	Process token 528 on line 107 [col:32;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 529 on line 108 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 530 on line 108 [col:5;len:2;lvl:0;]: T_BOOLEAN_AND => &&
	Process token 531 on line 108 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 532 on line 108 [col:8;len:19;lvl:0;]: T_VARIABLE => $defaultChildDesign
	Process token 533 on line 108 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 534 on line 108 [col:28;len:3;lvl:0;]: T_IS_IDENTICAL => ===
	Process token 535 on line 108 [col:31;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 536 on line 108 [col:32;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 537 on line 108 [col:33;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 538 on line 109 [col:1;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 539 on line 109 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 540 on line 109 [col:3;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 511:T_IF
		* level increased *
		* token 511:T_IF added to conditions array *
		Process token 541 on line 109 [col:4;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 542 on line 110 [col:1;len:4;lvl:1;conds;T_IF;]: T_WHITESPACE =>     
		Process token 543 on line 110 [col:5;len:16;lvl:1;conds;T_IF;]: T_VARIABLE => $settingsUpdated
		Process token 544 on line 110 [col:21;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 545 on line 110 [col:22;len:1;lvl:1;conds;T_IF;]: T_EQUAL => =
		Process token 546 on line 110 [col:23;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 547 on line 110 [col:24;len:5;lvl:1;conds;T_IF;]: T_FALSE => FALSE
		Process token 548 on line 110 [col:29;len:1;lvl:1;conds;T_IF;]: T_SEMICOLON => ;
		Process token 549 on line 110 [col:30;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 550 on line 111 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 540:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 551 on line 111 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 552 on line 112 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 553 on line 113 [col:1;len:7;lvl:0;]: T_FOREACH => foreach
	Process token 554 on line 113 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 555 on line 113 [col:9;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 556 on line 113 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 557 on line 113 [col:11;len:5;lvl:0;]: T_VARIABLE => $blah
	Process token 558 on line 113 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 559 on line 113 [col:17;len:2;lvl:0;]: T_AS => as
	Process token 560 on line 113 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 561 on line 113 [col:20;len:4;lvl:0;]: T_VARIABLE => $var
	Process token 562 on line 113 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 563 on line 113 [col:25;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 564 on line 113 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 565 on line 113 [col:27;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 553:T_FOREACH
		* level increased *
		* token 553:T_FOREACH added to conditions array *
		Process token 566 on line 113 [col:28;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 567 on line 114 [col:1;len:4;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>     
		Process token 568 on line 114 [col:5;len:2;lvl:1;conds;T_FOREACH;]: T_IF => if
		Process token 569 on line 114 [col:7;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 570 on line 114 [col:8;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_PARENTHESIS => (
		Process token 571 on line 114 [col:9;len:2;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>   
		Process token 572 on line 114 [col:11;len:5;lvl:1;conds;T_FOREACH;]: T_VARIABLE => $blah
		Process token 573 on line 114 [col:16;len:4;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>     
		Process token 574 on line 114 [col:20;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_PARENTHESIS => )
		Process token 575 on line 114 [col:21;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 576 on line 114 [col:22;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 568:T_IF
			* level increased *
			* token 568:T_IF added to conditions array *
			Process token 577 on line 114 [col:23;len:0;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE => \n
			Process token 578 on line 115 [col:1;len:4;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE =>     
			Process token 579 on line 115 [col:5;len:1;lvl:2;conds;T_FOREACH,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 576:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 580 on line 115 [col:6;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 581 on line 116 [col:1;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 565:T_OPEN_CURLY_BRACKET
		* token T_FOREACH removed from conditions array *
		* level decreased *
	Process token 582 on line 116 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 583 on line 117 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 584 on line 118 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 585 on line 118 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 586 on line 118 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 587 on line 118 [col:5;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 588 on line 119 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 589 on line 119 [col:5;len:18;lvl:0;]: T_VARIABLE => $defaultPageDesign
	Process token 590 on line 119 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 591 on line 119 [col:24;len:3;lvl:0;]: T_IS_IDENTICAL => ===
	Process token 592 on line 119 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 593 on line 119 [col:28;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 594 on line 119 [col:29;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 595 on line 120 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 596 on line 120 [col:5;len:2;lvl:0;]: T_BOOLEAN_AND => &&
	Process token 597 on line 120 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 598 on line 120 [col:8;len:15;lvl:0;]: T_VARIABLE => $defaultCascade
	Process token 599 on line 120 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 600 on line 120 [col:24;len:3;lvl:0;]: T_IS_IDENTICAL => ===
	Process token 601 on line 120 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 602 on line 120 [col:28;len:4;lvl:0;]: T_TRUE => TRUE
	Process token 603 on line 120 [col:32;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 604 on line 121 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 605 on line 121 [col:5;len:2;lvl:0;]: T_BOOLEAN_AND => &&
	Process token 606 on line 121 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 607 on line 121 [col:8;len:19;lvl:0;]: T_VARIABLE => $defaultChildDesign
	Process token 608 on line 121 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 609 on line 121 [col:28;len:3;lvl:0;]: T_IS_IDENTICAL => ===
	Process token 610 on line 121 [col:31;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 611 on line 121 [col:32;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 612 on line 121 [col:33;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 613 on line 122 [col:1;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 614 on line 122 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 615 on line 122 [col:3;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 584:T_IF
		* level increased *
		* token 584:T_IF added to conditions array *
		Process token 616 on line 122 [col:4;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 617 on line 123 [col:1;len:4;lvl:1;conds;T_IF;]: T_WHITESPACE =>     
		Process token 618 on line 123 [col:5;len:16;lvl:1;conds;T_IF;]: T_VARIABLE => $settingsUpdated
		Process token 619 on line 123 [col:21;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 620 on line 123 [col:22;len:1;lvl:1;conds;T_IF;]: T_EQUAL => =
		Process token 621 on line 123 [col:23;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 622 on line 123 [col:24;len:5;lvl:1;conds;T_IF;]: T_FALSE => FALSE
		Process token 623 on line 123 [col:29;len:1;lvl:1;conds;T_IF;]: T_SEMICOLON => ;
		Process token 624 on line 123 [col:30;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 625 on line 124 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 615:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 626 on line 124 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 627 on line 125 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 628 on line 126 [col:1;len:4;lvl:0;]: T_VARIABLE => $moo
	Process token 629 on line 126 [col:5;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 630 on line 126 [col:6;len:1;lvl:0;]: T_EQUAL => =
	Process token 631 on line 126 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 632 on line 126 [col:8;len:6;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'blar'
	Process token 633 on line 126 [col:14;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 634 on line 126 [col:15;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 635 on line 127 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 636 on line 127 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 637 on line 127 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 638 on line 127 [col:9;len:4;lvl:0;]: T_VARIABLE => $moo
	Process token 639 on line 127 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 640 on line 127 [col:14;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 641 on line 128 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 635:T_SWITCH
		* level increased *
		* token 635:T_SWITCH added to conditions array *
		Process token 642 on line 128 [col:2;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 643 on line 129 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 644 on line 129 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 645 on line 129 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 646 on line 129 [col:10;len:6;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'blar'
		Process token 647 on line 129 [col:16;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 644:T_CASE
			* level increased *
			* token 644:T_CASE added to conditions array *
			Process token 648 on line 129 [col:17;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 649 on line 130 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 650 on line 130 [col:9;len:2;lvl:2;conds;T_SWITCH,T_CASE;]: T_IF => if
			Process token 651 on line 130 [col:11;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 652 on line 130 [col:12;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
			Process token 653 on line 130 [col:13;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_VARIABLE => $moo
			Process token 654 on line 130 [col:17;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 655 on line 130 [col:18;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_IS_IDENTICAL => ===
			Process token 656 on line 130 [col:21;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 657 on line 130 [col:22;len:7;lvl:2;conds;T_SWITCH,T_CASE;]: T_CONSTANT_ENCAPSED_STRING => 'blar2'
			Process token 658 on line 130 [col:29;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
			Process token 659 on line 130 [col:30;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 660 on line 130 [col:31;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 650:T_IF
				* level increased *
				* token 650:T_IF added to conditions array *
				Process token 661 on line 130 [col:32;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
				Process token 662 on line 131 [col:1;len:12;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
				Process token 663 on line 131 [col:13;len:4;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_VARIABLE => $moo
				Process token 664 on line 131 [col:17;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>  
				Process token 665 on line 131 [col:18;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_EQUAL => =
				Process token 666 on line 131 [col:19;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>  
				Process token 667 on line 131 [col:20;len:6;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'blar'
				Process token 668 on line 131 [col:26;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
				Process token 669 on line 132 [col:1;len:8;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>         
				Process token 670 on line 132 [col:9;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 660:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 671 on line 132 [col:10;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 672 on line 133 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 673 on line 133 [col:5;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 647:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 674 on line 133 [col:11;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 675 on line 133 [col:12;len:4;lvl:1;conds;T_SWITCH;]: T_VARIABLE => $moo
		Process token 676 on line 133 [col:16;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 677 on line 133 [col:17;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 678 on line 134 [col:1;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 679 on line 135 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 680 on line 135 [col:5;len:7;lvl:1;conds;T_SWITCH;]: T_DEFAULT => default
		Process token 681 on line 135 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 680:T_DEFAULT
			* level increased *
			* token 680:T_DEFAULT added to conditions array *
			Process token 682 on line 135 [col:13;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 683 on line 136 [col:1;len:8;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
			Process token 684 on line 136 [col:9;len:4;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_VARIABLE => $moo
			Process token 685 on line 136 [col:13;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
			Process token 686 on line 136 [col:14;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_EQUAL => =
			Process token 687 on line 136 [col:15;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
			Process token 688 on line 136 [col:16;len:5;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_CONSTANT_ENCAPSED_STRING => 'moo'
			Process token 689 on line 136 [col:21;len:1;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_SEMICOLON => ;
			Process token 690 on line 136 [col:22;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 691 on line 137 [col:1;len:4;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>     
			Process token 692 on line 137 [col:5;len:5;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_BREAK => break
			=> Found scope closer for 681:T_COLON
			* token T_DEFAULT removed from conditions array *
			* level decreased *
		Process token 693 on line 137 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 694 on line 137 [col:11;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 695 on line 138 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 641:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 696 on line 138 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 697 on line 139 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 698 on line 140 [col:1;len:2;lvl:0;]: T_DO => do
	Process token 699 on line 140 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 700 on line 140 [col:4;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 698:T_DO
		* level increased *
		* token 698:T_DO added to conditions array *
		Process token 701 on line 140 [col:5;len:0;lvl:1;conds;T_DO;]: T_WHITESPACE => \n
		Process token 702 on line 141 [col:1;len:1;lvl:1;conds;T_DO;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 700:T_OPEN_CURLY_BRACKET
		* token T_DO removed from conditions array *
		* level decreased *
	Process token 703 on line 141 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 704 on line 142 [col:1;len:5;lvl:0;]: T_WHILE => while
	Process token 705 on line 142 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 706 on line 142 [col:7;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 707 on line 142 [col:8;len:4;lvl:0;]: T_TRUE => true
	Process token 708 on line 142 [col:12;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 709 on line 142 [col:13;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 710 on line 142 [col:14;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 711 on line 143 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 712 on line 144 [col:1;len:3;lvl:0;]: T_TRY => try
	Process token 713 on line 144 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 714 on line 144 [col:5;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 712:T_TRY
		* level increased *
		* token 712:T_TRY added to conditions array *
		Process token 715 on line 144 [col:6;len:0;lvl:1;conds;T_TRY;]: T_WHITESPACE => \n
		Process token 716 on line 145 [col:1;len:4;lvl:1;conds;T_TRY;]: T_WHITESPACE =>     
		Process token 717 on line 145 [col:5;len:12;lvl:1;conds;T_TRY;]: T_COMMENT => // Something\n
		Process token 718 on line 146 [col:1;len:1;lvl:1;conds;T_TRY;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 714:T_OPEN_CURLY_BRACKET
		* token T_TRY removed from conditions array *
		* level decreased *
	Process token 719 on line 146 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 720 on line 146 [col:3;len:5;lvl:0;]: T_CATCH => catch
	Process token 721 on line 146 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 722 on line 146 [col:9;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 723 on line 146 [col:10;len:9;lvl:0;]: T_STRING => Exception
	Process token 724 on line 146 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 725 on line 146 [col:20;len:2;lvl:0;]: T_VARIABLE => $e
	Process token 726 on line 146 [col:22;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 727 on line 146 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 728 on line 146 [col:24;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 720:T_CATCH
		* level increased *
		* token 720:T_CATCH added to conditions array *
		Process token 729 on line 146 [col:25;len:0;lvl:1;conds;T_CATCH;]: T_WHITESPACE => \n
		Process token 730 on line 147 [col:1;len:4;lvl:1;conds;T_CATCH;]: T_WHITESPACE =>     
		Process token 731 on line 147 [col:5;len:12;lvl:1;conds;T_CATCH;]: T_COMMENT => // Something\n
		Process token 732 on line 148 [col:1;len:1;lvl:1;conds;T_CATCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 728:T_OPEN_CURLY_BRACKET
		* token T_CATCH removed from conditions array *
		* level decreased *
	Process token 733 on line 148 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 734 on line 149 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 735 on line 150 [col:1;len:3;lvl:0;]: T_TRY => try
	Process token 736 on line 150 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 737 on line 150 [col:5;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 735:T_TRY
		* level increased *
		* token 735:T_TRY added to conditions array *
		Process token 738 on line 150 [col:6;len:0;lvl:1;conds;T_TRY;]: T_WHITESPACE => \n
		Process token 739 on line 151 [col:1;len:0;lvl:1;conds;T_TRY;]: T_WHITESPACE => \n
		Process token 740 on line 152 [col:1;len:4;lvl:1;conds;T_TRY;]: T_WHITESPACE =>     
		Process token 741 on line 152 [col:5;len:12;lvl:1;conds;T_TRY;]: T_COMMENT => // Something\n
		Process token 742 on line 153 [col:1;len:0;lvl:1;conds;T_TRY;]: T_WHITESPACE => \n
		Process token 743 on line 154 [col:1;len:1;lvl:1;conds;T_TRY;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 737:T_OPEN_CURLY_BRACKET
		* token T_TRY removed from conditions array *
		* level decreased *
	Process token 744 on line 154 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 745 on line 154 [col:3;len:5;lvl:0;]: T_CATCH => catch
	Process token 746 on line 154 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 747 on line 154 [col:9;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 748 on line 154 [col:10;len:9;lvl:0;]: T_STRING => Exception
	Process token 749 on line 154 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 750 on line 154 [col:20;len:2;lvl:0;]: T_VARIABLE => $e
	Process token 751 on line 154 [col:22;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 752 on line 154 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 753 on line 154 [col:24;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 745:T_CATCH
		* level increased *
		* token 745:T_CATCH added to conditions array *
		Process token 754 on line 154 [col:25;len:0;lvl:1;conds;T_CATCH;]: T_WHITESPACE => \n
		Process token 755 on line 155 [col:1;len:0;lvl:1;conds;T_CATCH;]: T_WHITESPACE => \n
		Process token 756 on line 156 [col:1;len:4;lvl:1;conds;T_CATCH;]: T_WHITESPACE =>     
		Process token 757 on line 156 [col:5;len:12;lvl:1;conds;T_CATCH;]: T_COMMENT => // Something\n
		Process token 758 on line 157 [col:1;len:0;lvl:1;conds;T_CATCH;]: T_WHITESPACE => \n
		Process token 759 on line 158 [col:1;len:1;lvl:1;conds;T_CATCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 753:T_OPEN_CURLY_BRACKET
		* token T_CATCH removed from conditions array *
		* level decreased *
	Process token 760 on line 158 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 761 on line 159 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 762 on line 160 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 763 on line 160 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 764 on line 160 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 765 on line 160 [col:5;len:4;lvl:0;]: T_VARIABLE => $one
	Process token 766 on line 160 [col:9;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 767 on line 160 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 768 on line 160 [col:11;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 762:T_IF
		* level increased *
		* token 762:T_IF added to conditions array *
		Process token 769 on line 160 [col:12;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 770 on line 161 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 768:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 771 on line 161 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 772 on line 162 [col:1;len:6;lvl:0;]: T_ELSEIF => elseif
	Process token 773 on line 162 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 774 on line 162 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 775 on line 162 [col:9;len:4;lvl:0;]: T_VARIABLE => $two
	Process token 776 on line 162 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 777 on line 162 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 778 on line 162 [col:15;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 772:T_ELSEIF
		* level increased *
		* token 772:T_ELSEIF added to conditions array *
		Process token 779 on line 162 [col:16;len:0;lvl:1;conds;T_ELSEIF;]: T_WHITESPACE => \n
		Process token 780 on line 163 [col:1;len:1;lvl:1;conds;T_ELSEIF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 778:T_OPEN_CURLY_BRACKET
		* token T_ELSEIF removed from conditions array *
		* level decreased *
	Process token 781 on line 163 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 782 on line 164 [col:1;len:20;lvl:0;]: T_COMMENT => // else if something\n
	Process token 783 on line 165 [col:1;len:4;lvl:0;]: T_ELSE => else
	Process token 784 on line 165 [col:5;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 785 on line 165 [col:6;len:2;lvl:0;]: T_IF => if
	Process token 786 on line 165 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 787 on line 165 [col:9;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 788 on line 165 [col:10;len:6;lvl:0;]: T_VARIABLE => $three
	Process token 789 on line 165 [col:16;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 790 on line 165 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 791 on line 165 [col:18;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 785:T_IF
		* level increased *
		* token 785:T_IF added to conditions array *
		Process token 792 on line 165 [col:19;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 793 on line 166 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 791:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 794 on line 166 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 795 on line 166 [col:3;len:20;lvl:0;]: T_COMMENT => // else do something\n
	Process token 796 on line 167 [col:1;len:4;lvl:0;]: T_ELSE => else
	Process token 797 on line 167 [col:5;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 798 on line 167 [col:6;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 796:T_ELSE
		* level increased *
		* token 796:T_ELSE added to conditions array *
		Process token 799 on line 167 [col:7;len:0;lvl:1;conds;T_ELSE;]: T_WHITESPACE => \n
		Process token 800 on line 168 [col:1;len:1;lvl:1;conds;T_ELSE;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 798:T_OPEN_CURLY_BRACKET
		* token T_ELSE removed from conditions array *
		* level decreased *
	Process token 801 on line 168 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 802 on line 169 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 803 on line 170 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 804 on line 170 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 805 on line 170 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 806 on line 170 [col:5;len:4;lvl:0;]: T_VARIABLE => $one
	Process token 807 on line 170 [col:9;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 808 on line 170 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 809 on line 170 [col:11;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 803:T_IF
		* level increased *
		* token 803:T_IF added to conditions array *
		Process token 810 on line 170 [col:12;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 811 on line 171 [col:1;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 812 on line 172 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 809:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 813 on line 172 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 814 on line 173 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 815 on line 174 [col:1;len:2;lvl:0;]: T_DO => do
	Process token 816 on line 174 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 817 on line 174 [col:4;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 815:T_DO
		* level increased *
		* token 815:T_DO added to conditions array *
		Process token 818 on line 174 [col:5;len:0;lvl:1;conds;T_DO;]: T_WHITESPACE => \n
		Process token 819 on line 175 [col:1;len:4;lvl:1;conds;T_DO;]: T_WHITESPACE =>     
		Process token 820 on line 175 [col:5;len:4;lvl:1;conds;T_DO;]: T_ECHO => echo
		Process token 821 on line 175 [col:9;len:1;lvl:1;conds;T_DO;]: T_WHITESPACE =>  
		Process token 822 on line 175 [col:10;len:4;lvl:1;conds;T_DO;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
		Process token 823 on line 175 [col:14;len:1;lvl:1;conds;T_DO;]: T_SEMICOLON => ;
		Process token 824 on line 175 [col:15;len:0;lvl:1;conds;T_DO;]: T_WHITESPACE => \n
		Process token 825 on line 176 [col:1;len:1;lvl:1;conds;T_DO;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 817:T_OPEN_CURLY_BRACKET
		* token T_DO removed from conditions array *
		* level decreased *
	Process token 826 on line 176 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 827 on line 176 [col:3;len:5;lvl:0;]: T_WHILE => while
	Process token 828 on line 176 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 829 on line 176 [col:9;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 830 on line 176 [col:10;len:2;lvl:0;]: T_WHITESPACE =>   
	Process token 831 on line 176 [col:12;len:5;lvl:0;]: T_VARIABLE => $blah
	Process token 832 on line 176 [col:17;len:2;lvl:0;]: T_WHITESPACE =>   
	Process token 833 on line 176 [col:19;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 834 on line 176 [col:20;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 835 on line 176 [col:21;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 836 on line 177 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 837 on line 178 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 838 on line 178 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 839 on line 178 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 840 on line 178 [col:5;len:4;lvl:0;]: T_VARIABLE => $one
	Process token 841 on line 178 [col:9;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 842 on line 178 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 843 on line 178 [col:11;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 837:T_IF
		* level increased *
		* token 837:T_IF added to conditions array *
		Process token 844 on line 178 [col:12;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 845 on line 179 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 843:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 846 on line 179 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 847 on line 180 [col:1;len:22;lvl:0;]: T_COMMENT => // No blank line here.\n
	Process token 848 on line 181 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 849 on line 181 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 850 on line 181 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 851 on line 181 [col:5;len:4;lvl:0;]: T_VARIABLE => $two
	Process token 852 on line 181 [col:9;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 853 on line 181 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 854 on line 181 [col:11;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 848:T_IF
		* level increased *
		* token 848:T_IF added to conditions array *
		Process token 855 on line 181 [col:12;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 856 on line 182 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 854:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 857 on line 182 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 858 on line 183 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 859 on line 184 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 860 on line 184 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 861 on line 184 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 862 on line 184 [col:9;len:4;lvl:0;]: T_VARIABLE => $moo
	Process token 863 on line 184 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 864 on line 184 [col:14;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 865 on line 185 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 859:T_SWITCH
		* level increased *
		* token 859:T_SWITCH added to conditions array *
		Process token 866 on line 185 [col:2;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 867 on line 186 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 868 on line 186 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 869 on line 186 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 870 on line 186 [col:10;len:6;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'blar'
		Process token 871 on line 186 [col:16;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 868:T_CASE
			* level increased *
			* token 868:T_CASE added to conditions array *
			Process token 872 on line 186 [col:17;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 873 on line 187 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 874 on line 187 [col:9;len:2;lvl:2;conds;T_SWITCH,T_CASE;]: T_IF => if
			Process token 875 on line 187 [col:11;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 876 on line 187 [col:12;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
			Process token 877 on line 187 [col:13;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_VARIABLE => $moo
			Process token 878 on line 187 [col:17;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 879 on line 187 [col:18;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_IS_IDENTICAL => ===
			Process token 880 on line 187 [col:21;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 881 on line 187 [col:22;len:7;lvl:2;conds;T_SWITCH,T_CASE;]: T_CONSTANT_ENCAPSED_STRING => 'blar2'
			Process token 882 on line 187 [col:29;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
			Process token 883 on line 187 [col:30;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 884 on line 187 [col:31;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 874:T_IF
				* level increased *
				* token 874:T_IF added to conditions array *
				Process token 885 on line 187 [col:32;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
				Process token 886 on line 188 [col:1;len:12;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
				Process token 887 on line 188 [col:13;len:4;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_VARIABLE => $moo
				Process token 888 on line 188 [col:17;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>  
				Process token 889 on line 188 [col:18;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_EQUAL => =
				Process token 890 on line 188 [col:19;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>  
				Process token 891 on line 188 [col:20;len:6;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'blar'
				Process token 892 on line 188 [col:26;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
				Process token 893 on line 189 [col:1;len:8;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>         
				Process token 894 on line 189 [col:9;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 884:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 895 on line 189 [col:10;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 896 on line 190 [col:1;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 897 on line 191 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 898 on line 191 [col:5;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 871:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 899 on line 191 [col:11;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 900 on line 191 [col:12;len:4;lvl:1;conds;T_SWITCH;]: T_VARIABLE => $moo
		Process token 901 on line 191 [col:16;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 902 on line 191 [col:17;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 903 on line 192 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 865:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 904 on line 192 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 905 on line 193 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 906 on line 194 [col:1;len:3;lvl:0;]: T_TRY => try
	Process token 907 on line 194 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 908 on line 194 [col:5;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 906:T_TRY
		* level increased *
		* token 906:T_TRY added to conditions array *
		Process token 909 on line 194 [col:6;len:0;lvl:1;conds;T_TRY;]: T_WHITESPACE => \n
		Process token 910 on line 195 [col:1;len:4;lvl:1;conds;T_TRY;]: T_WHITESPACE =>     
		Process token 911 on line 195 [col:5;len:12;lvl:1;conds;T_TRY;]: T_COMMENT => // Something\n
		Process token 912 on line 196 [col:1;len:1;lvl:1;conds;T_TRY;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 908:T_OPEN_CURLY_BRACKET
		* token T_TRY removed from conditions array *
		* level decreased *
	Process token 913 on line 196 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 914 on line 197 [col:1;len:5;lvl:0;]: T_CATCH => catch
	Process token 915 on line 197 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 916 on line 197 [col:7;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 917 on line 197 [col:8;len:9;lvl:0;]: T_STRING => Exception
	Process token 918 on line 197 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 919 on line 197 [col:18;len:2;lvl:0;]: T_VARIABLE => $e
	Process token 920 on line 197 [col:20;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 921 on line 197 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 922 on line 197 [col:22;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 914:T_CATCH
		* level increased *
		* token 914:T_CATCH added to conditions array *
		Process token 923 on line 197 [col:23;len:0;lvl:1;conds;T_CATCH;]: T_WHITESPACE => \n
		Process token 924 on line 198 [col:1;len:4;lvl:1;conds;T_CATCH;]: T_WHITESPACE =>     
		Process token 925 on line 198 [col:5;len:12;lvl:1;conds;T_CATCH;]: T_COMMENT => // Something\n
		Process token 926 on line 199 [col:1;len:1;lvl:1;conds;T_CATCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 922:T_OPEN_CURLY_BRACKET
		* token T_CATCH removed from conditions array *
		* level decreased *
	Process token 927 on line 199 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 928 on line 200 [col:1;len:7;lvl:0;]: T_FINALLY => finally
	Process token 929 on line 200 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 930 on line 200 [col:9;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 928:T_FINALLY
		* level increased *
		* token 928:T_FINALLY added to conditions array *
		Process token 931 on line 200 [col:10;len:0;lvl:1;conds;T_FINALLY;]: T_WHITESPACE => \n
		Process token 932 on line 201 [col:1;len:4;lvl:1;conds;T_FINALLY;]: T_WHITESPACE =>     
		Process token 933 on line 201 [col:5;len:12;lvl:1;conds;T_FINALLY;]: T_COMMENT => // Something\n
		Process token 934 on line 202 [col:1;len:1;lvl:1;conds;T_FINALLY;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 930:T_OPEN_CURLY_BRACKET
		* token T_FINALLY removed from conditions array *
		* level decreased *
	Process token 935 on line 202 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 936 on line 203 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 937 on line 204 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 938 on line 204 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 939 on line 204 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 940 on line 204 [col:5;len:4;lvl:0;]: T_VARIABLE => $foo
	Process token 941 on line 204 [col:9;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 942 on line 204 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 943 on line 204 [col:11;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 937:T_IF
		* level increased *
		* token 937:T_IF added to conditions array *
		Process token 944 on line 204 [col:12;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 945 on line 205 [col:1;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 946 on line 206 [col:1;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 947 on line 207 [col:1;len:4;lvl:1;conds;T_IF;]: T_WHITESPACE =>     
		Process token 948 on line 207 [col:5;len:3;lvl:1;conds;T_IF;]: T_DOC_COMMENT_OPEN_TAG => /**
		Process token 949 on line 207 [col:8;len:0;lvl:1;conds;T_IF;]: T_DOC_COMMENT_WHITESPACE => \n
		Process token 950 on line 208 [col:1;len:5;lvl:1;conds;T_IF;]: T_DOC_COMMENT_WHITESPACE =>      
		Process token 951 on line 208 [col:6;len:1;lvl:1;conds;T_IF;]: T_DOC_COMMENT_STAR => *
		Process token 952 on line 208 [col:7;len:1;lvl:1;conds;T_IF;]: T_DOC_COMMENT_WHITESPACE =>  
		Process token 953 on line 208 [col:8;len:7;lvl:1;conds;T_IF;]: T_DOC_COMMENT_STRING => Comment
		Process token 954 on line 208 [col:15;len:0;lvl:1;conds;T_IF;]: T_DOC_COMMENT_WHITESPACE => \n
		Process token 955 on line 209 [col:1;len:5;lvl:1;conds;T_IF;]: T_DOC_COMMENT_WHITESPACE =>      
		Process token 956 on line 209 [col:6;len:2;lvl:1;conds;T_IF;]: T_DOC_COMMENT_CLOSE_TAG => */
		Process token 957 on line 209 [col:8;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 958 on line 210 [col:1;len:4;lvl:1;conds;T_IF;]: T_WHITESPACE =>     
		Process token 959 on line 210 [col:5;len:8;lvl:1;conds;T_IF;]: T_FUNCTION => function
		Process token 960 on line 210 [col:13;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 961 on line 210 [col:14;len:3;lvl:1;conds;T_IF;]: T_STRING => foo
		Process token 962 on line 210 [col:17;len:1;lvl:1;conds;T_IF;]: T_OPEN_PARENTHESIS => (
		Process token 963 on line 210 [col:18;len:1;lvl:1;conds;T_IF;]: T_CLOSE_PARENTHESIS => )
		Process token 964 on line 210 [col:19;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 965 on line 210 [col:20;len:1;lvl:1;conds;T_IF;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 959:T_FUNCTION
			* level increased *
			* token 959:T_FUNCTION added to conditions array *
			Process token 966 on line 210 [col:21;len:0;lvl:2;conds;T_IF,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 967 on line 211 [col:1;len:8;lvl:2;conds;T_IF,T_FUNCTION;]: T_WHITESPACE =>         
			Process token 968 on line 211 [col:9;len:12;lvl:2;conds;T_IF,T_FUNCTION;]: T_COMMENT => // Code here\n
			Process token 969 on line 212 [col:1;len:4;lvl:2;conds;T_IF,T_FUNCTION;]: T_WHITESPACE =>     
			Process token 970 on line 212 [col:5;len:1;lvl:2;conds;T_IF,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 965:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 971 on line 212 [col:6;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 972 on line 213 [col:1;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 973 on line 214 [col:1;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 974 on line 215 [col:1;len:4;lvl:1;conds;T_IF;]: T_WHITESPACE =>     
		Process token 975 on line 215 [col:5;len:3;lvl:1;conds;T_IF;]: T_DOC_COMMENT_OPEN_TAG => /**
		Process token 976 on line 215 [col:8;len:0;lvl:1;conds;T_IF;]: T_DOC_COMMENT_WHITESPACE => \n
		Process token 977 on line 216 [col:1;len:5;lvl:1;conds;T_IF;]: T_DOC_COMMENT_WHITESPACE =>      
		Process token 978 on line 216 [col:6;len:1;lvl:1;conds;T_IF;]: T_DOC_COMMENT_STAR => *
		Process token 979 on line 216 [col:7;len:1;lvl:1;conds;T_IF;]: T_DOC_COMMENT_WHITESPACE =>  
		Process token 980 on line 216 [col:8;len:7;lvl:1;conds;T_IF;]: T_DOC_COMMENT_STRING => Comment
		Process token 981 on line 216 [col:15;len:0;lvl:1;conds;T_IF;]: T_DOC_COMMENT_WHITESPACE => \n
		Process token 982 on line 217 [col:1;len:5;lvl:1;conds;T_IF;]: T_DOC_COMMENT_WHITESPACE =>      
		Process token 983 on line 217 [col:6;len:2;lvl:1;conds;T_IF;]: T_DOC_COMMENT_CLOSE_TAG => */
		Process token 984 on line 217 [col:8;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 985 on line 218 [col:1;len:4;lvl:1;conds;T_IF;]: T_WHITESPACE =>     
		Process token 986 on line 218 [col:5;len:5;lvl:1;conds;T_IF;]: T_CLASS => class
		Process token 987 on line 218 [col:10;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 988 on line 218 [col:11;len:3;lvl:1;conds;T_IF;]: T_STRING => bar
		Process token 989 on line 218 [col:14;len:1;lvl:1;conds;T_IF;]: T_OPEN_PARENTHESIS => (
		Process token 990 on line 218 [col:15;len:1;lvl:1;conds;T_IF;]: T_CLOSE_PARENTHESIS => )
		Process token 991 on line 218 [col:16;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 992 on line 218 [col:17;len:1;lvl:1;conds;T_IF;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 986:T_CLASS
			* level increased *
			* token 986:T_CLASS added to conditions array *
			Process token 993 on line 218 [col:18;len:0;lvl:2;conds;T_IF,T_CLASS;]: T_WHITESPACE => \n
			Process token 994 on line 219 [col:1;len:0;lvl:2;conds;T_IF,T_CLASS;]: T_WHITESPACE => \n
			Process token 995 on line 220 [col:1;len:4;lvl:2;conds;T_IF,T_CLASS;]: T_WHITESPACE =>     
			Process token 996 on line 220 [col:5;len:1;lvl:2;conds;T_IF,T_CLASS;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 992:T_OPEN_CURLY_BRACKET
			* token T_CLASS removed from conditions array *
			* level decreased *
		Process token 997 on line 220 [col:6;len:11;lvl:1;conds;T_IF;]: T_COMMENT => //end class\n
		Process token 998 on line 221 [col:1;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 999 on line 222 [col:1;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 1000 on line 223 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 943:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 1001 on line 223 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1002 on line 224 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1003 on line 225 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 1004 on line 225 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1005 on line 225 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 1006 on line 225 [col:5;len:4;lvl:0;]: T_TRUE => true
	Process token 1007 on line 225 [col:9;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 1008 on line 225 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1009 on line 225 [col:11;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1003:T_IF
		* level increased *
		* token 1003:T_IF added to conditions array *
		Process token 1010 on line 225 [col:12;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 1011 on line 225 [col:13;len:25;lvl:1;conds;T_IF;]: T_COMMENT => // some comment goes here\n
		Process token 1012 on line 226 [col:1;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 1013 on line 227 [col:1;len:4;lvl:1;conds;T_IF;]: T_WHITESPACE =>     
		Process token 1014 on line 227 [col:5;len:4;lvl:1;conds;T_IF;]: T_ECHO => echo
		Process token 1015 on line 227 [col:9;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 1016 on line 227 [col:10;len:5;lvl:1;conds;T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'foo'
		Process token 1017 on line 227 [col:15;len:1;lvl:1;conds;T_IF;]: T_SEMICOLON => ;
		Process token 1018 on line 227 [col:16;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 1019 on line 228 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 1009:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 1020 on line 228 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1021 on line 229 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1022 on line 230 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 1023 on line 230 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1024 on line 230 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 1025 on line 230 [col:5;len:4;lvl:0;]: T_TRUE => true
	Process token 1026 on line 230 [col:9;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 1027 on line 230 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1028 on line 230 [col:11;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1022:T_IF
		* level increased *
		* token 1022:T_IF added to conditions array *
		Process token 1029 on line 230 [col:12;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 1030 on line 230 [col:13;len:4;lvl:1;conds;T_IF;]: T_ECHO => echo
		Process token 1031 on line 230 [col:17;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 1032 on line 230 [col:18;len:5;lvl:1;conds;T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'foo'
		Process token 1033 on line 230 [col:23;len:1;lvl:1;conds;T_IF;]: T_SEMICOLON => ;
		Process token 1034 on line 230 [col:24;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 1035 on line 231 [col:1;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 1036 on line 232 [col:1;len:4;lvl:1;conds;T_IF;]: T_WHITESPACE =>     
		Process token 1037 on line 232 [col:5;len:4;lvl:1;conds;T_IF;]: T_ECHO => echo
		Process token 1038 on line 232 [col:9;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 1039 on line 232 [col:10;len:5;lvl:1;conds;T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'foo'
		Process token 1040 on line 232 [col:15;len:1;lvl:1;conds;T_IF;]: T_SEMICOLON => ;
		Process token 1041 on line 232 [col:16;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 1042 on line 233 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 1028:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 1043 on line 233 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1044 on line 234 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1045 on line 235 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 1046 on line 235 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1047 on line 235 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 1048 on line 235 [col:5;len:5;lvl:0;]: T_VARIABLE => $true
	Process token 1049 on line 235 [col:10;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 1050 on line 235 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1051 on line 235 [col:12;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1045:T_IF
		* level increased *
		* token 1045:T_IF added to conditions array *
		Process token 1052 on line 235 [col:13;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 1053 on line 236 [col:1;len:4;lvl:1;conds;T_IF;]: T_WHITESPACE =>     
		Process token 1054 on line 236 [col:5;len:4;lvl:1;conds;T_IF;]: T_ECHO => echo
		Process token 1055 on line 236 [col:9;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 1056 on line 236 [col:10;len:6;lvl:1;conds;T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'hi 2'
		Process token 1057 on line 236 [col:16;len:1;lvl:1;conds;T_IF;]: T_SEMICOLON => ;
		Process token 1058 on line 236 [col:17;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 1059 on line 237 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 1051:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 1060 on line 237 [col:2;len:8;lvl:0;]: T_COMMENT => //end if\n
	Process token 1061 on line 238 [col:1;len:4;lvl:0;]: T_ECHO => echo
	Process token 1062 on line 238 [col:5;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1063 on line 238 [col:6;len:4;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token 1064 on line 238 [col:10;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 1065 on line 238 [col:11;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1066 on line 239 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1067 on line 240 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 1068 on line 240 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1069 on line 240 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 1070 on line 240 [col:5;len:5;lvl:0;]: T_VARIABLE => $true
	Process token 1071 on line 240 [col:10;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 1072 on line 240 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1073 on line 240 [col:12;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 1067:T_IF
		* level increased *
		* token 1067:T_IF added to conditions array *
		Process token 1074 on line 240 [col:13;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 1075 on line 241 [col:1;len:4;lvl:1;conds;T_IF;]: T_WHITESPACE =>     
		Process token 1076 on line 241 [col:5;len:4;lvl:1;conds;T_IF;]: T_ECHO => echo
		Process token 1077 on line 241 [col:9;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 1078 on line 241 [col:10;len:6;lvl:1;conds;T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'hi 2'
		Process token 1079 on line 241 [col:16;len:1;lvl:1;conds;T_IF;]: T_SEMICOLON => ;
		Process token 1080 on line 241 [col:17;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 1081 on line 242 [col:1;len:1;lvl:1;conds;T_IF;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 1073:T_OPEN_CURLY_BRACKET
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 1082 on line 242 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1083 on line 242 [col:3;len:55;lvl:0;]: T_PHPCS_ENABLE => // phpcs:enable Standard.Category.Sniff -- for reasons.\n
	Process token 1084 on line 243 [col:1;len:4;lvl:0;]: T_ECHO => echo
	Process token 1085 on line 243 [col:5;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1086 on line 243 [col:6;len:4;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token 1087 on line 243 [col:10;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 1088 on line 243 [col:11;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1089 on line 244 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 1090 on line 245 [col:1;len:2;lvl:0;]: T_CLOSE_TAG => ?>\n
	Process token 1091 on line 246 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1092 on line 246 [col:7;len:7;lvl:0;]: T_FOREACH => foreach
	Process token 1093 on line 246 [col:14;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 1094 on line 246 [col:15;len:8;lvl:0;]: T_VARIABLE => $formset
	Process token 1095 on line 246 [col:23;len:1;lvl:0;]: T_OPEN_SQUARE_BRACKET => [
	Process token 1096 on line 246 [col:24;len:10;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'Fieldset'
	Process token 1097 on line 246 [col:34;len:1;lvl:0;]: T_CLOSE_SQUARE_BRACKET => ]
	Process token 1098 on line 246 [col:35;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1099 on line 246 [col:36;len:2;lvl:0;]: T_AS => as
	Process token 1100 on line 246 [col:38;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1101 on line 246 [col:39;len:9;lvl:0;]: T_VARIABLE => $fieldset
	Process token 1102 on line 246 [col:48;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 1103 on line 246 [col:49;len:1;lvl:0;]: T_COLON => :
	=> Found scope opener for 1092:T_FOREACH
		* level increased *
		* token 1092:T_FOREACH added to conditions array *
		Process token 1104 on line 246 [col:50;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 1105 on line 246 [col:51;len:2;lvl:1;conds;T_FOREACH;]: T_CLOSE_TAG => ?>\n
		Process token 1106 on line 247 [col:1;len:0;lvl:1;conds;T_FOREACH;]: T_INLINE_HTML => \n
		Process token 1107 on line 248 [col:1;len:4;lvl:1;conds;T_FOREACH;]: T_INLINE_HTML =>     
		Process token 1108 on line 248 [col:5;len:6;lvl:1;conds;T_FOREACH;]: T_OPEN_TAG => <?php 
		Process token 1109 on line 248 [col:11;len:7;lvl:1;conds;T_FOREACH;]: T_FOREACH => foreach
		Process token 1110 on line 248 [col:18;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_PARENTHESIS => (
		Process token 1111 on line 248 [col:19;len:9;lvl:1;conds;T_FOREACH;]: T_VARIABLE => $fieldset
		Process token 1112 on line 248 [col:28;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_SQUARE_BRACKET => [
		Process token 1113 on line 248 [col:29;len:7;lvl:1;conds;T_FOREACH;]: T_CONSTANT_ENCAPSED_STRING => 'Field'
		Process token 1114 on line 248 [col:36;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_SQUARE_BRACKET => ]
		Process token 1115 on line 248 [col:37;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 1116 on line 248 [col:38;len:2;lvl:1;conds;T_FOREACH;]: T_AS => as
		Process token 1117 on line 248 [col:40;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 1118 on line 248 [col:41;len:6;lvl:1;conds;T_FOREACH;]: T_VARIABLE => $field
		Process token 1119 on line 248 [col:47;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_PARENTHESIS => )
		Process token 1120 on line 248 [col:48;len:1;lvl:1;conds;T_FOREACH;]: T_COLON => :
		=> Found scope opener for 1109:T_FOREACH
			* level increased *
			* token 1109:T_FOREACH added to conditions array *
			Process token 1121 on line 248 [col:49;len:0;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_WHITESPACE => \n
			Process token 1122 on line 249 [col:1;len:0;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_WHITESPACE => \n
			Process token 1123 on line 250 [col:1;len:8;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_WHITESPACE =>         
			Process token 1124 on line 250 [col:9;len:4;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_ECHO => echo
			Process token 1125 on line 250 [col:13;len:1;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_WHITESPACE =>  
			Process token 1126 on line 250 [col:14;len:5;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_CONSTANT_ENCAPSED_STRING => 'foo'
			Process token 1127 on line 250 [col:19;len:1;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_SEMICOLON => ;
			Process token 1128 on line 250 [col:20;len:0;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_WHITESPACE => \n
			Process token 1129 on line 251 [col:1;len:4;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_WHITESPACE =>     
			Process token 1130 on line 251 [col:5;len:2;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_CLOSE_TAG => ?>\n
			Process token 1131 on line 252 [col:1;len:4;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_INLINE_HTML =>     
			Process token 1132 on line 252 [col:5;len:6;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_OPEN_TAG => <?php 
			Process token 1133 on line 252 [col:11;len:10;lvl:2;conds;T_FOREACH,T_FOREACH;]: T_ENDFOREACH => endforeach
			=> Found scope closer for 1120:T_COLON
			* token T_FOREACH removed from conditions array *
			* level decreased *
		Process token 1134 on line 252 [col:21;len:1;lvl:1;conds;T_FOREACH;]: T_SEMICOLON => ;
		Process token 1135 on line 252 [col:22;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 1136 on line 252 [col:23;len:2;lvl:1;conds;T_FOREACH;]: T_CLOSE_TAG => ?>\n
		Process token 1137 on line 253 [col:1;len:6;lvl:1;conds;T_FOREACH;]: T_OPEN_TAG => <?php 
		Process token 1138 on line 253 [col:7;len:10;lvl:1;conds;T_FOREACH;]: T_ENDFOREACH => endforeach
		=> Found scope closer for 1103:T_COLON
		* token T_FOREACH removed from conditions array *
		* level decreased *
	Process token 1139 on line 253 [col:17;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 1140 on line 253 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 1141 on line 253 [col:19;len:2;lvl:0;]: T_CLOSE_TAG => ?>\n
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
[PHP => 1142 tokens in 253 lines]... 
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => There
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => should
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => be
	Process token [6]: T_WHITESPACE =>  
	Process token [7]: T_STRING => no
	Process token [8]: T_WHITESPACE =>  
	Process token [9]: T_STRING => error
	Process token [10]: T_WHITESPACE =>  
	Process token [11]: T_STRING => after
	Process token [12]: T_WHITESPACE =>  
	Process token [13]: T_STRING => this
	Process token [14]: T_WHITESPACE => \n 
	Process token [15]: T_FOREACH => foreach
	Process token  16 : T_COMMA => ,
	Process token [17]: T_WHITESPACE =>  
	Process token [18]: T_STRING => because
	Process token [19]: T_WHITESPACE =>  
	Process token [20]: T_STRING => it
	Process token [21]: T_WHITESPACE =>  
	Process token [22]: T_STRING => is
	Process token [23]: T_WHITESPACE =>  
	Process token [24]: T_STRING => followed
	Process token [25]: T_WHITESPACE =>  
	Process token [26]: T_STRING => by
	Process token [27]: T_WHITESPACE =>  
	Process token [28]: T_STRING => a
	Process token [29]: T_WHITESPACE => \n 
	Process token [30]: T_STRING => close
	Process token [31]: T_WHITESPACE =>  
	Process token [32]: T_STRING => PHP
	Process token [33]: T_WHITESPACE =>  
	Process token [34]: T_STRING => tag
	Process token  35 : T_STRING_CONCAT => .
	Process token [36]: T_WHITESPACE =>  
	Process token [37]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 16:T_FOREACH => foreach
	=> Begin scope map recursion at token 16 with depth 1
	Process token 17 on line 2 []: T_COMMA => ,
	Process token 18 on line 2 []: T_WHITESPACE =>  
	Process token 19 on line 2 []: T_STRING => because
	Process token 20 on line 2 []: T_WHITESPACE =>  
	Process token 21 on line 2 []: T_STRING => it
	Process token 22 on line 2 []: T_WHITESPACE =>  
	Process token 23 on line 2 []: T_STRING => is
	Process token 24 on line 2 []: T_WHITESPACE =>  
	Process token 25 on line 2 []: T_STRING => followed
	Process token 26 on line 2 []: T_WHITESPACE =>  
	Process token 27 on line 2 []: T_STRING => by
	Process token 28 on line 2 []: T_WHITESPACE =>  
	Process token 29 on line 2 []: T_STRING => a
	Process token 30 on line 2 []: T_WHITESPACE => \n
	Process token 31 on line 3 []: T_WHITESPACE =>  
	Process token 32 on line 3 []: T_STRING => close
	Process token 33 on line 3 []: T_WHITESPACE =>  
	Process token 34 on line 3 []: T_STRING => PHP
	Process token 35 on line 3 []: T_WHITESPACE =>  
	Process token 36 on line 3 []: T_STRING => tag
	Process token 37 on line 3 []: T_STRING_CONCAT => .
	Process token 38 on line 3 []: T_WHITESPACE =>  
	Process token 39 on line 3 []: T_CLOSE_TAG => ?>
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:5;lvl:0;]: T_STRING => There
	Process token 2 on line 1 [col:12;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:13;len:6;lvl:0;]: T_STRING => should
	Process token 4 on line 1 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:20;len:2;lvl:0;]: T_STRING => be
	Process token 6 on line 1 [col:22;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 1 [col:23;len:2;lvl:0;]: T_STRING => no
	Process token 8 on line 1 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 9 on line 1 [col:26;len:5;lvl:0;]: T_STRING => error
	Process token 10 on line 1 [col:31;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 11 on line 1 [col:32;len:5;lvl:0;]: T_STRING => after
	Process token 12 on line 1 [col:37;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 13 on line 1 [col:38;len:4;lvl:0;]: T_STRING => this
	Process token 14 on line 1 [col:42;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 15 on line 2 [col:1;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 16 on line 2 [col:2;len:7;lvl:0;]: T_FOREACH => foreach
	Process token 17 on line 2 [col:9;len:1;lvl:0;]: T_COMMA => ,
	Process token 18 on line 2 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 19 on line 2 [col:11;len:7;lvl:0;]: T_STRING => because
	Process token 20 on line 2 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 21 on line 2 [col:19;len:2;lvl:0;]: T_STRING => it
	Process token 22 on line 2 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 23 on line 2 [col:22;len:2;lvl:0;]: T_STRING => is
	Process token 24 on line 2 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 25 on line 2 [col:25;len:8;lvl:0;]: T_STRING => followed
	Process token 26 on line 2 [col:33;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 27 on line 2 [col:34;len:2;lvl:0;]: T_STRING => by
	Process token 28 on line 2 [col:36;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 29 on line 2 [col:37;len:1;lvl:0;]: T_STRING => a
	Process token 30 on line 2 [col:38;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 31 on line 3 [col:1;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 32 on line 3 [col:2;len:5;lvl:0;]: T_STRING => close
	Process token 33 on line 3 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 34 on line 3 [col:8;len:3;lvl:0;]: T_STRING => PHP
	Process token 35 on line 3 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 36 on line 3 [col:12;len:3;lvl:0;]: T_STRING => tag
	Process token 37 on line 3 [col:15;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 38 on line 3 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 39 on line 3 [col:17;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => There
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => are
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => no
	Process token [6]: T_WHITESPACE =>  
	Process token [7]: T_STRING => spaces
	Process token [8]: T_WHITESPACE =>  
	Process token [9]: T_STRING => before
	Process token [10]: T_WHITESPACE =>  
	Process token [11]: T_BREAK => break
	Process token  12 : T_STRING_CONCAT => .
	Process token [13]: T_WHITESPACE =>  
	Process token [14]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:5;lvl:0;]: T_STRING => There
	Process token 2 on line 1 [col:12;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:13;len:3;lvl:0;]: T_STRING => are
	Process token 4 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:17;len:2;lvl:0;]: T_STRING => no
	Process token 6 on line 1 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 1 [col:20;len:6;lvl:0;]: T_STRING => spaces
	Process token 8 on line 1 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 9 on line 1 [col:27;len:6;lvl:0;]: T_STRING => before
	Process token 10 on line 1 [col:33;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 11 on line 1 [col:34;len:5;lvl:0;]: T_BREAK => break
	Process token 12 on line 1 [col:39;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 13 on line 1 [col:40;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 14 on line 1 [col:41;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => There
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => are
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => no
	Process token [6]: T_WHITESPACE =>  
	Process token [7]: T_STRING => spaces
	Process token [8]: T_WHITESPACE =>  
	Process token [9]: T_STRING => before
	Process token [10]: T_WHITESPACE =>  
	Process token [11]: T_BREAK => break
	Process token  12 : T_STRING_CONCAT => .
	Process token [13]: T_WHITESPACE =>  
	Process token [14]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:5;lvl:0;]: T_STRING => There
	Process token 2 on line 1 [col:12;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:13;len:3;lvl:0;]: T_STRING => are
	Process token 4 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:17;len:2;lvl:0;]: T_STRING => no
	Process token 6 on line 1 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 1 [col:20;len:6;lvl:0;]: T_STRING => spaces
	Process token 8 on line 1 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 9 on line 1 [col:27;len:6;lvl:0;]: T_STRING => before
	Process token 10 on line 1 [col:33;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 11 on line 1 [col:34;len:5;lvl:0;]: T_BREAK => break
	Process token 12 on line 1 [col:39;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 13 on line 1 [col:40;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 14 on line 1 [col:41;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => There
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => are
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => no
	Process token [6]: T_WHITESPACE =>  
	Process token [7]: T_STRING => spaces
	Process token [8]: T_WHITESPACE =>  
	Process token [9]: T_STRING => before
	Process token [10]: T_WHITESPACE =>  
	Process token [11]: T_BREAK => break
	Process token  12 : T_STRING_CONCAT => .
	Process token [13]: T_WHITESPACE =>  
	Process token [14]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:5;lvl:0;]: T_STRING => There
	Process token 2 on line 1 [col:12;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:13;len:3;lvl:0;]: T_STRING => are
	Process token 4 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:17;len:2;lvl:0;]: T_STRING => no
	Process token 6 on line 1 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 1 [col:20;len:6;lvl:0;]: T_STRING => spaces
	Process token 8 on line 1 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 9 on line 1 [col:27;len:6;lvl:0;]: T_STRING => before
	Process token 10 on line 1 [col:33;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 11 on line 1 [col:34;len:5;lvl:0;]: T_BREAK => break
	Process token 12 on line 1 [col:39;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 13 on line 1 [col:40;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 14 on line 1 [col:41;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => Code
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => here
	Process token  4 : T_STRING_CONCAT => .
	Process token [5]: T_WHITESPACE =>  
	Process token [6]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:4;lvl:0;]: T_STRING => Code
	Process token 2 on line 1 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:12;len:4;lvl:0;]: T_STRING => here
	Process token 4 on line 1 [col:16;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 5 on line 1 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 6 on line 1 [col:18;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => Something
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:9;lvl:0;]: T_STRING => Something
	Process token 2 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:17;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => Something
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:9;lvl:0;]: T_STRING => Something
	Process token 2 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:17;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => Something
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:9;lvl:0;]: T_STRING => Something
	Process token 2 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:17;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => Something
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:9;lvl:0;]: T_STRING => Something
	Process token 2 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:17;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_ELSE => else
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_IF => if
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => something
	Process token [6]: T_WHITESPACE =>  
	Process token [7]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 1:T_ELSE => else
	=> Begin scope map recursion at token 1 with depth 1
	Process token 2 on line 1 []: T_WHITESPACE =>  
	Process token 3 on line 1 []: T_IF => if
	=> Found new opening condition before scope opener for 1:T_ELSE, backtracking
	Start scope map at 3:T_IF => if
	=> Begin scope map recursion at token 3 with depth 1
	Process token 4 on line 1 []: T_WHITESPACE =>  
	Process token 5 on line 1 []: T_STRING => something
	Process token 6 on line 1 []: T_WHITESPACE =>  
	Process token 7 on line 1 []: T_CLOSE_TAG => ?>
	=> Found close tag before scope opener for 3:T_IF, bailing
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:4;lvl:0;]: T_ELSE => else
	Process token 2 on line 1 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:12;len:2;lvl:0;]: T_IF => if
	Process token 4 on line 1 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:15;len:9;lvl:0;]: T_STRING => something
	Process token 6 on line 1 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 1 [col:25;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_ELSE => else
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_DO => do
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => something
	Process token [6]: T_WHITESPACE =>  
	Process token [7]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 1:T_ELSE => else
	=> Begin scope map recursion at token 1 with depth 1
	Process token 2 on line 1 []: T_WHITESPACE =>  
	Process token 3 on line 1 []: T_DO => do
	=> Found new opening condition before scope opener for 1:T_ELSE, backtracking
	Start scope map at 3:T_DO => do
	=> Begin scope map recursion at token 3 with depth 1
	Process token 4 on line 1 []: T_WHITESPACE =>  
	Process token 5 on line 1 []: T_STRING => something
	Process token 6 on line 1 []: T_WHITESPACE =>  
	Process token 7 on line 1 []: T_CLOSE_TAG => ?>
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:4;lvl:0;]: T_ELSE => else
	Process token 2 on line 1 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:12;len:2;lvl:0;]: T_DO => do
	Process token 4 on line 1 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:15;len:9;lvl:0;]: T_STRING => something
	Process token 6 on line 1 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 1 [col:25;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => No
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => blank
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => line
	Process token [6]: T_WHITESPACE =>  
	Process token [7]: T_STRING => here
	Process token  8 : T_STRING_CONCAT => .
	Process token [9]: T_WHITESPACE =>  
	Process token [10]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:2;lvl:0;]: T_STRING => No
	Process token 2 on line 1 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:10;len:5;lvl:0;]: T_STRING => blank
	Process token 4 on line 1 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:16;len:4;lvl:0;]: T_STRING => line
	Process token 6 on line 1 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 1 [col:21;len:4;lvl:0;]: T_STRING => here
	Process token 8 on line 1 [col:25;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 9 on line 1 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 10 on line 1 [col:27;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => Something
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:9;lvl:0;]: T_STRING => Something
	Process token 2 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:17;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => Something
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:9;lvl:0;]: T_STRING => Something
	Process token 2 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:17;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => Something
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:9;lvl:0;]: T_STRING => Something
	Process token 2 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:17;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => Code
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => here
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:4;lvl:0;]: T_STRING => Code
	Process token 2 on line 1 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:12;len:4;lvl:0;]: T_STRING => here
	Process token 4 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:17;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => some
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => comment
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => goes
	Process token [6]: T_WHITESPACE =>  
	Process token [7]: T_STRING => here
	Process token [8]: T_WHITESPACE =>  
	Process token [9]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:4;lvl:0;]: T_STRING => some
	Process token 2 on line 1 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:12;len:7;lvl:0;]: T_STRING => comment
	Process token 4 on line 1 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:20;len:4;lvl:0;]: T_STRING => goes
	Process token 6 on line 1 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 1 [col:25;len:4;lvl:0;]: T_STRING => here
	Process token 8 on line 1 [col:29;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 9 on line 1 [col:30;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
DONE in 1.27 secs (70 fixable violations)
	=> Fixing file: 70/70 violations remaining	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 1129 (T_WHITESPACE) "    ?>\n" => "        ?>\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Zend\Sniffs\Files\ClosingTagSniff (line 55)
		Q: PHP_CodeSniffer\Standards\Zend\Sniffs\Files\ClosingTagSniff (line 56) replaced token 1141 (T_CLOSE_TAG) "?>\n" => "\n"
		A: PHP_CodeSniffer\Standards\Zend\Sniffs\Files\ClosingTagSniff (line 64) replaced token 1141 (T_CLOSE_TAG) "?>\n" => "\n"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 9 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 23 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 58 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 215)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 225) replaced token 101 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 228) replaced token 101 (T_WHITESPACE) "\n    " => "    "
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ElseIfDeclarationSniff (line 45) replaced token 140 (T_ELSEIF) "elseif" => "else if"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 148 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ElseIfDeclarationSniff (line 45) replaced token 182 (T_ELSEIF) "elseif" => "else if"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 129)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 137) replaced token 228 (T_WHITESPACE) "\nswitch" => "switch"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 140) replaced token 228 (T_WHITESPACE) "\nswitch" => "switch"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 272)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 280) replaced token 1089 (T_WHITESPACE) "\n?>\n" => "?>\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 283) replaced token 1089 (T_WHITESPACE) "\n?>\n" => "?>\n"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 363 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 160)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 165) replaced token 404 (T_WHITESPACE) "\n        " => "        "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 171) replaced token 404 (T_WHITESPACE) "\n        " => "        "
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 215)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 225) replaced token 417 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 228) replaced token 417 (T_WHITESPACE) "\n    " => "    "
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 306)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 309) replaced token 416 (T_WHITESPACE) "\n" => ""
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 309) replaced token 417 (T_WHITESPACE) "    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 313) replaced token 415 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 314) replaced token 416 (T_WHITESPACE) "\n" => ""
		* token 417 has already been modified, skipping *
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 314) reverted token 416 (T_WHITESPACE) "" => "\n"
	=> Changeset failed to apply
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 160)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 165) replaced token 440 (T_WHITESPACE) "\n            " => "            "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 171) replaced token 440 (T_WHITESPACE) "\n            " => "            "
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 486 (T_WHITESPACE) "\nforeach" => "foreach"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 487 (T_FOREACH) "foreach" => "\n\nforeach"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 486 (T_WHITESPACE) "\nforeach" => "foreach"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 487 (T_FOREACH) "foreach" => "\n\nforeach"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 461 (T_WHITESPACE) "\n\n" => "\n\n\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 215)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 225) replaced token 507 (T_WHITESPACE) "\n}" => "}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 228) replaced token 507 (T_WHITESPACE) "\n}" => "}"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff (line 74) replaced token 527 (T_TRUE) "TRUE" => "true"
	PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff (line 74) replaced token 547 (T_FALSE) "FALSE" => "false"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForEachLoopDeclarationSniff (line 80) replaced token 556 (T_WHITESPACE) " $blah" => "$blah"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForEachLoopDeclarationSniff (line 110) replaced token 562 (T_WHITESPACE) " )" => ")"
	* token 556 has already been modified, skipping *
	* token 562 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 86) replaced token 571 (T_WHITESPACE) "  $blah" => "$blah"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 100) replaced token 573 (T_WHITESPACE) "    )" => ")"
	* token 571 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 86) replaced token 587 (T_WHITESPACE) "\n    " => "    "
	* token 587 has already been modified, skipping *
	* token 587 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\ControlStructures\MultiLineConditionSniff (line 206) replaced token 588 (T_WHITESPACE) "    $defaultPageDesign" => "$defaultPageDesign"
	PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff (line 74) replaced token 602 (T_TRUE) "TRUE" => "true"
	PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff (line 74) replaced token 622 (T_FALSE) "FALSE" => "false"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 159)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 161) replaced token 639 (T_CLOSE_PARENTHESIS) ")" => ") "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 164) replaced token 640 (T_WHITESPACE) "\n{" => "{"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 181) replaced token 639 (T_CLOSE_PARENTHESIS) ")" => ") "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 181) replaced token 640 (T_WHITESPACE) "\n{" => "{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 312) replaced token 703 (T_WHITESPACE) "\nwhile" => " while"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 160)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 165) replaced token 739 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 171) replaced token 739 (T_WHITESPACE) "\n    " => "    "
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 215)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 225) replaced token 742 (T_WHITESPACE) "\n}" => "}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 228) replaced token 742 (T_WHITESPACE) "\n}" => "}"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff (line 325)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff (line 331) replaced token 742 (T_WHITESPACE) "}" => "}"
		* token 742 has already been modified, skipping *
	=> Changeset failed to apply
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 160)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 165) replaced token 755 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 171) replaced token 755 (T_WHITESPACE) "\n    " => "    "
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 215)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 225) replaced token 758 (T_WHITESPACE) "\n}" => "}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 228) replaced token 758 (T_WHITESPACE) "\n}" => "}"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff (line 325)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff (line 331) replaced token 758 (T_WHITESPACE) "}" => "}"
		* token 758 has already been modified, skipping *
	=> Changeset failed to apply
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 312) replaced token 771 (T_WHITESPACE) "\nelseif" => " elseif"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ElseIfDeclarationSniff (line 45) replaced token 772 (T_ELSEIF) "elseif" => "else if"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 160)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 165) replaced token 811 (T_WHITESPACE) "\n}" => "}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 171) replaced token 811 (T_WHITESPACE) "\n}" => "}"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 86) replaced token 830 (T_WHITESPACE) "  $blah" => "$blah"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 100) replaced token 832 (T_WHITESPACE) "  )" => ")"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 845 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 159)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 161) replaced token 863 (T_CLOSE_PARENTHESIS) ")" => ") "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 164) replaced token 864 (T_WHITESPACE) "\n{" => "{"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 181) replaced token 863 (T_CLOSE_PARENTHESIS) ")" => ") "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 181) replaced token 864 (T_WHITESPACE) "\n{" => "{"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 306)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 309) replaced token 895 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 309) replaced token 896 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 313) replaced token 894 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 314) replaced token 895 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 314) replaced token 896 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 314) replaced token 894 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset ended: 3 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 312) replaced token 913 (T_WHITESPACE) "\ncatch" => " catch"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 312) replaced token 927 (T_WHITESPACE) "\nfinally" => " finally"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 970 (T_CLOSE_CURLY_BRACKET) "}" => "}//end foo()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 964 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 965 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 964 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 965 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 969 (T_WHITESPACE) "    }//end foo()\n" => "\n    }//end foo()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 64)
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 66) replaced token 991 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 69) replaced token 992 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 70) replaced token 991 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 70) replaced token 992 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 985 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 995 (T_WHITESPACE) "    }" => "}"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 187)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 195) replaced token 999 (T_WHITESPACE) "\n}" => "}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 198) replaced token 999 (T_WHITESPACE) "\n}" => "}"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 160)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 165) replaced token 1012 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 171) replaced token 1012 (T_WHITESPACE) "\n    " => "    "
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\PostStatementCommentSniff (line 85) replaced token 1011 (T_COMMENT) "// some comment goes here\n" => "\n// some comment goes here\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 224) replaced token 1029 (T_WHITESPACE) " echo" => "echo"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 1028 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 1029 (T_WHITESPACE) " echo" => "echo"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 1028 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 337) replaced token 1060 (T_COMMENT) "//end if\n" => "//end if\n\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 337) replaced token 1083 (T_PHPCS_ENABLE) "// phpcs:enable Standard.Category.Sniff -- for reasons.\n" => "// phpcs:enable Standard.Category.Sniff -- for reasons.\n\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 116) replaced token 1092 (T_FOREACH) "foreach" => "foreach "
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 157) replaced token 1102 (T_CLOSE_PARENTHESIS) ")" => ") "
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 160)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 165) replaced token 1106 (T_INLINE_HTML) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 171) replaced token 1106 (T_INLINE_HTML) "\n    " => "    "
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 108)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 109) replaced token 1108 (T_OPEN_TAG) "<?php " => "<?php \n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 110) replaced token 1108 (T_OPEN_TAG) "<?php " => "<?php \n    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 111) replaced token 1108 (T_OPEN_TAG) "<?php " => "<?php \n    "
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 116) replaced token 1109 (T_FOREACH) "foreach" => "foreach "
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 157) replaced token 1119 (T_CLOSE_PARENTHESIS) ")" => ") "
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 160)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 165) replaced token 1122 (T_WHITESPACE) "\n        " => "        "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 171) replaced token 1122 (T_WHITESPACE) "\n        " => "        "
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 71/70 violations remaining [made 1 pass]... 	* fixed 71 violations, starting loop 2 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 959 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 987 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 990 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 1004 (T_COMMENT) "// some comment goes here\n" => "    // some comment goes here\n"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 1022 (T_ECHO) "echo" => "    echo"
	* token 959 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 967 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 968 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 969 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 970 (T_WHITESPACE) "    /**" => "\n\n    /**"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 967 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 968 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 969 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 970 (T_WHITESPACE) "    /**" => "\n\n    /**"
	=> Changeset ended: 4 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\LongConditionClosingCommentSniff (line 174) replaced token 993 (T_CLOSE_CURLY_BRACKET) "}" => "}//end if"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 211) replaced token 1003 (T_WHITESPACE) " \n    // some comment goes here\n" => "\n    // some comment goes here\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 219) replaced token 1102 (T_OPEN_TAG) "<?php " => "<?php"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 108)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 109) replaced token 1134 (T_OPEN_TAG) "<?php " => "<?php \n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 110) replaced token 1134 (T_OPEN_TAG) "<?php " => "<?php \n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 111) replaced token 1134 (T_OPEN_TAG) "<?php " => "<?php \n"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 211) replaced token 1137 (T_WHITESPACE) " \n" => "\n"
                                                                                	=> Fixing file: 15/70 violations remaining [made 2 passes]... 	* fixed 15 violations, starting loop 3 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 1138 (T_OPEN_TAG) "<?php " => "    <?php "
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 981 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 992 (T_WHITESPACE) "    }" => "}"
	* token 1138 has already been modified, skipping *
                                                                                	=> Fixing file: 3/70 violations remaining [made 3 passes]... 	* fixed 3 violations, starting loop 4 *
	**** PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) has possible conflict with another sniff on loop 2; caused by the following change ****
	**** replaced token 981 (T_CLASS) "class" => "    class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/70 violations remaining [made 4 passes]... 	* fixed 0 violations, starting loop 5 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 991 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 134) replaced token 987 (T_WHITESPACE) "    {" => "{"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 219) replaced token 1137 (T_OPEN_TAG) "<?php " => "<?php"
                                                                                	=> Fixing file: 4/70 violations remaining [made 5 passes]... 	* fixed 4 violations, starting loop 6 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 988 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	* token 988 has already been modified, skipping *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) has possible conflict with another sniff on loop 4; caused by the following change ****
	**** replaced token 981 (T_WHITESPACE) "    class" => "class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 1/70 violations remaining [made 6 passes]... 	* fixed 1 violations, starting loop 7 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 981 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 992 (T_WHITESPACE) "    }" => "}"
                                                                                	=> Fixing file: 2/70 violations remaining [made 7 passes]... 	* fixed 2 violations, starting loop 8 *
	**** PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) has possible conflict with another sniff on loop 6; caused by the following change ****
	**** replaced token 981 (T_CLASS) "class" => "    class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/70 violations remaining [made 8 passes]... 	* fixed 0 violations, starting loop 9 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 991 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 134) replaced token 987 (T_WHITESPACE) "    {" => "{"
                                                                                	=> Fixing file: 3/70 violations remaining [made 9 passes]... 	* fixed 3 violations, starting loop 10 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 988 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	* token 988 has already been modified, skipping *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) has possible conflict with another sniff on loop 8; caused by the following change ****
	**** replaced token 981 (T_WHITESPACE) "    class" => "class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 1/70 violations remaining [made 10 passes]... 	* fixed 1 violations, starting loop 11 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 981 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 992 (T_WHITESPACE) "    }" => "}"
                                                                                	=> Fixing file: 2/70 violations remaining [made 11 passes]... 	* fixed 2 violations, starting loop 12 *
	**** PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) has possible conflict with another sniff on loop 10; caused by the following change ****
	**** replaced token 981 (T_CLASS) "class" => "    class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/70 violations remaining [made 12 passes]... 	* fixed 0 violations, starting loop 13 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 991 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 134) replaced token 987 (T_WHITESPACE) "    {" => "{"
                                                                                	=> Fixing file: 3/70 violations remaining [made 13 passes]... 	* fixed 3 violations, starting loop 14 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 988 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	* token 988 has already been modified, skipping *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) has possible conflict with another sniff on loop 12; caused by the following change ****
	**** replaced token 981 (T_WHITESPACE) "    class" => "class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 1/70 violations remaining [made 14 passes]... 	* fixed 1 violations, starting loop 15 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 981 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 992 (T_WHITESPACE) "    }" => "}"
                                                                                	=> Fixing file: 2/70 violations remaining [made 15 passes]... 	* fixed 2 violations, starting loop 16 *
	**** PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) has possible conflict with another sniff on loop 14; caused by the following change ****
	**** replaced token 981 (T_CLASS) "class" => "    class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/70 violations remaining [made 16 passes]... 	* fixed 0 violations, starting loop 17 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 991 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 134) replaced token 987 (T_WHITESPACE) "    {" => "{"
                                                                                	=> Fixing file: 3/70 violations remaining [made 17 passes]... 	* fixed 3 violations, starting loop 18 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 988 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	* token 988 has already been modified, skipping *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) has possible conflict with another sniff on loop 16; caused by the following change ****
	**** replaced token 981 (T_WHITESPACE) "    class" => "class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 1/70 violations remaining [made 18 passes]... 	* fixed 1 violations, starting loop 19 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 981 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 992 (T_WHITESPACE) "    }" => "}"
                                                                                	=> Fixing file: 2/70 violations remaining [made 19 passes]... 	* fixed 2 violations, starting loop 20 *
	**** PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) has possible conflict with another sniff on loop 18; caused by the following change ****
	**** replaced token 981 (T_CLASS) "class" => "    class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/70 violations remaining [made 20 passes]... 	* fixed 0 violations, starting loop 21 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 991 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 134) replaced token 987 (T_WHITESPACE) "    {" => "{"
                                                                                	=> Fixing file: 3/70 violations remaining [made 21 passes]... 	* fixed 3 violations, starting loop 22 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 988 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	* token 988 has already been modified, skipping *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) has possible conflict with another sniff on loop 20; caused by the following change ****
	**** replaced token 981 (T_WHITESPACE) "    class" => "class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 1/70 violations remaining [made 22 passes]... 	* fixed 1 violations, starting loop 23 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 981 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 992 (T_WHITESPACE) "    }" => "}"
                                                                                	=> Fixing file: 2/70 violations remaining [made 23 passes]... 	* fixed 2 violations, starting loop 24 *
	**** PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) has possible conflict with another sniff on loop 22; caused by the following change ****
	**** replaced token 981 (T_CLASS) "class" => "    class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/70 violations remaining [made 24 passes]... 	* fixed 0 violations, starting loop 25 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 991 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 134) replaced token 987 (T_WHITESPACE) "    {" => "{"
                                                                                	=> Fixing file: 3/70 violations remaining [made 25 passes]... 	* fixed 3 violations, starting loop 26 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 988 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	* token 988 has already been modified, skipping *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) has possible conflict with another sniff on loop 24; caused by the following change ****
	**** replaced token 981 (T_WHITESPACE) "    class" => "class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 1/70 violations remaining [made 26 passes]... 	* fixed 1 violations, starting loop 27 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 981 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 992 (T_WHITESPACE) "    }" => "}"
                                                                                	=> Fixing file: 2/70 violations remaining [made 27 passes]... 	* fixed 2 violations, starting loop 28 *
	**** PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) has possible conflict with another sniff on loop 26; caused by the following change ****
	**** replaced token 981 (T_CLASS) "class" => "    class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/70 violations remaining [made 28 passes]... 	* fixed 0 violations, starting loop 29 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 991 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 134) replaced token 987 (T_WHITESPACE) "    {" => "{"
                                                                                	=> Fixing file: 3/70 violations remaining [made 29 passes]... 	* fixed 3 violations, starting loop 30 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 988 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	* token 988 has already been modified, skipping *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) has possible conflict with another sniff on loop 28; caused by the following change ****
	**** replaced token 981 (T_WHITESPACE) "    class" => "class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 1/70 violations remaining [made 30 passes]... 	* fixed 1 violations, starting loop 31 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 981 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 992 (T_WHITESPACE) "    }" => "}"
                                                                                	=> Fixing file: 2/70 violations remaining [made 31 passes]... 	* fixed 2 violations, starting loop 32 *
	**** PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) has possible conflict with another sniff on loop 30; caused by the following change ****
	**** replaced token 981 (T_CLASS) "class" => "    class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/70 violations remaining [made 32 passes]... 	* fixed 0 violations, starting loop 33 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 991 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 134) replaced token 987 (T_WHITESPACE) "    {" => "{"
                                                                                	=> Fixing file: 3/70 violations remaining [made 33 passes]... 	* fixed 3 violations, starting loop 34 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 988 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	* token 988 has already been modified, skipping *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) has possible conflict with another sniff on loop 32; caused by the following change ****
	**** replaced token 981 (T_WHITESPACE) "    class" => "class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 1/70 violations remaining [made 34 passes]... 	* fixed 1 violations, starting loop 35 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 981 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 992 (T_WHITESPACE) "    }" => "}"
                                                                                	=> Fixing file: 2/70 violations remaining [made 35 passes]... 	* fixed 2 violations, starting loop 36 *
	**** PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) has possible conflict with another sniff on loop 34; caused by the following change ****
	**** replaced token 981 (T_CLASS) "class" => "    class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/70 violations remaining [made 36 passes]... 	* fixed 0 violations, starting loop 37 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 991 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 134) replaced token 987 (T_WHITESPACE) "    {" => "{"
                                                                                	=> Fixing file: 3/70 violations remaining [made 37 passes]... 	* fixed 3 violations, starting loop 38 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 988 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	* token 988 has already been modified, skipping *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) has possible conflict with another sniff on loop 36; caused by the following change ****
	**** replaced token 981 (T_WHITESPACE) "    class" => "class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 1/70 violations remaining [made 38 passes]... 	* fixed 1 violations, starting loop 39 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 981 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 992 (T_WHITESPACE) "    }" => "}"
                                                                                	=> Fixing file: 2/70 violations remaining [made 39 passes]... 	* fixed 2 violations, starting loop 40 *
	**** PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) has possible conflict with another sniff on loop 38; caused by the following change ****
	**** replaced token 981 (T_CLASS) "class" => "    class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/70 violations remaining [made 40 passes]... 	* fixed 0 violations, starting loop 41 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 991 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 134) replaced token 987 (T_WHITESPACE) "    {" => "{"
                                                                                	=> Fixing file: 3/70 violations remaining [made 41 passes]... 	* fixed 3 violations, starting loop 42 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 988 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	* token 988 has already been modified, skipping *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) has possible conflict with another sniff on loop 40; caused by the following change ****
	**** replaced token 981 (T_WHITESPACE) "    class" => "class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 1/70 violations remaining [made 42 passes]... 	* fixed 1 violations, starting loop 43 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 981 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 992 (T_WHITESPACE) "    }" => "}"
                                                                                	=> Fixing file: 2/70 violations remaining [made 43 passes]... 	* fixed 2 violations, starting loop 44 *
	**** PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) has possible conflict with another sniff on loop 42; caused by the following change ****
	**** replaced token 981 (T_CLASS) "class" => "    class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/70 violations remaining [made 44 passes]... 	* fixed 0 violations, starting loop 45 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 991 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 134) replaced token 987 (T_WHITESPACE) "    {" => "{"
                                                                                	=> Fixing file: 3/70 violations remaining [made 45 passes]... 	* fixed 3 violations, starting loop 46 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 988 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	* token 988 has already been modified, skipping *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) has possible conflict with another sniff on loop 44; caused by the following change ****
	**** replaced token 981 (T_WHITESPACE) "    class" => "class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 1/70 violations remaining [made 46 passes]... 	* fixed 1 violations, starting loop 47 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) replaced token 981 (T_WHITESPACE) "    class" => "class"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 161) replaced token 992 (T_WHITESPACE) "    }" => "}"
                                                                                	=> Fixing file: 2/70 violations remaining [made 47 passes]... 	* fixed 2 violations, starting loop 48 *
	**** PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) has possible conflict with another sniff on loop 46; caused by the following change ****
	**** replaced token 981 (T_CLASS) "class" => "    class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/70 violations remaining [made 48 passes]... 	* fixed 0 violations, starting loop 49 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 981 (T_CLASS) "class" => "    class"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 991 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 134) replaced token 987 (T_WHITESPACE) "    {" => "{"
                                                                                	=> Fixing file: 3/70 violations remaining [made 49 passes]... 	* fixed 3 violations, starting loop 50 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 988 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	* token 988 has already been modified, skipping *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 79) has possible conflict with another sniff on loop 48; caused by the following change ****
	**** replaced token 981 (T_WHITESPACE) "    class" => "class" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 1/70 violations remaining [made 50 passes]... 	* fixed 1 violations, starting loop 51 *
	*** Reached maximum number of loops with 1 violations left unfixed ***
ERROR in 18.35 secs

PHPCBF RESULT SUMMARY
------------------------------------------------------------------------------------------
FILE                                                                      FIXED  REMAINING
------------------------------------------------------------------------------------------
...\Standards\Squiz\Tests\WhiteSpace\ControlStructureSpacingUnitTest.inc  FAILED TO FIX
------------------------------------------------------------------------------------------
A TOTAL OF 66 ERRORS WERE FIXED IN 1 FILE
------------------------------------------------------------------------------------------
PHPCBF FAILED TO FIX 1 FILE
------------------------------------------------------------------------------------------

Time: 20.85 secs; Memory: 8MB


