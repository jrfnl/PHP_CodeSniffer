PHP 7.2.11 (cli) (built: Oct 10 2018 02:39:52) ( ZTS MSVC15 (Visual C++ 2017) x86 )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies
    with Xdebug v2.6.0, Copyright (c) 2002-2018, by Derick Rethans

PHP_CodeSniffer version 3.4.0 (stable) by Squiz (http://www.squiz.net)

Processing ruleset D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\ruleset.xml
	Adding sniff files from D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs directory
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayBracketSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\ClassFileNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\DuplicatePropertySniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\LowercaseClassKeywordsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\SelfMemberReferenceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\ValidClassNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\BlockCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\ClassCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\DocCommentAlignmentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\EmptyCatchCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\FileCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\FunctionCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\FunctionCommentThrowTagSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\LongConditionClosingCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\PostStatementCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\VariableCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ElseIfDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ForEachLoopDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\InlineIfDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\LowercaseDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ClassDefinitionClosingBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ClassDefinitionNameSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ClassDefinitionOpeningBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ColonSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ColourDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\DisallowMultipleStyleDefinitionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\DuplicateClassDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\DuplicateStyleDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\EmptyClassDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\EmptyStyleDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ForbiddenStylesSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\IndentationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\LowercaseStyleDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\MissingColonSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\NamedColoursSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\OpacitySniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\SemicolonSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ShorthandSizeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Debug\JavaScriptLintSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Debug\JSLintSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Files\FileExtensionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\FunctionDeclarationArgumentSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\FunctionDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\FunctionDuplicateArgumentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\GlobalFunctionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\LowercaseFunctionKeywordsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\MultiLineFunctionDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidFunctionNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidVariableNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Objects\DisallowObjectStringIndexSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Objects\ObjectInstantiationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Objects\ObjectMemberCommaSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Operators\ComparisonOperatorUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Operators\IncrementDecrementUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Operators\ValidLogicalOperatorsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\CommentedOutCodeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowBooleanStatementSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowComparisonAssignmentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowInlineIfSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowMultipleAssignmentsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowSizeFunctionsInLoopsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DiscouragedFunctionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\EvalSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\GlobalKeywordSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\HeredocSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\InnerFunctionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\LowercasePHPFunctionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\NonExecutableCodeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Scope\MemberVarScopeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Scope\MethodScopeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Scope\StaticThisUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Strings\ConcatenationSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Strings\DoubleQuoteUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Strings\EchoedStringsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\CastSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\FunctionOpeningBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\LogicalOperatorSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\MemberVarSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ObjectOperatorSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\OperatorSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\PropertyLabelSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ScopeKeywordSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff.php
	Processing rule "Generic.Arrays.DisallowLongArraySyntax"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Arrays\DisallowLongArraySyntaxSniff.php
	Processing rule "Generic.CodeAnalysis.EmptyStatement"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\CodeAnalysis\EmptyStatementSniff.php
	Processing rule "Generic.Commenting.Todo"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Commenting\TodoSniff.php
	Processing rule "Generic.Commenting.DocComment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Commenting\DocCommentSniff.php
	Processing rule "Generic.ControlStructures.InlineControlStructure"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff.php
	Processing rule "Generic.Formatting.DisallowMultipleStatements"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Formatting\DisallowMultipleStatementsSniff.php
	Processing rule "Generic.Formatting.SpaceAfterCast"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Formatting\SpaceAfterCastSniff.php
	Processing rule "Generic.Functions.FunctionCallArgumentSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Functions\FunctionCallArgumentSpacingSniff.php
	Processing rule "Generic.NamingConventions.ConstructorName"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\NamingConventions\ConstructorNameSniff.php
	Processing rule "Generic.NamingConventions.UpperCaseConstantName"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\NamingConventions\UpperCaseConstantNameSniff.php
	Processing rule "Generic.PHP.DeprecatedFunctions"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\DeprecatedFunctionsSniff.php
	Processing rule "Generic.PHP.DisallowShortOpenTag"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\DisallowShortOpenTagSniff.php
	Processing rule "Generic.PHP.LowerCaseKeyword"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\LowerCaseKeywordSniff.php
	Processing rule "Generic.PHP.LowerCaseConstant"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff.php
	Processing rule "Generic.Strings.UnnecessaryStringConcat"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Strings\UnnecessaryStringConcatSniff.php
	Processing rule "Generic.WhiteSpace.DisallowTabIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\DisallowTabIndentSniff.php
	Processing rule "Generic.WhiteSpace.LanguageConstructSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
	Processing rule "Generic.WhiteSpace.IncrementDecrementSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\IncrementDecrementSpacingSniff.php
	Processing rule "Generic.WhiteSpace.ScopeIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff.php
	Processing rule "PEAR.ControlStructures.MultiLineCondition"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\ControlStructures\MultiLineConditionSniff.php
	Processing rule "PEAR.Files.IncludingFile"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Files\IncludingFileSniff.php
	Processing rule "PEAR.Formatting.MultiLineAssignment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Formatting\MultiLineAssignmentSniff.php
	Processing rule "PEAR.Functions.ValidDefaultValue"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Functions\ValidDefaultValueSniff.php
	Processing rule "PSR2.Files.EndFileNewline"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff.php
	Processing rule "Zend.Files.ClosingTag"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Zend\Sniffs\Files\ClosingTagSniff.php
	Processing rule "Zend.Debug.CodeAnalyzer"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Zend\Sniffs\Debug\CodeAnalyzerSniff.php
	Processing rule "Generic.Files.LineLength"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Files\LineLengthSniff.php
		=> property "lineLimit" set to "120"
		=> property "absoluteLineLimit" set to "0"
	Processing rule "Generic.Files.LineEndings"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Files\LineEndingsSniff.php
		=> property "eolChar" set to "\n"
	Processing rule "Generic.Formatting.MultipleStatementAlignment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Formatting\MultipleStatementAlignmentSniff.php
		=> property "maxPadding" set to "20"
		=> property "error" set to "true"
	Processing rule "Generic.PHP.ForbiddenFunctions"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\ForbiddenFunctionsSniff.php
		=> array property "forbiddenFunctions" set to "sizeof=>count,delete=>unset,print=>echo,is_null=>null,create_function=>null"
	Processing rule "Generic.CodeAnalysis.EmptyStatement.DetectedCATCH"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\CodeAnalysis\EmptyStatementSniff.php
		=> severity set to 0
	Processing rule "Generic.Debug.ClosureLinter"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Debug\ClosureLinterSniff.php
		=> array property "errorCodes" set to "0210"
		=> array property "ignoreCodes" set to "0001,0110,0240"
	Processing rule "Generic.Debug.ClosureLinter.ExternalToolError"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Debug\ClosureLinterSniff.php
		=> message set to %2$s
	Processing rule "PEAR.Functions.FunctionCallSignature"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff.php
		=> property "allowMultipleArguments" set to "false"
	Processing rule "Generic.Arrays.ArrayIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Arrays\ArrayIndentSniff.php
	Processing rule "Squiz.Arrays.ArrayDeclaration.KeyNotAligned"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.ValueNotAligned"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.WhiteSpace.LanguageConstructSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
		=> severity set to 0
	Processing rule "Squiz.Commenting.InlineComment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff.php
		Excluding rule "Squiz.Commenting.InlineComment.SpacingAfterAtFunctionEnd"
		=> severity set to 0
	Processing rule "Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidFunctionNameSniff.php
		=> severity set to 0
	Processing rule "PSR2.Methods.MethodDeclaration.Underscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PSR2\Sniffs\Methods\MethodDeclarationSniff.php
		Excluding sniff "PSR2.Methods.MethodDeclaration" except for "Underscore"
		=> message type set to error
	Processing rule "Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidVariableNameSniff.php
		=> severity set to 0
	Processing rule "PSR2.Classes.PropertyDeclaration.Underscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PSR2\Sniffs\Classes\PropertyDeclarationSniff.php
		Excluding sniff "PSR2.Classes.PropertyDeclaration" except for "Underscore"
		=> message type set to error
=> Ruleset processing complete; included 133 sniffs and excluded 0
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_FUNCTION => function
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_SEMICOLON => ;
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_FUNCTION => function
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_ABSTRACT => abstract
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_FUNCTION => function
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_SEMICOLON => ;
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
Creating file list... DONE (1 files in queue)
Changing into directory D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Tests\CodeAnalysis
Processing UnusedFunctionParameterUnitTest.inc 
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php\n
	Process token [1]: T_WHITESPACE => \n
	Process token [2]: T_FUNCTION => function
	Process token [3]: T_WHITESPACE =>  
	Process token [4]: T_STRING => foo
	Process token  5 : T_OPEN_PARENTHESIS => (
	Process token [6]: T_VARIABLE => $a
	Process token  7 : T_COMMA => ,
	Process token [8]: T_WHITESPACE =>  
	Process token [9]: T_VARIABLE => $b
	Process token  10 : T_CLOSE_PARENTHESIS => )
	Process token [11]: T_WHITESPACE =>  
	Process token  12 : T_OPEN_CURLY_BRACKET => {
	Process token [13]: T_WHITESPACE => \n    
	Process token [14]: T_RETURN => return
	Process token [15]: T_WHITESPACE =>  
	Process token [16]: T_VARIABLE => $a
	Process token [17]: T_WHITESPACE =>  
	Process token  18 : T_MULTIPLY => *
	Process token [19]: T_WHITESPACE =>  
	Process token [20]: T_LNUMBER => 2
	Process token  21 : T_SEMICOLON => ;
	Process token [22]: T_WHITESPACE => \n
	Process token  23 : T_CLOSE_CURLY_BRACKET => }
	Process token [24]: T_WHITESPACE => \n\n
	Process token [25]: T_FUNCTION => function
	Process token [26]: T_WHITESPACE =>  
	Process token [27]: T_STRING => baz
	Process token  28 : T_OPEN_PARENTHESIS => (
	Process token [29]: T_VARIABLE => $a
	Process token  30 : T_COMMA => ,
	Process token [31]: T_WHITESPACE =>  
	Process token [32]: T_VARIABLE => $b
	Process token  33 : T_CLOSE_PARENTHESIS => )
	Process token [34]: T_WHITESPACE =>  
	Process token  35 : T_OPEN_CURLY_BRACKET => {
	Process token [36]: T_WHITESPACE => \n    
	Process token [37]: T_ECHO => echo
	Process token [38]: T_WHITESPACE =>  
	Process token  39 : T_NONE => "
	Process token  46 : T_SEMICOLON => ;
	Process token [47]: T_WHITESPACE => \n
	Process token  48 : T_CLOSE_CURLY_BRACKET => }
	Process token [49]: T_WHITESPACE => \n\n
	Process token [50]: T_FUNCTION => function
	Process token [51]: T_WHITESPACE =>  
	Process token [52]: T_STRING => bar
	Process token  53 : T_OPEN_PARENTHESIS => (
	Process token [54]: T_VARIABLE => $a
	Process token  55 : T_COMMA => ,
	Process token [56]: T_WHITESPACE =>  
	Process token [57]: T_VARIABLE => $b
	Process token  58 : T_CLOSE_PARENTHESIS => )
	Process token [59]: T_WHITESPACE =>  
	Process token  60 : T_OPEN_CURLY_BRACKET => {
	Process token [61]: T_WHITESPACE => \n    
	Process token [62]: T_VARIABLE => $x
	Process token [63]: T_WHITESPACE =>  
	Process token  64 : T_EQUAL => =
	Process token [65]: T_WHITESPACE =>  
	Process token [66]: T_VARIABLE => $b
	Process token  67 : T_SEMICOLON => ;
	Process token [68]: T_WHITESPACE => \n    
	Process token [69]: T_FOR => for
	Process token [70]: T_WHITESPACE =>  
	Process token  71 : T_OPEN_PARENTHESIS => (
	Process token [72]: T_VARIABLE => $i
	Process token [73]: T_WHITESPACE =>  
	Process token  74 : T_EQUAL => =
	Process token [75]: T_WHITESPACE =>  
	Process token [76]: T_LNUMBER => 0
	Process token  77 : T_SEMICOLON => ;
	Process token [78]: T_WHITESPACE =>  
	Process token [79]: T_VARIABLE => $i
	Process token [80]: T_WHITESPACE =>  
	Process token  81 : T_LESS_THAN => <
	Process token [82]: T_VARIABLE => $a
	Process token  83 : T_SEMICOLON => ;
	Process token [84]: T_WHITESPACE =>  
	Process token [85]: T_VARIABLE => $i
	Process token [86]: T_INC => ++
	Process token  87 : T_CLOSE_PARENTHESIS => )
	Process token [88]: T_WHITESPACE =>  
	Process token  89 : T_OPEN_CURLY_BRACKET => {
	Process token [90]: T_WHITESPACE => \n        
	Process token [91]: T_VARIABLE => $x
	Process token [92]: T_WHITESPACE =>  
	Process token [93]: T_PLUS_EQUAL => +=
	Process token [94]: T_WHITESPACE =>  
	Process token [95]: T_VARIABLE => $a
	Process token [96]: T_WHITESPACE =>  
	Process token  97 : T_MULTIPLY => *
	Process token [98]: T_WHITESPACE =>  
	Process token [99]: T_VARIABLE => $i
	Process token  100 : T_SEMICOLON => ;
	Process token [101]: T_WHITESPACE => \n    
	Process token  102 : T_CLOSE_CURLY_BRACKET => }
	Process token [103]: T_WHITESPACE => \n    
	Process token [104]: T_RETURN => return
	Process token [105]: T_WHITESPACE =>  
	Process token [106]: T_VARIABLE => $x
	Process token  107 : T_SEMICOLON => ;
	Process token [108]: T_WHITESPACE => \n
	Process token  109 : T_CLOSE_CURLY_BRACKET => }
	Process token [110]: T_WHITESPACE => \n\n
	Process token [111]: T_FUNCTION => function
	Process token [112]: T_WHITESPACE =>  
	Process token [113]: T_STRING => foobar
	Process token  114 : T_OPEN_PARENTHESIS => (
	Process token [115]: T_VARIABLE => $a
	Process token  116 : T_COMMA => ,
	Process token [117]: T_WHITESPACE =>  
	Process token  118 : T_BITWISE_AND => &
	Process token [119]: T_VARIABLE => $b
	Process token  120 : T_CLOSE_PARENTHESIS => )
	Process token [121]: T_WHITESPACE =>  
	Process token  122 : T_OPEN_CURLY_BRACKET => {
	Process token [123]: T_WHITESPACE => \n    
	Process token [124]: T_RETURN => return
	Process token [125]: T_WHITESPACE =>  
	Process token  126 : T_OPEN_PARENTHESIS => (
	Process token [127]: T_STRING => preg_match
	Process token  128 : T_OPEN_PARENTHESIS => (
	Process token [129]: T_CONSTANT_ENCAPSED_STRING => '/foo/'
	Process token  130 : T_COMMA => ,
	Process token [131]: T_WHITESPACE =>  
	Process token [132]: T_VARIABLE => $a
	Process token  133 : T_COMMA => ,
	Process token [134]: T_WHITESPACE =>  
	Process token [135]: T_VARIABLE => $b
	Process token  136 : T_CLOSE_PARENTHESIS => )
	Process token [137]: T_WHITESPACE =>  
	Process token [138]: T_IS_NOT_IDENTICAL => !==
	Process token [139]: T_WHITESPACE =>  
	Process token [140]: T_LNUMBER => 0
	Process token  141 : T_CLOSE_PARENTHESIS => )
	Process token  142 : T_SEMICOLON => ;
	Process token [143]: T_WHITESPACE => \n
	Process token  144 : T_CLOSE_CURLY_BRACKET => }
	Process token [145]: T_WHITESPACE => \n\n
	Process token [146]: T_CLASS => class
	Process token [147]: T_WHITESPACE =>  
	Process token [148]: T_STRING => Foo
	Process token [149]: T_WHITESPACE =>  
	Process token [150]: T_IMPLEMENTS => implements
	Process token [151]: T_WHITESPACE =>  
	Process token [152]: T_STRING => Bar
	Process token [153]: T_WHITESPACE =>  
	Process token  154 : T_OPEN_CURLY_BRACKET => {
	Process token [155]: T_WHITESPACE => \n    
	Process token [156]: T_FUNCTION => function
	Process token [157]: T_WHITESPACE =>  
	Process token [158]: T_STRING => barfoo
	Process token  159 : T_OPEN_PARENTHESIS => (
	Process token [160]: T_VARIABLE => $a
	Process token  161 : T_COMMA => ,
	Process token [162]: T_WHITESPACE =>  
	Process token [163]: T_VARIABLE => $b
	Process token  164 : T_CLOSE_PARENTHESIS => )
	Process token [165]: T_WHITESPACE =>  
	Process token  166 : T_OPEN_CURLY_BRACKET => {
	Process token [167]: T_WHITESPACE => \n        
	Process token [168]: T_COMMENT => // Empty body means interface method in many cases.\n
	Process token [169]: T_WHITESPACE =>     
	Process token  170 : T_CLOSE_CURLY_BRACKET => }
	Process token [171]: T_WHITESPACE => \n\n    
	Process token [172]: T_FUNCTION => function
	Process token [173]: T_WHITESPACE =>  
	Process token [174]: T_STRING => fooBar
	Process token  175 : T_OPEN_PARENTHESIS => (
	Process token [176]: T_VARIABLE => $a
	Process token  177 : T_COMMA => ,
	Process token [178]: T_WHITESPACE =>  
	Process token [179]: T_VARIABLE => $b
	Process token  180 : T_CLOSE_PARENTHESIS => )
	Process token [181]: T_WHITESPACE =>  
	Process token  182 : T_OPEN_CURLY_BRACKET => {
	Process token [183]: T_WHITESPACE => \n        
	Process token [184]: T_RETURN => return
	Process token  185 : T_SEMICOLON => ;
	Process token [186]: T_WHITESPACE => \n    
	Process token  187 : T_CLOSE_CURLY_BRACKET => }
	Process token [188]: T_WHITESPACE => \n
	Process token  189 : T_CLOSE_CURLY_BRACKET => }
	Process token [190]: T_WHITESPACE => \n\n
	Process token [191]: T_FUNCTION => function
	Process token [192]: T_WHITESPACE =>  
	Process token [193]: T_STRING => foo
	Process token  194 : T_OPEN_PARENTHESIS => (
	Process token [195]: T_VARIABLE => $bar
	Process token  196 : T_CLOSE_PARENTHESIS => )
	Process token [197]: T_WHITESPACE => \n
	Process token  198 : T_OPEN_CURLY_BRACKET => {
	Process token [199]: T_WHITESPACE => \n    
	Process token [200]: T_PRINT => print
	Process token [201]: T_WHITESPACE =>  
	Process token [202]: T_START_HEREDOC => <<<BAZ\n
	Process token  207 : T_SEMICOLON => ;
	Process token [208]: T_WHITESPACE => \n
	Process token  209 : T_CLOSE_CURLY_BRACKET => }
	Process token [210]: T_WHITESPACE => \n\n
	Process token [211]: T_FUNCTION => function
	Process token [212]: T_WHITESPACE =>  
	Process token [213]: T_STRING => foo
	Process token  214 : T_OPEN_PARENTHESIS => (
	Process token [215]: T_WHITESPACE =>  
	Process token [216]: T_VARIABLE => $parameter
	Process token [217]: T_WHITESPACE =>  
	Process token  218 : T_CLOSE_PARENTHESIS => )
	Process token [219]: T_WHITESPACE =>  
	Process token  220 : T_OPEN_CURLY_BRACKET => {
	Process token [221]: T_WHITESPACE => \n    
	Process token [222]: T_VARIABLE => $wango
	Process token [223]: T_WHITESPACE =>  
	Process token  224 : T_EQUAL => =
	Process token [225]: T_WHITESPACE =>  
	Process token [226]: T_START_HEREDOC => <<<HERE\n
	Process token  229 : T_SEMICOLON => ;
	Process token [230]: T_WHITESPACE => \n    
	Process token [231]: T_VARIABLE => $x
	Process token [232]: T_WHITESPACE =>  
	Process token  233 : T_EQUAL => =
	Process token [234]: T_WHITESPACE =>  
	Process token [235]: T_VARIABLE => $parameter
	Process token  236 : T_SEMICOLON => ;
	Process token [237]: T_WHITESPACE =>  
	Process token [238]: T_COMMENT => // This line must be immediately after the HERE; with no intervening blank lines.\n
	Process token [239]: T_WHITESPACE =>     
	Process token [240]: T_VARIABLE => $tango
	Process token [241]: T_WHITESPACE =>  
	Process token  242 : T_EQUAL => =
	Process token [243]: T_WHITESPACE =>  
	Process token [244]: T_START_HEREDOC => <<<HERE\n
	Process token  247 : T_SEMICOLON => ;
	Process token [248]: T_WHITESPACE => \n
	Process token  249 : T_CLOSE_CURLY_BRACKET => }
	Process token [250]: T_WHITESPACE => \n\n
	Process token [251]: T_FUNCTION => function
	Process token [252]: T_WHITESPACE =>  
	Process token [253]: T_STRING => foo
	Process token  254 : T_OPEN_PARENTHESIS => (
	Process token [255]: T_WHITESPACE =>  
	Process token [256]: T_VARIABLE => $parameter
	Process token [257]: T_WHITESPACE =>  
	Process token  258 : T_CLOSE_PARENTHESIS => )
	Process token [259]: T_WHITESPACE =>  
	Process token  260 : T_OPEN_CURLY_BRACKET => {
	Process token [261]: T_WHITESPACE => \n    
	Process token [262]: T_RETURN => return
	Process token [263]: T_WHITESPACE =>  
	Process token [264]: T_START_HEREDOC => <<<HTML\n
	Process token  269 : T_SEMICOLON => ;
	Process token [270]: T_WHITESPACE => \n
	Process token  271 : T_CLOSE_CURLY_BRACKET => }
	Process token [272]: T_WHITESPACE => \n\n
	Process token [273]: T_PRINT => print
	Process token [274]: T_WHITESPACE =>  
	Process token [275]: T_STRING => foo
	Process token  276 : T_OPEN_PARENTHESIS => (
	Process token [277]: T_WHITESPACE =>  
	Process token [278]: T_CONSTANT_ENCAPSED_STRING => 'PARAMETER'
	Process token [279]: T_WHITESPACE =>  
	Process token  280 : T_CLOSE_PARENTHESIS => )
	Process token  281 : T_SEMICOLON => ;
	Process token [282]: T_WHITESPACE => \n
	Process token [283]: T_PRINT => print
	Process token [284]: T_WHITESPACE =>  
	Process token [285]: T_CONSTANT_ENCAPSED_STRING => "\n"
	Process token  286 : T_SEMICOLON => ;
	Process token [287]: T_WHITESPACE => \n\n
	Process token [288]: T_FUNCTION => function
	Process token [289]: T_WHITESPACE =>  
	Process token [290]: T_STRING => foo
	Process token  291 : T_OPEN_PARENTHESIS => (
	Process token [292]: T_VARIABLE => $bar
	Process token  293 : T_CLOSE_PARENTHESIS => )
	Process token [294]: T_WHITESPACE => \n
	Process token  295 : T_OPEN_CURLY_BRACKET => {
	Process token [296]: T_WHITESPACE => \n    
	Process token [297]: T_PRINT => print
	Process token [298]: T_WHITESPACE =>  
	Process token  299 : T_NONE => "
	Process token  305 : T_SEMICOLON => ;
	Process token [306]: T_WHITESPACE => \n
	Process token  307 : T_CLOSE_CURLY_BRACKET => }
	Process token [308]: T_WHITESPACE => \n\n
	Process token [309]: T_FUNCTION => function
	Process token [310]: T_WHITESPACE =>  
	Process token [311]: T_STRING => bar
	Process token  312 : T_OPEN_PARENTHESIS => (
	Process token [313]: T_VARIABLE => $x
	Process token  314 : T_CLOSE_PARENTHESIS => )
	Process token [315]: T_WHITESPACE => \n
	Process token  316 : T_OPEN_CURLY_BRACKET => {
	Process token [317]: T_WHITESPACE => \n    
	Process token [318]: T_RETURN => return
	Process token [319]: T_WHITESPACE =>  
	Process token [320]: T_LNUMBER => 2
	Process token [321]: T_WHITESPACE =>  
	Process token  322 : T_MULTIPLY => *
	Process token [323]: T_WHITESPACE =>  
	Process token  324 : T_DOLLAR => $
	Process token  325 : T_OPEN_CURLY_BRACKET => {
	Process token [326]: T_STRING => x
	Process token  327 : T_CLOSE_CURLY_BRACKET => }
	Process token  328 : T_SEMICOLON => ;
	Process token [329]: T_WHITESPACE => \n
	Process token  330 : T_CLOSE_CURLY_BRACKET => }
	Process token [331]: T_WHITESPACE => \n\n
	Process token [332]: T_VARIABLE => $foo
	Process token [333]: T_WHITESPACE =>  
	Process token  334 : T_EQUAL => =
	Process token [335]: T_WHITESPACE =>  
	Process token [336]: T_FUNCTION => function
	Process token [337]: T_WHITESPACE =>  
	Process token  338 : T_OPEN_PARENTHESIS => (
	Process token [339]: T_VARIABLE => $a
	Process token  340 : T_COMMA => ,
	Process token [341]: T_WHITESPACE =>  
	Process token [342]: T_VARIABLE => $b
	Process token  343 : T_CLOSE_PARENTHESIS => )
	Process token [344]: T_WHITESPACE =>  
	Process token  345 : T_OPEN_CURLY_BRACKET => {
	Process token [346]: T_WHITESPACE => \n    
	Process token [347]: T_RETURN => return
	Process token [348]: T_WHITESPACE =>  
	Process token [349]: T_VARIABLE => $a
	Process token [350]: T_WHITESPACE =>  
	Process token  351 : T_MULTIPLY => *
	Process token [352]: T_WHITESPACE =>  
	Process token [353]: T_LNUMBER => 2
	Process token  354 : T_SEMICOLON => ;
	Process token [355]: T_WHITESPACE => \n
	Process token  356 : T_CLOSE_CURLY_BRACKET => }
	Process token  357 : T_SEMICOLON => ;
	Process token [358]: T_WHITESPACE => \n\n
	Process token [359]: T_FUNCTION => function
	Process token [360]: T_WHITESPACE =>  
	Process token [361]: T_STRING => foobar
	Process token  362 : T_OPEN_PARENTHESIS => (
	Process token  363 : T_CLOSE_PARENTHESIS => )
	Process token [364]: T_WHITESPACE =>  
	Process token  365 : T_OPEN_CURLY_BRACKET => {
	Process token [366]: T_WHITESPACE => \n    
	Process token [367]: T_RETURN => return
	Process token  368 : T_SEMICOLON => ;
	Process token [369]: T_WHITESPACE => \n
	Process token  370 : T_CLOSE_CURLY_BRACKET => }
	Process token [371]: T_WHITESPACE => \n\n\n
	Process token [372]: T_COMMENT => /*\n * The function signature of methods in extended classes and implemented\n * interfaces has to mirror the parent class/interface.\n * The overloaded method may not use all params.\n */
	Process token [373]: T_WHITESPACE => \n\n
	Process token [374]: T_CLASS => class
	Process token [375]: T_WHITESPACE =>  
	Process token [376]: T_STRING => MyClass
	Process token [377]: T_WHITESPACE =>  
	Process token  378 : T_OPEN_CURLY_BRACKET => {
	Process token [379]: T_WHITESPACE => \n    
	Process token [380]: T_PUBLIC => public
	Process token [381]: T_WHITESPACE =>  
	Process token [382]: T_FUNCTION => function
	Process token [383]: T_WHITESPACE =>  
	Process token [384]: T_STRING => something
	Process token  385 : T_OPEN_PARENTHESIS => (
	Process token [386]: T_VARIABLE => $a
	Process token  387 : T_COMMA => ,
	Process token [388]: T_WHITESPACE =>  
	Process token [389]: T_VARIABLE => $b
	Process token  390 : T_CLOSE_PARENTHESIS => )
	Process token [391]: T_WHITESPACE =>  
	Process token  392 : T_OPEN_CURLY_BRACKET => {
	Process token [393]: T_WHITESPACE => \n        
	Process token [394]: T_RETURN => return
	Process token [395]: T_WHITESPACE =>  
	Process token [396]: T_VARIABLE => $a
	Process token [397]: T_WHITESPACE =>  
	Process token  398 : T_MULTIPLY => *
	Process token [399]: T_WHITESPACE =>  
	Process token [400]: T_LNUMBER => 2
	Process token  401 : T_SEMICOLON => ;
	Process token [402]: T_WHITESPACE => \n    
	Process token  403 : T_CLOSE_CURLY_BRACKET => }
	Process token [404]: T_WHITESPACE => \n
	Process token  405 : T_CLOSE_CURLY_BRACKET => }
	Process token [406]: T_WHITESPACE => \n\n
	Process token [407]: T_CLASS => class
	Process token [408]: T_WHITESPACE =>  
	Process token [409]: T_STRING => MyExtendedClass
	Process token [410]: T_WHITESPACE =>  
	Process token [411]: T_EXTENDS => extends
	Process token [412]: T_WHITESPACE =>  
	Process token [413]: T_STRING => SomeClass
	Process token [414]: T_WHITESPACE =>  
	Process token  415 : T_OPEN_CURLY_BRACKET => {
	Process token [416]: T_WHITESPACE => \n    
	Process token [417]: T_PUBLIC => public
	Process token [418]: T_WHITESPACE =>  
	Process token [419]: T_FUNCTION => function
	Process token [420]: T_WHITESPACE =>  
	Process token [421]: T_STRING => something
	Process token  422 : T_OPEN_PARENTHESIS => (
	Process token [423]: T_VARIABLE => $a
	Process token  424 : T_COMMA => ,
	Process token [425]: T_WHITESPACE =>  
	Process token [426]: T_VARIABLE => $b
	Process token  427 : T_CLOSE_PARENTHESIS => )
	Process token [428]: T_WHITESPACE =>  
	Process token  429 : T_OPEN_CURLY_BRACKET => {
	Process token [430]: T_WHITESPACE => \n        
	Process token [431]: T_RETURN => return
	Process token [432]: T_WHITESPACE =>  
	Process token [433]: T_VARIABLE => $a
	Process token [434]: T_WHITESPACE =>  
	Process token  435 : T_MULTIPLY => *
	Process token [436]: T_WHITESPACE =>  
	Process token [437]: T_LNUMBER => 2
	Process token  438 : T_SEMICOLON => ;
	Process token [439]: T_WHITESPACE => \n    
	Process token  440 : T_CLOSE_CURLY_BRACKET => }
	Process token [441]: T_WHITESPACE => \n
	Process token  442 : T_CLOSE_CURLY_BRACKET => }
	Process token [443]: T_WHITESPACE => \n\n
	Process token [444]: T_CLASS => class
	Process token [445]: T_WHITESPACE =>  
	Process token [446]: T_STRING => MyExtendedClass
	Process token [447]: T_WHITESPACE =>  
	Process token [448]: T_IMPLEMENTS => implements
	Process token [449]: T_WHITESPACE =>  
	Process token [450]: T_STRING => SomeInterface
	Process token [451]: T_WHITESPACE =>  
	Process token  452 : T_OPEN_CURLY_BRACKET => {
	Process token [453]: T_WHITESPACE => \n    
	Process token [454]: T_PUBLIC => public
	Process token [455]: T_WHITESPACE =>  
	Process token [456]: T_FUNCTION => function
	Process token [457]: T_WHITESPACE =>  
	Process token [458]: T_STRING => something
	Process token  459 : T_OPEN_PARENTHESIS => (
	Process token [460]: T_VARIABLE => $a
	Process token  461 : T_COMMA => ,
	Process token [462]: T_WHITESPACE =>  
	Process token [463]: T_VARIABLE => $b
	Process token  464 : T_CLOSE_PARENTHESIS => )
	Process token [465]: T_WHITESPACE =>  
	Process token  466 : T_OPEN_CURLY_BRACKET => {
	Process token [467]: T_WHITESPACE => \n        
	Process token [468]: T_RETURN => return
	Process token [469]: T_WHITESPACE =>  
	Process token [470]: T_VARIABLE => $a
	Process token [471]: T_WHITESPACE =>  
	Process token  472 : T_MULTIPLY => *
	Process token [473]: T_WHITESPACE =>  
	Process token [474]: T_LNUMBER => 2
	Process token  475 : T_SEMICOLON => ;
	Process token [476]: T_WHITESPACE => \n    
	Process token  477 : T_CLOSE_CURLY_BRACKET => }
	Process token [478]: T_WHITESPACE => \n
	Process token  479 : T_CLOSE_CURLY_BRACKET => }
	Process token [480]: T_WHITESPACE => \n\n\n
	Process token [481]: T_COMMENT => /*\n * Functions may not use all params passed to them.\n * Report different violations for params *before* and *after* the last param used.\n */
	Process token [482]: T_WHITESPACE => \n\n
	Process token [483]: T_FUNCTION => function
	Process token [484]: T_WHITESPACE =>  
	Process token [485]: T_STRING => something
	Process token  486 : T_OPEN_PARENTHESIS => (
	Process token [487]: T_VARIABLE => $a
	Process token  488 : T_CLOSE_PARENTHESIS => )
	Process token [489]: T_WHITESPACE =>  
	Process token  490 : T_OPEN_CURLY_BRACKET => {
	Process token [491]: T_WHITESPACE => \n    
	Process token [492]: T_RETURN => return
	Process token [493]: T_WHITESPACE =>  
	Process token [494]: T_CONSTANT_ENCAPSED_STRING => 'foobar'
	Process token  495 : T_SEMICOLON => ;
	Process token [496]: T_WHITESPACE => \n
	Process token  497 : T_CLOSE_CURLY_BRACKET => }
	Process token [498]: T_WHITESPACE => \n\n
	Process token [499]: T_FUNCTION => function
	Process token [500]: T_WHITESPACE =>  
	Process token [501]: T_STRING => myCallback
	Process token  502 : T_OPEN_PARENTHESIS => (
	Process token [503]: T_VARIABLE => $a
	Process token  504 : T_COMMA => ,
	Process token [505]: T_WHITESPACE =>  
	Process token [506]: T_VARIABLE => $b
	Process token  507 : T_COMMA => ,
	Process token [508]: T_WHITESPACE =>  
	Process token [509]: T_VARIABLE => $c
	Process token  510 : T_COMMA => ,
	Process token [511]: T_WHITESPACE =>  
	Process token [512]: T_VARIABLE => $d
	Process token  513 : T_CLOSE_PARENTHESIS => )
	Process token [514]: T_WHITESPACE =>  
	Process token  515 : T_OPEN_CURLY_BRACKET => {
	Process token [516]: T_WHITESPACE => \n    
	Process token [517]: T_RETURN => return
	Process token [518]: T_WHITESPACE =>  
	Process token [519]: T_VARIABLE => $a
	Process token [520]: T_WHITESPACE =>  
	Process token  521 : T_MULTIPLY => *
	Process token [522]: T_WHITESPACE =>  
	Process token [523]: T_VARIABLE => $c
	Process token  524 : T_SEMICOLON => ;
	Process token [525]: T_WHITESPACE => \n
	Process token  526 : T_CLOSE_CURLY_BRACKET => }
	Process token [527]: T_WHITESPACE => \n
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	=> Found curly bracket opener at 12
	=> Found curly bracket closer at 24 for 12
	=> Found curly bracket opener at 37
	=> Found curly bracket closer at 45 for 37
	=> Found curly bracket opener at 58
		=> Found curly bracket opener at 89
		=> Found curly bracket closer at 104 for 89
	=> Found curly bracket closer at 112 for 58
	=> Found curly bracket opener at 126
	=> Found curly bracket closer at 149 for 126
	=> Found curly bracket opener at 160
		=> Found curly bracket opener at 173
		=> Found curly bracket closer at 178 for 173
		=> Found curly bracket opener at 192
		=> Found curly bracket closer at 199 for 192
	=> Found curly bracket closer at 201 for 160
	=> Found curly bracket opener at 211
	=> Found curly bracket closer at 221 for 211
	=> Found curly bracket opener at 233
	=> Found curly bracket closer at 272 for 233
	=> Found curly bracket opener at 284
	=> Found curly bracket closer at 295 for 284
	=> Found curly bracket opener at 321
	=> Found curly bracket closer at 329 for 321
	=> Found curly bracket opener at 339
		=> Found curly bracket opener at 349
		=> Found curly bracket closer at 351 for 349
	=> Found curly bracket closer at 354 for 339
	=> Found curly bracket opener at 370
	=> Found curly bracket closer at 382 for 370
	=> Found curly bracket opener at 392
	=> Found curly bracket closer at 398 for 392
	=> Found curly bracket opener at 413
		=> Found curly bracket opener at 428
		=> Found curly bracket closer at 441 for 428
	=> Found curly bracket closer at 443 for 413
	=> Found curly bracket opener at 454
		=> Found curly bracket opener at 469
		=> Found curly bracket closer at 482 for 469
	=> Found curly bracket closer at 484 for 454
	=> Found curly bracket opener at 495
		=> Found curly bracket opener at 510
		=> Found curly bracket closer at 523 for 510
	=> Found curly bracket closer at 525 for 495
	=> Found curly bracket opener at 542
	=> Found curly bracket closer at 550 for 542
	=> Found curly bracket opener at 569
	=> Found curly bracket closer at 581 for 569
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 2:T_FUNCTION => function
	=> Begin scope map recursion at token 2 with depth 1
	Process token 3 on line 3 []: T_WHITESPACE =>  
	Process token 4 on line 3 []: T_STRING => foo
	Process token 5 on line 3 []: T_OPEN_PARENTHESIS => (
	Process token 6 on line 3 []: T_VARIABLE => $a
	Process token 7 on line 3 []: T_COMMA => ,
	Process token 8 on line 3 []: T_WHITESPACE =>  
	Process token 9 on line 3 []: T_VARIABLE => $b
	Process token 10 on line 3 []: T_CLOSE_PARENTHESIS => )
	Process token 11 on line 3 []: T_WHITESPACE =>  
	Process token 12 on line 3 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 2:T_FUNCTION
	Process token 13 on line 3 [opener:12;]: T_WHITESPACE => \n
	Process token 14 on line 4 [opener:12;]: T_WHITESPACE =>     
	Process token 15 on line 4 [opener:12;]: T_RETURN => return
	Process token 16 on line 4 [opener:12;]: T_WHITESPACE =>  
	Process token 17 on line 4 [opener:12;]: T_VARIABLE => $a
	Process token 18 on line 4 [opener:12;]: T_WHITESPACE =>  
	Process token 19 on line 4 [opener:12;]: T_MULTIPLY => *
	Process token 20 on line 4 [opener:12;]: T_WHITESPACE =>  
	Process token 21 on line 4 [opener:12;]: T_LNUMBER => 2
	Process token 22 on line 4 [opener:12;]: T_SEMICOLON => ;
	Process token 23 on line 4 [opener:12;]: T_WHITESPACE => \n
	Process token 24 on line 5 [opener:12;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (24:T_CLOSE_CURLY_BRACKET) for 2:T_FUNCTION
	Start scope map at 27:T_FUNCTION => function
	=> Begin scope map recursion at token 27 with depth 1
	Process token 28 on line 7 []: T_WHITESPACE =>  
	Process token 29 on line 7 []: T_STRING => baz
	Process token 30 on line 7 []: T_OPEN_PARENTHESIS => (
	Process token 31 on line 7 []: T_VARIABLE => $a
	Process token 32 on line 7 []: T_COMMA => ,
	Process token 33 on line 7 []: T_WHITESPACE =>  
	Process token 34 on line 7 []: T_VARIABLE => $b
	Process token 35 on line 7 []: T_CLOSE_PARENTHESIS => )
	Process token 36 on line 7 []: T_WHITESPACE =>  
	Process token 37 on line 7 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 27:T_FUNCTION
	Process token 38 on line 7 [opener:37;]: T_WHITESPACE => \n
	Process token 39 on line 8 [opener:37;]: T_WHITESPACE =>     
	Process token 40 on line 8 [opener:37;]: T_ECHO => echo
	Process token 41 on line 8 [opener:37;]: T_WHITESPACE =>  
	Process token 42 on line 8 [opener:37;]: T_DOUBLE_QUOTED_STRING => "baz({$a});"
	Process token 43 on line 8 [opener:37;]: T_SEMICOLON => ;
	Process token 44 on line 8 [opener:37;]: T_WHITESPACE => \n
	Process token 45 on line 9 [opener:37;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (45:T_CLOSE_CURLY_BRACKET) for 27:T_FUNCTION
	Start scope map at 48:T_FUNCTION => function
	=> Begin scope map recursion at token 48 with depth 1
	Process token 49 on line 11 []: T_WHITESPACE =>  
	Process token 50 on line 11 []: T_STRING => bar
	Process token 51 on line 11 []: T_OPEN_PARENTHESIS => (
	Process token 52 on line 11 []: T_VARIABLE => $a
	Process token 53 on line 11 []: T_COMMA => ,
	Process token 54 on line 11 []: T_WHITESPACE =>  
	Process token 55 on line 11 []: T_VARIABLE => $b
	Process token 56 on line 11 []: T_CLOSE_PARENTHESIS => )
	Process token 57 on line 11 []: T_WHITESPACE =>  
	Process token 58 on line 11 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 48:T_FUNCTION
	Process token 59 on line 11 [opener:58;]: T_WHITESPACE => \n
	Process token 60 on line 12 [opener:58;]: T_WHITESPACE =>     
	Process token 61 on line 12 [opener:58;]: T_VARIABLE => $x
	Process token 62 on line 12 [opener:58;]: T_WHITESPACE =>  
	Process token 63 on line 12 [opener:58;]: T_EQUAL => =
	Process token 64 on line 12 [opener:58;]: T_WHITESPACE =>  
	Process token 65 on line 12 [opener:58;]: T_VARIABLE => $b
	Process token 66 on line 12 [opener:58;]: T_SEMICOLON => ;
	Process token 67 on line 12 [opener:58;]: T_WHITESPACE => \n
	Process token 68 on line 13 [opener:58;]: T_WHITESPACE =>     
	Process token 69 on line 13 [opener:58;]: T_FOR => for
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 69 with depth 2
		Process token 70 on line 13 []: T_WHITESPACE =>  
		Process token 71 on line 13 []: T_OPEN_PARENTHESIS => (
		Process token 72 on line 13 []: T_VARIABLE => $i
		Process token 73 on line 13 []: T_WHITESPACE =>  
		Process token 74 on line 13 []: T_EQUAL => =
		Process token 75 on line 13 []: T_WHITESPACE =>  
		Process token 76 on line 13 []: T_LNUMBER => 0
		Process token 77 on line 13 []: T_SEMICOLON => ;
		Process token 78 on line 13 []: T_WHITESPACE =>  
		Process token 79 on line 13 []: T_VARIABLE => $i
		Process token 80 on line 13 []: T_WHITESPACE =>  
		Process token 81 on line 13 []: T_LESS_THAN => <
		Process token 82 on line 13 []: T_VARIABLE => $a
		Process token 83 on line 13 []: T_SEMICOLON => ;
		Process token 84 on line 13 []: T_WHITESPACE =>  
		Process token 85 on line 13 []: T_VARIABLE => $i
		Process token 86 on line 13 []: T_INC => ++
		Process token 87 on line 13 []: T_CLOSE_PARENTHESIS => )
		Process token 88 on line 13 []: T_WHITESPACE =>  
		Process token 89 on line 13 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 69:T_FOR
		Process token 90 on line 13 [opener:89;]: T_WHITESPACE => \n
		Process token 91 on line 14 [opener:89;]: T_WHITESPACE =>         
		Process token 92 on line 14 [opener:89;]: T_VARIABLE => $x
		Process token 93 on line 14 [opener:89;]: T_WHITESPACE =>  
		Process token 94 on line 14 [opener:89;]: T_PLUS_EQUAL => +=
		Process token 95 on line 14 [opener:89;]: T_WHITESPACE =>  
		Process token 96 on line 14 [opener:89;]: T_VARIABLE => $a
		Process token 97 on line 14 [opener:89;]: T_WHITESPACE =>  
		Process token 98 on line 14 [opener:89;]: T_MULTIPLY => *
		Process token 99 on line 14 [opener:89;]: T_WHITESPACE =>  
		Process token 100 on line 14 [opener:89;]: T_VARIABLE => $i
		Process token 101 on line 14 [opener:89;]: T_SEMICOLON => ;
		Process token 102 on line 14 [opener:89;]: T_WHITESPACE => \n
		Process token 103 on line 15 [opener:89;]: T_WHITESPACE =>     
		Process token 104 on line 15 [opener:89;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (104:T_CLOSE_CURLY_BRACKET) for 69:T_FOR
	Process token 105 on line 15 [opener:58;]: T_WHITESPACE => \n
	Process token 106 on line 16 [opener:58;]: T_WHITESPACE =>     
	Process token 107 on line 16 [opener:58;]: T_RETURN => return
	Process token 108 on line 16 [opener:58;]: T_WHITESPACE =>  
	Process token 109 on line 16 [opener:58;]: T_VARIABLE => $x
	Process token 110 on line 16 [opener:58;]: T_SEMICOLON => ;
	Process token 111 on line 16 [opener:58;]: T_WHITESPACE => \n
	Process token 112 on line 17 [opener:58;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (112:T_CLOSE_CURLY_BRACKET) for 48:T_FUNCTION
	Start scope map at 115:T_FUNCTION => function
	=> Begin scope map recursion at token 115 with depth 1
	Process token 116 on line 19 []: T_WHITESPACE =>  
	Process token 117 on line 19 []: T_STRING => foobar
	Process token 118 on line 19 []: T_OPEN_PARENTHESIS => (
	Process token 119 on line 19 []: T_VARIABLE => $a
	Process token 120 on line 19 []: T_COMMA => ,
	Process token 121 on line 19 []: T_WHITESPACE =>  
	Process token 122 on line 19 []: T_BITWISE_AND => &
	Process token 123 on line 19 []: T_VARIABLE => $b
	Process token 124 on line 19 []: T_CLOSE_PARENTHESIS => )
	Process token 125 on line 19 []: T_WHITESPACE =>  
	Process token 126 on line 19 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 115:T_FUNCTION
	Process token 127 on line 19 [opener:126;]: T_WHITESPACE => \n
	Process token 128 on line 20 [opener:126;]: T_WHITESPACE =>     
	Process token 129 on line 20 [opener:126;]: T_RETURN => return
	Process token 130 on line 20 [opener:126;]: T_WHITESPACE =>  
	Process token 131 on line 20 [opener:126;]: T_OPEN_PARENTHESIS => (
	Process token 132 on line 20 [opener:126;]: T_STRING => preg_match
	Process token 133 on line 20 [opener:126;]: T_OPEN_PARENTHESIS => (
	Process token 134 on line 20 [opener:126;]: T_CONSTANT_ENCAPSED_STRING => '/foo/'
	Process token 135 on line 20 [opener:126;]: T_COMMA => ,
	Process token 136 on line 20 [opener:126;]: T_WHITESPACE =>  
	Process token 137 on line 20 [opener:126;]: T_VARIABLE => $a
	Process token 138 on line 20 [opener:126;]: T_COMMA => ,
	Process token 139 on line 20 [opener:126;]: T_WHITESPACE =>  
	Process token 140 on line 20 [opener:126;]: T_VARIABLE => $b
	Process token 141 on line 20 [opener:126;]: T_CLOSE_PARENTHESIS => )
	Process token 142 on line 20 [opener:126;]: T_WHITESPACE =>  
	Process token 143 on line 20 [opener:126;]: T_IS_NOT_IDENTICAL => !==
	Process token 144 on line 20 [opener:126;]: T_WHITESPACE =>  
	Process token 145 on line 20 [opener:126;]: T_LNUMBER => 0
	Process token 146 on line 20 [opener:126;]: T_CLOSE_PARENTHESIS => )
	Process token 147 on line 20 [opener:126;]: T_SEMICOLON => ;
	Process token 148 on line 20 [opener:126;]: T_WHITESPACE => \n
	Process token 149 on line 21 [opener:126;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (149:T_CLOSE_CURLY_BRACKET) for 115:T_FUNCTION
	Start scope map at 152:T_CLASS => class
	=> Begin scope map recursion at token 152 with depth 1
	Process token 153 on line 23 []: T_WHITESPACE =>  
	Process token 154 on line 23 []: T_STRING => Foo
	Process token 155 on line 23 []: T_WHITESPACE =>  
	Process token 156 on line 23 []: T_IMPLEMENTS => implements
	Process token 157 on line 23 []: T_WHITESPACE =>  
	Process token 158 on line 23 []: T_STRING => Bar
	Process token 159 on line 23 []: T_WHITESPACE =>  
	Process token 160 on line 23 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 152:T_CLASS
	Process token 161 on line 23 [opener:160;]: T_WHITESPACE => \n
	Process token 162 on line 24 [opener:160;]: T_WHITESPACE =>     
	Process token 163 on line 24 [opener:160;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 163 with depth 2
		Process token 164 on line 24 []: T_WHITESPACE =>  
		Process token 165 on line 24 []: T_STRING => barfoo
		Process token 166 on line 24 []: T_OPEN_PARENTHESIS => (
		Process token 167 on line 24 []: T_VARIABLE => $a
		Process token 168 on line 24 []: T_COMMA => ,
		Process token 169 on line 24 []: T_WHITESPACE =>  
		Process token 170 on line 24 []: T_VARIABLE => $b
		Process token 171 on line 24 []: T_CLOSE_PARENTHESIS => )
		Process token 172 on line 24 []: T_WHITESPACE =>  
		Process token 173 on line 24 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 163:T_FUNCTION
		Process token 174 on line 24 [opener:173;]: T_WHITESPACE => \n
		Process token 175 on line 25 [opener:173;]: T_WHITESPACE =>         
		Process token 176 on line 25 [opener:173;]: T_COMMENT => // Empty body means interface method in many cases.\n
		Process token 177 on line 26 [opener:173;]: T_WHITESPACE =>     
		Process token 178 on line 26 [opener:173;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (178:T_CLOSE_CURLY_BRACKET) for 163:T_FUNCTION
	Process token 179 on line 26 [opener:160;]: T_WHITESPACE => \n
	Process token 180 on line 27 [opener:160;]: T_WHITESPACE => \n
	Process token 181 on line 28 [opener:160;]: T_WHITESPACE =>     
	Process token 182 on line 28 [opener:160;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 182 with depth 2
		Process token 183 on line 28 []: T_WHITESPACE =>  
		Process token 184 on line 28 []: T_STRING => fooBar
		Process token 185 on line 28 []: T_OPEN_PARENTHESIS => (
		Process token 186 on line 28 []: T_VARIABLE => $a
		Process token 187 on line 28 []: T_COMMA => ,
		Process token 188 on line 28 []: T_WHITESPACE =>  
		Process token 189 on line 28 []: T_VARIABLE => $b
		Process token 190 on line 28 []: T_CLOSE_PARENTHESIS => )
		Process token 191 on line 28 []: T_WHITESPACE =>  
		Process token 192 on line 28 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 182:T_FUNCTION
		Process token 193 on line 28 [opener:192;]: T_WHITESPACE => \n
		Process token 194 on line 29 [opener:192;]: T_WHITESPACE =>         
		Process token 195 on line 29 [opener:192;]: T_RETURN => return
		Process token 196 on line 29 [opener:192;]: T_SEMICOLON => ;
		Process token 197 on line 29 [opener:192;]: T_WHITESPACE => \n
		Process token 198 on line 30 [opener:192;]: T_WHITESPACE =>     
		Process token 199 on line 30 [opener:192;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (199:T_CLOSE_CURLY_BRACKET) for 182:T_FUNCTION
	Process token 200 on line 30 [opener:160;]: T_WHITESPACE => \n
	Process token 201 on line 31 [opener:160;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (201:T_CLOSE_CURLY_BRACKET) for 152:T_CLASS
	Start scope map at 204:T_FUNCTION => function
	=> Begin scope map recursion at token 204 with depth 1
	Process token 205 on line 33 []: T_WHITESPACE =>  
	Process token 206 on line 33 []: T_STRING => foo
	Process token 207 on line 33 []: T_OPEN_PARENTHESIS => (
	Process token 208 on line 33 []: T_VARIABLE => $bar
	Process token 209 on line 33 []: T_CLOSE_PARENTHESIS => )
	Process token 210 on line 33 []: T_WHITESPACE => \n
	Process token 211 on line 34 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 204:T_FUNCTION
	Process token 212 on line 34 [opener:211;]: T_WHITESPACE => \n
	Process token 213 on line 35 [opener:211;]: T_WHITESPACE =>     
	Process token 214 on line 35 [opener:211;]: T_PRINT => print
	Process token 215 on line 35 [opener:211;]: T_WHITESPACE =>  
	Process token 216 on line 35 [opener:211;]: T_START_HEREDOC => <<<BAZ\n
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 216 with depth 2
		Process token 217 on line 36 [opener:216;]: T_HEREDOC =>     $bar\n
		Process token 218 on line 37 [opener:216;]: T_END_HEREDOC => BAZ
		=> Found scope closer (218:T_END_HEREDOC) for 216:T_START_HEREDOC
	Process token 219 on line 37 [opener:211;]: T_SEMICOLON => ;
	Process token 220 on line 37 [opener:211;]: T_WHITESPACE => \n
	Process token 221 on line 38 [opener:211;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (221:T_CLOSE_CURLY_BRACKET) for 204:T_FUNCTION
	Start scope map at 224:T_FUNCTION => function
	=> Begin scope map recursion at token 224 with depth 1
	Process token 225 on line 40 []: T_WHITESPACE =>  
	Process token 226 on line 40 []: T_STRING => foo
	Process token 227 on line 40 []: T_OPEN_PARENTHESIS => (
	Process token 228 on line 40 []: T_WHITESPACE =>  
	Process token 229 on line 40 []: T_VARIABLE => $parameter
	Process token 230 on line 40 []: T_WHITESPACE =>  
	Process token 231 on line 40 []: T_CLOSE_PARENTHESIS => )
	Process token 232 on line 40 []: T_WHITESPACE =>  
	Process token 233 on line 40 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 224:T_FUNCTION
	Process token 234 on line 40 [opener:233;]: T_WHITESPACE => \n
	Process token 235 on line 41 [opener:233;]: T_WHITESPACE =>     
	Process token 236 on line 41 [opener:233;]: T_VARIABLE => $wango
	Process token 237 on line 41 [opener:233;]: T_WHITESPACE =>  
	Process token 238 on line 41 [opener:233;]: T_EQUAL => =
	Process token 239 on line 41 [opener:233;]: T_WHITESPACE =>  
	Process token 240 on line 41 [opener:233;]: T_START_HEREDOC => <<<HERE\n
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 240 with depth 2
		Process token 241 on line 42 [opener:240;]: T_HEREDOC => 1 Must be a HEREdoc of at least one line\n
		Process token 242 on line 43 [opener:240;]: T_END_HEREDOC => HERE
		=> Found scope closer (242:T_END_HEREDOC) for 240:T_START_HEREDOC
	Process token 243 on line 43 [opener:233;]: T_SEMICOLON => ;
	Process token 244 on line 43 [opener:233;]: T_WHITESPACE => \n
	Process token 245 on line 44 [opener:233;]: T_WHITESPACE =>     
	Process token 246 on line 44 [opener:233;]: T_VARIABLE => $x
	Process token 247 on line 44 [opener:233;]: T_WHITESPACE =>  
	Process token 248 on line 44 [opener:233;]: T_EQUAL => =
	Process token 249 on line 44 [opener:233;]: T_WHITESPACE =>  
	Process token 250 on line 44 [opener:233;]: T_VARIABLE => $parameter
	Process token 251 on line 44 [opener:233;]: T_SEMICOLON => ;
	Process token 252 on line 44 [opener:233;]: T_WHITESPACE =>  
	Process token 253 on line 44 [opener:233;]: T_COMMENT => // This line must be immediately after the HERE; with no intervening blank lines.\n
	Process token 254 on line 45 [opener:233;]: T_WHITESPACE =>     
	Process token 255 on line 45 [opener:233;]: T_VARIABLE => $tango
	Process token 256 on line 45 [opener:233;]: T_WHITESPACE =>  
	Process token 257 on line 45 [opener:233;]: T_EQUAL => =
	Process token 258 on line 45 [opener:233;]: T_WHITESPACE =>  
	Process token 259 on line 45 [opener:233;]: T_START_HEREDOC => <<<HERE\n
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 259 with depth 2
		Process token 260 on line 46 [opener:259;]: T_HEREDOC => 1 Must be a HEREdoc\n
		Process token 261 on line 47 [opener:259;]: T_HEREDOC => 2 \n
		Process token 262 on line 48 [opener:259;]: T_HEREDOC => 3 \n
		Process token 263 on line 49 [opener:259;]: T_HEREDOC => 4 \n
		Process token 264 on line 50 [opener:259;]: T_HEREDOC => 5   \n
		Process token 265 on line 51 [opener:259;]: T_HEREDOC => 6\n
		Process token 266 on line 52 [opener:259;]: T_HEREDOC => 7\n
		Process token 267 on line 53 [opener:259;]: T_HEREDOC => 8 \n
		Process token 268 on line 54 [opener:259;]: T_HEREDOC => 9 at least 9 lines long\n
		Process token 269 on line 55 [opener:259;]: T_END_HEREDOC => HERE
		=> Found scope closer (269:T_END_HEREDOC) for 259:T_START_HEREDOC
	Process token 270 on line 55 [opener:233;]: T_SEMICOLON => ;
	Process token 271 on line 55 [opener:233;]: T_WHITESPACE => \n
	Process token 272 on line 56 [opener:233;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (272:T_CLOSE_CURLY_BRACKET) for 224:T_FUNCTION
	Start scope map at 275:T_FUNCTION => function
	=> Begin scope map recursion at token 275 with depth 1
	Process token 276 on line 58 []: T_WHITESPACE =>  
	Process token 277 on line 58 []: T_STRING => foo
	Process token 278 on line 58 []: T_OPEN_PARENTHESIS => (
	Process token 279 on line 58 []: T_WHITESPACE =>  
	Process token 280 on line 58 []: T_VARIABLE => $parameter
	Process token 281 on line 58 []: T_WHITESPACE =>  
	Process token 282 on line 58 []: T_CLOSE_PARENTHESIS => )
	Process token 283 on line 58 []: T_WHITESPACE =>  
	Process token 284 on line 58 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 275:T_FUNCTION
	Process token 285 on line 58 [opener:284;]: T_WHITESPACE => \n
	Process token 286 on line 59 [opener:284;]: T_WHITESPACE =>     
	Process token 287 on line 59 [opener:284;]: T_RETURN => return
	Process token 288 on line 59 [opener:284;]: T_WHITESPACE =>  
	Process token 289 on line 59 [opener:284;]: T_START_HEREDOC => <<<HTML\n
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 289 with depth 2
		Process token 290 on line 60 [opener:289;]: T_HEREDOC => <?xml version="1.0"?>\n
		Process token 291 on line 61 [opener:289;]: T_HEREDOC => <value>$parameter</value>\n
		Process token 292 on line 62 [opener:289;]: T_END_HEREDOC => HTML
		=> Found scope closer (292:T_END_HEREDOC) for 289:T_START_HEREDOC
	Process token 293 on line 62 [opener:284;]: T_SEMICOLON => ;
	Process token 294 on line 62 [opener:284;]: T_WHITESPACE => \n
	Process token 295 on line 63 [opener:284;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (295:T_CLOSE_CURLY_BRACKET) for 275:T_FUNCTION
	Start scope map at 314:T_FUNCTION => function
	=> Begin scope map recursion at token 314 with depth 1
	Process token 315 on line 68 []: T_WHITESPACE =>  
	Process token 316 on line 68 []: T_STRING => foo
	Process token 317 on line 68 []: T_OPEN_PARENTHESIS => (
	Process token 318 on line 68 []: T_VARIABLE => $bar
	Process token 319 on line 68 []: T_CLOSE_PARENTHESIS => )
	Process token 320 on line 68 []: T_WHITESPACE => \n
	Process token 321 on line 69 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 314:T_FUNCTION
	Process token 322 on line 69 [opener:321;]: T_WHITESPACE => \n
	Process token 323 on line 70 [opener:321;]: T_WHITESPACE =>     
	Process token 324 on line 70 [opener:321;]: T_PRINT => print
	Process token 325 on line 70 [opener:321;]: T_WHITESPACE =>  
	Process token 326 on line 70 [opener:321;]: T_DOUBLE_QUOTED_STRING => "${bar} things\n"
	Process token 327 on line 70 [opener:321;]: T_SEMICOLON => ;
	Process token 328 on line 70 [opener:321;]: T_WHITESPACE => \n
	Process token 329 on line 71 [opener:321;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (329:T_CLOSE_CURLY_BRACKET) for 314:T_FUNCTION
	Start scope map at 332:T_FUNCTION => function
	=> Begin scope map recursion at token 332 with depth 1
	Process token 333 on line 73 []: T_WHITESPACE =>  
	Process token 334 on line 73 []: T_STRING => bar
	Process token 335 on line 73 []: T_OPEN_PARENTHESIS => (
	Process token 336 on line 73 []: T_VARIABLE => $x
	Process token 337 on line 73 []: T_CLOSE_PARENTHESIS => )
	Process token 338 on line 73 []: T_WHITESPACE => \n
	Process token 339 on line 74 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 332:T_FUNCTION
	Process token 340 on line 74 [opener:339;]: T_WHITESPACE => \n
	Process token 341 on line 75 [opener:339;]: T_WHITESPACE =>     
	Process token 342 on line 75 [opener:339;]: T_RETURN => return
	Process token 343 on line 75 [opener:339;]: T_WHITESPACE =>  
	Process token 344 on line 75 [opener:339;]: T_LNUMBER => 2
	Process token 345 on line 75 [opener:339;]: T_WHITESPACE =>  
	Process token 346 on line 75 [opener:339;]: T_MULTIPLY => *
	Process token 347 on line 75 [opener:339;]: T_WHITESPACE =>  
	Process token 348 on line 75 [opener:339;]: T_DOLLAR => $
	Process token 349 on line 75 [opener:339;]: T_OPEN_CURLY_BRACKET => {
	* ignoring curly brace *
	Process token 350 on line 75 [opener:339;ignore=1;]: T_STRING => x
	Process token 351 on line 75 [opener:339;ignore=1;]: T_CLOSE_CURLY_BRACKET => }
	* finished ignoring curly brace *
	Process token 352 on line 75 [opener:339;]: T_SEMICOLON => ;
	Process token 353 on line 75 [opener:339;]: T_WHITESPACE => \n
	Process token 354 on line 76 [opener:339;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (354:T_CLOSE_CURLY_BRACKET) for 332:T_FUNCTION
	Start scope map at 361:T_FUNCTION => function
	=> Begin scope map recursion at token 361 with depth 1
	Process token 362 on line 78 []: T_WHITESPACE =>  
	Process token 363 on line 78 []: T_OPEN_PARENTHESIS => (
	Process token 364 on line 78 []: T_VARIABLE => $a
	Process token 365 on line 78 []: T_COMMA => ,
	Process token 366 on line 78 []: T_WHITESPACE =>  
	Process token 367 on line 78 []: T_VARIABLE => $b
	Process token 368 on line 78 []: T_CLOSE_PARENTHESIS => )
	Process token 369 on line 78 []: T_WHITESPACE =>  
	Process token 370 on line 78 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 361:T_FUNCTION
	Process token 371 on line 78 [opener:370;]: T_WHITESPACE => \n
	Process token 372 on line 79 [opener:370;]: T_WHITESPACE =>     
	Process token 373 on line 79 [opener:370;]: T_RETURN => return
	Process token 374 on line 79 [opener:370;]: T_WHITESPACE =>  
	Process token 375 on line 79 [opener:370;]: T_VARIABLE => $a
	Process token 376 on line 79 [opener:370;]: T_WHITESPACE =>  
	Process token 377 on line 79 [opener:370;]: T_MULTIPLY => *
	Process token 378 on line 79 [opener:370;]: T_WHITESPACE =>  
	Process token 379 on line 79 [opener:370;]: T_LNUMBER => 2
	Process token 380 on line 79 [opener:370;]: T_SEMICOLON => ;
	Process token 381 on line 79 [opener:370;]: T_WHITESPACE => \n
	Process token 382 on line 80 [opener:370;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (382:T_CLOSE_CURLY_BRACKET) for 361:T_FUNCTION
	Start scope map at 386:T_FUNCTION => function
	=> Begin scope map recursion at token 386 with depth 1
	Process token 387 on line 82 []: T_WHITESPACE =>  
	Process token 388 on line 82 []: T_STRING => foobar
	Process token 389 on line 82 []: T_OPEN_PARENTHESIS => (
	Process token 390 on line 82 []: T_CLOSE_PARENTHESIS => )
	Process token 391 on line 82 []: T_WHITESPACE =>  
	Process token 392 on line 82 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 386:T_FUNCTION
	Process token 393 on line 82 [opener:392;]: T_WHITESPACE => \n
	Process token 394 on line 83 [opener:392;]: T_WHITESPACE =>     
	Process token 395 on line 83 [opener:392;]: T_RETURN => return
	Process token 396 on line 83 [opener:392;]: T_SEMICOLON => ;
	Process token 397 on line 83 [opener:392;]: T_WHITESPACE => \n
	Process token 398 on line 84 [opener:392;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (398:T_CLOSE_CURLY_BRACKET) for 386:T_FUNCTION
	Start scope map at 409:T_CLASS => class
	=> Begin scope map recursion at token 409 with depth 1
	Process token 410 on line 93 []: T_WHITESPACE =>  
	Process token 411 on line 93 []: T_STRING => MyClass
	Process token 412 on line 93 []: T_WHITESPACE =>  
	Process token 413 on line 93 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 409:T_CLASS
	Process token 414 on line 93 [opener:413;]: T_WHITESPACE => \n
	Process token 415 on line 94 [opener:413;]: T_WHITESPACE =>     
	Process token 416 on line 94 [opener:413;]: T_PUBLIC => public
	Process token 417 on line 94 [opener:413;]: T_WHITESPACE =>  
	Process token 418 on line 94 [opener:413;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 418 with depth 2
		Process token 419 on line 94 []: T_WHITESPACE =>  
		Process token 420 on line 94 []: T_STRING => something
		Process token 421 on line 94 []: T_OPEN_PARENTHESIS => (
		Process token 422 on line 94 []: T_VARIABLE => $a
		Process token 423 on line 94 []: T_COMMA => ,
		Process token 424 on line 94 []: T_WHITESPACE =>  
		Process token 425 on line 94 []: T_VARIABLE => $b
		Process token 426 on line 94 []: T_CLOSE_PARENTHESIS => )
		Process token 427 on line 94 []: T_WHITESPACE =>  
		Process token 428 on line 94 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 418:T_FUNCTION
		Process token 429 on line 94 [opener:428;]: T_WHITESPACE => \n
		Process token 430 on line 95 [opener:428;]: T_WHITESPACE =>         
		Process token 431 on line 95 [opener:428;]: T_RETURN => return
		Process token 432 on line 95 [opener:428;]: T_WHITESPACE =>  
		Process token 433 on line 95 [opener:428;]: T_VARIABLE => $a
		Process token 434 on line 95 [opener:428;]: T_WHITESPACE =>  
		Process token 435 on line 95 [opener:428;]: T_MULTIPLY => *
		Process token 436 on line 95 [opener:428;]: T_WHITESPACE =>  
		Process token 437 on line 95 [opener:428;]: T_LNUMBER => 2
		Process token 438 on line 95 [opener:428;]: T_SEMICOLON => ;
		Process token 439 on line 95 [opener:428;]: T_WHITESPACE => \n
		Process token 440 on line 96 [opener:428;]: T_WHITESPACE =>     
		Process token 441 on line 96 [opener:428;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (441:T_CLOSE_CURLY_BRACKET) for 418:T_FUNCTION
	Process token 442 on line 96 [opener:413;]: T_WHITESPACE => \n
	Process token 443 on line 97 [opener:413;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (443:T_CLOSE_CURLY_BRACKET) for 409:T_CLASS
	Start scope map at 446:T_CLASS => class
	=> Begin scope map recursion at token 446 with depth 1
	Process token 447 on line 99 []: T_WHITESPACE =>  
	Process token 448 on line 99 []: T_STRING => MyExtendedClass
	Process token 449 on line 99 []: T_WHITESPACE =>  
	Process token 450 on line 99 []: T_EXTENDS => extends
	Process token 451 on line 99 []: T_WHITESPACE =>  
	Process token 452 on line 99 []: T_STRING => SomeClass
	Process token 453 on line 99 []: T_WHITESPACE =>  
	Process token 454 on line 99 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 446:T_CLASS
	Process token 455 on line 99 [opener:454;]: T_WHITESPACE => \n
	Process token 456 on line 100 [opener:454;]: T_WHITESPACE =>     
	Process token 457 on line 100 [opener:454;]: T_PUBLIC => public
	Process token 458 on line 100 [opener:454;]: T_WHITESPACE =>  
	Process token 459 on line 100 [opener:454;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 459 with depth 2
		Process token 460 on line 100 []: T_WHITESPACE =>  
		Process token 461 on line 100 []: T_STRING => something
		Process token 462 on line 100 []: T_OPEN_PARENTHESIS => (
		Process token 463 on line 100 []: T_VARIABLE => $a
		Process token 464 on line 100 []: T_COMMA => ,
		Process token 465 on line 100 []: T_WHITESPACE =>  
		Process token 466 on line 100 []: T_VARIABLE => $b
		Process token 467 on line 100 []: T_CLOSE_PARENTHESIS => )
		Process token 468 on line 100 []: T_WHITESPACE =>  
		Process token 469 on line 100 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 459:T_FUNCTION
		Process token 470 on line 100 [opener:469;]: T_WHITESPACE => \n
		Process token 471 on line 101 [opener:469;]: T_WHITESPACE =>         
		Process token 472 on line 101 [opener:469;]: T_RETURN => return
		Process token 473 on line 101 [opener:469;]: T_WHITESPACE =>  
		Process token 474 on line 101 [opener:469;]: T_VARIABLE => $a
		Process token 475 on line 101 [opener:469;]: T_WHITESPACE =>  
		Process token 476 on line 101 [opener:469;]: T_MULTIPLY => *
		Process token 477 on line 101 [opener:469;]: T_WHITESPACE =>  
		Process token 478 on line 101 [opener:469;]: T_LNUMBER => 2
		Process token 479 on line 101 [opener:469;]: T_SEMICOLON => ;
		Process token 480 on line 101 [opener:469;]: T_WHITESPACE => \n
		Process token 481 on line 102 [opener:469;]: T_WHITESPACE =>     
		Process token 482 on line 102 [opener:469;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (482:T_CLOSE_CURLY_BRACKET) for 459:T_FUNCTION
	Process token 483 on line 102 [opener:454;]: T_WHITESPACE => \n
	Process token 484 on line 103 [opener:454;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (484:T_CLOSE_CURLY_BRACKET) for 446:T_CLASS
	Start scope map at 487:T_CLASS => class
	=> Begin scope map recursion at token 487 with depth 1
	Process token 488 on line 105 []: T_WHITESPACE =>  
	Process token 489 on line 105 []: T_STRING => MyExtendedClass
	Process token 490 on line 105 []: T_WHITESPACE =>  
	Process token 491 on line 105 []: T_IMPLEMENTS => implements
	Process token 492 on line 105 []: T_WHITESPACE =>  
	Process token 493 on line 105 []: T_STRING => SomeInterface
	Process token 494 on line 105 []: T_WHITESPACE =>  
	Process token 495 on line 105 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 487:T_CLASS
	Process token 496 on line 105 [opener:495;]: T_WHITESPACE => \n
	Process token 497 on line 106 [opener:495;]: T_WHITESPACE =>     
	Process token 498 on line 106 [opener:495;]: T_PUBLIC => public
	Process token 499 on line 106 [opener:495;]: T_WHITESPACE =>  
	Process token 500 on line 106 [opener:495;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 500 with depth 2
		Process token 501 on line 106 []: T_WHITESPACE =>  
		Process token 502 on line 106 []: T_STRING => something
		Process token 503 on line 106 []: T_OPEN_PARENTHESIS => (
		Process token 504 on line 106 []: T_VARIABLE => $a
		Process token 505 on line 106 []: T_COMMA => ,
		Process token 506 on line 106 []: T_WHITESPACE =>  
		Process token 507 on line 106 []: T_VARIABLE => $b
		Process token 508 on line 106 []: T_CLOSE_PARENTHESIS => )
		Process token 509 on line 106 []: T_WHITESPACE =>  
		Process token 510 on line 106 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 500:T_FUNCTION
		Process token 511 on line 106 [opener:510;]: T_WHITESPACE => \n
		Process token 512 on line 107 [opener:510;]: T_WHITESPACE =>         
		Process token 513 on line 107 [opener:510;]: T_RETURN => return
		Process token 514 on line 107 [opener:510;]: T_WHITESPACE =>  
		Process token 515 on line 107 [opener:510;]: T_VARIABLE => $a
		Process token 516 on line 107 [opener:510;]: T_WHITESPACE =>  
		Process token 517 on line 107 [opener:510;]: T_MULTIPLY => *
		Process token 518 on line 107 [opener:510;]: T_WHITESPACE =>  
		Process token 519 on line 107 [opener:510;]: T_LNUMBER => 2
		Process token 520 on line 107 [opener:510;]: T_SEMICOLON => ;
		Process token 521 on line 107 [opener:510;]: T_WHITESPACE => \n
		Process token 522 on line 108 [opener:510;]: T_WHITESPACE =>     
		Process token 523 on line 108 [opener:510;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (523:T_CLOSE_CURLY_BRACKET) for 500:T_FUNCTION
	Process token 524 on line 108 [opener:495;]: T_WHITESPACE => \n
	Process token 525 on line 109 [opener:495;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (525:T_CLOSE_CURLY_BRACKET) for 487:T_CLASS
	Start scope map at 535:T_FUNCTION => function
	=> Begin scope map recursion at token 535 with depth 1
	Process token 536 on line 117 []: T_WHITESPACE =>  
	Process token 537 on line 117 []: T_STRING => something
	Process token 538 on line 117 []: T_OPEN_PARENTHESIS => (
	Process token 539 on line 117 []: T_VARIABLE => $a
	Process token 540 on line 117 []: T_CLOSE_PARENTHESIS => )
	Process token 541 on line 117 []: T_WHITESPACE =>  
	Process token 542 on line 117 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 535:T_FUNCTION
	Process token 543 on line 117 [opener:542;]: T_WHITESPACE => \n
	Process token 544 on line 118 [opener:542;]: T_WHITESPACE =>     
	Process token 545 on line 118 [opener:542;]: T_RETURN => return
	Process token 546 on line 118 [opener:542;]: T_WHITESPACE =>  
	Process token 547 on line 118 [opener:542;]: T_CONSTANT_ENCAPSED_STRING => 'foobar'
	Process token 548 on line 118 [opener:542;]: T_SEMICOLON => ;
	Process token 549 on line 118 [opener:542;]: T_WHITESPACE => \n
	Process token 550 on line 119 [opener:542;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (550:T_CLOSE_CURLY_BRACKET) for 535:T_FUNCTION
	Start scope map at 553:T_FUNCTION => function
	=> Begin scope map recursion at token 553 with depth 1
	Process token 554 on line 121 []: T_WHITESPACE =>  
	Process token 555 on line 121 []: T_STRING => myCallback
	Process token 556 on line 121 []: T_OPEN_PARENTHESIS => (
	Process token 557 on line 121 []: T_VARIABLE => $a
	Process token 558 on line 121 []: T_COMMA => ,
	Process token 559 on line 121 []: T_WHITESPACE =>  
	Process token 560 on line 121 []: T_VARIABLE => $b
	Process token 561 on line 121 []: T_COMMA => ,
	Process token 562 on line 121 []: T_WHITESPACE =>  
	Process token 563 on line 121 []: T_VARIABLE => $c
	Process token 564 on line 121 []: T_COMMA => ,
	Process token 565 on line 121 []: T_WHITESPACE =>  
	Process token 566 on line 121 []: T_VARIABLE => $d
	Process token 567 on line 121 []: T_CLOSE_PARENTHESIS => )
	Process token 568 on line 121 []: T_WHITESPACE =>  
	Process token 569 on line 121 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 553:T_FUNCTION
	Process token 570 on line 121 [opener:569;]: T_WHITESPACE => \n
	Process token 571 on line 122 [opener:569;]: T_WHITESPACE =>     
	Process token 572 on line 122 [opener:569;]: T_RETURN => return
	Process token 573 on line 122 [opener:569;]: T_WHITESPACE =>  
	Process token 574 on line 122 [opener:569;]: T_VARIABLE => $a
	Process token 575 on line 122 [opener:569;]: T_WHITESPACE =>  
	Process token 576 on line 122 [opener:569;]: T_MULTIPLY => *
	Process token 577 on line 122 [opener:569;]: T_WHITESPACE =>  
	Process token 578 on line 122 [opener:569;]: T_VARIABLE => $c
	Process token 579 on line 122 [opener:569;]: T_SEMICOLON => ;
	Process token 580 on line 122 [opener:569;]: T_WHITESPACE => \n
	Process token 581 on line 123 [opener:569;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (581:T_CLOSE_CURLY_BRACKET) for 553:T_FUNCTION
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:5;lvl:0;]: T_OPEN_TAG => <?php\n
	Process token 1 on line 2 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 2 on line 3 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 3 on line 3 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 4 on line 3 [col:10;len:3;lvl:0;]: T_STRING => foo
	Process token 5 on line 3 [col:13;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 6 on line 3 [col:14;len:2;lvl:0;]: T_VARIABLE => $a
	Process token 7 on line 3 [col:16;len:1;lvl:0;]: T_COMMA => ,
	Process token 8 on line 3 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 9 on line 3 [col:18;len:2;lvl:0;]: T_VARIABLE => $b
	Process token 10 on line 3 [col:20;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 11 on line 3 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 12 on line 3 [col:22;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 2:T_FUNCTION
		* level increased *
		* token 2:T_FUNCTION added to conditions array *
		Process token 13 on line 3 [col:23;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 14 on line 4 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 15 on line 4 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 16 on line 4 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 17 on line 4 [col:12;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $a
		Process token 18 on line 4 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 19 on line 4 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_MULTIPLY => *
		Process token 20 on line 4 [col:16;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 21 on line 4 [col:17;len:1;lvl:1;conds;T_FUNCTION;]: T_LNUMBER => 2
		Process token 22 on line 4 [col:18;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 23 on line 4 [col:19;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 24 on line 5 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 12:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 25 on line 5 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 26 on line 6 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 27 on line 7 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 28 on line 7 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 29 on line 7 [col:10;len:3;lvl:0;]: T_STRING => baz
	Process token 30 on line 7 [col:13;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 31 on line 7 [col:14;len:2;lvl:0;]: T_VARIABLE => $a
	Process token 32 on line 7 [col:16;len:1;lvl:0;]: T_COMMA => ,
	Process token 33 on line 7 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 34 on line 7 [col:18;len:2;lvl:0;]: T_VARIABLE => $b
	Process token 35 on line 7 [col:20;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 36 on line 7 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 37 on line 7 [col:22;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 27:T_FUNCTION
		* level increased *
		* token 27:T_FUNCTION added to conditions array *
		Process token 38 on line 7 [col:23;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 39 on line 8 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 40 on line 8 [col:5;len:4;lvl:1;conds;T_FUNCTION;]: T_ECHO => echo
		Process token 41 on line 8 [col:9;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 42 on line 8 [col:10;len:12;lvl:1;conds;T_FUNCTION;]: T_DOUBLE_QUOTED_STRING => "baz({$a});"
		Process token 43 on line 8 [col:22;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 44 on line 8 [col:23;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 45 on line 9 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 37:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 46 on line 9 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 47 on line 10 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 48 on line 11 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 49 on line 11 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 50 on line 11 [col:10;len:3;lvl:0;]: T_STRING => bar
	Process token 51 on line 11 [col:13;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 52 on line 11 [col:14;len:2;lvl:0;]: T_VARIABLE => $a
	Process token 53 on line 11 [col:16;len:1;lvl:0;]: T_COMMA => ,
	Process token 54 on line 11 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 55 on line 11 [col:18;len:2;lvl:0;]: T_VARIABLE => $b
	Process token 56 on line 11 [col:20;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 57 on line 11 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 58 on line 11 [col:22;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 48:T_FUNCTION
		* level increased *
		* token 48:T_FUNCTION added to conditions array *
		Process token 59 on line 11 [col:23;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 60 on line 12 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 61 on line 12 [col:5;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $x
		Process token 62 on line 12 [col:7;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 63 on line 12 [col:8;len:1;lvl:1;conds;T_FUNCTION;]: T_EQUAL => =
		Process token 64 on line 12 [col:9;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 65 on line 12 [col:10;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $b
		Process token 66 on line 12 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 67 on line 12 [col:13;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 68 on line 13 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 69 on line 13 [col:5;len:3;lvl:1;conds;T_FUNCTION;]: T_FOR => for
		Process token 70 on line 13 [col:8;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 71 on line 13 [col:9;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 72 on line 13 [col:10;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $i
		Process token 73 on line 13 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 74 on line 13 [col:13;len:1;lvl:1;conds;T_FUNCTION;]: T_EQUAL => =
		Process token 75 on line 13 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 76 on line 13 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_LNUMBER => 0
		Process token 77 on line 13 [col:16;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 78 on line 13 [col:17;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 79 on line 13 [col:18;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $i
		Process token 80 on line 13 [col:20;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 81 on line 13 [col:21;len:1;lvl:1;conds;T_FUNCTION;]: T_LESS_THAN => <
		Process token 82 on line 13 [col:22;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $a
		Process token 83 on line 13 [col:24;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 84 on line 13 [col:25;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 85 on line 13 [col:26;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $i
		Process token 86 on line 13 [col:28;len:2;lvl:1;conds;T_FUNCTION;]: T_INC => ++
		Process token 87 on line 13 [col:30;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 88 on line 13 [col:31;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 89 on line 13 [col:32;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 69:T_FOR
			* level increased *
			* token 69:T_FOR added to conditions array *
			Process token 90 on line 13 [col:33;len:0;lvl:2;conds;T_FUNCTION,T_FOR;]: T_WHITESPACE => \n
			Process token 91 on line 14 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_FOR;]: T_WHITESPACE =>         
			Process token 92 on line 14 [col:9;len:2;lvl:2;conds;T_FUNCTION,T_FOR;]: T_VARIABLE => $x
			Process token 93 on line 14 [col:11;len:1;lvl:2;conds;T_FUNCTION,T_FOR;]: T_WHITESPACE =>  
			Process token 94 on line 14 [col:12;len:2;lvl:2;conds;T_FUNCTION,T_FOR;]: T_PLUS_EQUAL => +=
			Process token 95 on line 14 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_FOR;]: T_WHITESPACE =>  
			Process token 96 on line 14 [col:15;len:2;lvl:2;conds;T_FUNCTION,T_FOR;]: T_VARIABLE => $a
			Process token 97 on line 14 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_FOR;]: T_WHITESPACE =>  
			Process token 98 on line 14 [col:18;len:1;lvl:2;conds;T_FUNCTION,T_FOR;]: T_MULTIPLY => *
			Process token 99 on line 14 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_FOR;]: T_WHITESPACE =>  
			Process token 100 on line 14 [col:20;len:2;lvl:2;conds;T_FUNCTION,T_FOR;]: T_VARIABLE => $i
			Process token 101 on line 14 [col:22;len:1;lvl:2;conds;T_FUNCTION,T_FOR;]: T_SEMICOLON => ;
			Process token 102 on line 14 [col:23;len:0;lvl:2;conds;T_FUNCTION,T_FOR;]: T_WHITESPACE => \n
			Process token 103 on line 15 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_FOR;]: T_WHITESPACE =>     
			Process token 104 on line 15 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_FOR;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 89:T_OPEN_CURLY_BRACKET
			* token T_FOR removed from conditions array *
			* level decreased *
		Process token 105 on line 15 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 106 on line 16 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 107 on line 16 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 108 on line 16 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 109 on line 16 [col:12;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $x
		Process token 110 on line 16 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 111 on line 16 [col:15;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 112 on line 17 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 58:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 113 on line 17 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 114 on line 18 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 115 on line 19 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 116 on line 19 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 117 on line 19 [col:10;len:6;lvl:0;]: T_STRING => foobar
	Process token 118 on line 19 [col:16;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 119 on line 19 [col:17;len:2;lvl:0;]: T_VARIABLE => $a
	Process token 120 on line 19 [col:19;len:1;lvl:0;]: T_COMMA => ,
	Process token 121 on line 19 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 122 on line 19 [col:21;len:1;lvl:0;]: T_BITWISE_AND => &
	Process token 123 on line 19 [col:22;len:2;lvl:0;]: T_VARIABLE => $b
	Process token 124 on line 19 [col:24;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 125 on line 19 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 126 on line 19 [col:26;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 115:T_FUNCTION
		* level increased *
		* token 115:T_FUNCTION added to conditions array *
		Process token 127 on line 19 [col:27;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 128 on line 20 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 129 on line 20 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 130 on line 20 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 131 on line 20 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 132 on line 20 [col:13;len:10;lvl:1;conds;T_FUNCTION;]: T_STRING => preg_match
		Process token 133 on line 20 [col:23;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 134 on line 20 [col:24;len:7;lvl:1;conds;T_FUNCTION;]: T_CONSTANT_ENCAPSED_STRING => '/foo/'
		Process token 135 on line 20 [col:31;len:1;lvl:1;conds;T_FUNCTION;]: T_COMMA => ,
		Process token 136 on line 20 [col:32;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 137 on line 20 [col:33;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $a
		Process token 138 on line 20 [col:35;len:1;lvl:1;conds;T_FUNCTION;]: T_COMMA => ,
		Process token 139 on line 20 [col:36;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 140 on line 20 [col:37;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $b
		Process token 141 on line 20 [col:39;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 142 on line 20 [col:40;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 143 on line 20 [col:41;len:3;lvl:1;conds;T_FUNCTION;]: T_IS_NOT_IDENTICAL => !==
		Process token 144 on line 20 [col:44;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 145 on line 20 [col:45;len:1;lvl:1;conds;T_FUNCTION;]: T_LNUMBER => 0
		Process token 146 on line 20 [col:46;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 147 on line 20 [col:47;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 148 on line 20 [col:48;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 149 on line 21 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 126:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 150 on line 21 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 151 on line 22 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 152 on line 23 [col:1;len:5;lvl:0;]: T_CLASS => class
	Process token 153 on line 23 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 154 on line 23 [col:7;len:3;lvl:0;]: T_STRING => Foo
	Process token 155 on line 23 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 156 on line 23 [col:11;len:10;lvl:0;]: T_IMPLEMENTS => implements
	Process token 157 on line 23 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 158 on line 23 [col:22;len:3;lvl:0;]: T_STRING => Bar
	Process token 159 on line 23 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 160 on line 23 [col:26;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 152:T_CLASS
		* level increased *
		* token 152:T_CLASS added to conditions array *
		Process token 161 on line 23 [col:27;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 162 on line 24 [col:1;len:4;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>     
		Process token 163 on line 24 [col:5;len:8;lvl:1;conds;T_CLASS;]: T_FUNCTION => function
		Process token 164 on line 24 [col:13;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 165 on line 24 [col:14;len:6;lvl:1;conds;T_CLASS;]: T_STRING => barfoo
		Process token 166 on line 24 [col:20;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_PARENTHESIS => (
		Process token 167 on line 24 [col:21;len:2;lvl:1;conds;T_CLASS;]: T_VARIABLE => $a
		Process token 168 on line 24 [col:23;len:1;lvl:1;conds;T_CLASS;]: T_COMMA => ,
		Process token 169 on line 24 [col:24;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 170 on line 24 [col:25;len:2;lvl:1;conds;T_CLASS;]: T_VARIABLE => $b
		Process token 171 on line 24 [col:27;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_PARENTHESIS => )
		Process token 172 on line 24 [col:28;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 173 on line 24 [col:29;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 163:T_FUNCTION
			* level increased *
			* token 163:T_FUNCTION added to conditions array *
			Process token 174 on line 24 [col:30;len:0;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 175 on line 25 [col:1;len:8;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>         
			Process token 176 on line 25 [col:9;len:51;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_COMMENT => // Empty body means interface method in many cases.\n
			Process token 177 on line 26 [col:1;len:4;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>     
			Process token 178 on line 26 [col:5;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 173:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 179 on line 26 [col:6;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 180 on line 27 [col:1;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 181 on line 28 [col:1;len:4;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>     
		Process token 182 on line 28 [col:5;len:8;lvl:1;conds;T_CLASS;]: T_FUNCTION => function
		Process token 183 on line 28 [col:13;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 184 on line 28 [col:14;len:6;lvl:1;conds;T_CLASS;]: T_STRING => fooBar
		Process token 185 on line 28 [col:20;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_PARENTHESIS => (
		Process token 186 on line 28 [col:21;len:2;lvl:1;conds;T_CLASS;]: T_VARIABLE => $a
		Process token 187 on line 28 [col:23;len:1;lvl:1;conds;T_CLASS;]: T_COMMA => ,
		Process token 188 on line 28 [col:24;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 189 on line 28 [col:25;len:2;lvl:1;conds;T_CLASS;]: T_VARIABLE => $b
		Process token 190 on line 28 [col:27;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_PARENTHESIS => )
		Process token 191 on line 28 [col:28;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 192 on line 28 [col:29;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 182:T_FUNCTION
			* level increased *
			* token 182:T_FUNCTION added to conditions array *
			Process token 193 on line 28 [col:30;len:0;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 194 on line 29 [col:1;len:8;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>         
			Process token 195 on line 29 [col:9;len:6;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_RETURN => return
			Process token 196 on line 29 [col:15;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_SEMICOLON => ;
			Process token 197 on line 29 [col:16;len:0;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 198 on line 30 [col:1;len:4;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>     
			Process token 199 on line 30 [col:5;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 192:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 200 on line 30 [col:6;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 201 on line 31 [col:1;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 160:T_OPEN_CURLY_BRACKET
		* token T_CLASS removed from conditions array *
		* level decreased *
	Process token 202 on line 31 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 203 on line 32 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 204 on line 33 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 205 on line 33 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 206 on line 33 [col:10;len:3;lvl:0;]: T_STRING => foo
	Process token 207 on line 33 [col:13;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 208 on line 33 [col:14;len:4;lvl:0;]: T_VARIABLE => $bar
	Process token 209 on line 33 [col:18;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 210 on line 33 [col:19;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 211 on line 34 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 204:T_FUNCTION
		* level increased *
		* token 204:T_FUNCTION added to conditions array *
		Process token 212 on line 34 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 213 on line 35 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 214 on line 35 [col:5;len:5;lvl:1;conds;T_FUNCTION;]: T_PRINT => print
		Process token 215 on line 35 [col:10;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 216 on line 35 [col:11;len:6;lvl:1;conds;T_FUNCTION;]: T_START_HEREDOC => <<<BAZ\n
		=> Found scope opener for 216:T_START_HEREDOC
			* level increased *
			* token 216:T_START_HEREDOC added to conditions array *
			Process token 217 on line 36 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC =>     $bar\n
			Process token 218 on line 37 [col:1;len:3;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_END_HEREDOC => BAZ
			=> Found scope closer for 216:T_START_HEREDOC
			* token T_START_HEREDOC removed from conditions array *
			* level decreased *
		Process token 219 on line 37 [col:4;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 220 on line 37 [col:5;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 221 on line 38 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 211:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 222 on line 38 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 223 on line 39 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 224 on line 40 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 225 on line 40 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 226 on line 40 [col:10;len:3;lvl:0;]: T_STRING => foo
	Process token 227 on line 40 [col:13;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 228 on line 40 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 229 on line 40 [col:15;len:10;lvl:0;]: T_VARIABLE => $parameter
	Process token 230 on line 40 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 231 on line 40 [col:26;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 232 on line 40 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 233 on line 40 [col:28;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 224:T_FUNCTION
		* level increased *
		* token 224:T_FUNCTION added to conditions array *
		Process token 234 on line 40 [col:29;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 235 on line 41 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 236 on line 41 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $wango
		Process token 237 on line 41 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 238 on line 41 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_EQUAL => =
		Process token 239 on line 41 [col:13;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 240 on line 41 [col:14;len:7;lvl:1;conds;T_FUNCTION;]: T_START_HEREDOC => <<<HERE\n
		=> Found scope opener for 240:T_START_HEREDOC
			* level increased *
			* token 240:T_START_HEREDOC added to conditions array *
			Process token 241 on line 42 [col:1;len:40;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC => 1 Must be a HEREdoc of at least one line\n
			Process token 242 on line 43 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_END_HEREDOC => HERE
			=> Found scope closer for 240:T_START_HEREDOC
			* token T_START_HEREDOC removed from conditions array *
			* level decreased *
		Process token 243 on line 43 [col:5;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 244 on line 43 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 245 on line 44 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 246 on line 44 [col:5;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $x
		Process token 247 on line 44 [col:7;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 248 on line 44 [col:8;len:1;lvl:1;conds;T_FUNCTION;]: T_EQUAL => =
		Process token 249 on line 44 [col:9;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 250 on line 44 [col:10;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $parameter
		Process token 251 on line 44 [col:20;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 252 on line 44 [col:21;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 253 on line 44 [col:22;len:81;lvl:1;conds;T_FUNCTION;]: T_COMMENT => // This line must be immediately after the HERE; with no intervening blank lines.\n
		Process token 254 on line 45 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 255 on line 45 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $tango
		Process token 256 on line 45 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 257 on line 45 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_EQUAL => =
		Process token 258 on line 45 [col:13;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 259 on line 45 [col:14;len:7;lvl:1;conds;T_FUNCTION;]: T_START_HEREDOC => <<<HERE\n
		=> Found scope opener for 259:T_START_HEREDOC
			* level increased *
			* token 259:T_START_HEREDOC added to conditions array *
			Process token 260 on line 46 [col:1;len:19;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC => 1 Must be a HEREdoc\n
			Process token 261 on line 47 [col:1;len:2;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC => 2 \n
			Process token 262 on line 48 [col:1;len:2;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC => 3 \n
			Process token 263 on line 49 [col:1;len:2;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC => 4 \n
			Process token 264 on line 50 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC => 5   \n
			Process token 265 on line 51 [col:1;len:1;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC => 6\n
			Process token 266 on line 52 [col:1;len:1;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC => 7\n
			Process token 267 on line 53 [col:1;len:2;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC => 8 \n
			Process token 268 on line 54 [col:1;len:23;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC => 9 at least 9 lines long\n
			Process token 269 on line 55 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_END_HEREDOC => HERE
			=> Found scope closer for 259:T_START_HEREDOC
			* token T_START_HEREDOC removed from conditions array *
			* level decreased *
		Process token 270 on line 55 [col:5;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 271 on line 55 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 272 on line 56 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 233:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 273 on line 56 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 274 on line 57 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 275 on line 58 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 276 on line 58 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 277 on line 58 [col:10;len:3;lvl:0;]: T_STRING => foo
	Process token 278 on line 58 [col:13;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 279 on line 58 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 280 on line 58 [col:15;len:10;lvl:0;]: T_VARIABLE => $parameter
	Process token 281 on line 58 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 282 on line 58 [col:26;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 283 on line 58 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 284 on line 58 [col:28;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 275:T_FUNCTION
		* level increased *
		* token 275:T_FUNCTION added to conditions array *
		Process token 285 on line 58 [col:29;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 286 on line 59 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 287 on line 59 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 288 on line 59 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 289 on line 59 [col:12;len:7;lvl:1;conds;T_FUNCTION;]: T_START_HEREDOC => <<<HTML\n
		=> Found scope opener for 289:T_START_HEREDOC
			* level increased *
			* token 289:T_START_HEREDOC added to conditions array *
			Process token 290 on line 60 [col:1;len:21;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC => <?xml version="1.0"?>\n
			Process token 291 on line 61 [col:1;len:25;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_HEREDOC => <value>$parameter</value>\n
			Process token 292 on line 62 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_START_HEREDOC;]: T_END_HEREDOC => HTML
			=> Found scope closer for 289:T_START_HEREDOC
			* token T_START_HEREDOC removed from conditions array *
			* level decreased *
		Process token 293 on line 62 [col:5;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 294 on line 62 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 295 on line 63 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 284:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 296 on line 63 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 297 on line 64 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 298 on line 65 [col:1;len:5;lvl:0;]: T_PRINT => print
	Process token 299 on line 65 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 300 on line 65 [col:7;len:3;lvl:0;]: T_STRING => foo
	Process token 301 on line 65 [col:10;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 302 on line 65 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 303 on line 65 [col:12;len:11;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'PARAMETER'
	Process token 304 on line 65 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 305 on line 65 [col:24;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 306 on line 65 [col:25;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 307 on line 65 [col:26;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 308 on line 66 [col:1;len:5;lvl:0;]: T_PRINT => print
	Process token 309 on line 66 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 310 on line 66 [col:7;len:4;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => "\n"
	Process token 311 on line 66 [col:11;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 312 on line 66 [col:12;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 313 on line 67 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 314 on line 68 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 315 on line 68 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 316 on line 68 [col:10;len:3;lvl:0;]: T_STRING => foo
	Process token 317 on line 68 [col:13;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 318 on line 68 [col:14;len:4;lvl:0;]: T_VARIABLE => $bar
	Process token 319 on line 68 [col:18;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 320 on line 68 [col:19;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 321 on line 69 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 314:T_FUNCTION
		* level increased *
		* token 314:T_FUNCTION added to conditions array *
		Process token 322 on line 69 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 323 on line 70 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 324 on line 70 [col:5;len:5;lvl:1;conds;T_FUNCTION;]: T_PRINT => print
		Process token 325 on line 70 [col:10;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 326 on line 70 [col:11;len:17;lvl:1;conds;T_FUNCTION;]: T_DOUBLE_QUOTED_STRING => "${bar} things\n"
		Process token 327 on line 70 [col:28;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 328 on line 70 [col:29;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 329 on line 71 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 321:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 330 on line 71 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 331 on line 72 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 332 on line 73 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 333 on line 73 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 334 on line 73 [col:10;len:3;lvl:0;]: T_STRING => bar
	Process token 335 on line 73 [col:13;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 336 on line 73 [col:14;len:2;lvl:0;]: T_VARIABLE => $x
	Process token 337 on line 73 [col:16;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 338 on line 73 [col:17;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 339 on line 74 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 332:T_FUNCTION
		* level increased *
		* token 332:T_FUNCTION added to conditions array *
		Process token 340 on line 74 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 341 on line 75 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 342 on line 75 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 343 on line 75 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 344 on line 75 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_LNUMBER => 2
		Process token 345 on line 75 [col:13;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 346 on line 75 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_MULTIPLY => *
		Process token 347 on line 75 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 348 on line 75 [col:16;len:1;lvl:1;conds;T_FUNCTION;]: T_DOLLAR => $
		Process token 349 on line 75 [col:17;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		Process token 350 on line 75 [col:18;len:1;lvl:1;conds;T_FUNCTION;]: T_STRING => x
		Process token 351 on line 75 [col:19;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		Process token 352 on line 75 [col:20;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 353 on line 75 [col:21;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 354 on line 76 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 339:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 355 on line 76 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 356 on line 77 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 357 on line 78 [col:1;len:4;lvl:0;]: T_VARIABLE => $foo
	Process token 358 on line 78 [col:5;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 359 on line 78 [col:6;len:1;lvl:0;]: T_EQUAL => =
	Process token 360 on line 78 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 361 on line 78 [col:8;len:8;lvl:0;]: T_FUNCTION => function
	Process token 362 on line 78 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 363 on line 78 [col:17;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 364 on line 78 [col:18;len:2;lvl:0;]: T_VARIABLE => $a
	Process token 365 on line 78 [col:20;len:1;lvl:0;]: T_COMMA => ,
	Process token 366 on line 78 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 367 on line 78 [col:22;len:2;lvl:0;]: T_VARIABLE => $b
	Process token 368 on line 78 [col:24;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 369 on line 78 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 370 on line 78 [col:26;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 361:T_FUNCTION
		* level increased *
		* token 361:T_FUNCTION added to conditions array *
		Process token 371 on line 78 [col:27;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 372 on line 79 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 373 on line 79 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 374 on line 79 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 375 on line 79 [col:12;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $a
		Process token 376 on line 79 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 377 on line 79 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_MULTIPLY => *
		Process token 378 on line 79 [col:16;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 379 on line 79 [col:17;len:1;lvl:1;conds;T_FUNCTION;]: T_LNUMBER => 2
		Process token 380 on line 79 [col:18;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 381 on line 79 [col:19;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 382 on line 80 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 370:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 383 on line 80 [col:2;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 384 on line 80 [col:3;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 385 on line 81 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 386 on line 82 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 387 on line 82 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 388 on line 82 [col:10;len:6;lvl:0;]: T_STRING => foobar
	Process token 389 on line 82 [col:16;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 390 on line 82 [col:17;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 391 on line 82 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 392 on line 82 [col:19;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 386:T_FUNCTION
		* level increased *
		* token 386:T_FUNCTION added to conditions array *
		Process token 393 on line 82 [col:20;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 394 on line 83 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 395 on line 83 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 396 on line 83 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 397 on line 83 [col:12;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 398 on line 84 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 392:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 399 on line 84 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 400 on line 85 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 401 on line 86 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 402 on line 87 [col:1;len:2;lvl:0;]: T_COMMENT => /*\n
	Process token 403 on line 88 [col:1;len:72;lvl:0;]: T_COMMENT =>  * The function signature of methods in extended classes and implemented\n
	Process token 404 on line 89 [col:1;len:55;lvl:0;]: T_COMMENT =>  * interfaces has to mirror the parent class/interface.\n
	Process token 405 on line 90 [col:1;len:48;lvl:0;]: T_COMMENT =>  * The overloaded method may not use all params.\n
	Process token 406 on line 91 [col:1;len:3;lvl:0;]: T_COMMENT =>  */
	Process token 407 on line 91 [col:4;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 408 on line 92 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 409 on line 93 [col:1;len:5;lvl:0;]: T_CLASS => class
	Process token 410 on line 93 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 411 on line 93 [col:7;len:7;lvl:0;]: T_STRING => MyClass
	Process token 412 on line 93 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 413 on line 93 [col:15;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 409:T_CLASS
		* level increased *
		* token 409:T_CLASS added to conditions array *
		Process token 414 on line 93 [col:16;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 415 on line 94 [col:1;len:4;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>     
		Process token 416 on line 94 [col:5;len:6;lvl:1;conds;T_CLASS;]: T_PUBLIC => public
		Process token 417 on line 94 [col:11;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 418 on line 94 [col:12;len:8;lvl:1;conds;T_CLASS;]: T_FUNCTION => function
		Process token 419 on line 94 [col:20;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 420 on line 94 [col:21;len:9;lvl:1;conds;T_CLASS;]: T_STRING => something
		Process token 421 on line 94 [col:30;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_PARENTHESIS => (
		Process token 422 on line 94 [col:31;len:2;lvl:1;conds;T_CLASS;]: T_VARIABLE => $a
		Process token 423 on line 94 [col:33;len:1;lvl:1;conds;T_CLASS;]: T_COMMA => ,
		Process token 424 on line 94 [col:34;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 425 on line 94 [col:35;len:2;lvl:1;conds;T_CLASS;]: T_VARIABLE => $b
		Process token 426 on line 94 [col:37;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_PARENTHESIS => )
		Process token 427 on line 94 [col:38;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 428 on line 94 [col:39;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 418:T_FUNCTION
			* level increased *
			* token 418:T_FUNCTION added to conditions array *
			Process token 429 on line 94 [col:40;len:0;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 430 on line 95 [col:1;len:8;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>         
			Process token 431 on line 95 [col:9;len:6;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_RETURN => return
			Process token 432 on line 95 [col:15;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 433 on line 95 [col:16;len:2;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_VARIABLE => $a
			Process token 434 on line 95 [col:18;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 435 on line 95 [col:19;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_MULTIPLY => *
			Process token 436 on line 95 [col:20;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 437 on line 95 [col:21;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_LNUMBER => 2
			Process token 438 on line 95 [col:22;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_SEMICOLON => ;
			Process token 439 on line 95 [col:23;len:0;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 440 on line 96 [col:1;len:4;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>     
			Process token 441 on line 96 [col:5;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 428:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 442 on line 96 [col:6;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 443 on line 97 [col:1;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 413:T_OPEN_CURLY_BRACKET
		* token T_CLASS removed from conditions array *
		* level decreased *
	Process token 444 on line 97 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 445 on line 98 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 446 on line 99 [col:1;len:5;lvl:0;]: T_CLASS => class
	Process token 447 on line 99 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 448 on line 99 [col:7;len:15;lvl:0;]: T_STRING => MyExtendedClass
	Process token 449 on line 99 [col:22;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 450 on line 99 [col:23;len:7;lvl:0;]: T_EXTENDS => extends
	Process token 451 on line 99 [col:30;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 452 on line 99 [col:31;len:9;lvl:0;]: T_STRING => SomeClass
	Process token 453 on line 99 [col:40;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 454 on line 99 [col:41;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 446:T_CLASS
		* level increased *
		* token 446:T_CLASS added to conditions array *
		Process token 455 on line 99 [col:42;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 456 on line 100 [col:1;len:4;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>     
		Process token 457 on line 100 [col:5;len:6;lvl:1;conds;T_CLASS;]: T_PUBLIC => public
		Process token 458 on line 100 [col:11;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 459 on line 100 [col:12;len:8;lvl:1;conds;T_CLASS;]: T_FUNCTION => function
		Process token 460 on line 100 [col:20;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 461 on line 100 [col:21;len:9;lvl:1;conds;T_CLASS;]: T_STRING => something
		Process token 462 on line 100 [col:30;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_PARENTHESIS => (
		Process token 463 on line 100 [col:31;len:2;lvl:1;conds;T_CLASS;]: T_VARIABLE => $a
		Process token 464 on line 100 [col:33;len:1;lvl:1;conds;T_CLASS;]: T_COMMA => ,
		Process token 465 on line 100 [col:34;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 466 on line 100 [col:35;len:2;lvl:1;conds;T_CLASS;]: T_VARIABLE => $b
		Process token 467 on line 100 [col:37;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_PARENTHESIS => )
		Process token 468 on line 100 [col:38;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 469 on line 100 [col:39;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 459:T_FUNCTION
			* level increased *
			* token 459:T_FUNCTION added to conditions array *
			Process token 470 on line 100 [col:40;len:0;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 471 on line 101 [col:1;len:8;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>         
			Process token 472 on line 101 [col:9;len:6;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_RETURN => return
			Process token 473 on line 101 [col:15;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 474 on line 101 [col:16;len:2;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_VARIABLE => $a
			Process token 475 on line 101 [col:18;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 476 on line 101 [col:19;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_MULTIPLY => *
			Process token 477 on line 101 [col:20;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 478 on line 101 [col:21;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_LNUMBER => 2
			Process token 479 on line 101 [col:22;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_SEMICOLON => ;
			Process token 480 on line 101 [col:23;len:0;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 481 on line 102 [col:1;len:4;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>     
			Process token 482 on line 102 [col:5;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 469:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 483 on line 102 [col:6;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 484 on line 103 [col:1;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 454:T_OPEN_CURLY_BRACKET
		* token T_CLASS removed from conditions array *
		* level decreased *
	Process token 485 on line 103 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 486 on line 104 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 487 on line 105 [col:1;len:5;lvl:0;]: T_CLASS => class
	Process token 488 on line 105 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 489 on line 105 [col:7;len:15;lvl:0;]: T_STRING => MyExtendedClass
	Process token 490 on line 105 [col:22;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 491 on line 105 [col:23;len:10;lvl:0;]: T_IMPLEMENTS => implements
	Process token 492 on line 105 [col:33;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 493 on line 105 [col:34;len:13;lvl:0;]: T_STRING => SomeInterface
	Process token 494 on line 105 [col:47;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 495 on line 105 [col:48;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 487:T_CLASS
		* level increased *
		* token 487:T_CLASS added to conditions array *
		Process token 496 on line 105 [col:49;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 497 on line 106 [col:1;len:4;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>     
		Process token 498 on line 106 [col:5;len:6;lvl:1;conds;T_CLASS;]: T_PUBLIC => public
		Process token 499 on line 106 [col:11;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 500 on line 106 [col:12;len:8;lvl:1;conds;T_CLASS;]: T_FUNCTION => function
		Process token 501 on line 106 [col:20;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 502 on line 106 [col:21;len:9;lvl:1;conds;T_CLASS;]: T_STRING => something
		Process token 503 on line 106 [col:30;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_PARENTHESIS => (
		Process token 504 on line 106 [col:31;len:2;lvl:1;conds;T_CLASS;]: T_VARIABLE => $a
		Process token 505 on line 106 [col:33;len:1;lvl:1;conds;T_CLASS;]: T_COMMA => ,
		Process token 506 on line 106 [col:34;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 507 on line 106 [col:35;len:2;lvl:1;conds;T_CLASS;]: T_VARIABLE => $b
		Process token 508 on line 106 [col:37;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_PARENTHESIS => )
		Process token 509 on line 106 [col:38;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 510 on line 106 [col:39;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 500:T_FUNCTION
			* level increased *
			* token 500:T_FUNCTION added to conditions array *
			Process token 511 on line 106 [col:40;len:0;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 512 on line 107 [col:1;len:8;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>         
			Process token 513 on line 107 [col:9;len:6;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_RETURN => return
			Process token 514 on line 107 [col:15;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 515 on line 107 [col:16;len:2;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_VARIABLE => $a
			Process token 516 on line 107 [col:18;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 517 on line 107 [col:19;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_MULTIPLY => *
			Process token 518 on line 107 [col:20;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>  
			Process token 519 on line 107 [col:21;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_LNUMBER => 2
			Process token 520 on line 107 [col:22;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_SEMICOLON => ;
			Process token 521 on line 107 [col:23;len:0;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 522 on line 108 [col:1;len:4;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>     
			Process token 523 on line 108 [col:5;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 510:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 524 on line 108 [col:6;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 525 on line 109 [col:1;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 495:T_OPEN_CURLY_BRACKET
		* token T_CLASS removed from conditions array *
		* level decreased *
	Process token 526 on line 109 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 527 on line 110 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 528 on line 111 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 529 on line 112 [col:1;len:2;lvl:0;]: T_COMMENT => /*\n
	Process token 530 on line 113 [col:1;len:51;lvl:0;]: T_COMMENT =>  * Functions may not use all params passed to them.\n
	Process token 531 on line 114 [col:1;len:83;lvl:0;]: T_COMMENT =>  * Report different violations for params *before* and *after* the last param used.\n
	Process token 532 on line 115 [col:1;len:3;lvl:0;]: T_COMMENT =>  */
	Process token 533 on line 115 [col:4;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 534 on line 116 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 535 on line 117 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 536 on line 117 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 537 on line 117 [col:10;len:9;lvl:0;]: T_STRING => something
	Process token 538 on line 117 [col:19;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 539 on line 117 [col:20;len:2;lvl:0;]: T_VARIABLE => $a
	Process token 540 on line 117 [col:22;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 541 on line 117 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 542 on line 117 [col:24;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 535:T_FUNCTION
		* level increased *
		* token 535:T_FUNCTION added to conditions array *
		Process token 543 on line 117 [col:25;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 544 on line 118 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 545 on line 118 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 546 on line 118 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 547 on line 118 [col:12;len:8;lvl:1;conds;T_FUNCTION;]: T_CONSTANT_ENCAPSED_STRING => 'foobar'
		Process token 548 on line 118 [col:20;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 549 on line 118 [col:21;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 550 on line 119 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 542:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 551 on line 119 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 552 on line 120 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 553 on line 121 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 554 on line 121 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 555 on line 121 [col:10;len:10;lvl:0;]: T_STRING => myCallback
	Process token 556 on line 121 [col:20;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 557 on line 121 [col:21;len:2;lvl:0;]: T_VARIABLE => $a
	Process token 558 on line 121 [col:23;len:1;lvl:0;]: T_COMMA => ,
	Process token 559 on line 121 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 560 on line 121 [col:25;len:2;lvl:0;]: T_VARIABLE => $b
	Process token 561 on line 121 [col:27;len:1;lvl:0;]: T_COMMA => ,
	Process token 562 on line 121 [col:28;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 563 on line 121 [col:29;len:2;lvl:0;]: T_VARIABLE => $c
	Process token 564 on line 121 [col:31;len:1;lvl:0;]: T_COMMA => ,
	Process token 565 on line 121 [col:32;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 566 on line 121 [col:33;len:2;lvl:0;]: T_VARIABLE => $d
	Process token 567 on line 121 [col:35;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 568 on line 121 [col:36;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 569 on line 121 [col:37;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 553:T_FUNCTION
		* level increased *
		* token 553:T_FUNCTION added to conditions array *
		Process token 570 on line 121 [col:38;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 571 on line 122 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 572 on line 122 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_RETURN => return
		Process token 573 on line 122 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 574 on line 122 [col:12;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $a
		Process token 575 on line 122 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 576 on line 122 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_MULTIPLY => *
		Process token 577 on line 122 [col:16;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 578 on line 122 [col:17;len:2;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $c
		Process token 579 on line 122 [col:19;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 580 on line 122 [col:20;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 581 on line 123 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 569:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 582 on line 123 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	* token 361 on line 78 changed from T_FUNCTION to T_CLOSURE
		* cleaned 371 (T_WHITESPACE) *
		* cleaned 372 (T_WHITESPACE) *
		* cleaned 373 (T_RETURN) *
		* cleaned 374 (T_WHITESPACE) *
		* cleaned 375 (T_VARIABLE) *
		* cleaned 376 (T_WHITESPACE) *
		* cleaned 377 (T_MULTIPLY) *
		* cleaned 378 (T_WHITESPACE) *
		* cleaned 379 (T_LNUMBER) *
		* cleaned 380 (T_SEMICOLON) *
		* cleaned 381 (T_WHITESPACE) *
	*** END ADDITIONAL PHP PROCESSING ***
[PHP => 583 tokens in 123 lines]... 
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_EMPTY => Empty
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => body
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => means
	Process token [6]: T_WHITESPACE =>  
	Process token [7]: T_INTERFACE => interface
	Process token [8]: T_WHITESPACE =>  
	Process token [9]: T_STRING => method
	Process token [10]: T_WHITESPACE =>  
	Process token [11]: T_STRING => in
	Process token [12]: T_WHITESPACE =>  
	Process token [13]: T_STRING => many
	Process token [14]: T_WHITESPACE =>  
	Process token [15]: T_STRING => cases
	Process token  16 : T_STRING_CONCAT => .
	Process token [17]: T_WHITESPACE =>  
	Process token [18]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 7:T_INTERFACE => interface
	=> Begin scope map recursion at token 7 with depth 1
	Process token 8 on line 1 []: T_WHITESPACE =>  
	Process token 9 on line 1 []: T_STRING => method
	Process token 10 on line 1 []: T_WHITESPACE =>  
	Process token 11 on line 1 []: T_STRING => in
	Process token 12 on line 1 []: T_WHITESPACE =>  
	Process token 13 on line 1 []: T_STRING => many
	Process token 14 on line 1 []: T_WHITESPACE =>  
	Process token 15 on line 1 []: T_STRING => cases
	Process token 16 on line 1 []: T_STRING_CONCAT => .
	Process token 17 on line 1 []: T_WHITESPACE =>  
	Process token 18 on line 1 []: T_CLOSE_TAG => ?>
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:5;lvl:0;]: T_EMPTY => Empty
	Process token 2 on line 1 [col:12;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:13;len:4;lvl:0;]: T_STRING => body
	Process token 4 on line 1 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:18;len:5;lvl:0;]: T_STRING => means
	Process token 6 on line 1 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 1 [col:24;len:9;lvl:0;]: T_INTERFACE => interface
	Process token 8 on line 1 [col:33;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 9 on line 1 [col:34;len:6;lvl:0;]: T_STRING => method
	Process token 10 on line 1 [col:40;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 11 on line 1 [col:41;len:2;lvl:0;]: T_STRING => in
	Process token 12 on line 1 [col:43;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 13 on line 1 [col:44;len:4;lvl:0;]: T_STRING => many
	Process token 14 on line 1 [col:48;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 15 on line 1 [col:49;len:5;lvl:0;]: T_STRING => cases
	Process token 16 on line 1 [col:54;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 17 on line 1 [col:55;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 18 on line 1 [col:56;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => This
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => line
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => must
	Process token [6]: T_WHITESPACE =>  
	Process token [7]: T_STRING => be
	Process token [8]: T_WHITESPACE =>  
	Process token [9]: T_STRING => immediately
	Process token [10]: T_WHITESPACE =>  
	Process token [11]: T_STRING => after
	Process token [12]: T_WHITESPACE =>  
	Process token [13]: T_STRING => the
	Process token [14]: T_WHITESPACE =>  
	Process token [15]: T_STRING => HERE
	Process token  16 : T_SEMICOLON => ;
	Process token [17]: T_WHITESPACE =>  
	Process token [18]: T_STRING => with
	Process token [19]: T_WHITESPACE =>  
	Process token [20]: T_STRING => no
	Process token [21]: T_WHITESPACE =>  
	Process token [22]: T_STRING => intervening
	Process token [23]: T_WHITESPACE =>  
	Process token [24]: T_STRING => blank
	Process token [25]: T_WHITESPACE =>  
	Process token [26]: T_STRING => lines
	Process token  27 : T_STRING_CONCAT => .
	Process token [28]: T_WHITESPACE =>  
	Process token [29]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:4;lvl:0;]: T_STRING => This
	Process token 2 on line 1 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:12;len:4;lvl:0;]: T_STRING => line
	Process token 4 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:17;len:4;lvl:0;]: T_STRING => must
	Process token 6 on line 1 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 1 [col:22;len:2;lvl:0;]: T_STRING => be
	Process token 8 on line 1 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 9 on line 1 [col:25;len:11;lvl:0;]: T_STRING => immediately
	Process token 10 on line 1 [col:36;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 11 on line 1 [col:37;len:5;lvl:0;]: T_STRING => after
	Process token 12 on line 1 [col:42;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 13 on line 1 [col:43;len:3;lvl:0;]: T_STRING => the
	Process token 14 on line 1 [col:46;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 15 on line 1 [col:47;len:4;lvl:0;]: T_STRING => HERE
	Process token 16 on line 1 [col:51;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 17 on line 1 [col:52;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 18 on line 1 [col:53;len:4;lvl:0;]: T_STRING => with
	Process token 19 on line 1 [col:57;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 20 on line 1 [col:58;len:2;lvl:0;]: T_STRING => no
	Process token 21 on line 1 [col:60;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 22 on line 1 [col:61;len:11;lvl:0;]: T_STRING => intervening
	Process token 23 on line 1 [col:72;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 24 on line 1 [col:73;len:5;lvl:0;]: T_STRING => blank
	Process token 25 on line 1 [col:78;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 26 on line 1 [col:79;len:5;lvl:0;]: T_STRING => lines
	Process token 27 on line 1 [col:84;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 28 on line 1 [col:85;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 29 on line 1 [col:86;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => The
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_FUNCTION => function
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => signature
	Process token [6]: T_WHITESPACE =>  
	Process token [7]: T_STRING => of
	Process token [8]: T_WHITESPACE =>  
	Process token [9]: T_STRING => methods
	Process token [10]: T_WHITESPACE =>  
	Process token [11]: T_STRING => in
	Process token [12]: T_WHITESPACE =>  
	Process token [13]: T_STRING => extended
	Process token [14]: T_WHITESPACE =>  
	Process token [15]: T_STRING => classes
	Process token [16]: T_WHITESPACE =>  
	Process token [17]: T_LOGICAL_AND => and
	Process token [18]: T_WHITESPACE =>  
	Process token [19]: T_STRING => implemented
	Process token [20]: T_WHITESPACE => \n 
	Process token [21]: T_STRING => interfaces
	Process token [22]: T_WHITESPACE =>  
	Process token [23]: T_STRING => has
	Process token [24]: T_WHITESPACE =>  
	Process token [25]: T_STRING => to
	Process token [26]: T_WHITESPACE =>  
	Process token [27]: T_STRING => mirror
	Process token [28]: T_WHITESPACE =>  
	Process token [29]: T_STRING => the
	Process token [30]: T_WHITESPACE =>  
	Process token [31]: T_STRING => parent
	Process token [32]: T_WHITESPACE =>  
	Process token [33]: T_CLASS => class
	Process token  34 : T_DIVIDE => /
	Process token [35]: T_INTERFACE => interface
	Process token  36 : T_STRING_CONCAT => .
	Process token [37]: T_WHITESPACE => \n 
	Process token [38]: T_STRING => The
	Process token [39]: T_WHITESPACE =>  
	Process token [40]: T_STRING => overloaded
	Process token [41]: T_WHITESPACE =>  
	Process token [42]: T_STRING => method
	Process token [43]: T_WHITESPACE =>  
	Process token [44]: T_STRING => may
	Process token [45]: T_WHITESPACE =>  
	Process token [46]: T_STRING => not
	Process token [47]: T_WHITESPACE =>  
	Process token [48]: T_USE => use
	Process token [49]: T_WHITESPACE =>  
	Process token [50]: T_STRING => all
	Process token [51]: T_WHITESPACE =>  
	Process token [52]: T_STRING => params
	Process token  53 : T_STRING_CONCAT => .
	Process token [54]: T_WHITESPACE =>  
	Process token [55]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 3:T_FUNCTION => function
	=> Begin scope map recursion at token 3 with depth 1
	Process token 4 on line 1 []: T_WHITESPACE =>  
	Process token 5 on line 1 []: T_STRING => signature
	Process token 6 on line 1 []: T_WHITESPACE =>  
	Process token 7 on line 1 []: T_STRING => of
	Process token 8 on line 1 []: T_WHITESPACE =>  
	Process token 9 on line 1 []: T_STRING => methods
	Process token 10 on line 1 []: T_WHITESPACE =>  
	Process token 11 on line 1 []: T_STRING => in
	Process token 12 on line 1 []: T_WHITESPACE =>  
	Process token 13 on line 1 []: T_STRING => extended
	Process token 14 on line 1 []: T_WHITESPACE =>  
	Process token 15 on line 1 []: T_STRING => classes
	Process token 16 on line 1 []: T_WHITESPACE =>  
	Process token 17 on line 1 []: T_LOGICAL_AND => and
	Process token 18 on line 1 []: T_WHITESPACE =>  
	Process token 19 on line 1 []: T_STRING => implemented
	Process token 20 on line 1 []: T_WHITESPACE => \n
	Process token 21 on line 2 []: T_WHITESPACE =>  
	Process token 22 on line 2 []: T_STRING => interfaces
	Process token 23 on line 2 []: T_WHITESPACE =>  
	Process token 24 on line 2 []: T_STRING => has
	Process token 25 on line 2 []: T_WHITESPACE =>  
	Process token 26 on line 2 []: T_STRING => to
	Process token 27 on line 2 []: T_WHITESPACE =>  
	Process token 28 on line 2 []: T_STRING => mirror
	Process token 29 on line 2 []: T_WHITESPACE =>  
	Process token 30 on line 2 []: T_STRING => the
	Process token 31 on line 2 []: T_WHITESPACE =>  
	Process token 32 on line 2 []: T_PARENT => parent
	Process token 33 on line 2 []: T_WHITESPACE =>  
	Process token 34 on line 2 []: T_CLASS => class
	=> Found new opening condition before scope opener for 3:T_FUNCTION, backtracking
	Start scope map at 34:T_CLASS => class
	=> Begin scope map recursion at token 34 with depth 1
	Process token 35 on line 2 []: T_DIVIDE => /
	Process token 36 on line 2 []: T_INTERFACE => interface
	=> Found new opening condition before scope opener for 34:T_CLASS, backtracking
	Start scope map at 36:T_INTERFACE => interface
	=> Begin scope map recursion at token 36 with depth 1
	Process token 37 on line 2 []: T_STRING_CONCAT => .
	Process token 38 on line 2 []: T_WHITESPACE => \n
	Process token 39 on line 3 []: T_WHITESPACE =>  
	Process token 40 on line 3 []: T_STRING => The
	Process token 41 on line 3 []: T_WHITESPACE =>  
	Process token 42 on line 3 []: T_STRING => overloaded
	Process token 43 on line 3 []: T_WHITESPACE =>  
	Process token 44 on line 3 []: T_STRING => method
	Process token 45 on line 3 []: T_WHITESPACE =>  
	Process token 46 on line 3 []: T_STRING => may
	Process token 47 on line 3 []: T_WHITESPACE =>  
	Process token 48 on line 3 []: T_STRING => not
	Process token 49 on line 3 []: T_WHITESPACE =>  
	Process token 50 on line 3 []: T_USE => use
	Process token 51 on line 3 []: T_WHITESPACE =>  
	Process token 52 on line 3 []: T_STRING => all
	Process token 53 on line 3 []: T_WHITESPACE =>  
	Process token 54 on line 3 []: T_STRING => params
	Process token 55 on line 3 []: T_STRING_CONCAT => .
	Process token 56 on line 3 []: T_WHITESPACE =>  
	Process token 57 on line 3 []: T_CLOSE_TAG => ?>
	Start scope map at 50:T_USE => use
	=> Begin scope map recursion at token 50 with depth 1
	Process token 51 on line 3 []: T_WHITESPACE =>  
	Process token 52 on line 3 []: T_STRING => all
	Process token 53 on line 3 []: T_WHITESPACE =>  
	Process token 54 on line 3 []: T_STRING => params
	Process token 55 on line 3 []: T_STRING_CONCAT => .
	Process token 56 on line 3 []: T_WHITESPACE =>  
	Process token 57 on line 3 []: T_CLOSE_TAG => ?>
	=> Found close tag before scope opener for 50:T_USE, bailing
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:3;lvl:0;]: T_STRING => The
	Process token 2 on line 1 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:11;len:8;lvl:0;]: T_FUNCTION => function
	Process token 4 on line 1 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:20;len:9;lvl:0;]: T_STRING => signature
	Process token 6 on line 1 [col:29;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 1 [col:30;len:2;lvl:0;]: T_STRING => of
	Process token 8 on line 1 [col:32;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 9 on line 1 [col:33;len:7;lvl:0;]: T_STRING => methods
	Process token 10 on line 1 [col:40;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 11 on line 1 [col:41;len:2;lvl:0;]: T_STRING => in
	Process token 12 on line 1 [col:43;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 13 on line 1 [col:44;len:8;lvl:0;]: T_STRING => extended
	Process token 14 on line 1 [col:52;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 15 on line 1 [col:53;len:7;lvl:0;]: T_STRING => classes
	Process token 16 on line 1 [col:60;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 17 on line 1 [col:61;len:3;lvl:0;]: T_LOGICAL_AND => and
	Process token 18 on line 1 [col:64;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 19 on line 1 [col:65;len:11;lvl:0;]: T_STRING => implemented
	Process token 20 on line 1 [col:76;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 21 on line 2 [col:1;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 22 on line 2 [col:2;len:10;lvl:0;]: T_STRING => interfaces
	Process token 23 on line 2 [col:12;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 24 on line 2 [col:13;len:3;lvl:0;]: T_STRING => has
	Process token 25 on line 2 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 26 on line 2 [col:17;len:2;lvl:0;]: T_STRING => to
	Process token 27 on line 2 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 28 on line 2 [col:20;len:6;lvl:0;]: T_STRING => mirror
	Process token 29 on line 2 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 30 on line 2 [col:27;len:3;lvl:0;]: T_STRING => the
	Process token 31 on line 2 [col:30;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 32 on line 2 [col:31;len:6;lvl:0;]: T_PARENT => parent
	Process token 33 on line 2 [col:37;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 34 on line 2 [col:38;len:5;lvl:0;]: T_CLASS => class
	Process token 35 on line 2 [col:43;len:1;lvl:0;]: T_DIVIDE => /
	Process token 36 on line 2 [col:44;len:9;lvl:0;]: T_INTERFACE => interface
	Process token 37 on line 2 [col:53;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 38 on line 2 [col:54;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 39 on line 3 [col:1;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 40 on line 3 [col:2;len:3;lvl:0;]: T_STRING => The
	Process token 41 on line 3 [col:5;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 42 on line 3 [col:6;len:10;lvl:0;]: T_STRING => overloaded
	Process token 43 on line 3 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 44 on line 3 [col:17;len:6;lvl:0;]: T_STRING => method
	Process token 45 on line 3 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 46 on line 3 [col:24;len:3;lvl:0;]: T_STRING => may
	Process token 47 on line 3 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 48 on line 3 [col:28;len:3;lvl:0;]: T_STRING => not
	Process token 49 on line 3 [col:31;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 50 on line 3 [col:32;len:3;lvl:0;]: T_USE => use
	Process token 51 on line 3 [col:35;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 52 on line 3 [col:36;len:3;lvl:0;]: T_STRING => all
	Process token 53 on line 3 [col:39;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 54 on line 3 [col:40;len:6;lvl:0;]: T_STRING => params
	Process token 55 on line 3 [col:46;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 56 on line 3 [col:47;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 57 on line 3 [col:48;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_STRING => Functions
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => may
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => not
	Process token [6]: T_WHITESPACE =>  
	Process token [7]: T_USE => use
	Process token [8]: T_WHITESPACE =>  
	Process token [9]: T_STRING => all
	Process token [10]: T_WHITESPACE =>  
	Process token [11]: T_STRING => params
	Process token [12]: T_WHITESPACE =>  
	Process token [13]: T_STRING => passed
	Process token [14]: T_WHITESPACE =>  
	Process token [15]: T_STRING => to
	Process token [16]: T_WHITESPACE =>  
	Process token [17]: T_STRING => them
	Process token  18 : T_STRING_CONCAT => .
	Process token [19]: T_WHITESPACE => \n 
	Process token [20]: T_STRING => Report
	Process token [21]: T_WHITESPACE =>  
	Process token [22]: T_STRING => different
	Process token [23]: T_WHITESPACE =>  
	Process token [24]: T_STRING => violations
	Process token [25]: T_WHITESPACE =>  
	Process token [26]: T_FOR => for
	Process token [27]: T_WHITESPACE =>  
	Process token [28]: T_STRING => params
	Process token [29]: T_WHITESPACE =>  
	Process token  30 : T_MULTIPLY => *
	Process token [31]: T_STRING => before
	Process token  32 : T_MULTIPLY => *
	Process token [33]: T_WHITESPACE =>  
	Process token [34]: T_LOGICAL_AND => and
	Process token [35]: T_WHITESPACE =>  
	Process token  36 : T_MULTIPLY => *
	Process token [37]: T_STRING => after
	Process token  38 : T_MULTIPLY => *
	Process token [39]: T_WHITESPACE =>  
	Process token [40]: T_STRING => the
	Process token [41]: T_WHITESPACE =>  
	Process token [42]: T_STRING => last
	Process token [43]: T_WHITESPACE =>  
	Process token [44]: T_STRING => param
	Process token [45]: T_WHITESPACE =>  
	Process token [46]: T_STRING => used
	Process token  47 : T_STRING_CONCAT => .
	Process token [48]: T_WHITESPACE =>  
	Process token [49]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 7:T_USE => use
	=> Begin scope map recursion at token 7 with depth 1
	Process token 8 on line 1 []: T_WHITESPACE =>  
	Process token 9 on line 1 []: T_STRING => all
	Process token 10 on line 1 []: T_WHITESPACE =>  
	Process token 11 on line 1 []: T_STRING => params
	Process token 12 on line 1 []: T_WHITESPACE =>  
	Process token 13 on line 1 []: T_STRING => passed
	Process token 14 on line 1 []: T_WHITESPACE =>  
	Process token 15 on line 1 []: T_STRING => to
	Process token 16 on line 1 []: T_WHITESPACE =>  
	Process token 17 on line 1 []: T_STRING => them
	Process token 18 on line 1 []: T_STRING_CONCAT => .
	Process token 19 on line 1 []: T_WHITESPACE => \n
	Process token 20 on line 2 []: T_WHITESPACE =>  
	Process token 21 on line 2 []: T_STRING => Report
	Process token 22 on line 2 []: T_WHITESPACE =>  
	Process token 23 on line 2 []: T_STRING => different
	Process token 24 on line 2 []: T_WHITESPACE =>  
	Process token 25 on line 2 []: T_STRING => violations
	Process token 26 on line 2 []: T_WHITESPACE =>  
	Process token 27 on line 2 []: T_FOR => for
	=> Found new opening condition before scope opener for 7:T_USE, backtracking
	Start scope map at 27:T_FOR => for
	=> Begin scope map recursion at token 27 with depth 1
	Process token 28 on line 2 []: T_WHITESPACE =>  
	Process token 29 on line 2 []: T_STRING => params
	Process token 30 on line 2 []: T_WHITESPACE =>  
	Process token 31 on line 2 []: T_MULTIPLY => *
	Process token 32 on line 2 []: T_STRING => before
	Process token 33 on line 2 []: T_MULTIPLY => *
	Process token 34 on line 2 []: T_WHITESPACE =>  
	Process token 35 on line 2 []: T_LOGICAL_AND => and
	Process token 36 on line 2 []: T_WHITESPACE =>  
	Process token 37 on line 2 []: T_MULTIPLY => *
	Process token 38 on line 2 []: T_STRING => after
	Process token 39 on line 2 []: T_MULTIPLY => *
	Process token 40 on line 2 []: T_WHITESPACE =>  
	Process token 41 on line 2 []: T_STRING => the
	Process token 42 on line 2 []: T_WHITESPACE =>  
	Process token 43 on line 2 []: T_STRING => last
	Process token 44 on line 2 []: T_WHITESPACE =>  
	Process token 45 on line 2 []: T_STRING => param
	Process token 46 on line 2 []: T_WHITESPACE =>  
	Process token 47 on line 2 []: T_STRING => used
	Process token 48 on line 2 []: T_STRING_CONCAT => .
	Process token 49 on line 2 []: T_WHITESPACE =>  
	Process token 50 on line 2 []: T_CLOSE_TAG => ?>
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:9;lvl:0;]: T_STRING => Functions
	Process token 2 on line 1 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:17;len:3;lvl:0;]: T_STRING => may
	Process token 4 on line 1 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 5 on line 1 [col:21;len:3;lvl:0;]: T_STRING => not
	Process token 6 on line 1 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 1 [col:25;len:3;lvl:0;]: T_USE => use
	Process token 8 on line 1 [col:28;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 9 on line 1 [col:29;len:3;lvl:0;]: T_STRING => all
	Process token 10 on line 1 [col:32;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 11 on line 1 [col:33;len:6;lvl:0;]: T_STRING => params
	Process token 12 on line 1 [col:39;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 13 on line 1 [col:40;len:6;lvl:0;]: T_STRING => passed
	Process token 14 on line 1 [col:46;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 15 on line 1 [col:47;len:2;lvl:0;]: T_STRING => to
	Process token 16 on line 1 [col:49;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 17 on line 1 [col:50;len:4;lvl:0;]: T_STRING => them
	Process token 18 on line 1 [col:54;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 19 on line 1 [col:55;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 20 on line 2 [col:1;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 21 on line 2 [col:2;len:6;lvl:0;]: T_STRING => Report
	Process token 22 on line 2 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 23 on line 2 [col:9;len:9;lvl:0;]: T_STRING => different
	Process token 24 on line 2 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 25 on line 2 [col:19;len:10;lvl:0;]: T_STRING => violations
	Process token 26 on line 2 [col:29;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 27 on line 2 [col:30;len:3;lvl:0;]: T_FOR => for
	Process token 28 on line 2 [col:33;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 29 on line 2 [col:34;len:6;lvl:0;]: T_STRING => params
	Process token 30 on line 2 [col:40;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 31 on line 2 [col:41;len:1;lvl:0;]: T_MULTIPLY => *
	Process token 32 on line 2 [col:42;len:6;lvl:0;]: T_STRING => before
	Process token 33 on line 2 [col:48;len:1;lvl:0;]: T_MULTIPLY => *
	Process token 34 on line 2 [col:49;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 35 on line 2 [col:50;len:3;lvl:0;]: T_LOGICAL_AND => and
	Process token 36 on line 2 [col:53;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 37 on line 2 [col:54;len:1;lvl:0;]: T_MULTIPLY => *
	Process token 38 on line 2 [col:55;len:5;lvl:0;]: T_STRING => after
	Process token 39 on line 2 [col:60;len:1;lvl:0;]: T_MULTIPLY => *
	Process token 40 on line 2 [col:61;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 41 on line 2 [col:62;len:3;lvl:0;]: T_STRING => the
	Process token 42 on line 2 [col:65;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 43 on line 2 [col:66;len:4;lvl:0;]: T_STRING => last
	Process token 44 on line 2 [col:70;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 45 on line 2 [col:71;len:5;lvl:0;]: T_STRING => param
	Process token 46 on line 2 [col:76;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 47 on line 2 [col:77;len:4;lvl:0;]: T_STRING => used
	Process token 48 on line 2 [col:81;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 49 on line 2 [col:82;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 50 on line 2 [col:83;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
DONE in 843ms (98 fixable violations)
	=> Fixing file: 98/98 violations remaining	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 24 (T_CLOSE_CURLY_BRACKET) "}" => "}//end foo()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 11 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 12 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 11 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 12 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 23 (T_WHITESPACE) "\n}//end foo()\n" => "\n\n}//end foo()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 26 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 27 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 26 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 27 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 374)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 375) replaced token 17 (T_VARIABLE) "$a" => "($a"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 376) replaced token 21 (T_LNUMBER) "2" => "2)"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 17 (T_VARIABLE) "$a" => "($a"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 21 (T_LNUMBER) "2" => "2)"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 45 (T_CLOSE_CURLY_BRACKET) "}" => "}//end baz()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 36 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 37 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 36 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 37 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 44 (T_WHITESPACE) "\n}//end baz()\n" => "\n\n}//end baz()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 47 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 48 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 47 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 48 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 112 (T_CLOSE_CURLY_BRACKET) "}" => "}//end bar()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 57 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 58 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 57 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 58 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 111 (T_WHITESPACE) "\n}//end bar()\n" => "\n\n}//end bar()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 114 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 115 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 114 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 115 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 104 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\OperatorSpacingSniff (line 201) replaced token 81 (T_LESS_THAN) "<" => "< "
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 374)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 375) replaced token 96 (T_VARIABLE) "$a" => "($a"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 376) replaced token 100 (T_VARIABLE) "$i" => "$i)"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 96 (T_VARIABLE) "$a" => "($a"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 100 (T_VARIABLE) "$i" => "$i)"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 149 (T_CLOSE_CURLY_BRACKET) "}" => "}//end foobar()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 125 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 126 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 125 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 126 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 148 (T_WHITESPACE) "\n}//end foobar()\n" => "\n\n}//end foobar()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 151 (T_WHITESPACE) "\nclass" => "class"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 152 (T_CLASS) "class" => "\n\nclass"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 151 (T_WHITESPACE) "\nclass" => "class"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 152 (T_CLASS) "class" => "\n\nclass"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 64)
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 66) replaced token 159 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 69) replaced token 160 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 70) replaced token 159 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 70) replaced token 160 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 201 (T_CLOSE_CURLY_BRACKET) "}" => "}//end class\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 178 (T_CLOSE_CURLY_BRACKET) "}" => "}//end barfoo()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 172 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 173 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 172 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 173 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 177 (T_WHITESPACE) "    }//end barfoo()\n" => "\n    }//end barfoo()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 180 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 181 (T_WHITESPACE) "    function" => "\n\n    function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 180 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 181 (T_WHITESPACE) "    function" => "\n\n    function"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 161 (T_WHITESPACE) "\n    " => "\n\n\n    "
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 199 (T_CLOSE_CURLY_BRACKET) "}" => "}//end fooBar()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 191 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 192 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 191 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 192 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 198 (T_WHITESPACE) "    }//end fooBar()\n" => "\n    }//end fooBar()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 201 (T_CLOSE_CURLY_BRACKET) "}//end class\n" => "\n\n}//end class\n"
		* token 201 has already been modified, skipping *
	=> Changeset failed to apply
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 221 (T_CLOSE_CURLY_BRACKET) "}" => "}//end foo()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 220 (T_WHITESPACE) "\n}//end foo()\n" => "\n\n}//end foo()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 223 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 224 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 223 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 224 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 202 (T_WHITESPACE) "\n\n" => "\n\n\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 272 (T_CLOSE_CURLY_BRACKET) "}" => "}//end foo()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Functions\FunctionDeclarationArgumentSpacingSniff (line 364) replaced token 230 (T_WHITESPACE) " )" => ")"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Functions\FunctionDeclarationArgumentSpacingSniff (line 386) replaced token 228 (T_WHITESPACE) " $parameter" => "$parameter"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 232 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 233 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 232 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 233 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 271 (T_WHITESPACE) "\n}//end foo()\n" => "\n\n}//end foo()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 274 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 275 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 274 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 275 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Generic\Sniffs\Formatting\MultipleStatementAlignmentSniff (line 365) replaced token 247 (T_WHITESPACE) " =" => "     ="
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\PostStatementCommentSniff (line 85) replaced token 253 (T_COMMENT) "// This line must be immediately after the HERE; with no intervening blank lines.\n" => "\n// This line must be immediately after the HERE; with no intervening blank lines.\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 295 (T_CLOSE_CURLY_BRACKET) "}" => "}//end foo()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Functions\FunctionDeclarationArgumentSpacingSniff (line 364) replaced token 281 (T_WHITESPACE) " )" => ")"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Functions\FunctionDeclarationArgumentSpacingSniff (line 386) replaced token 279 (T_WHITESPACE) " $parameter" => "$parameter"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 283 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 284 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 283 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 284 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 294 (T_WHITESPACE) "\n}//end foo()\n" => "\n\n}//end foo()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 297 (T_WHITESPACE) "\nprint" => "print"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 298 (T_PRINT) "print" => "\n\nprint"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 297 (T_WHITESPACE) "\nprint" => "print"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 298 (T_PRINT) "print" => "\n\nprint"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 228) replaced token 302 (T_WHITESPACE) " 'PARAMETER'" => "'PARAMETER'"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 315) replaced token 304 (T_WHITESPACE) " )" => ")"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 329 (T_CLOSE_CURLY_BRACKET) "}" => "}//end foo()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 328 (T_WHITESPACE) "\n}//end foo()\n" => "\n\n}//end foo()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 331 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 332 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 331 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 332 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 312 (T_WHITESPACE) "\n\n" => "\n\n\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 354 (T_CLOSE_CURLY_BRACKET) "}" => "}//end bar()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 353 (T_WHITESPACE) "\n}//end bar()\n" => "\n\n}//end bar()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 356 (T_WHITESPACE) "\n$foo" => "$foo"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 357 (T_VARIABLE) "$foo" => "\n\n$foo"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 356 (T_WHITESPACE) "\n$foo" => "$foo"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 357 (T_VARIABLE) "$foo" => "\n\n$foo"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 381 (T_WHITESPACE) "\n}" => "\n\n}"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 374)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 375) replaced token 375 (T_VARIABLE) "$a" => "($a"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 376) replaced token 379 (T_LNUMBER) "2" => "2)"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 375 (T_VARIABLE) "$a" => "($a"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 379 (T_LNUMBER) "2" => "2)"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 398 (T_CLOSE_CURLY_BRACKET) "}" => "}//end foobar()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 391 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 392 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 391 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 392 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 397 (T_WHITESPACE) "\n}//end foobar()\n" => "\n\n}//end foobar()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 384 (T_WHITESPACE) "\n\n" => "\n\n\n"
	=> Changeset started by PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 64)
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 66) replaced token 412 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 69) replaced token 413 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 70) replaced token 412 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 70) replaced token 413 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 443 (T_CLOSE_CURLY_BRACKET) "}" => "}//end class\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 441 (T_CLOSE_CURLY_BRACKET) "}" => "}//end something()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 427 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 428 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 427 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 428 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 440 (T_WHITESPACE) "    }//end something()\n" => "\n    }//end something()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 443 (T_CLOSE_CURLY_BRACKET) "}//end class\n" => "\n\n}//end class\n"
		* token 443 has already been modified, skipping *
	=> Changeset failed to apply
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 414 (T_WHITESPACE) "\n    " => "\n\n\n    "
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 374)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 375) replaced token 433 (T_VARIABLE) "$a" => "($a"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 376) replaced token 437 (T_LNUMBER) "2" => "2)"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 433 (T_VARIABLE) "$a" => "($a"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 437 (T_LNUMBER) "2" => "2)"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 64)
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 66) replaced token 453 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 69) replaced token 454 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 70) replaced token 453 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 70) replaced token 454 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 484 (T_CLOSE_CURLY_BRACKET) "}" => "}//end class\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 482 (T_CLOSE_CURLY_BRACKET) "}" => "}//end something()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 468 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 469 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 468 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 469 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 481 (T_WHITESPACE) "    }//end something()\n" => "\n    }//end something()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 484 (T_CLOSE_CURLY_BRACKET) "}//end class\n" => "\n\n}//end class\n"
		* token 484 has already been modified, skipping *
	=> Changeset failed to apply
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 455 (T_WHITESPACE) "\n    " => "\n\n\n    "
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 374)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 375) replaced token 474 (T_VARIABLE) "$a" => "($a"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 376) replaced token 478 (T_LNUMBER) "2" => "2)"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 474 (T_VARIABLE) "$a" => "($a"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 478 (T_LNUMBER) "2" => "2)"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 64)
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 66) replaced token 494 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 69) replaced token 495 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 70) replaced token 494 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Classes\ClassDeclarationSniff (line 70) replaced token 495 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 187)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 195) replaced token 528 (T_WHITESPACE) "\n/*\n" => "/*\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 198) replaced token 528 (T_WHITESPACE) "\n/*\n" => "/*\n"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 525 (T_CLOSE_CURLY_BRACKET) "}" => "}//end class\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 523 (T_CLOSE_CURLY_BRACKET) "}" => "}//end something()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 509 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 510 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 509 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 510 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 522 (T_WHITESPACE) "    }//end something()\n" => "\n    }//end something()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 525 (T_CLOSE_CURLY_BRACKET) "}//end class\n" => "\n\n}//end class\n"
		* token 525 has already been modified, skipping *
	=> Changeset failed to apply
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 496 (T_WHITESPACE) "\n    " => "\n\n\n    "
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 374)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 375) replaced token 515 (T_VARIABLE) "$a" => "($a"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 376) replaced token 519 (T_LNUMBER) "2" => "2)"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 515 (T_VARIABLE) "$a" => "($a"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 519 (T_LNUMBER) "2" => "2)"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 550 (T_CLOSE_CURLY_BRACKET) "}" => "}//end something()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 541 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 542 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 541 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 542 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 549 (T_WHITESPACE) "\n}//end something()\n" => "\n\n}//end something()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 552 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 553 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 552 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 553 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 581 (T_CLOSE_CURLY_BRACKET) "}" => "}//end myCallback()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 568 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 569 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 568 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 569 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 580 (T_WHITESPACE) "\n}//end myCallback()\n" => "\n\n}//end myCallback()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 374)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 375) replaced token 574 (T_VARIABLE) "$a" => "($a"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 376) replaced token 578 (T_VARIABLE) "$c" => "$c)"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 574 (T_VARIABLE) "$a" => "($a"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff (line 377) replaced token 578 (T_VARIABLE) "$c" => "$c)"
	=> Changeset ended: 2 changes applied
                                                                                	=> Fixing file: 130/98 violations remaining [made 1 pass]... 	* fixed 130 violations, starting loop 2 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 194 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 216 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 282 (T_COMMENT) "// This line must be immediately after the HERE; with no intervening blank lines.\n" => "    // This line must be immediately after the HERE; with no intervening blank lines.\n"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 474 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 522 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 570 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	=> Changeset started by PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 87)
		Q: PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 88) replaced token 652 (T_COMMENT) "//end myCallback()\n" => "//end myCallback()"
		Q: PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 93) replaced token 653 (T_WHITESPACE) "\n" => "\n"
		A: PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 94) replaced token 652 (T_COMMENT) "//end myCallback()\n" => "//end myCallback()"
		A: PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 94) replaced token 653 (T_WHITESPACE) "\n" => "\n"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 54 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 55 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 56 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 57 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 54 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 55 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 56 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 57 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 128 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 129 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 130 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 131 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 128 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 129 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 130 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 131 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 168 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 169 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 170 (T_WHITESPACE) "\nclass" => "class"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 171 (T_CLASS) "class" => "\n\nclass"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 168 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 169 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 170 (T_WHITESPACE) "\nclass" => "class"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 171 (T_CLASS) "class" => "\n\nclass"
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 187)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 195) replaced token 230 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 195) replaced token 231 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 198) replaced token 230 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 198) replaced token 231 (T_WHITESPACE) "\nfunction" => "function"
	=> Changeset ended: 2 changes applied
	* token 194 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 202 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 203 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 204 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 205 (T_WHITESPACE) "    function" => "\n\n    function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 202 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 203 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 204 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 205 (T_WHITESPACE) "    function" => "\n\n    function"
	=> Changeset ended: 4 changes applied
	* token 216 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 226 (T_WHITESPACE) "\n}" => "}"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 227 (T_CLOSE_CURLY_BRACKET) "}" => "\n\n}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 226 (T_WHITESPACE) "\n}" => "}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 227 (T_CLOSE_CURLY_BRACKET) "}" => "\n\n}"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 252 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 253 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 254 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 255 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 252 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 253 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 254 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 255 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 304 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 305 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 306 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 307 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 304 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 305 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 306 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 307 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 4 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 211) replaced token 281 (T_WHITESPACE) " \n    // This line must be immediately after the HERE; with no intervening blank lines.\n" => "\n    // This line must be immediately after the HERE; with no intervening blank lines.\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 328 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 329 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 330 (T_WHITESPACE) "\nprint" => "print"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 331 (T_PRINT) "print" => "\n\nprint"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 328 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 329 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 330 (T_WHITESPACE) "\nprint" => "print"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 331 (T_PRINT) "print" => "\n\nprint"
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 364 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 365 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 366 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 367 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 364 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 365 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 366 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 367 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 392 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 393 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 394 (T_WHITESPACE) "\n$foo" => "$foo"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 395 (T_VARIABLE) "$foo" => "\n\n$foo"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 392 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 393 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 394 (T_WHITESPACE) "\n$foo" => "$foo"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 395 (T_VARIABLE) "$foo" => "\n\n$foo"
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 443 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 444 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 445 (T_WHITESPACE) "\n/*\n" => "/*\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 446 (T_COMMENT) "/*\n" => "\n\n/*\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 443 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 444 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 445 (T_WHITESPACE) "\n/*\n" => "/*\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 446 (T_COMMENT) "/*\n" => "\n\n/*\n"
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 187)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 195) replaced token 496 (T_WHITESPACE) "\nclass" => "class"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 198) replaced token 496 (T_WHITESPACE) "\nclass" => "class"
	=> Changeset ended: 1 changes applied
	* token 474 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 492 (T_WHITESPACE) "\n}" => "}"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 493 (T_CLOSE_CURLY_BRACKET) "}" => "\n\n}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 492 (T_WHITESPACE) "\n}" => "}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 493 (T_CLOSE_CURLY_BRACKET) "}" => "\n\n}"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 187)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 195) replaced token 544 (T_WHITESPACE) "\nclass" => "class"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 198) replaced token 544 (T_WHITESPACE) "\nclass" => "class"
	=> Changeset ended: 1 changes applied
	* token 522 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 540 (T_WHITESPACE) "\n}" => "}"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 541 (T_CLOSE_CURLY_BRACKET) "}" => "\n\n}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 540 (T_WHITESPACE) "\n}" => "}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 541 (T_CLOSE_CURLY_BRACKET) "}" => "\n\n}"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 187)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 195) replaced token 592 (T_WHITESPACE) "\n/*\n" => "/*\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 198) replaced token 592 (T_WHITESPACE) "\n/*\n" => "/*\n"
	=> Changeset ended: 1 changes applied
	* token 570 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 588 (T_WHITESPACE) "\n}" => "}"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 589 (T_CLOSE_CURLY_BRACKET) "}" => "\n\n}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 588 (T_WHITESPACE) "\n}" => "}"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 589 (T_CLOSE_CURLY_BRACKET) "}" => "\n\n}"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 617 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 618 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 619 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 620 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 617 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 618 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 619 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 620 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 4 changes applied
                                                                                	=> Fixing file: 67/98 violations remaining [made 2 passes]... 	* fixed 67 violations, starting loop 3 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 29 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 30 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 31 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 32 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 29 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 30 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 31 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 32 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 4 changes applied
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 1; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 4/98 violations remaining [made 3 passes]... 	* fixed 4 violations, starting loop 4 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/98 violations remaining [made 4 passes]... 	* fixed 1 violations, starting loop 5 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 3; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/98 violations remaining [made 5 passes]... 	* fixed 0 violations, starting loop 6 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/98 violations remaining [made 6 passes]... 	* fixed 1 violations, starting loop 7 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 5; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/98 violations remaining [made 7 passes]... 	* fixed 0 violations, starting loop 8 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/98 violations remaining [made 8 passes]... 	* fixed 1 violations, starting loop 9 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 7; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/98 violations remaining [made 9 passes]... 	* fixed 0 violations, starting loop 10 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/98 violations remaining [made 10 passes]... 	* fixed 1 violations, starting loop 11 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 9; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/98 violations remaining [made 11 passes]... 	* fixed 0 violations, starting loop 12 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/98 violations remaining [made 12 passes]... 	* fixed 1 violations, starting loop 13 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 11; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/98 violations remaining [made 13 passes]... 	* fixed 0 violations, starting loop 14 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/98 violations remaining [made 14 passes]... 	* fixed 1 violations, starting loop 15 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 13; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/98 violations remaining [made 15 passes]... 	* fixed 0 violations, starting loop 16 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/98 violations remaining [made 16 passes]... 	* fixed 1 violations, starting loop 17 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 15; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/98 violations remaining [made 17 passes]... 	* fixed 0 violations, starting loop 18 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/98 violations remaining [made 18 passes]... 	* fixed 1 violations, starting loop 19 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 17; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/98 violations remaining [made 19 passes]... 	* fixed 0 violations, starting loop 20 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/98 violations remaining [made 20 passes]... 	* fixed 1 violations, starting loop 21 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 19; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/98 violations remaining [made 21 passes]... 	* fixed 0 violations, starting loop 22 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/98 violations remaining [made 22 passes]... 	* fixed 1 violations, starting loop 23 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 21; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/98 violations remaining [made 23 passes]... 	* fixed 0 violations, starting loop 24 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/98 violations remaining [made 24 passes]... 	* fixed 1 violations, starting loop 25 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 23; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/98 violations remaining [made 25 passes]... 	* fixed 0 violations, starting loop 26 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/98 violations remaining [made 26 passes]... 	* fixed 1 violations, starting loop 27 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 25; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/98 violations remaining [made 27 passes]... 	* fixed 0 violations, starting loop 28 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/98 violations remaining [made 28 passes]... 	* fixed 1 violations, starting loop 29 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 27; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/98 violations remaining [made 29 passes]... 	* fixed 0 violations, starting loop 30 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/98 violations remaining [made 30 passes]... 	* fixed 1 violations, starting loop 31 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 29; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/98 violations remaining [made 31 passes]... 	* fixed 0 violations, starting loop 32 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/98 violations remaining [made 32 passes]... 	* fixed 1 violations, starting loop 33 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 31; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/98 violations remaining [made 33 passes]... 	* fixed 0 violations, starting loop 34 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/98 violations remaining [made 34 passes]... 	* fixed 1 violations, starting loop 35 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 33; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/98 violations remaining [made 35 passes]... 	* fixed 0 violations, starting loop 36 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/98 violations remaining [made 36 passes]... 	* fixed 1 violations, starting loop 37 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 35; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/98 violations remaining [made 37 passes]... 	* fixed 0 violations, starting loop 38 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/98 violations remaining [made 38 passes]... 	* fixed 1 violations, starting loop 39 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 37; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/98 violations remaining [made 39 passes]... 	* fixed 0 violations, starting loop 40 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/98 violations remaining [made 40 passes]... 	* fixed 1 violations, starting loop 41 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 39; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/98 violations remaining [made 41 passes]... 	* fixed 0 violations, starting loop 42 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/98 violations remaining [made 42 passes]... 	* fixed 1 violations, starting loop 43 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 41; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/98 violations remaining [made 43 passes]... 	* fixed 0 violations, starting loop 44 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/98 violations remaining [made 44 passes]... 	* fixed 1 violations, starting loop 45 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 43; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/98 violations remaining [made 45 passes]... 	* fixed 0 violations, starting loop 46 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/98 violations remaining [made 46 passes]... 	* fixed 1 violations, starting loop 47 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 45; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/98 violations remaining [made 47 passes]... 	* fixed 0 violations, starting loop 48 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/98 violations remaining [made 48 passes]... 	* fixed 1 violations, starting loop 49 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 47; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/98 violations remaining [made 49 passes]... 	* fixed 0 violations, starting loop 50 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/98 violations remaining [made 50 passes]... 	* fixed 1 violations, starting loop 51 *
	*** Reached maximum number of loops with 1 violations left unfixed ***
ERROR in 11.36 secs

PHPCBF RESULT SUMMARY
------------------------------------------------------------------------------------------
FILE                                                                      FIXED  REMAINING
------------------------------------------------------------------------------------------
...ndards\Generic\Tests\CodeAnalysis\UnusedFunctionParameterUnitTest.inc  FAILED TO FIX
------------------------------------------------------------------------------------------
A TOTAL OF 97 ERRORS WERE FIXED IN 1 FILE
------------------------------------------------------------------------------------------
PHPCBF FAILED TO FIX 1 FILE
------------------------------------------------------------------------------------------

Time: 13.45 secs; Memory: 8MB


