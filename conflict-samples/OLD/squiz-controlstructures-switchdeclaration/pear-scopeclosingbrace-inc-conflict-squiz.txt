PHP 7.2.11 (cli) (built: Oct 10 2018 02:39:52) ( ZTS MSVC15 (Visual C++ 2017) x86 )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies
    with Xdebug v2.6.0, Copyright (c) 2002-2018, by Derick Rethans

PHP_CodeSniffer version 3.4.0 (stable) by Squiz (http://www.squiz.net)

Processing ruleset D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\ruleset.xml
	Adding sniff files from D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs directory
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayBracketSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\ClassFileNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\DuplicatePropertySniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\LowercaseClassKeywordsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\SelfMemberReferenceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\ValidClassNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\BlockCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\ClassCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\DocCommentAlignmentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\EmptyCatchCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\FileCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\FunctionCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\FunctionCommentThrowTagSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\LongConditionClosingCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\PostStatementCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\VariableCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ElseIfDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ForEachLoopDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\InlineIfDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\LowercaseDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ClassDefinitionClosingBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ClassDefinitionNameSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ClassDefinitionOpeningBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ColonSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ColourDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\DisallowMultipleStyleDefinitionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\DuplicateClassDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\DuplicateStyleDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\EmptyClassDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\EmptyStyleDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ForbiddenStylesSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\IndentationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\LowercaseStyleDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\MissingColonSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\NamedColoursSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\OpacitySniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\SemicolonSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ShorthandSizeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Debug\JavaScriptLintSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Debug\JSLintSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Files\FileExtensionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\FunctionDeclarationArgumentSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\FunctionDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\FunctionDuplicateArgumentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\GlobalFunctionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\LowercaseFunctionKeywordsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\MultiLineFunctionDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidFunctionNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidVariableNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Objects\DisallowObjectStringIndexSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Objects\ObjectInstantiationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Objects\ObjectMemberCommaSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Operators\ComparisonOperatorUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Operators\IncrementDecrementUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Operators\ValidLogicalOperatorsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\CommentedOutCodeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowBooleanStatementSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowComparisonAssignmentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowInlineIfSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowMultipleAssignmentsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowSizeFunctionsInLoopsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DiscouragedFunctionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\EvalSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\GlobalKeywordSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\HeredocSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\InnerFunctionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\LowercasePHPFunctionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\NonExecutableCodeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Scope\MemberVarScopeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Scope\MethodScopeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Scope\StaticThisUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Strings\ConcatenationSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Strings\DoubleQuoteUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Strings\EchoedStringsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\CastSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\FunctionOpeningBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\LogicalOperatorSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\MemberVarSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ObjectOperatorSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\OperatorSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\PropertyLabelSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ScopeKeywordSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff.php
	Processing rule "Generic.Arrays.DisallowLongArraySyntax"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Arrays\DisallowLongArraySyntaxSniff.php
	Processing rule "Generic.CodeAnalysis.EmptyStatement"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\CodeAnalysis\EmptyStatementSniff.php
	Processing rule "Generic.Commenting.Todo"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Commenting\TodoSniff.php
	Processing rule "Generic.Commenting.DocComment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Commenting\DocCommentSniff.php
	Processing rule "Generic.ControlStructures.InlineControlStructure"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff.php
	Processing rule "Generic.Formatting.DisallowMultipleStatements"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Formatting\DisallowMultipleStatementsSniff.php
	Processing rule "Generic.Formatting.SpaceAfterCast"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Formatting\SpaceAfterCastSniff.php
	Processing rule "Generic.Functions.FunctionCallArgumentSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Functions\FunctionCallArgumentSpacingSniff.php
	Processing rule "Generic.NamingConventions.ConstructorName"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\NamingConventions\ConstructorNameSniff.php
	Processing rule "Generic.NamingConventions.UpperCaseConstantName"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\NamingConventions\UpperCaseConstantNameSniff.php
	Processing rule "Generic.PHP.DeprecatedFunctions"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\DeprecatedFunctionsSniff.php
	Processing rule "Generic.PHP.DisallowShortOpenTag"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\DisallowShortOpenTagSniff.php
	Processing rule "Generic.PHP.LowerCaseKeyword"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\LowerCaseKeywordSniff.php
	Processing rule "Generic.PHP.LowerCaseConstant"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff.php
	Processing rule "Generic.Strings.UnnecessaryStringConcat"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Strings\UnnecessaryStringConcatSniff.php
	Processing rule "Generic.WhiteSpace.DisallowTabIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\DisallowTabIndentSniff.php
	Processing rule "Generic.WhiteSpace.LanguageConstructSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
	Processing rule "Generic.WhiteSpace.IncrementDecrementSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\IncrementDecrementSpacingSniff.php
	Processing rule "Generic.WhiteSpace.ScopeIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff.php
	Processing rule "PEAR.ControlStructures.MultiLineCondition"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\ControlStructures\MultiLineConditionSniff.php
	Processing rule "PEAR.Files.IncludingFile"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Files\IncludingFileSniff.php
	Processing rule "PEAR.Formatting.MultiLineAssignment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Formatting\MultiLineAssignmentSniff.php
	Processing rule "PEAR.Functions.ValidDefaultValue"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Functions\ValidDefaultValueSniff.php
	Processing rule "PSR2.Files.EndFileNewline"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff.php
	Processing rule "Zend.Files.ClosingTag"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Zend\Sniffs\Files\ClosingTagSniff.php
	Processing rule "Zend.Debug.CodeAnalyzer"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Zend\Sniffs\Debug\CodeAnalyzerSniff.php
	Processing rule "Generic.Files.LineLength"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Files\LineLengthSniff.php
		=> property "lineLimit" set to "120"
		=> property "absoluteLineLimit" set to "0"
	Processing rule "Generic.Files.LineEndings"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Files\LineEndingsSniff.php
		=> property "eolChar" set to "\n"
	Processing rule "Generic.Formatting.MultipleStatementAlignment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Formatting\MultipleStatementAlignmentSniff.php
		=> property "maxPadding" set to "20"
		=> property "error" set to "true"
	Processing rule "Generic.PHP.ForbiddenFunctions"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\ForbiddenFunctionsSniff.php
		=> array property "forbiddenFunctions" set to "sizeof=>count,delete=>unset,print=>echo,is_null=>null,create_function=>null"
	Processing rule "Generic.CodeAnalysis.EmptyStatement.DetectedCATCH"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\CodeAnalysis\EmptyStatementSniff.php
		=> severity set to 0
	Processing rule "Generic.Debug.ClosureLinter"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Debug\ClosureLinterSniff.php
		=> array property "errorCodes" set to "0210"
		=> array property "ignoreCodes" set to "0001,0110,0240"
	Processing rule "Generic.Debug.ClosureLinter.ExternalToolError"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Debug\ClosureLinterSniff.php
		=> message set to %2$s
	Processing rule "PEAR.Functions.FunctionCallSignature"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff.php
		=> property "allowMultipleArguments" set to "false"
	Processing rule "Generic.Arrays.ArrayIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Arrays\ArrayIndentSniff.php
	Processing rule "Squiz.Arrays.ArrayDeclaration.KeyNotAligned"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.ValueNotAligned"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.WhiteSpace.LanguageConstructSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
		=> severity set to 0
	Processing rule "Squiz.Commenting.InlineComment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff.php
		Excluding rule "Squiz.Commenting.InlineComment.SpacingAfterAtFunctionEnd"
		=> severity set to 0
	Processing rule "Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidFunctionNameSniff.php
		=> severity set to 0
	Processing rule "PSR2.Methods.MethodDeclaration.Underscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PSR2\Sniffs\Methods\MethodDeclarationSniff.php
		Excluding sniff "PSR2.Methods.MethodDeclaration" except for "Underscore"
		=> message type set to error
	Processing rule "Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidVariableNameSniff.php
		=> severity set to 0
	Processing rule "PSR2.Classes.PropertyDeclaration.Underscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PSR2\Sniffs\Classes\PropertyDeclarationSniff.php
		Excluding sniff "PSR2.Classes.PropertyDeclaration" except for "Underscore"
		=> message type set to error
=> Ruleset processing complete; included 133 sniffs and excluded 0
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_FUNCTION => function
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_SEMICOLON => ;
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_FUNCTION => function
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_ABSTRACT => abstract
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_FUNCTION => function
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_SEMICOLON => ;
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
Creating file list... DONE (1 files in queue)
Changing into directory D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Tests\WhiteSpace
Processing ScopeClosingBraceUnitTest.inc 
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php\n
	Process token [1]: T_WHITESPACE => \n
	Process token [2]: T_CLASS => class
	Process token [3]: T_WHITESPACE =>  
	Process token [4]: T_STRING => Test
	Process token [5]: T_WHITESPACE => \n
	Process token  6 : T_OPEN_CURLY_BRACKET => {
	Process token [7]: T_WHITESPACE => \n    
	Process token [8]: T_PUBLIC => public
	Process token [9]: T_WHITESPACE =>  
	Process token [10]: T_FUNCTION => function
	Process token [11]: T_WHITESPACE =>  
	Process token [12]: T_STRING => __construct
	Process token  13 : T_OPEN_PARENTHESIS => (
	Process token  14 : T_CLOSE_PARENTHESIS => )
	Process token [15]: T_WHITESPACE => \n    
	Process token  16 : T_OPEN_CURLY_BRACKET => {
	Process token [17]: T_WHITESPACE => \n    
	Process token  18 : T_CLOSE_CURLY_BRACKET => }
	Process token [19]: T_WHITESPACE => \n\n    
	Process token [20]: T_FUNCTION => function
	Process token [21]: T_WHITESPACE =>  
	Process token [22]: T_STRING => test1
	Process token  23 : T_OPEN_PARENTHESIS => (
	Process token  24 : T_CLOSE_PARENTHESIS => )
	Process token [25]: T_WHITESPACE => \n    
	Process token  26 : T_OPEN_CURLY_BRACKET => {
	Process token [27]: T_WHITESPACE => \n     
	Process token  28 : T_CLOSE_CURLY_BRACKET => }
	Process token [29]: T_WHITESPACE => \n\n    
	Process token [30]: T_FUNCTION => function
	Process token [31]: T_WHITESPACE =>  
	Process token [32]: T_STRING => test2
	Process token  33 : T_OPEN_PARENTHESIS => (
	Process token  34 : T_CLOSE_PARENTHESIS => )
	Process token [35]: T_WHITESPACE =>  
	Process token  36 : T_OPEN_CURLY_BRACKET => {
	Process token  37 : T_CLOSE_CURLY_BRACKET => }
	Process token [38]: T_WHITESPACE => \n\n    
	Process token [39]: T_PRIVATE => private
	Process token [40]: T_WHITESPACE =>  
	Process token [41]: T_FUNCTION => function
	Process token [42]: T_WHITESPACE =>  
	Process token [43]: T_STRING => _test3
	Process token  44 : T_OPEN_PARENTHESIS => (
	Process token  45 : T_CLOSE_PARENTHESIS => )
	Process token [46]: T_WHITESPACE => \n    
	Process token  47 : T_OPEN_CURLY_BRACKET => {
	Process token [48]: T_WHITESPACE => \n    
	Process token  49 : T_CLOSE_CURLY_BRACKET => }
	Process token [50]: T_WHITESPACE => \n\n
	Process token  51 : T_CLOSE_CURLY_BRACKET => }
	Process token [52]: T_WHITESPACE => \n\n\n
	Process token [53]: T_CLASS => class
	Process token [54]: T_WHITESPACE =>  
	Process token [55]: T_STRING => Test2
	Process token [56]: T_WHITESPACE => \n
	Process token  57 : T_OPEN_CURLY_BRACKET => {
	Process token [58]: T_WHITESPACE => \n 
	Process token  59 : T_CLOSE_CURLY_BRACKET => }
	Process token [60]: T_WHITESPACE => \n\n\n
	Process token [61]: T_FUNCTION => function
	Process token [62]: T_WHITESPACE =>  
	Process token [63]: T_STRING => test2
	Process token  64 : T_OPEN_PARENTHESIS => (
	Process token  65 : T_CLOSE_PARENTHESIS => )
	Process token [66]: T_WHITESPACE => \n
	Process token  67 : T_OPEN_CURLY_BRACKET => {
	Process token [68]: T_WHITESPACE => \n    
	Process token [69]: T_IF => if
	Process token [70]: T_WHITESPACE =>  
	Process token  71 : T_OPEN_PARENTHESIS => (
	Process token [72]: T_VARIABLE => $str
	Process token  73 : T_OPEN_CURLY_BRACKET => {
	Process token [74]: T_LNUMBER => 0
	Process token  75 : T_CLOSE_CURLY_BRACKET => }
	Process token  76 : T_CLOSE_PARENTHESIS => )
	Process token [77]: T_WHITESPACE =>  
	Process token  78 : T_OPEN_CURLY_BRACKET => {
	Process token [79]: T_WHITESPACE => \n        
	Process token [80]: T_VARIABLE => $chr
	Process token [81]: T_WHITESPACE =>  
	Process token  82 : T_EQUAL => =
	Process token [83]: T_WHITESPACE =>  
	Process token [84]: T_VARIABLE => $str
	Process token  85 : T_OPEN_CURLY_BRACKET => {
	Process token [86]: T_LNUMBER => 0
	Process token  87 : T_CLOSE_CURLY_BRACKET => }
	Process token  88 : T_SEMICOLON => ;
	Process token [89]: T_WHITESPACE =>  
	Process token  90 : T_CLOSE_CURLY_BRACKET => }
	Process token [91]: T_WHITESPACE => \n\n\n    
	Process token [92]: T_IF => if
	Process token [93]: T_WHITESPACE =>  
	Process token  94 : T_OPEN_PARENTHESIS => (
	Process token  95 : T_BOOLEAN_NOT => !
	Process token [96]: T_STRING => class_exists
	Process token  97 : T_OPEN_PARENTHESIS => (
	Process token [98]: T_VARIABLE => $class_name
	Process token  99 : T_CLOSE_PARENTHESIS => )
	Process token  100 : T_CLOSE_PARENTHESIS => )
	Process token [101]: T_WHITESPACE =>  
	Process token  102 : T_OPEN_CURLY_BRACKET => {
	Process token [103]: T_WHITESPACE => \n        
	Process token [104]: T_ECHO => echo
	Process token [105]: T_WHITESPACE =>  
	Process token [106]: T_VARIABLE => $error
	Process token  107 : T_SEMICOLON => ;
	Process token [108]: T_WHITESPACE => \n    
	Process token  109 : T_CLOSE_CURLY_BRACKET => }
	Process token [110]: T_WHITESPACE => \n    
	Process token [111]: T_VARIABLE => $this
	Process token [112]: T_OBJECT_OPERATOR => ->
	Process token  113 : T_OPEN_CURLY_BRACKET => {
	Process token [114]: T_VARIABLE => $property
	Process token  115 : T_CLOSE_CURLY_BRACKET => }
	Process token [116]: T_WHITESPACE =>  
	Process token  117 : T_EQUAL => =
	Process token  118 : T_BITWISE_AND => &
	Process token [119]: T_WHITESPACE =>  
	Process token [120]: T_NEW => new
	Process token [121]: T_WHITESPACE =>  
	Process token [122]: T_VARIABLE => $class_name
	Process token  123 : T_OPEN_PARENTHESIS => (
	Process token [124]: T_VARIABLE => $this
	Process token [125]: T_OBJECT_OPERATOR => ->
	Process token [126]: T_STRING => db_index
	Process token  127 : T_CLOSE_PARENTHESIS => )
	Process token  128 : T_SEMICOLON => ;
	Process token [129]: T_WHITESPACE => \n    
	Process token [130]: T_VARIABLE => $this
	Process token [131]: T_OBJECT_OPERATOR => ->
	Process token [132]: T_STRING => modules
	Process token  133 : T_OPEN_SQUARE_BRACKET => [
	Process token [134]: T_VARIABLE => $module
	Process token  135 : T_CLOSE_SQUARE_BRACKET => ]
	Process token [136]: T_WHITESPACE =>  
	Process token  137 : T_EQUAL => =
	Process token  138 : T_BITWISE_AND => &
	Process token [139]: T_WHITESPACE =>  
	Process token [140]: T_VARIABLE => $this
	Process token [141]: T_OBJECT_OPERATOR => ->
	Process token  142 : T_OPEN_CURLY_BRACKET => {
	Process token [143]: T_VARIABLE => $property
	Process token  144 : T_CLOSE_CURLY_BRACKET => }
	Process token  145 : T_SEMICOLON => ;
	Process token [146]: T_WHITESPACE => \n
	Process token  147 : T_CLOSE_CURLY_BRACKET => }
	Process token [148]: T_WHITESPACE => \n\n
	Process token [149]: T_FOREACH => foreach
	Process token [150]: T_WHITESPACE =>  
	Process token  151 : T_OPEN_PARENTHESIS => (
	Process token [152]: T_VARIABLE => $elements
	Process token [153]: T_WHITESPACE =>  
	Process token [154]: T_AS => as
	Process token [155]: T_WHITESPACE =>  
	Process token [156]: T_VARIABLE => $element
	Process token  157 : T_CLOSE_PARENTHESIS => )
	Process token [158]: T_WHITESPACE =>  
	Process token  159 : T_OPEN_CURLY_BRACKET => {
	Process token [160]: T_WHITESPACE => \n    
	Process token [161]: T_IF => if
	Process token [162]: T_WHITESPACE =>  
	Process token  163 : T_OPEN_PARENTHESIS => (
	Process token [164]: T_VARIABLE => $something
	Process token  165 : T_CLOSE_PARENTHESIS => )
	Process token [166]: T_WHITESPACE =>  
	Process token  167 : T_OPEN_CURLY_BRACKET => {
	Process token [168]: T_WHITESPACE => \n        
	Process token [169]: T_COMMENT => // Do IF.\n
	Process token [170]: T_WHITESPACE =>     
	Process token  171 : T_CLOSE_CURLY_BRACKET => }
	Process token [172]: T_WHITESPACE =>  
	Process token [173]: T_ELSE => else
	Process token [174]: T_WHITESPACE =>  
	Process token [175]: T_IF => if
	Process token [176]: T_WHITESPACE =>  
	Process token  177 : T_OPEN_PARENTHESIS => (
	Process token [178]: T_VARIABLE => $somethingElse
	Process token  179 : T_CLOSE_PARENTHESIS => )
	Process token [180]: T_WHITESPACE =>  
	Process token  181 : T_OPEN_CURLY_BRACKET => {
	Process token [182]: T_WHITESPACE => \n        
	Process token [183]: T_COMMENT => // Do ELSE.\n
	Process token [184]: T_WHITESPACE =>     
	Process token  185 : T_CLOSE_CURLY_BRACKET => }
	Process token [186]: T_WHITESPACE => \n
	Process token  187 : T_CLOSE_CURLY_BRACKET => }
	Process token [188]: T_WHITESPACE => \n\n
	Process token [189]: T_SWITCH => switch
	Process token [190]: T_WHITESPACE =>  
	Process token  191 : T_OPEN_PARENTHESIS => (
	Process token [192]: T_VARIABLE => $foo
	Process token  193 : T_CLOSE_PARENTHESIS => )
	Process token [194]: T_WHITESPACE =>  
	Process token  195 : T_OPEN_CURLY_BRACKET => {
	Process token [196]: T_WHITESPACE => \n
	Process token [197]: T_CASE => case
	Process token [198]: T_WHITESPACE =>  
	Process token [199]: T_LNUMBER => 1
	Process token  200 : T_COLON => :
	Process token [201]: T_WHITESPACE => \n    
	Process token [202]: T_SWITCH => switch
	Process token [203]: T_WHITESPACE =>  
	Process token  204 : T_OPEN_PARENTHESIS => (
	Process token [205]: T_VARIABLE => $bar
	Process token  206 : T_CLOSE_PARENTHESIS => )
	Process token [207]: T_WHITESPACE =>  
	Process token  208 : T_OPEN_CURLY_BRACKET => {
	Process token [209]: T_WHITESPACE => \n    
	Process token [210]: T_DEFAULT => default
	Process token  211 : T_COLON => :
	Process token [212]: T_WHITESPACE => \n        
	Process token [213]: T_IF => if
	Process token [214]: T_WHITESPACE =>  
	Process token  215 : T_OPEN_PARENTHESIS => (
	Process token [216]: T_VARIABLE => $something
	Process token  217 : T_CLOSE_PARENTHESIS => )
	Process token [218]: T_WHITESPACE =>  
	Process token  219 : T_OPEN_CURLY_BRACKET => {
	Process token [220]: T_WHITESPACE => \n            
	Process token [221]: T_ECHO => echo
	Process token [222]: T_WHITESPACE =>  
	Process token [223]: T_VARIABLE => $string
	Process token  224 : T_OPEN_CURLY_BRACKET => {
	Process token [225]: T_LNUMBER => 1
	Process token  226 : T_CLOSE_CURLY_BRACKET => }
	Process token  227 : T_SEMICOLON => ;
	Process token [228]: T_WHITESPACE => \n        
	Process token  229 : T_CLOSE_CURLY_BRACKET => }
	Process token [230]: T_WHITESPACE =>  
	Process token [231]: T_ELSE => else
	Process token [232]: T_WHITESPACE =>  
	Process token [233]: T_IF => if
	Process token [234]: T_WHITESPACE =>  
	Process token  235 : T_OPEN_PARENTHESIS => (
	Process token [236]: T_VARIABLE => $else
	Process token  237 : T_CLOSE_PARENTHESIS => )
	Process token [238]: T_WHITESPACE =>  
	Process token  239 : T_OPEN_CURLY_BRACKET => {
	Process token [240]: T_WHITESPACE => \n            
	Process token [241]: T_SWITCH => switch
	Process token [242]: T_WHITESPACE =>  
	Process token  243 : T_OPEN_PARENTHESIS => (
	Process token [244]: T_VARIABLE => $else
	Process token  245 : T_CLOSE_PARENTHESIS => )
	Process token [246]: T_WHITESPACE =>  
	Process token  247 : T_OPEN_CURLY_BRACKET => {
	Process token [248]: T_WHITESPACE => \n            
	Process token [249]: T_CASE => case
	Process token [250]: T_WHITESPACE =>  
	Process token [251]: T_LNUMBER => 1
	Process token  252 : T_COLON => :
	Process token [253]: T_WHITESPACE => \n                
	Process token [254]: T_COMMENT => // Do something.\n
	Process token [255]: T_WHITESPACE =>                 
	Process token [256]: T_BREAK => break
	Process token  257 : T_SEMICOLON => ;
	Process token [258]: T_WHITESPACE => \n            
	Process token [259]: T_DEFAULT => default
	Process token  260 : T_COLON => :
	Process token [261]: T_WHITESPACE => \n                
	Process token [262]: T_COMMENT => // Do something.\n
	Process token [263]: T_WHITESPACE =>             
	Process token [264]: T_BREAK => break
	Process token  265 : T_SEMICOLON => ;
	Process token [266]: T_WHITESPACE => \n            
	Process token  267 : T_CLOSE_CURLY_BRACKET => }
	Process token [268]: T_WHITESPACE => \n        
	Process token  269 : T_CLOSE_CURLY_BRACKET => }
	Process token [270]: T_WHITESPACE => \n    
	Process token  271 : T_CLOSE_CURLY_BRACKET => }
	Process token [272]: T_WHITESPACE => \n
	Process token [273]: T_BREAK => break
	Process token  274 : T_SEMICOLON => ;
	Process token [275]: T_WHITESPACE => \n
	Process token [276]: T_CASE => case
	Process token [277]: T_WHITESPACE =>  
	Process token [278]: T_LNUMBER => 2
	Process token  279 : T_COLON => :
	Process token [280]: T_WHITESPACE => \n    
	Process token [281]: T_COMMENT => // Do something;\n
	Process token [282]: T_WHITESPACE =>     
	Process token [283]: T_BREAK => break
	Process token  284 : T_SEMICOLON => ;
	Process token [285]: T_WHITESPACE => \n
	Process token  286 : T_CLOSE_CURLY_BRACKET => }
	Process token [287]: T_WHITESPACE => \n\n
	Process token [288]: T_SWITCH => switch
	Process token [289]: T_WHITESPACE =>  
	Process token  290 : T_OPEN_PARENTHESIS => (
	Process token [291]: T_VARIABLE => $httpResponseCode
	Process token  292 : T_CLOSE_PARENTHESIS => )
	Process token [293]: T_WHITESPACE =>  
	Process token  294 : T_OPEN_CURLY_BRACKET => {
	Process token [295]: T_WHITESPACE => \n    
	Process token [296]: T_CASE => case
	Process token [297]: T_WHITESPACE =>  
	Process token [298]: T_LNUMBER => 100
	Process token  299 : T_COLON => :
	Process token [300]: T_WHITESPACE => \n    
	Process token [301]: T_CASE => case
	Process token [302]: T_WHITESPACE =>  
	Process token [303]: T_LNUMBER => 101
	Process token  304 : T_COLON => :
	Process token [305]: T_WHITESPACE => \n    
	Process token [306]: T_CASE => case
	Process token [307]: T_WHITESPACE =>  
	Process token [308]: T_LNUMBER => 102
	Process token  309 : T_COLON => :
	Process token [310]: T_WHITESPACE => \n    
	Process token [311]: T_DEFAULT => default
	Process token  312 : T_COLON => :
	Process token [313]: T_WHITESPACE => \n        
	Process token [314]: T_RETURN => return
	Process token [315]: T_WHITESPACE =>  
	Process token [316]: T_CONSTANT_ENCAPSED_STRING => 'Unknown'
	Process token  317 : T_SEMICOLON => ;
	Process token [318]: T_WHITESPACE => \n
	Process token  319 : T_CLOSE_CURLY_BRACKET => }
	Process token [320]: T_WHITESPACE => \n\n
	Process token [321]: T_SWITCH => switch
	Process token [322]: T_WHITESPACE =>  
	Process token  323 : T_OPEN_PARENTHESIS => (
	Process token [324]: T_VARIABLE => $httpResponseCode
	Process token  325 : T_CLOSE_PARENTHESIS => )
	Process token [326]: T_WHITESPACE =>  
	Process token  327 : T_OPEN_CURLY_BRACKET => {
	Process token [328]: T_WHITESPACE => \n    
	Process token [329]: T_CASE => case
	Process token [330]: T_WHITESPACE =>  
	Process token [331]: T_LNUMBER => 100
	Process token  332 : T_COLON => :
	Process token [333]: T_WHITESPACE => \n    
	Process token [334]: T_CASE => case
	Process token [335]: T_WHITESPACE =>  
	Process token [336]: T_LNUMBER => 101
	Process token  337 : T_COLON => :
	Process token [338]: T_WHITESPACE => \n    
	Process token [339]: T_CASE => case
	Process token [340]: T_WHITESPACE =>  
	Process token [341]: T_LNUMBER => 102
	Process token  342 : T_COLON => :
	Process token [343]: T_WHITESPACE => \n        
	Process token [344]: T_RETURN => return
	Process token [345]: T_WHITESPACE =>  
	Process token [346]: T_CONSTANT_ENCAPSED_STRING => 'Processing.'
	Process token  347 : T_SEMICOLON => ;
	Process token [348]: T_WHITESPACE => \n    
	Process token [349]: T_DEFAULT => default
	Process token  350 : T_COLON => :
	Process token [351]: T_WHITESPACE => \n    
	Process token [352]: T_RETURN => return
	Process token [353]: T_WHITESPACE =>  
	Process token [354]: T_CONSTANT_ENCAPSED_STRING => 'Unknown'
	Process token  355 : T_SEMICOLON => ;
	Process token [356]: T_WHITESPACE => \n
	Process token  357 : T_CLOSE_CURLY_BRACKET => }
	Process token [358]: T_WHITESPACE => \n\n
	Process token [359]: T_SWITCH => switch
	Process token  360 : T_OPEN_PARENTHESIS => (
	Process token [361]: T_VARIABLE => $i
	Process token  362 : T_CLOSE_PARENTHESIS => )
	Process token [363]: T_WHITESPACE =>  
	Process token  364 : T_OPEN_CURLY_BRACKET => {
	Process token [365]: T_WHITESPACE => \n
	Process token [366]: T_CASE => case
	Process token [367]: T_WHITESPACE =>  
	Process token [368]: T_LNUMBER => 1
	Process token  369 : T_COLON => :
	Process token [370]: T_WHITESPACE =>  
	Process token  371 : T_OPEN_CURLY_BRACKET => {
	Process token  372 : T_CLOSE_CURLY_BRACKET => }
	Process token [373]: T_WHITESPACE => \n
	Process token  374 : T_CLOSE_CURLY_BRACKET => }
	Process token [375]: T_WHITESPACE => \n\n
	Process token [376]: T_SWITCH => switch
	Process token [377]: T_WHITESPACE =>  
	Process token  378 : T_OPEN_PARENTHESIS => (
	Process token [379]: T_VARIABLE => $httpResponseCode
	Process token  380 : T_CLOSE_PARENTHESIS => )
	Process token [381]: T_WHITESPACE =>  
	Process token  382 : T_OPEN_CURLY_BRACKET => {
	Process token [383]: T_WHITESPACE => \n    
	Process token [384]: T_CASE => case
	Process token [385]: T_WHITESPACE =>  
	Process token [386]: T_LNUMBER => 100
	Process token  387 : T_COLON => :
	Process token [388]: T_WHITESPACE => \n    
	Process token [389]: T_CASE => case
	Process token [390]: T_WHITESPACE =>  
	Process token [391]: T_LNUMBER => 101
	Process token  392 : T_COLON => :
	Process token [393]: T_WHITESPACE => \n    
	Process token [394]: T_CASE => case
	Process token [395]: T_WHITESPACE =>  
	Process token [396]: T_LNUMBER => 102
	Process token  397 : T_COLON => :
	Process token [398]: T_WHITESPACE => \n        
	Process token [399]: T_EXIT => exit
	Process token  400 : T_SEMICOLON => ;
	Process token [401]: T_WHITESPACE => \n    
	Process token [402]: T_DEFAULT => default
	Process token  403 : T_COLON => :
	Process token [404]: T_WHITESPACE => \n    
	Process token [405]: T_EXIT => exit
	Process token  406 : T_SEMICOLON => ;
	Process token [407]: T_WHITESPACE => \n
	Process token  408 : T_CLOSE_CURLY_BRACKET => }
	Process token [409]: T_WHITESPACE => \n\n
	Process token [410]: T_IF => if
	Process token [411]: T_WHITESPACE =>  
	Process token  412 : T_OPEN_PARENTHESIS => (
	Process token [413]: T_VARIABLE => $foo
	Process token  414 : T_CLOSE_PARENTHESIS => )
	Process token  415 : T_COLON => :
	Process token [416]: T_WHITESPACE => \n    
	Process token [417]: T_IF => if
	Process token [418]: T_WHITESPACE =>  
	Process token  419 : T_OPEN_PARENTHESIS => (
	Process token [420]: T_VARIABLE => $bar
	Process token  421 : T_CLOSE_PARENTHESIS => )
	Process token  422 : T_COLON => :
	Process token [423]: T_WHITESPACE => \n        
	Process token [424]: T_VARIABLE => $foo
	Process token [425]: T_WHITESPACE =>  
	Process token  426 : T_EQUAL => =
	Process token [427]: T_WHITESPACE =>  
	Process token [428]: T_LNUMBER => 1
	Process token  429 : T_SEMICOLON => ;
	Process token [430]: T_WHITESPACE => \n    
	Process token [431]: T_ELSEIF => elseif
	Process token [432]: T_WHITESPACE =>  
	Process token  433 : T_OPEN_PARENTHESIS => (
	Process token [434]: T_VARIABLE => $baz
	Process token  435 : T_CLOSE_PARENTHESIS => )
	Process token  436 : T_COLON => :
	Process token [437]: T_WHITESPACE => \n        
	Process token [438]: T_VARIABLE => $foo
	Process token [439]: T_WHITESPACE =>  
	Process token  440 : T_EQUAL => =
	Process token [441]: T_WHITESPACE =>  
	Process token [442]: T_LNUMBER => 2
	Process token  443 : T_SEMICOLON => ;
	Process token [444]: T_WHITESPACE => \n    
	Process token [445]: T_ENDIF => endif
	Process token  446 : T_SEMICOLON => ;
	Process token [447]: T_WHITESPACE => \n
	Process token [448]: T_ENDIF => endif
	Process token  449 : T_SEMICOLON => ;
	Process token [450]: T_WHITESPACE => \n\n
	Process token [451]: T_IF => if
	Process token [452]: T_WHITESPACE =>  
	Process token  453 : T_OPEN_PARENTHESIS => (
	Process token [454]: T_VARIABLE => $foo
	Process token  455 : T_CLOSE_PARENTHESIS => )
	Process token  456 : T_COLON => :
	Process token [457]: T_WHITESPACE => \n
	Process token [458]: T_ELSEIF => elseif
	Process token [459]: T_WHITESPACE =>  
	Process token  460 : T_OPEN_PARENTHESIS => (
	Process token [461]: T_VARIABLE => $baz
	Process token  462 : T_CLOSE_PARENTHESIS => )
	Process token  463 : T_COLON => :
	Process token [464]: T_WHITESPACE =>  
	Process token [465]: T_VARIABLE => $foo
	Process token [466]: T_WHITESPACE =>  
	Process token  467 : T_EQUAL => =
	Process token [468]: T_WHITESPACE =>  
	Process token [469]: T_LNUMBER => 2
	Process token  470 : T_SEMICOLON => ;
	Process token [471]: T_WHITESPACE => \n
	Process token [472]: T_ENDIF => endif
	Process token  473 : T_SEMICOLON => ;
	Process token [474]: T_WHITESPACE => \n\n
	Process token [475]: T_CLOSE_TAG => ?>\n
	Process token [476]: T_INLINE_HTML => <ul>\n    
	Process token [477]: T_OPEN_TAG => <?php 
	Process token [478]: T_FOREACH => foreach
	Process token [479]: T_WHITESPACE =>  
	Process token  480 : T_OPEN_PARENTHESIS => (
	Process token [481]: T_VARIABLE => $array
	Process token [482]: T_WHITESPACE =>  
	Process token [483]: T_AS => as
	Process token [484]: T_WHITESPACE =>  
	Process token [485]: T_VARIABLE => $value
	Process token  486 : T_CLOSE_PARENTHESIS => )
	Process token [487]: T_WHITESPACE =>  
	Process token  488 : T_COLON => :
	Process token [489]: T_WHITESPACE =>  
	Process token [490]: T_CLOSE_TAG => ?>\n
	Process token [491]: T_INLINE_HTML =>         <li>
	Process token [492]: T_OPEN_TAG => <?php 
	Process token [493]: T_ECHO => echo
	Process token [494]: T_WHITESPACE =>  
	Process token [495]: T_VARIABLE => $value
	Process token [496]: T_WHITESPACE =>  
	Process token [497]: T_CLOSE_TAG => ?>
	Process token [498]: T_INLINE_HTML => </li>\n    
	Process token [499]: T_OPEN_TAG => <?php 
	Process token [500]: T_ENDFOREACH => endforeach
	Process token [501]: T_WHITESPACE =>  
	Process token [502]: T_CLOSE_TAG => ?>\n
	Process token [503]: T_INLINE_HTML => </ul>\n<ul>\n    
	Process token [504]: T_OPEN_TAG => <?php 
	Process token [505]: T_FOREACH => foreach
	Process token [506]: T_WHITESPACE =>  
	Process token  507 : T_OPEN_PARENTHESIS => (
	Process token [508]: T_VARIABLE => $array
	Process token [509]: T_WHITESPACE =>  
	Process token [510]: T_AS => as
	Process token [511]: T_WHITESPACE =>  
	Process token [512]: T_VARIABLE => $value
	Process token  513 : T_CLOSE_PARENTHESIS => )
	Process token [514]: T_WHITESPACE =>  
	Process token  515 : T_COLON => :
	Process token [516]: T_WHITESPACE =>  
	Process token [517]: T_CLOSE_TAG => ?>\n
	Process token [518]: T_INLINE_HTML =>         <li>
	Process token [519]: T_OPEN_TAG => <?php 
	Process token [520]: T_ECHO => echo
	Process token [521]: T_WHITESPACE =>  
	Process token [522]: T_VARIABLE => $value
	Process token [523]: T_WHITESPACE =>  
	Process token [524]: T_CLOSE_TAG => ?>
	Process token [525]: T_INLINE_HTML => </li>\n
	Process token [526]: T_OPEN_TAG => <?php 
	Process token [527]: T_ENDFOREACH => endforeach
	Process token [528]: T_WHITESPACE =>  
	Process token [529]: T_CLOSE_TAG => ?>\n
	Process token [530]: T_INLINE_HTML => </ul>\n<ul>\n    
	Process token [531]: T_OPEN_TAG => <?php 
	Process token [532]: T_FOREACH => foreach
	Process token [533]: T_WHITESPACE =>  
	Process token  534 : T_OPEN_PARENTHESIS => (
	Process token [535]: T_VARIABLE => $array
	Process token [536]: T_WHITESPACE =>  
	Process token [537]: T_AS => as
	Process token [538]: T_WHITESPACE =>  
	Process token [539]: T_VARIABLE => $value
	Process token  540 : T_CLOSE_PARENTHESIS => )
	Process token [541]: T_WHITESPACE =>  
	Process token  542 : T_COLON => :
	Process token [543]: T_WHITESPACE =>  
	Process token [544]: T_CLOSE_TAG => ?>\n
	Process token [545]: T_INLINE_HTML =>         <li>
	Process token [546]: T_OPEN_TAG => <?php 
	Process token [547]: T_ECHO => echo
	Process token [548]: T_WHITESPACE =>  
	Process token [549]: T_VARIABLE => $value
	Process token [550]: T_WHITESPACE =>  
	Process token [551]: T_CLOSE_TAG => ?>
	Process token [552]: T_INLINE_HTML => </li>\n            
	Process token [553]: T_OPEN_TAG => <?php 
	Process token [554]: T_ENDFOREACH => endforeach
	Process token [555]: T_WHITESPACE =>  
	Process token [556]: T_CLOSE_TAG => ?>\n
	Process token [557]: T_INLINE_HTML => </ul>\n
	Process token [558]: T_OPEN_TAG => <?php\n
	Process token [559]: T_SWITCH => switch
	Process token [560]: T_WHITESPACE =>  
	Process token  561 : T_OPEN_PARENTHESIS => (
	Process token [562]: T_WHITESPACE =>  
	Process token [563]: T_VARIABLE => $a
	Process token [564]: T_WHITESPACE =>  
	Process token  565 : T_CLOSE_PARENTHESIS => )
	Process token [566]: T_WHITESPACE =>  
	Process token  567 : T_OPEN_CURLY_BRACKET => {
	Process token [568]: T_WHITESPACE => \n    
	Process token [569]: T_CASE => case
	Process token [570]: T_WHITESPACE =>  
	Process token [571]: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token  572 : T_COLON => :
	Process token [573]: T_WHITESPACE => \n        
	Process token [574]: T_DO => do
	Process token [575]: T_WHITESPACE =>  
	Process token  576 : T_OPEN_CURLY_BRACKET => {
	Process token [577]: T_WHITESPACE => \n            
	Process token [578]: T_VARIABLE => $a
	Process token [579]: T_WHITESPACE =>  
	Process token  580 : T_EQUAL => =
	Process token [581]: T_WHITESPACE =>  
	Process token [582]: T_CONSTANT_ENCAPSED_STRING => 'b'
	Process token  583 : T_SEMICOLON => ;
	Process token [584]: T_WHITESPACE => \n        
	Process token  585 : T_CLOSE_CURLY_BRACKET => }
	Process token [586]: T_WHITESPACE =>  
	Process token [587]: T_WHILE => while
	Process token [588]: T_WHITESPACE =>  
	Process token  589 : T_OPEN_PARENTHESIS => (
	Process token [590]: T_WHITESPACE =>  
	Process token [591]: T_VARIABLE => $a
	Process token [592]: T_WHITESPACE =>  
	Process token  593 : T_CLOSE_PARENTHESIS => )
	Process token  594 : T_SEMICOLON => ;
	Process token [595]: T_WHITESPACE => \n    
	Process token [596]: T_RETURN => return
	Process token [597]: T_WHITESPACE =>  
	Process token [598]: T_LNUMBER => 5
	Process token  599 : T_SEMICOLON => ;
	Process token [600]: T_WHITESPACE => \n\n    
	Process token [601]: T_CASE => case
	Process token [602]: T_WHITESPACE =>  
	Process token [603]: T_CONSTANT_ENCAPSED_STRING => 'bar'
	Process token  604 : T_COLON => :
	Process token [605]: T_WHITESPACE => \n        
	Process token [606]: T_FOREACH => foreach
	Process token [607]: T_WHITESPACE =>  
	Process token  608 : T_OPEN_PARENTHESIS => (
	Process token [609]: T_WHITESPACE =>  
	Process token [610]: T_VARIABLE => $a
	Process token [611]: T_WHITESPACE =>  
	Process token [612]: T_AS => as
	Process token [613]: T_WHITESPACE =>  
	Process token [614]: T_VARIABLE => $b
	Process token [615]: T_WHITESPACE =>  
	Process token  616 : T_CLOSE_PARENTHESIS => )
	Process token [617]: T_WHITESPACE =>  
	Process token  618 : T_OPEN_CURLY_BRACKET => {
	Process token [619]: T_WHITESPACE => \n            
	Process token [620]: T_VARIABLE => $e
	Process token [621]: T_WHITESPACE =>  
	Process token  622 : T_EQUAL => =
	Process token [623]: T_WHITESPACE =>  
	Process token [624]: T_CONSTANT_ENCAPSED_STRING => 'b'
	Process token  625 : T_SEMICOLON => ;
	Process token [626]: T_WHITESPACE => \n        
	Process token  627 : T_CLOSE_CURLY_BRACKET => }
	Process token [628]: T_WHITESPACE => \n    
	Process token [629]: T_RETURN => return
	Process token [630]: T_WHITESPACE =>  
	Process token [631]: T_LNUMBER => 5
	Process token  632 : T_SEMICOLON => ;
	Process token [633]: T_WHITESPACE => \n
	Process token  634 : T_CLOSE_CURLY_BRACKET => }
	Process token [635]: T_WHITESPACE => \n\n
	Process token [636]: T_CLOSE_TAG => ?>\n
	Process token [637]: T_OPEN_TAG => <?php 
	Process token [638]: T_VARIABLE => $_cartQty
	Process token [639]: T_WHITESPACE =>  
	Process token  640 : T_EQUAL => =
	Process token [641]: T_WHITESPACE =>  
	Process token [642]: T_VARIABLE => $this
	Process token [643]: T_OBJECT_OPERATOR => ->
	Process token [644]: T_STRING => getSummaryCount
	Process token  645 : T_OPEN_PARENTHESIS => (
	Process token  646 : T_CLOSE_PARENTHESIS => )
	Process token  647 : T_SEMICOLON => ;
	Process token [648]: T_WHITESPACE =>  
	Process token [649]: T_CLOSE_TAG => ?>\n
	Process token [650]: T_INLINE_HTML => <div id="minicart" 
	Process token [651]: T_OPEN_TAG => <?php 
	Process token [652]: T_IF => if
	Process token [653]: T_WHITESPACE =>  
	Process token  654 : T_OPEN_PARENTHESIS => (
	Process token [655]: T_VARIABLE => $_cartQty
	Process token [656]: T_WHITESPACE =>  
	Process token [657]: T_IS_EQUAL => ==
	Process token [658]: T_WHITESPACE =>  
	Process token [659]: T_LNUMBER => 0
	Process token  660 : T_CLOSE_PARENTHESIS => )
	Process token  661 : T_COLON => :
	Process token [662]: T_WHITESPACE =>  
	Process token [663]: T_CLOSE_TAG => ?>
	Process token [664]: T_INLINE_HTML => class="empty"
	Process token [665]: T_OPEN_TAG => <?php 
	Process token [666]: T_ENDIF => endif
	Process token  667 : T_SEMICOLON => ;
	Process token [668]: T_WHITESPACE =>  
	Process token [669]: T_CLOSE_TAG => ?>
	Process token [670]: T_INLINE_HTML => >\n
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	=> Found curly bracket opener at 6
		=> Found curly bracket opener at 18
		=> Found curly bracket closer at 21 for 18
		=> Found curly bracket opener at 32
		=> Found curly bracket closer at 35 for 32
		=> Found curly bracket opener at 45
		=> Found curly bracket closer at 46 for 45
		=> Found curly bracket opener at 59
		=> Found curly bracket closer at 62 for 59
	=> Found curly bracket closer at 65 for 6
	=> Found curly bracket opener at 73
	=> Found curly bracket closer at 76 for 73
	=> Found curly bracket opener at 86
		=> Found curly bracket opener at 93
		=> Found curly bracket closer at 95 for 93
		=> Found curly bracket opener at 98
			=> Found curly bracket opener at 106
			=> Found curly bracket closer at 108 for 106
		=> Found curly bracket closer at 111 for 98
		=> Found curly bracket opener at 126
		=> Found curly bracket closer at 135 for 126
		=> Found curly bracket opener at 140
		=> Found curly bracket closer at 142 for 140
		=> Found square bracket opener at 161
		=> Found square bracket closer at 163 for 161
		=> Found curly bracket opener at 170
		=> Found curly bracket closer at 172 for 170
	=> Found curly bracket closer at 175 for 86
	=> Found curly bracket opener at 188
		=> Found curly bracket opener at 197
		=> Found curly bracket closer at 202 for 197
		=> Found curly bracket opener at 212
		=> Found curly bracket closer at 217 for 212
	=> Found curly bracket closer at 219 for 188
	=> Found curly bracket opener at 228
		=> Found curly bracket opener at 242
			=> Found curly bracket opener at 255
				=> Found curly bracket opener at 261
				=> Found curly bracket closer at 263 for 261
			=> Found curly bracket closer at 267 for 255
			=> Found curly bracket opener at 277
				=> Found curly bracket opener at 286
				=> Found curly bracket closer at 311 for 286
			=> Found curly bracket closer at 314 for 277
		=> Found curly bracket closer at 317 for 242
	=> Found curly bracket closer at 333 for 228
	=> Found curly bracket opener at 342
	=> Found curly bracket closer at 372 for 342
	=> Found curly bracket opener at 381
	=> Found curly bracket closer at 417 for 381
	=> Found curly bracket opener at 425
		=> Found curly bracket opener at 432
		=> Found curly bracket closer at 433 for 432
	=> Found curly bracket closer at 435 for 425
	=> Found curly bracket opener at 444
	=> Found curly bracket closer at 476 for 444
	=> Found curly bracket opener at 650
		=> Found curly bracket opener at 661
		=> Found curly bracket closer at 672 for 661
		=> Found curly bracket opener at 709
		=> Found curly bracket closer at 720 for 709
	=> Found curly bracket closer at 728 for 650
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 2:T_CLASS => class
	=> Begin scope map recursion at token 2 with depth 1
	Process token 3 on line 3 []: T_WHITESPACE =>  
	Process token 4 on line 3 []: T_STRING => Test
	Process token 5 on line 3 []: T_WHITESPACE => \n
	Process token 6 on line 4 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 2:T_CLASS
	Process token 7 on line 4 [opener:6;]: T_WHITESPACE => \n
	Process token 8 on line 5 [opener:6;]: T_WHITESPACE =>     
	Process token 9 on line 5 [opener:6;]: T_PUBLIC => public
	Process token 10 on line 5 [opener:6;]: T_WHITESPACE =>  
	Process token 11 on line 5 [opener:6;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 11 with depth 2
		Process token 12 on line 5 []: T_WHITESPACE =>  
		Process token 13 on line 5 []: T_STRING => __construct
		Process token 14 on line 5 []: T_OPEN_PARENTHESIS => (
		Process token 15 on line 5 []: T_CLOSE_PARENTHESIS => )
		Process token 16 on line 5 []: T_WHITESPACE => \n
		Process token 17 on line 6 []: T_WHITESPACE =>     
		Process token 18 on line 6 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 11:T_FUNCTION
		Process token 19 on line 6 [opener:18;]: T_WHITESPACE => \n
		Process token 20 on line 7 [opener:18;]: T_WHITESPACE =>     
		Process token 21 on line 7 [opener:18;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (21:T_CLOSE_CURLY_BRACKET) for 11:T_FUNCTION
	Process token 22 on line 7 [opener:6;]: T_WHITESPACE => \n
	Process token 23 on line 8 [opener:6;]: T_WHITESPACE => \n
	Process token 24 on line 9 [opener:6;]: T_WHITESPACE =>     
	Process token 25 on line 9 [opener:6;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 25 with depth 2
		Process token 26 on line 9 []: T_WHITESPACE =>  
		Process token 27 on line 9 []: T_STRING => test1
		Process token 28 on line 9 []: T_OPEN_PARENTHESIS => (
		Process token 29 on line 9 []: T_CLOSE_PARENTHESIS => )
		Process token 30 on line 9 []: T_WHITESPACE => \n
		Process token 31 on line 10 []: T_WHITESPACE =>     
		Process token 32 on line 10 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 25:T_FUNCTION
		Process token 33 on line 10 [opener:32;]: T_WHITESPACE => \n
		Process token 34 on line 11 [opener:32;]: T_WHITESPACE =>      
		Process token 35 on line 11 [opener:32;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (35:T_CLOSE_CURLY_BRACKET) for 25:T_FUNCTION
	Process token 36 on line 11 [opener:6;]: T_WHITESPACE => \n
	Process token 37 on line 12 [opener:6;]: T_WHITESPACE => \n
	Process token 38 on line 13 [opener:6;]: T_WHITESPACE =>     
	Process token 39 on line 13 [opener:6;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 39 with depth 2
		Process token 40 on line 13 []: T_WHITESPACE =>  
		Process token 41 on line 13 []: T_STRING => test2
		Process token 42 on line 13 []: T_OPEN_PARENTHESIS => (
		Process token 43 on line 13 []: T_CLOSE_PARENTHESIS => )
		Process token 44 on line 13 []: T_WHITESPACE =>  
		Process token 45 on line 13 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 39:T_FUNCTION
		Process token 46 on line 13 [opener:45;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (46:T_CLOSE_CURLY_BRACKET) for 39:T_FUNCTION
	Process token 47 on line 13 [opener:6;]: T_WHITESPACE => \n
	Process token 48 on line 14 [opener:6;]: T_WHITESPACE => \n
	Process token 49 on line 15 [opener:6;]: T_WHITESPACE =>     
	Process token 50 on line 15 [opener:6;]: T_PRIVATE => private
	Process token 51 on line 15 [opener:6;]: T_WHITESPACE =>  
	Process token 52 on line 15 [opener:6;]: T_FUNCTION => function
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 52 with depth 2
		Process token 53 on line 15 []: T_WHITESPACE =>  
		Process token 54 on line 15 []: T_STRING => _test3
		Process token 55 on line 15 []: T_OPEN_PARENTHESIS => (
		Process token 56 on line 15 []: T_CLOSE_PARENTHESIS => )
		Process token 57 on line 15 []: T_WHITESPACE => \n
		Process token 58 on line 16 []: T_WHITESPACE =>     
		Process token 59 on line 16 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 52:T_FUNCTION
		Process token 60 on line 16 [opener:59;]: T_WHITESPACE => \n
		Process token 61 on line 17 [opener:59;]: T_WHITESPACE =>     
		Process token 62 on line 17 [opener:59;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (62:T_CLOSE_CURLY_BRACKET) for 52:T_FUNCTION
	Process token 63 on line 17 [opener:6;]: T_WHITESPACE => \n
	Process token 64 on line 18 [opener:6;]: T_WHITESPACE => \n
	Process token 65 on line 19 [opener:6;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (65:T_CLOSE_CURLY_BRACKET) for 2:T_CLASS
	Start scope map at 69:T_CLASS => class
	=> Begin scope map recursion at token 69 with depth 1
	Process token 70 on line 22 []: T_WHITESPACE =>  
	Process token 71 on line 22 []: T_STRING => Test2
	Process token 72 on line 22 []: T_WHITESPACE => \n
	Process token 73 on line 23 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 69:T_CLASS
	Process token 74 on line 23 [opener:73;]: T_WHITESPACE => \n
	Process token 75 on line 24 [opener:73;]: T_WHITESPACE =>  
	Process token 76 on line 24 [opener:73;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (76:T_CLOSE_CURLY_BRACKET) for 69:T_CLASS
	Start scope map at 80:T_FUNCTION => function
	=> Begin scope map recursion at token 80 with depth 1
	Process token 81 on line 27 []: T_WHITESPACE =>  
	Process token 82 on line 27 []: T_STRING => test2
	Process token 83 on line 27 []: T_OPEN_PARENTHESIS => (
	Process token 84 on line 27 []: T_CLOSE_PARENTHESIS => )
	Process token 85 on line 27 []: T_WHITESPACE => \n
	Process token 86 on line 28 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 80:T_FUNCTION
	Process token 87 on line 28 [opener:86;]: T_WHITESPACE => \n
	Process token 88 on line 29 [opener:86;]: T_WHITESPACE =>     
	Process token 89 on line 29 [opener:86;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 89 with depth 2
		Process token 90 on line 29 []: T_WHITESPACE =>  
		Process token 91 on line 29 []: T_OPEN_PARENTHESIS => (
		Process token 92 on line 29 []: T_VARIABLE => $str
		Process token 93 on line 29 []: T_OPEN_CURLY_BRACKET => {
		* ignoring curly brace inside condition *
		Process token 94 on line 29 [ignore=1;]: T_LNUMBER => 0
		Process token 95 on line 29 [ignore=1;]: T_CLOSE_CURLY_BRACKET => }
		* finished ignoring curly brace *
		Process token 96 on line 29 []: T_CLOSE_PARENTHESIS => )
		Process token 97 on line 29 []: T_WHITESPACE =>  
		Process token 98 on line 29 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 89:T_IF
		Process token 99 on line 29 [opener:98;]: T_WHITESPACE => \n
		Process token 100 on line 30 [opener:98;]: T_WHITESPACE =>         
		Process token 101 on line 30 [opener:98;]: T_VARIABLE => $chr
		Process token 102 on line 30 [opener:98;]: T_WHITESPACE =>  
		Process token 103 on line 30 [opener:98;]: T_EQUAL => =
		Process token 104 on line 30 [opener:98;]: T_WHITESPACE =>  
		Process token 105 on line 30 [opener:98;]: T_VARIABLE => $str
		Process token 106 on line 30 [opener:98;]: T_OPEN_CURLY_BRACKET => {
		* ignoring curly brace *
		Process token 107 on line 30 [opener:98;ignore=1;]: T_LNUMBER => 0
		Process token 108 on line 30 [opener:98;ignore=1;]: T_CLOSE_CURLY_BRACKET => }
		* finished ignoring curly brace *
		Process token 109 on line 30 [opener:98;]: T_SEMICOLON => ;
		Process token 110 on line 30 [opener:98;]: T_WHITESPACE =>  
		Process token 111 on line 30 [opener:98;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (111:T_CLOSE_CURLY_BRACKET) for 89:T_IF
	Process token 112 on line 30 [opener:86;]: T_WHITESPACE => \n
	Process token 113 on line 31 [opener:86;]: T_WHITESPACE => \n
	Process token 114 on line 32 [opener:86;]: T_WHITESPACE => \n
	Process token 115 on line 33 [opener:86;]: T_WHITESPACE =>     
	Process token 116 on line 33 [opener:86;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 116 with depth 2
		Process token 117 on line 33 []: T_WHITESPACE =>  
		Process token 118 on line 33 []: T_OPEN_PARENTHESIS => (
		Process token 119 on line 33 []: T_BOOLEAN_NOT => !
		Process token 120 on line 33 []: T_STRING => class_exists
		Process token 121 on line 33 []: T_OPEN_PARENTHESIS => (
		Process token 122 on line 33 []: T_VARIABLE => $class_name
		Process token 123 on line 33 []: T_CLOSE_PARENTHESIS => )
		Process token 124 on line 33 []: T_CLOSE_PARENTHESIS => )
		Process token 125 on line 33 []: T_WHITESPACE =>  
		Process token 126 on line 33 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 116:T_IF
		Process token 127 on line 33 [opener:126;]: T_WHITESPACE => \n
		Process token 128 on line 34 [opener:126;]: T_WHITESPACE =>         
		Process token 129 on line 34 [opener:126;]: T_ECHO => echo
		Process token 130 on line 34 [opener:126;]: T_WHITESPACE =>  
		Process token 131 on line 34 [opener:126;]: T_VARIABLE => $error
		Process token 132 on line 34 [opener:126;]: T_SEMICOLON => ;
		Process token 133 on line 34 [opener:126;]: T_WHITESPACE => \n
		Process token 134 on line 35 [opener:126;]: T_WHITESPACE =>     
		Process token 135 on line 35 [opener:126;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (135:T_CLOSE_CURLY_BRACKET) for 116:T_IF
	Process token 136 on line 35 [opener:86;]: T_WHITESPACE => \n
	Process token 137 on line 36 [opener:86;]: T_WHITESPACE =>     
	Process token 138 on line 36 [opener:86;]: T_VARIABLE => $this
	Process token 139 on line 36 [opener:86;]: T_OBJECT_OPERATOR => ->
	Process token 140 on line 36 [opener:86;]: T_OPEN_CURLY_BRACKET => {
	* ignoring curly brace *
	Process token 141 on line 36 [opener:86;ignore=1;]: T_VARIABLE => $property
	Process token 142 on line 36 [opener:86;ignore=1;]: T_CLOSE_CURLY_BRACKET => }
	* finished ignoring curly brace *
	Process token 143 on line 36 [opener:86;]: T_WHITESPACE =>  
	Process token 144 on line 36 [opener:86;]: T_EQUAL => =
	Process token 145 on line 36 [opener:86;]: T_BITWISE_AND => &
	Process token 146 on line 36 [opener:86;]: T_WHITESPACE =>  
	Process token 147 on line 36 [opener:86;]: T_NEW => new
	Process token 148 on line 36 [opener:86;]: T_WHITESPACE =>  
	Process token 149 on line 36 [opener:86;]: T_VARIABLE => $class_name
	Process token 150 on line 36 [opener:86;]: T_OPEN_PARENTHESIS => (
	Process token 151 on line 36 [opener:86;]: T_VARIABLE => $this
	Process token 152 on line 36 [opener:86;]: T_OBJECT_OPERATOR => ->
	Process token 153 on line 36 [opener:86;]: T_STRING => db_index
	Process token 154 on line 36 [opener:86;]: T_CLOSE_PARENTHESIS => )
	Process token 155 on line 36 [opener:86;]: T_SEMICOLON => ;
	Process token 156 on line 36 [opener:86;]: T_WHITESPACE => \n
	Process token 157 on line 37 [opener:86;]: T_WHITESPACE =>     
	Process token 158 on line 37 [opener:86;]: T_VARIABLE => $this
	Process token 159 on line 37 [opener:86;]: T_OBJECT_OPERATOR => ->
	Process token 160 on line 37 [opener:86;]: T_STRING => modules
	Process token 161 on line 37 [opener:86;]: T_OPEN_SQUARE_BRACKET => [
	Process token 162 on line 37 [opener:86;]: T_VARIABLE => $module
	Process token 163 on line 37 [opener:86;]: T_CLOSE_SQUARE_BRACKET => ]
	Process token 164 on line 37 [opener:86;]: T_WHITESPACE =>  
	Process token 165 on line 37 [opener:86;]: T_EQUAL => =
	Process token 166 on line 37 [opener:86;]: T_BITWISE_AND => &
	Process token 167 on line 37 [opener:86;]: T_WHITESPACE =>  
	Process token 168 on line 37 [opener:86;]: T_VARIABLE => $this
	Process token 169 on line 37 [opener:86;]: T_OBJECT_OPERATOR => ->
	Process token 170 on line 37 [opener:86;]: T_OPEN_CURLY_BRACKET => {
	* ignoring curly brace *
	Process token 171 on line 37 [opener:86;ignore=1;]: T_VARIABLE => $property
	Process token 172 on line 37 [opener:86;ignore=1;]: T_CLOSE_CURLY_BRACKET => }
	* finished ignoring curly brace *
	Process token 173 on line 37 [opener:86;]: T_SEMICOLON => ;
	Process token 174 on line 37 [opener:86;]: T_WHITESPACE => \n
	Process token 175 on line 38 [opener:86;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (175:T_CLOSE_CURLY_BRACKET) for 80:T_FUNCTION
	Start scope map at 178:T_FOREACH => foreach
	=> Begin scope map recursion at token 178 with depth 1
	Process token 179 on line 40 []: T_WHITESPACE =>  
	Process token 180 on line 40 []: T_OPEN_PARENTHESIS => (
	Process token 181 on line 40 []: T_VARIABLE => $elements
	Process token 182 on line 40 []: T_WHITESPACE =>  
	Process token 183 on line 40 []: T_AS => as
	Process token 184 on line 40 []: T_WHITESPACE =>  
	Process token 185 on line 40 []: T_VARIABLE => $element
	Process token 186 on line 40 []: T_CLOSE_PARENTHESIS => )
	Process token 187 on line 40 []: T_WHITESPACE =>  
	Process token 188 on line 40 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 178:T_FOREACH
	Process token 189 on line 40 [opener:188;]: T_WHITESPACE => \n
	Process token 190 on line 41 [opener:188;]: T_WHITESPACE =>     
	Process token 191 on line 41 [opener:188;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 191 with depth 2
		Process token 192 on line 41 []: T_WHITESPACE =>  
		Process token 193 on line 41 []: T_OPEN_PARENTHESIS => (
		Process token 194 on line 41 []: T_VARIABLE => $something
		Process token 195 on line 41 []: T_CLOSE_PARENTHESIS => )
		Process token 196 on line 41 []: T_WHITESPACE =>  
		Process token 197 on line 41 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 191:T_IF
		Process token 198 on line 41 [opener:197;]: T_WHITESPACE => \n
		Process token 199 on line 42 [opener:197;]: T_WHITESPACE =>         
		Process token 200 on line 42 [opener:197;]: T_COMMENT => // Do IF.\n
		Process token 201 on line 43 [opener:197;]: T_WHITESPACE =>     
		Process token 202 on line 43 [opener:197;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (202:T_CLOSE_CURLY_BRACKET) for 191:T_IF
	Process token 203 on line 43 [opener:188;]: T_WHITESPACE =>  
	Process token 204 on line 43 [opener:188;]: T_ELSE => else
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 204 with depth 2
		Process token 205 on line 43 []: T_WHITESPACE =>  
		Process token 206 on line 43 []: T_IF => if
		=> Found new opening condition before scope opener for 204:T_ELSE, backtracking
	Process token 205 on line 43 [opener:188;]: T_WHITESPACE =>  
	Process token 206 on line 43 [opener:188;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 206 with depth 2
		Process token 207 on line 43 []: T_WHITESPACE =>  
		Process token 208 on line 43 []: T_OPEN_PARENTHESIS => (
		Process token 209 on line 43 []: T_VARIABLE => $somethingElse
		Process token 210 on line 43 []: T_CLOSE_PARENTHESIS => )
		Process token 211 on line 43 []: T_WHITESPACE =>  
		Process token 212 on line 43 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 206:T_IF
		Process token 213 on line 43 [opener:212;]: T_WHITESPACE => \n
		Process token 214 on line 44 [opener:212;]: T_WHITESPACE =>         
		Process token 215 on line 44 [opener:212;]: T_COMMENT => // Do ELSE.\n
		Process token 216 on line 45 [opener:212;]: T_WHITESPACE =>     
		Process token 217 on line 45 [opener:212;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (217:T_CLOSE_CURLY_BRACKET) for 206:T_IF
	Process token 218 on line 45 [opener:188;]: T_WHITESPACE => \n
	Process token 219 on line 46 [opener:188;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (219:T_CLOSE_CURLY_BRACKET) for 178:T_FOREACH
	Start scope map at 222:T_SWITCH => switch
	=> Begin scope map recursion at token 222 with depth 1
	Process token 223 on line 48 []: T_WHITESPACE =>  
	Process token 224 on line 48 []: T_OPEN_PARENTHESIS => (
	Process token 225 on line 48 []: T_VARIABLE => $foo
	Process token 226 on line 48 []: T_CLOSE_PARENTHESIS => )
	Process token 227 on line 48 []: T_WHITESPACE =>  
	Process token 228 on line 48 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 222:T_SWITCH
	Process token 229 on line 48 [opener:228;]: T_WHITESPACE => \n
	Process token 230 on line 49 [opener:228;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 230 with depth 1
	Process token 231 on line 49 []: T_WHITESPACE =>  
	Process token 232 on line 49 []: T_LNUMBER => 1
	Process token 233 on line 49 []: T_COLON => :
	=> Found scope opener for 230:T_CASE
	Process token 234 on line 49 [opener:233;]: T_WHITESPACE => \n
	Process token 235 on line 50 [opener:233;]: T_WHITESPACE =>     
	Process token 236 on line 50 [opener:233;]: T_SWITCH => switch
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 236 with depth 2
		Process token 237 on line 50 []: T_WHITESPACE =>  
		Process token 238 on line 50 []: T_OPEN_PARENTHESIS => (
		Process token 239 on line 50 []: T_VARIABLE => $bar
		Process token 240 on line 50 []: T_CLOSE_PARENTHESIS => )
		Process token 241 on line 50 []: T_WHITESPACE =>  
		Process token 242 on line 50 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 236:T_SWITCH
		Process token 243 on line 50 [opener:242;]: T_WHITESPACE => \n
		Process token 244 on line 51 [opener:242;]: T_WHITESPACE =>     
		Process token 245 on line 51 [opener:242;]: T_DEFAULT => default
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 245 with depth 2
		Process token 246 on line 51 []: T_COLON => :
		=> Found scope opener for 245:T_DEFAULT
		Process token 247 on line 51 [opener:246;]: T_WHITESPACE => \n
		Process token 248 on line 52 [opener:246;]: T_WHITESPACE =>         
		Process token 249 on line 52 [opener:246;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 249 with depth 3
			Process token 250 on line 52 []: T_WHITESPACE =>  
			Process token 251 on line 52 []: T_OPEN_PARENTHESIS => (
			Process token 252 on line 52 []: T_VARIABLE => $something
			Process token 253 on line 52 []: T_CLOSE_PARENTHESIS => )
			Process token 254 on line 52 []: T_WHITESPACE =>  
			Process token 255 on line 52 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 249:T_IF
			Process token 256 on line 52 [opener:255;]: T_WHITESPACE => \n
			Process token 257 on line 53 [opener:255;]: T_WHITESPACE =>             
			Process token 258 on line 53 [opener:255;]: T_ECHO => echo
			Process token 259 on line 53 [opener:255;]: T_WHITESPACE =>  
			Process token 260 on line 53 [opener:255;]: T_VARIABLE => $string
			Process token 261 on line 53 [opener:255;]: T_OPEN_CURLY_BRACKET => {
			* ignoring curly brace *
			Process token 262 on line 53 [opener:255;ignore=1;]: T_LNUMBER => 1
			Process token 263 on line 53 [opener:255;ignore=1;]: T_CLOSE_CURLY_BRACKET => }
			* finished ignoring curly brace *
			Process token 264 on line 53 [opener:255;]: T_SEMICOLON => ;
			Process token 265 on line 53 [opener:255;]: T_WHITESPACE => \n
			Process token 266 on line 54 [opener:255;]: T_WHITESPACE =>         
			Process token 267 on line 54 [opener:255;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (267:T_CLOSE_CURLY_BRACKET) for 249:T_IF
		Process token 268 on line 54 [opener:246;]: T_WHITESPACE =>  
		Process token 269 on line 54 [opener:246;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 269 with depth 3
			Process token 270 on line 54 []: T_WHITESPACE =>  
			Process token 271 on line 54 []: T_IF => if
			=> Found new opening condition before scope opener for 269:T_ELSE, backtracking
		Process token 270 on line 54 [opener:246;]: T_WHITESPACE =>  
		Process token 271 on line 54 [opener:246;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 271 with depth 3
			Process token 272 on line 54 []: T_WHITESPACE =>  
			Process token 273 on line 54 []: T_OPEN_PARENTHESIS => (
			Process token 274 on line 54 []: T_VARIABLE => $else
			Process token 275 on line 54 []: T_CLOSE_PARENTHESIS => )
			Process token 276 on line 54 []: T_WHITESPACE =>  
			Process token 277 on line 54 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 271:T_IF
			Process token 278 on line 54 [opener:277;]: T_WHITESPACE => \n
			Process token 279 on line 55 [opener:277;]: T_WHITESPACE =>             
			Process token 280 on line 55 [opener:277;]: T_SWITCH => switch
			* token is an opening condition *
			* searching for opener *
				=> Begin scope map recursion at token 280 with depth 4
				Process token 281 on line 55 []: T_WHITESPACE =>  
				Process token 282 on line 55 []: T_OPEN_PARENTHESIS => (
				Process token 283 on line 55 []: T_VARIABLE => $else
				Process token 284 on line 55 []: T_CLOSE_PARENTHESIS => )
				Process token 285 on line 55 []: T_WHITESPACE =>  
				Process token 286 on line 55 []: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 280:T_SWITCH
				Process token 287 on line 55 [opener:286;]: T_WHITESPACE => \n
				Process token 288 on line 56 [opener:286;]: T_WHITESPACE =>             
				Process token 289 on line 56 [opener:286;]: T_CASE => case
				* token is an opening condition *
				* searching for opener *
				=> Begin scope map recursion at token 289 with depth 4
				Process token 290 on line 56 []: T_WHITESPACE =>  
				Process token 291 on line 56 []: T_LNUMBER => 1
				Process token 292 on line 56 []: T_COLON => :
				=> Found scope opener for 289:T_CASE
				Process token 293 on line 56 [opener:292;]: T_WHITESPACE => \n
				Process token 294 on line 57 [opener:292;]: T_WHITESPACE =>                 
				Process token 295 on line 57 [opener:292;]: T_COMMENT => // Do something.\n
				Process token 296 on line 58 [opener:292;]: T_WHITESPACE =>                 
				Process token 297 on line 58 [opener:292;]: T_BREAK => break
				=> Found scope closer (297:T_BREAK) for 289:T_CASE
				Process token 293 on line 56 [opener:286;]: T_WHITESPACE => \n
				Process token 294 on line 57 [opener:286;]: T_WHITESPACE =>                 
				Process token 295 on line 57 [opener:286;]: T_COMMENT => // Do something.\n
				Process token 296 on line 58 [opener:286;]: T_WHITESPACE =>                 
				Process token 297 on line 58 [opener:286;]: T_BREAK => break
				Process token 298 on line 58 [opener:286;]: T_SEMICOLON => ;
				Process token 299 on line 58 [opener:286;]: T_WHITESPACE => \n
				Process token 300 on line 59 [opener:286;]: T_WHITESPACE =>             
				Process token 301 on line 59 [opener:286;]: T_DEFAULT => default
				* token is an opening condition *
				* searching for opener *
				=> Begin scope map recursion at token 301 with depth 4
				Process token 302 on line 59 []: T_COLON => :
				=> Found scope opener for 301:T_DEFAULT
				Process token 303 on line 59 [opener:302;]: T_WHITESPACE => \n
				Process token 304 on line 60 [opener:302;]: T_WHITESPACE =>                 
				Process token 305 on line 60 [opener:302;]: T_COMMENT => // Do something.\n
				Process token 306 on line 61 [opener:302;]: T_WHITESPACE =>             
				Process token 307 on line 61 [opener:302;]: T_BREAK => break
				=> Found scope closer (307:T_BREAK) for 301:T_DEFAULT
				Process token 303 on line 59 [opener:286;]: T_WHITESPACE => \n
				Process token 304 on line 60 [opener:286;]: T_WHITESPACE =>                 
				Process token 305 on line 60 [opener:286;]: T_COMMENT => // Do something.\n
				Process token 306 on line 61 [opener:286;]: T_WHITESPACE =>             
				Process token 307 on line 61 [opener:286;]: T_BREAK => break
				Process token 308 on line 61 [opener:286;]: T_SEMICOLON => ;
				Process token 309 on line 61 [opener:286;]: T_WHITESPACE => \n
				Process token 310 on line 62 [opener:286;]: T_WHITESPACE =>             
				Process token 311 on line 62 [opener:286;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer (311:T_CLOSE_CURLY_BRACKET) for 280:T_SWITCH
			Process token 312 on line 62 [opener:277;]: T_WHITESPACE => \n
			Process token 313 on line 63 [opener:277;]: T_WHITESPACE =>         
			Process token 314 on line 63 [opener:277;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (314:T_CLOSE_CURLY_BRACKET) for 271:T_IF
		Process token 315 on line 63 [opener:246;]: T_WHITESPACE => \n
		Process token 316 on line 64 [opener:246;]: T_WHITESPACE =>     
		Process token 317 on line 64 [opener:246;]: T_CLOSE_CURLY_BRACKET => }
		=> Found (unexpected) scope closer for 245:T_DEFAULT
		Process token 317 on line 64 [opener:242;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (317:T_CLOSE_CURLY_BRACKET) for 236:T_SWITCH
	Process token 318 on line 64 [opener:233;]: T_WHITESPACE => \n
	Process token 319 on line 65 [opener:233;]: T_BREAK => break
	=> Found scope closer (319:T_BREAK) for 230:T_CASE
	Process token 234 on line 49 [opener:228;]: T_WHITESPACE => \n
	Process token 235 on line 50 [opener:228;]: T_WHITESPACE =>     
	Process token 236 on line 50 [opener:228;]: T_SWITCH => switch
	* token is an opening condition *
	* already processed, skipping *
	Process token 318 on line 64 [opener:228;]: T_WHITESPACE => \n
	Process token 319 on line 65 [opener:228;]: T_BREAK => break
	Process token 320 on line 65 [opener:228;]: T_SEMICOLON => ;
	Process token 321 on line 65 [opener:228;]: T_WHITESPACE => \n
	Process token 322 on line 66 [opener:228;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 322 with depth 1
	Process token 323 on line 66 []: T_WHITESPACE =>  
	Process token 324 on line 66 []: T_LNUMBER => 2
	Process token 325 on line 66 []: T_COLON => :
	=> Found scope opener for 322:T_CASE
	Process token 326 on line 66 [opener:325;]: T_WHITESPACE => \n
	Process token 327 on line 67 [opener:325;]: T_WHITESPACE =>     
	Process token 328 on line 67 [opener:325;]: T_COMMENT => // Do something;\n
	Process token 329 on line 68 [opener:325;]: T_WHITESPACE =>     
	Process token 330 on line 68 [opener:325;]: T_BREAK => break
	=> Found scope closer (330:T_BREAK) for 322:T_CASE
	Process token 326 on line 66 [opener:228;]: T_WHITESPACE => \n
	Process token 327 on line 67 [opener:228;]: T_WHITESPACE =>     
	Process token 328 on line 67 [opener:228;]: T_COMMENT => // Do something;\n
	Process token 329 on line 68 [opener:228;]: T_WHITESPACE =>     
	Process token 330 on line 68 [opener:228;]: T_BREAK => break
	Process token 331 on line 68 [opener:228;]: T_SEMICOLON => ;
	Process token 332 on line 68 [opener:228;]: T_WHITESPACE => \n
	Process token 333 on line 69 [opener:228;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (333:T_CLOSE_CURLY_BRACKET) for 222:T_SWITCH
	Start scope map at 336:T_SWITCH => switch
	=> Begin scope map recursion at token 336 with depth 1
	Process token 337 on line 71 []: T_WHITESPACE =>  
	Process token 338 on line 71 []: T_OPEN_PARENTHESIS => (
	Process token 339 on line 71 []: T_VARIABLE => $httpResponseCode
	Process token 340 on line 71 []: T_CLOSE_PARENTHESIS => )
	Process token 341 on line 71 []: T_WHITESPACE =>  
	Process token 342 on line 71 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 336:T_SWITCH
	Process token 343 on line 71 [opener:342;]: T_WHITESPACE => \n
	Process token 344 on line 72 [opener:342;]: T_WHITESPACE =>     
	Process token 345 on line 72 [opener:342;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 345 with depth 1
	Process token 346 on line 72 []: T_WHITESPACE =>  
	Process token 347 on line 72 []: T_LNUMBER => 100
	Process token 348 on line 72 []: T_COLON => :
	=> Found scope opener for 345:T_CASE
	Process token 349 on line 72 [opener:348;]: T_WHITESPACE => \n
	Process token 350 on line 73 [opener:348;]: T_WHITESPACE =>     
	Process token 351 on line 73 [opener:348;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 351 with depth 1
	Process token 352 on line 73 []: T_WHITESPACE =>  
	Process token 353 on line 73 []: T_LNUMBER => 101
	Process token 354 on line 73 []: T_COLON => :
	=> Found scope opener for 351:T_CASE
	Process token 355 on line 73 [opener:354;]: T_WHITESPACE => \n
	Process token 356 on line 74 [opener:354;]: T_WHITESPACE =>     
	Process token 357 on line 74 [opener:354;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 357 with depth 1
	Process token 358 on line 74 []: T_WHITESPACE =>  
	Process token 359 on line 74 []: T_LNUMBER => 102
	Process token 360 on line 74 []: T_COLON => :
	=> Found scope opener for 357:T_CASE
	Process token 361 on line 74 [opener:360;]: T_WHITESPACE => \n
	Process token 362 on line 75 [opener:360;]: T_WHITESPACE =>     
	Process token 363 on line 75 [opener:360;]: T_DEFAULT => default
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 363 with depth 1
	Process token 364 on line 75 []: T_COLON => :
	=> Found scope opener for 363:T_DEFAULT
	Process token 365 on line 75 [opener:364;]: T_WHITESPACE => \n
	Process token 366 on line 76 [opener:364;]: T_WHITESPACE =>         
	Process token 367 on line 76 [opener:364;]: T_RETURN => return
	=> Found scope closer (367:T_RETURN) for 363:T_DEFAULT
	Process token 365 on line 75 [opener:360;]: T_WHITESPACE => \n
	Process token 366 on line 76 [opener:360;]: T_WHITESPACE =>         
	Process token 367 on line 76 [opener:360;]: T_RETURN => return
	=> Found scope closer (367:T_RETURN) for 357:T_CASE
	Process token 361 on line 74 [opener:354;]: T_WHITESPACE => \n
	Process token 362 on line 75 [opener:354;]: T_WHITESPACE =>     
	Process token 363 on line 75 [opener:354;]: T_DEFAULT => default
	* token is an opening condition *
	* already processed, skipping *
	Process token 364 on line 75 [opener:354;]: T_COLON => :
	Process token 365 on line 75 [opener:354;]: T_WHITESPACE => \n
	Process token 366 on line 76 [opener:354;]: T_WHITESPACE =>         
	Process token 367 on line 76 [opener:354;]: T_RETURN => return
	=> Found scope closer (367:T_RETURN) for 351:T_CASE
	Process token 355 on line 73 [opener:348;]: T_WHITESPACE => \n
	Process token 356 on line 74 [opener:348;]: T_WHITESPACE =>     
	Process token 357 on line 74 [opener:348;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 358 on line 74 [opener:348;]: T_WHITESPACE =>  
	Process token 359 on line 74 [opener:348;]: T_LNUMBER => 102
	Process token 360 on line 74 [opener:348;]: T_COLON => :
	Process token 361 on line 74 [opener:348;]: T_WHITESPACE => \n
	Process token 362 on line 75 [opener:348;]: T_WHITESPACE =>     
	Process token 363 on line 75 [opener:348;]: T_DEFAULT => default
	* token is an opening condition *
	* already processed, skipping *
	Process token 364 on line 75 [opener:348;]: T_COLON => :
	Process token 365 on line 75 [opener:348;]: T_WHITESPACE => \n
	Process token 366 on line 76 [opener:348;]: T_WHITESPACE =>         
	Process token 367 on line 76 [opener:348;]: T_RETURN => return
	=> Found scope closer (367:T_RETURN) for 345:T_CASE
	Process token 349 on line 72 [opener:342;]: T_WHITESPACE => \n
	Process token 350 on line 73 [opener:342;]: T_WHITESPACE =>     
	Process token 351 on line 73 [opener:342;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 352 on line 73 [opener:342;]: T_WHITESPACE =>  
	Process token 353 on line 73 [opener:342;]: T_LNUMBER => 101
	Process token 354 on line 73 [opener:342;]: T_COLON => :
	Process token 355 on line 73 [opener:342;]: T_WHITESPACE => \n
	Process token 356 on line 74 [opener:342;]: T_WHITESPACE =>     
	Process token 357 on line 74 [opener:342;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 358 on line 74 [opener:342;]: T_WHITESPACE =>  
	Process token 359 on line 74 [opener:342;]: T_LNUMBER => 102
	Process token 360 on line 74 [opener:342;]: T_COLON => :
	Process token 361 on line 74 [opener:342;]: T_WHITESPACE => \n
	Process token 362 on line 75 [opener:342;]: T_WHITESPACE =>     
	Process token 363 on line 75 [opener:342;]: T_DEFAULT => default
	* token is an opening condition *
	* already processed, skipping *
	Process token 364 on line 75 [opener:342;]: T_COLON => :
	Process token 365 on line 75 [opener:342;]: T_WHITESPACE => \n
	Process token 366 on line 76 [opener:342;]: T_WHITESPACE =>         
	Process token 367 on line 76 [opener:342;]: T_RETURN => return
	Process token 368 on line 76 [opener:342;]: T_WHITESPACE =>  
	Process token 369 on line 76 [opener:342;]: T_CONSTANT_ENCAPSED_STRING => 'Unknown'
	Process token 370 on line 76 [opener:342;]: T_SEMICOLON => ;
	Process token 371 on line 76 [opener:342;]: T_WHITESPACE => \n
	Process token 372 on line 77 [opener:342;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (372:T_CLOSE_CURLY_BRACKET) for 336:T_SWITCH
	Start scope map at 375:T_SWITCH => switch
	=> Begin scope map recursion at token 375 with depth 1
	Process token 376 on line 79 []: T_WHITESPACE =>  
	Process token 377 on line 79 []: T_OPEN_PARENTHESIS => (
	Process token 378 on line 79 []: T_VARIABLE => $httpResponseCode
	Process token 379 on line 79 []: T_CLOSE_PARENTHESIS => )
	Process token 380 on line 79 []: T_WHITESPACE =>  
	Process token 381 on line 79 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 375:T_SWITCH
	Process token 382 on line 79 [opener:381;]: T_WHITESPACE => \n
	Process token 383 on line 80 [opener:381;]: T_WHITESPACE =>     
	Process token 384 on line 80 [opener:381;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 384 with depth 1
	Process token 385 on line 80 []: T_WHITESPACE =>  
	Process token 386 on line 80 []: T_LNUMBER => 100
	Process token 387 on line 80 []: T_COLON => :
	=> Found scope opener for 384:T_CASE
	Process token 388 on line 80 [opener:387;]: T_WHITESPACE => \n
	Process token 389 on line 81 [opener:387;]: T_WHITESPACE =>     
	Process token 390 on line 81 [opener:387;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 390 with depth 1
	Process token 391 on line 81 []: T_WHITESPACE =>  
	Process token 392 on line 81 []: T_LNUMBER => 101
	Process token 393 on line 81 []: T_COLON => :
	=> Found scope opener for 390:T_CASE
	Process token 394 on line 81 [opener:393;]: T_WHITESPACE => \n
	Process token 395 on line 82 [opener:393;]: T_WHITESPACE =>     
	Process token 396 on line 82 [opener:393;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 396 with depth 1
	Process token 397 on line 82 []: T_WHITESPACE =>  
	Process token 398 on line 82 []: T_LNUMBER => 102
	Process token 399 on line 82 []: T_COLON => :
	=> Found scope opener for 396:T_CASE
	Process token 400 on line 82 [opener:399;]: T_WHITESPACE => \n
	Process token 401 on line 83 [opener:399;]: T_WHITESPACE =>         
	Process token 402 on line 83 [opener:399;]: T_RETURN => return
	=> Found scope closer (402:T_RETURN) for 396:T_CASE
	Process token 400 on line 82 [opener:393;]: T_WHITESPACE => \n
	Process token 401 on line 83 [opener:393;]: T_WHITESPACE =>         
	Process token 402 on line 83 [opener:393;]: T_RETURN => return
	=> Found scope closer (402:T_RETURN) for 390:T_CASE
	Process token 394 on line 81 [opener:387;]: T_WHITESPACE => \n
	Process token 395 on line 82 [opener:387;]: T_WHITESPACE =>     
	Process token 396 on line 82 [opener:387;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 397 on line 82 [opener:387;]: T_WHITESPACE =>  
	Process token 398 on line 82 [opener:387;]: T_LNUMBER => 102
	Process token 399 on line 82 [opener:387;]: T_COLON => :
	Process token 400 on line 82 [opener:387;]: T_WHITESPACE => \n
	Process token 401 on line 83 [opener:387;]: T_WHITESPACE =>         
	Process token 402 on line 83 [opener:387;]: T_RETURN => return
	=> Found scope closer (402:T_RETURN) for 384:T_CASE
	Process token 388 on line 80 [opener:381;]: T_WHITESPACE => \n
	Process token 389 on line 81 [opener:381;]: T_WHITESPACE =>     
	Process token 390 on line 81 [opener:381;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 391 on line 81 [opener:381;]: T_WHITESPACE =>  
	Process token 392 on line 81 [opener:381;]: T_LNUMBER => 101
	Process token 393 on line 81 [opener:381;]: T_COLON => :
	Process token 394 on line 81 [opener:381;]: T_WHITESPACE => \n
	Process token 395 on line 82 [opener:381;]: T_WHITESPACE =>     
	Process token 396 on line 82 [opener:381;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 397 on line 82 [opener:381;]: T_WHITESPACE =>  
	Process token 398 on line 82 [opener:381;]: T_LNUMBER => 102
	Process token 399 on line 82 [opener:381;]: T_COLON => :
	Process token 400 on line 82 [opener:381;]: T_WHITESPACE => \n
	Process token 401 on line 83 [opener:381;]: T_WHITESPACE =>         
	Process token 402 on line 83 [opener:381;]: T_RETURN => return
	Process token 403 on line 83 [opener:381;]: T_WHITESPACE =>  
	Process token 404 on line 83 [opener:381;]: T_CONSTANT_ENCAPSED_STRING => 'Processing.'
	Process token 405 on line 83 [opener:381;]: T_SEMICOLON => ;
	Process token 406 on line 83 [opener:381;]: T_WHITESPACE => \n
	Process token 407 on line 84 [opener:381;]: T_WHITESPACE =>     
	Process token 408 on line 84 [opener:381;]: T_DEFAULT => default
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 408 with depth 1
	Process token 409 on line 84 []: T_COLON => :
	=> Found scope opener for 408:T_DEFAULT
	Process token 410 on line 84 [opener:409;]: T_WHITESPACE => \n
	Process token 411 on line 85 [opener:409;]: T_WHITESPACE =>     
	Process token 412 on line 85 [opener:409;]: T_RETURN => return
	=> Found scope closer (412:T_RETURN) for 408:T_DEFAULT
	Process token 410 on line 84 [opener:381;]: T_WHITESPACE => \n
	Process token 411 on line 85 [opener:381;]: T_WHITESPACE =>     
	Process token 412 on line 85 [opener:381;]: T_RETURN => return
	Process token 413 on line 85 [opener:381;]: T_WHITESPACE =>  
	Process token 414 on line 85 [opener:381;]: T_CONSTANT_ENCAPSED_STRING => 'Unknown'
	Process token 415 on line 85 [opener:381;]: T_SEMICOLON => ;
	Process token 416 on line 85 [opener:381;]: T_WHITESPACE => \n
	Process token 417 on line 86 [opener:381;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (417:T_CLOSE_CURLY_BRACKET) for 375:T_SWITCH
	Start scope map at 420:T_SWITCH => switch
	=> Begin scope map recursion at token 420 with depth 1
	Process token 421 on line 88 []: T_OPEN_PARENTHESIS => (
	Process token 422 on line 88 []: T_VARIABLE => $i
	Process token 423 on line 88 []: T_CLOSE_PARENTHESIS => )
	Process token 424 on line 88 []: T_WHITESPACE =>  
	Process token 425 on line 88 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 420:T_SWITCH
	Process token 426 on line 88 [opener:425;]: T_WHITESPACE => \n
	Process token 427 on line 89 [opener:425;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 427 with depth 1
	Process token 428 on line 89 []: T_WHITESPACE =>  
	Process token 429 on line 89 []: T_LNUMBER => 1
	Process token 430 on line 89 []: T_COLON => :
	=> Found scope opener for 427:T_CASE
	Process token 431 on line 89 [opener:430;]: T_WHITESPACE =>  
	Process token 432 on line 89 [opener:430;]: T_OPEN_CURLY_BRACKET => {
	* ignoring curly brace *
	Process token 433 on line 89 [opener:430;ignore=1;]: T_CLOSE_CURLY_BRACKET => }
	* finished ignoring curly brace *
	Process token 434 on line 89 [opener:430;]: T_WHITESPACE => \n
	Process token 435 on line 90 [opener:430;]: T_CLOSE_CURLY_BRACKET => }
	=> Found (unexpected) scope closer for 427:T_CASE
	Process token 435 on line 90 [opener:425;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (435:T_CLOSE_CURLY_BRACKET) for 420:T_SWITCH
	Start scope map at 438:T_SWITCH => switch
	=> Begin scope map recursion at token 438 with depth 1
	Process token 439 on line 92 []: T_WHITESPACE =>  
	Process token 440 on line 92 []: T_OPEN_PARENTHESIS => (
	Process token 441 on line 92 []: T_VARIABLE => $httpResponseCode
	Process token 442 on line 92 []: T_CLOSE_PARENTHESIS => )
	Process token 443 on line 92 []: T_WHITESPACE =>  
	Process token 444 on line 92 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 438:T_SWITCH
	Process token 445 on line 92 [opener:444;]: T_WHITESPACE => \n
	Process token 446 on line 93 [opener:444;]: T_WHITESPACE =>     
	Process token 447 on line 93 [opener:444;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 447 with depth 1
	Process token 448 on line 93 []: T_WHITESPACE =>  
	Process token 449 on line 93 []: T_LNUMBER => 100
	Process token 450 on line 93 []: T_COLON => :
	=> Found scope opener for 447:T_CASE
	Process token 451 on line 93 [opener:450;]: T_WHITESPACE => \n
	Process token 452 on line 94 [opener:450;]: T_WHITESPACE =>     
	Process token 453 on line 94 [opener:450;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 453 with depth 1
	Process token 454 on line 94 []: T_WHITESPACE =>  
	Process token 455 on line 94 []: T_LNUMBER => 101
	Process token 456 on line 94 []: T_COLON => :
	=> Found scope opener for 453:T_CASE
	Process token 457 on line 94 [opener:456;]: T_WHITESPACE => \n
	Process token 458 on line 95 [opener:456;]: T_WHITESPACE =>     
	Process token 459 on line 95 [opener:456;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 459 with depth 1
	Process token 460 on line 95 []: T_WHITESPACE =>  
	Process token 461 on line 95 []: T_LNUMBER => 102
	Process token 462 on line 95 []: T_COLON => :
	=> Found scope opener for 459:T_CASE
	Process token 463 on line 95 [opener:462;]: T_WHITESPACE => \n
	Process token 464 on line 96 [opener:462;]: T_WHITESPACE =>         
	Process token 465 on line 96 [opener:462;]: T_EXIT => exit
	=> Found scope closer (465:T_EXIT) for 459:T_CASE
	Process token 463 on line 95 [opener:456;]: T_WHITESPACE => \n
	Process token 464 on line 96 [opener:456;]: T_WHITESPACE =>         
	Process token 465 on line 96 [opener:456;]: T_EXIT => exit
	=> Found scope closer (465:T_EXIT) for 453:T_CASE
	Process token 457 on line 94 [opener:450;]: T_WHITESPACE => \n
	Process token 458 on line 95 [opener:450;]: T_WHITESPACE =>     
	Process token 459 on line 95 [opener:450;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 460 on line 95 [opener:450;]: T_WHITESPACE =>  
	Process token 461 on line 95 [opener:450;]: T_LNUMBER => 102
	Process token 462 on line 95 [opener:450;]: T_COLON => :
	Process token 463 on line 95 [opener:450;]: T_WHITESPACE => \n
	Process token 464 on line 96 [opener:450;]: T_WHITESPACE =>         
	Process token 465 on line 96 [opener:450;]: T_EXIT => exit
	=> Found scope closer (465:T_EXIT) for 447:T_CASE
	Process token 451 on line 93 [opener:444;]: T_WHITESPACE => \n
	Process token 452 on line 94 [opener:444;]: T_WHITESPACE =>     
	Process token 453 on line 94 [opener:444;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 454 on line 94 [opener:444;]: T_WHITESPACE =>  
	Process token 455 on line 94 [opener:444;]: T_LNUMBER => 101
	Process token 456 on line 94 [opener:444;]: T_COLON => :
	Process token 457 on line 94 [opener:444;]: T_WHITESPACE => \n
	Process token 458 on line 95 [opener:444;]: T_WHITESPACE =>     
	Process token 459 on line 95 [opener:444;]: T_CASE => case
	* token is an opening condition *
	* already processed, skipping *
	Process token 460 on line 95 [opener:444;]: T_WHITESPACE =>  
	Process token 461 on line 95 [opener:444;]: T_LNUMBER => 102
	Process token 462 on line 95 [opener:444;]: T_COLON => :
	Process token 463 on line 95 [opener:444;]: T_WHITESPACE => \n
	Process token 464 on line 96 [opener:444;]: T_WHITESPACE =>         
	Process token 465 on line 96 [opener:444;]: T_EXIT => exit
	Process token 466 on line 96 [opener:444;]: T_SEMICOLON => ;
	Process token 467 on line 96 [opener:444;]: T_WHITESPACE => \n
	Process token 468 on line 97 [opener:444;]: T_WHITESPACE =>     
	Process token 469 on line 97 [opener:444;]: T_DEFAULT => default
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 469 with depth 1
	Process token 470 on line 97 []: T_COLON => :
	=> Found scope opener for 469:T_DEFAULT
	Process token 471 on line 97 [opener:470;]: T_WHITESPACE => \n
	Process token 472 on line 98 [opener:470;]: T_WHITESPACE =>     
	Process token 473 on line 98 [opener:470;]: T_EXIT => exit
	=> Found scope closer (473:T_EXIT) for 469:T_DEFAULT
	Process token 471 on line 97 [opener:444;]: T_WHITESPACE => \n
	Process token 472 on line 98 [opener:444;]: T_WHITESPACE =>     
	Process token 473 on line 98 [opener:444;]: T_EXIT => exit
	Process token 474 on line 98 [opener:444;]: T_SEMICOLON => ;
	Process token 475 on line 98 [opener:444;]: T_WHITESPACE => \n
	Process token 476 on line 99 [opener:444;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (476:T_CLOSE_CURLY_BRACKET) for 438:T_SWITCH
	Start scope map at 479:T_IF => if
	=> Begin scope map recursion at token 479 with depth 1
	Process token 480 on line 101 []: T_WHITESPACE =>  
	Process token 481 on line 101 []: T_OPEN_PARENTHESIS => (
	Process token 482 on line 101 []: T_VARIABLE => $foo
	Process token 483 on line 101 []: T_CLOSE_PARENTHESIS => )
	Process token 484 on line 101 []: T_COLON => :
	=> Found scope opener for 479:T_IF
	Process token 485 on line 101 [opener:484;]: T_WHITESPACE => \n
	Process token 486 on line 102 [opener:484;]: T_WHITESPACE =>     
	Process token 487 on line 102 [opener:484;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 487 with depth 2
		Process token 488 on line 102 []: T_WHITESPACE =>  
		Process token 489 on line 102 []: T_OPEN_PARENTHESIS => (
		Process token 490 on line 102 []: T_VARIABLE => $bar
		Process token 491 on line 102 []: T_CLOSE_PARENTHESIS => )
		Process token 492 on line 102 []: T_COLON => :
		=> Found scope opener for 487:T_IF
		Process token 493 on line 102 [opener:492;]: T_WHITESPACE => \n
		Process token 494 on line 103 [opener:492;]: T_WHITESPACE =>         
		Process token 495 on line 103 [opener:492;]: T_VARIABLE => $foo
		Process token 496 on line 103 [opener:492;]: T_WHITESPACE =>  
		Process token 497 on line 103 [opener:492;]: T_EQUAL => =
		Process token 498 on line 103 [opener:492;]: T_WHITESPACE =>  
		Process token 499 on line 103 [opener:492;]: T_LNUMBER => 1
		Process token 500 on line 103 [opener:492;]: T_SEMICOLON => ;
		Process token 501 on line 103 [opener:492;]: T_WHITESPACE => \n
		Process token 502 on line 104 [opener:492;]: T_WHITESPACE =>     
		Process token 503 on line 104 [opener:492;]: T_ELSEIF => elseif
		=> Found scope closer (503:T_ELSEIF) for 487:T_IF
		* closer needs to be tested *
			=> Begin scope map recursion at token 503 with depth 3
			Process token 504 on line 104 []: T_WHITESPACE =>  
			Process token 505 on line 104 []: T_OPEN_PARENTHESIS => (
			Process token 506 on line 104 []: T_VARIABLE => $baz
			Process token 507 on line 104 []: T_CLOSE_PARENTHESIS => )
			Process token 508 on line 104 []: T_COLON => :
			=> Found scope opener for 503:T_ELSEIF
			Process token 509 on line 104 [opener:508;]: T_WHITESPACE => \n
			Process token 510 on line 105 [opener:508;]: T_WHITESPACE =>         
			Process token 511 on line 105 [opener:508;]: T_VARIABLE => $foo
			Process token 512 on line 105 [opener:508;]: T_WHITESPACE =>  
			Process token 513 on line 105 [opener:508;]: T_EQUAL => =
			Process token 514 on line 105 [opener:508;]: T_WHITESPACE =>  
			Process token 515 on line 105 [opener:508;]: T_LNUMBER => 2
			Process token 516 on line 105 [opener:508;]: T_SEMICOLON => ;
			Process token 517 on line 105 [opener:508;]: T_WHITESPACE => \n
			Process token 518 on line 106 [opener:508;]: T_WHITESPACE =>     
			Process token 519 on line 106 [opener:508;]: T_ENDIF => endif
			=> Found scope closer (519:T_ENDIF) for 503:T_ELSEIF
		* closer was valid *
	Process token 520 on line 106 [opener:484;]: T_SEMICOLON => ;
	Process token 521 on line 106 [opener:484;]: T_WHITESPACE => \n
	Process token 522 on line 107 [opener:484;]: T_ENDIF => endif
	=> Found scope closer (522:T_ENDIF) for 479:T_IF
	Start scope map at 526:T_IF => if
	=> Begin scope map recursion at token 526 with depth 1
	Process token 527 on line 109 []: T_WHITESPACE =>  
	Process token 528 on line 109 []: T_OPEN_PARENTHESIS => (
	Process token 529 on line 109 []: T_VARIABLE => $foo
	Process token 530 on line 109 []: T_CLOSE_PARENTHESIS => )
	Process token 531 on line 109 []: T_COLON => :
	=> Found scope opener for 526:T_IF
	Process token 532 on line 109 [opener:531;]: T_WHITESPACE => \n
	Process token 533 on line 110 [opener:531;]: T_ELSEIF => elseif
	=> Found scope closer (533:T_ELSEIF) for 526:T_IF
	* closer needs to be tested *
		=> Begin scope map recursion at token 533 with depth 2
		Process token 534 on line 110 []: T_WHITESPACE =>  
		Process token 535 on line 110 []: T_OPEN_PARENTHESIS => (
		Process token 536 on line 110 []: T_VARIABLE => $baz
		Process token 537 on line 110 []: T_CLOSE_PARENTHESIS => )
		Process token 538 on line 110 []: T_COLON => :
		=> Found scope opener for 533:T_ELSEIF
		Process token 539 on line 110 [opener:538;]: T_WHITESPACE =>  
		Process token 540 on line 110 [opener:538;]: T_VARIABLE => $foo
		Process token 541 on line 110 [opener:538;]: T_WHITESPACE =>  
		Process token 542 on line 110 [opener:538;]: T_EQUAL => =
		Process token 543 on line 110 [opener:538;]: T_WHITESPACE =>  
		Process token 544 on line 110 [opener:538;]: T_LNUMBER => 2
		Process token 545 on line 110 [opener:538;]: T_SEMICOLON => ;
		Process token 546 on line 110 [opener:538;]: T_WHITESPACE => \n
		Process token 547 on line 111 [opener:538;]: T_ENDIF => endif
		=> Found scope closer (547:T_ENDIF) for 533:T_ELSEIF
	* closer was valid *
	Start scope map at 555:T_FOREACH => foreach
	=> Begin scope map recursion at token 555 with depth 1
	Process token 556 on line 115 []: T_WHITESPACE =>  
	Process token 557 on line 115 []: T_OPEN_PARENTHESIS => (
	Process token 558 on line 115 []: T_VARIABLE => $array
	Process token 559 on line 115 []: T_WHITESPACE =>  
	Process token 560 on line 115 []: T_AS => as
	Process token 561 on line 115 []: T_WHITESPACE =>  
	Process token 562 on line 115 []: T_VARIABLE => $value
	Process token 563 on line 115 []: T_CLOSE_PARENTHESIS => )
	Process token 564 on line 115 []: T_WHITESPACE =>  
	Process token 565 on line 115 []: T_COLON => :
	=> Found scope opener for 555:T_FOREACH
	Process token 566 on line 115 [opener:565;]: T_WHITESPACE =>  
	Process token 567 on line 115 [opener:565;]: T_CLOSE_TAG => ?>\n
	Process token 568 on line 116 [opener:565;]: T_INLINE_HTML =>         <li>
	Process token 569 on line 116 [opener:565;]: T_OPEN_TAG => <?php 
	Process token 570 on line 116 [opener:565;]: T_ECHO => echo
	Process token 571 on line 116 [opener:565;]: T_WHITESPACE =>  
	Process token 572 on line 116 [opener:565;]: T_VARIABLE => $value
	Process token 573 on line 116 [opener:565;]: T_WHITESPACE =>  
	Process token 574 on line 116 [opener:565;]: T_CLOSE_TAG => ?>
	Process token 575 on line 116 [opener:565;]: T_INLINE_HTML => </li>\n
	Process token 576 on line 117 [opener:565;]: T_INLINE_HTML =>     
	Process token 577 on line 117 [opener:565;]: T_OPEN_TAG => <?php 
	Process token 578 on line 117 [opener:565;]: T_ENDFOREACH => endforeach
	=> Found scope closer (578:T_ENDFOREACH) for 555:T_FOREACH
	Start scope map at 585:T_FOREACH => foreach
	=> Begin scope map recursion at token 585 with depth 1
	Process token 586 on line 120 []: T_WHITESPACE =>  
	Process token 587 on line 120 []: T_OPEN_PARENTHESIS => (
	Process token 588 on line 120 []: T_VARIABLE => $array
	Process token 589 on line 120 []: T_WHITESPACE =>  
	Process token 590 on line 120 []: T_AS => as
	Process token 591 on line 120 []: T_WHITESPACE =>  
	Process token 592 on line 120 []: T_VARIABLE => $value
	Process token 593 on line 120 []: T_CLOSE_PARENTHESIS => )
	Process token 594 on line 120 []: T_WHITESPACE =>  
	Process token 595 on line 120 []: T_COLON => :
	=> Found scope opener for 585:T_FOREACH
	Process token 596 on line 120 [opener:595;]: T_WHITESPACE =>  
	Process token 597 on line 120 [opener:595;]: T_CLOSE_TAG => ?>\n
	Process token 598 on line 121 [opener:595;]: T_INLINE_HTML =>         <li>
	Process token 599 on line 121 [opener:595;]: T_OPEN_TAG => <?php 
	Process token 600 on line 121 [opener:595;]: T_ECHO => echo
	Process token 601 on line 121 [opener:595;]: T_WHITESPACE =>  
	Process token 602 on line 121 [opener:595;]: T_VARIABLE => $value
	Process token 603 on line 121 [opener:595;]: T_WHITESPACE =>  
	Process token 604 on line 121 [opener:595;]: T_CLOSE_TAG => ?>
	Process token 605 on line 121 [opener:595;]: T_INLINE_HTML => </li>\n
	Process token 606 on line 122 [opener:595;]: T_OPEN_TAG => <?php 
	Process token 607 on line 122 [opener:595;]: T_ENDFOREACH => endforeach
	=> Found scope closer (607:T_ENDFOREACH) for 585:T_FOREACH
	Start scope map at 614:T_FOREACH => foreach
	=> Begin scope map recursion at token 614 with depth 1
	Process token 615 on line 125 []: T_WHITESPACE =>  
	Process token 616 on line 125 []: T_OPEN_PARENTHESIS => (
	Process token 617 on line 125 []: T_VARIABLE => $array
	Process token 618 on line 125 []: T_WHITESPACE =>  
	Process token 619 on line 125 []: T_AS => as
	Process token 620 on line 125 []: T_WHITESPACE =>  
	Process token 621 on line 125 []: T_VARIABLE => $value
	Process token 622 on line 125 []: T_CLOSE_PARENTHESIS => )
	Process token 623 on line 125 []: T_WHITESPACE =>  
	Process token 624 on line 125 []: T_COLON => :
	=> Found scope opener for 614:T_FOREACH
	Process token 625 on line 125 [opener:624;]: T_WHITESPACE =>  
	Process token 626 on line 125 [opener:624;]: T_CLOSE_TAG => ?>\n
	Process token 627 on line 126 [opener:624;]: T_INLINE_HTML =>         <li>
	Process token 628 on line 126 [opener:624;]: T_OPEN_TAG => <?php 
	Process token 629 on line 126 [opener:624;]: T_ECHO => echo
	Process token 630 on line 126 [opener:624;]: T_WHITESPACE =>  
	Process token 631 on line 126 [opener:624;]: T_VARIABLE => $value
	Process token 632 on line 126 [opener:624;]: T_WHITESPACE =>  
	Process token 633 on line 126 [opener:624;]: T_CLOSE_TAG => ?>
	Process token 634 on line 126 [opener:624;]: T_INLINE_HTML => </li>\n
	Process token 635 on line 127 [opener:624;]: T_INLINE_HTML =>             
	Process token 636 on line 127 [opener:624;]: T_OPEN_TAG => <?php 
	Process token 637 on line 127 [opener:624;]: T_ENDFOREACH => endforeach
	=> Found scope closer (637:T_ENDFOREACH) for 614:T_FOREACH
	Start scope map at 642:T_SWITCH => switch
	=> Begin scope map recursion at token 642 with depth 1
	Process token 643 on line 130 []: T_WHITESPACE =>  
	Process token 644 on line 130 []: T_OPEN_PARENTHESIS => (
	Process token 645 on line 130 []: T_WHITESPACE =>  
	Process token 646 on line 130 []: T_VARIABLE => $a
	Process token 647 on line 130 []: T_WHITESPACE =>  
	Process token 648 on line 130 []: T_CLOSE_PARENTHESIS => )
	Process token 649 on line 130 []: T_WHITESPACE =>  
	Process token 650 on line 130 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 642:T_SWITCH
	Process token 651 on line 130 [opener:650;]: T_WHITESPACE => \n
	Process token 652 on line 131 [opener:650;]: T_WHITESPACE =>     
	Process token 653 on line 131 [opener:650;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 653 with depth 1
	Process token 654 on line 131 []: T_WHITESPACE =>  
	Process token 655 on line 131 []: T_CONSTANT_ENCAPSED_STRING => 'foo'
	Process token 656 on line 131 []: T_COLON => :
	=> Found scope opener for 653:T_CASE
	Process token 657 on line 131 [opener:656;]: T_WHITESPACE => \n
	Process token 658 on line 132 [opener:656;]: T_WHITESPACE =>         
	Process token 659 on line 132 [opener:656;]: T_DO => do
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 659 with depth 2
		Process token 660 on line 132 []: T_WHITESPACE =>  
		Process token 661 on line 132 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 659:T_DO
		Process token 662 on line 132 [opener:661;]: T_WHITESPACE => \n
		Process token 663 on line 133 [opener:661;]: T_WHITESPACE =>             
		Process token 664 on line 133 [opener:661;]: T_VARIABLE => $a
		Process token 665 on line 133 [opener:661;]: T_WHITESPACE =>  
		Process token 666 on line 133 [opener:661;]: T_EQUAL => =
		Process token 667 on line 133 [opener:661;]: T_WHITESPACE =>  
		Process token 668 on line 133 [opener:661;]: T_CONSTANT_ENCAPSED_STRING => 'b'
		Process token 669 on line 133 [opener:661;]: T_SEMICOLON => ;
		Process token 670 on line 133 [opener:661;]: T_WHITESPACE => \n
		Process token 671 on line 134 [opener:661;]: T_WHITESPACE =>         
		Process token 672 on line 134 [opener:661;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (672:T_CLOSE_CURLY_BRACKET) for 659:T_DO
	Process token 673 on line 134 [opener:656;]: T_WHITESPACE =>  
	Process token 674 on line 134 [opener:656;]: T_WHILE => while
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 674 with depth 2
		Process token 675 on line 134 []: T_WHITESPACE =>  
		Process token 676 on line 134 []: T_OPEN_PARENTHESIS => (
		Process token 677 on line 134 []: T_WHITESPACE =>  
		Process token 678 on line 134 []: T_VARIABLE => $a
		Process token 679 on line 134 []: T_WHITESPACE =>  
		Process token 680 on line 134 []: T_CLOSE_PARENTHESIS => )
		Process token 681 on line 134 []: T_SEMICOLON => ;
		Process token 682 on line 134 []: T_WHITESPACE => \n
		Process token 683 on line 135 []: T_WHITESPACE =>     
		Process token 684 on line 135 []: T_RETURN => return
		Process token 685 on line 135 []: T_WHITESPACE =>  
		Process token 686 on line 135 []: T_LNUMBER => 5
		Process token 687 on line 135 []: T_SEMICOLON => ;
		Process token 688 on line 135 []: T_WHITESPACE => \n
		Process token 689 on line 136 []: T_WHITESPACE => \n
		Process token 690 on line 137 []: T_WHITESPACE =>     
		Process token 691 on line 137 []: T_CASE => case
		=> Found new opening condition before scope opener for 674:T_WHILE, backtracking
	Process token 675 on line 134 [opener:656;]: T_WHITESPACE =>  
	Process token 676 on line 134 [opener:656;]: T_OPEN_PARENTHESIS => (
	Process token 677 on line 134 [opener:656;]: T_WHITESPACE =>  
	Process token 678 on line 134 [opener:656;]: T_VARIABLE => $a
	Process token 679 on line 134 [opener:656;]: T_WHITESPACE =>  
	Process token 680 on line 134 [opener:656;]: T_CLOSE_PARENTHESIS => )
	Process token 681 on line 134 [opener:656;]: T_SEMICOLON => ;
	Process token 682 on line 134 [opener:656;]: T_WHITESPACE => \n
	Process token 683 on line 135 [opener:656;]: T_WHITESPACE =>     
	Process token 684 on line 135 [opener:656;]: T_RETURN => return
	=> Found scope closer (684:T_RETURN) for 653:T_CASE
	Process token 657 on line 131 [opener:650;]: T_WHITESPACE => \n
	Process token 658 on line 132 [opener:650;]: T_WHITESPACE =>         
	Process token 659 on line 132 [opener:650;]: T_DO => do
	* token is an opening condition *
	* already processed, skipping *
	Process token 673 on line 134 [opener:650;]: T_WHITESPACE =>  
	Process token 674 on line 134 [opener:650;]: T_WHILE => while
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 674 with depth 2
		Process token 675 on line 134 []: T_WHITESPACE =>  
		Process token 676 on line 134 []: T_OPEN_PARENTHESIS => (
		Process token 677 on line 134 []: T_WHITESPACE =>  
		Process token 678 on line 134 []: T_VARIABLE => $a
		Process token 679 on line 134 []: T_WHITESPACE =>  
		Process token 680 on line 134 []: T_CLOSE_PARENTHESIS => )
		Process token 681 on line 134 []: T_SEMICOLON => ;
		Process token 682 on line 134 []: T_WHITESPACE => \n
		Process token 683 on line 135 []: T_WHITESPACE =>     
		Process token 684 on line 135 []: T_RETURN => return
		Process token 685 on line 135 []: T_WHITESPACE =>  
		Process token 686 on line 135 []: T_LNUMBER => 5
		Process token 687 on line 135 []: T_SEMICOLON => ;
		Process token 688 on line 135 []: T_WHITESPACE => \n
		Process token 689 on line 136 []: T_WHITESPACE => \n
		Process token 690 on line 137 []: T_WHITESPACE =>     
		Process token 691 on line 137 []: T_CASE => case
		=> Found new opening condition before scope opener for 674:T_WHILE, backtracking
	Process token 675 on line 134 [opener:650;]: T_WHITESPACE =>  
	Process token 676 on line 134 [opener:650;]: T_OPEN_PARENTHESIS => (
	Process token 677 on line 134 [opener:650;]: T_WHITESPACE =>  
	Process token 678 on line 134 [opener:650;]: T_VARIABLE => $a
	Process token 679 on line 134 [opener:650;]: T_WHITESPACE =>  
	Process token 680 on line 134 [opener:650;]: T_CLOSE_PARENTHESIS => )
	Process token 681 on line 134 [opener:650;]: T_SEMICOLON => ;
	Process token 682 on line 134 [opener:650;]: T_WHITESPACE => \n
	Process token 683 on line 135 [opener:650;]: T_WHITESPACE =>     
	Process token 684 on line 135 [opener:650;]: T_RETURN => return
	Process token 685 on line 135 [opener:650;]: T_WHITESPACE =>  
	Process token 686 on line 135 [opener:650;]: T_LNUMBER => 5
	Process token 687 on line 135 [opener:650;]: T_SEMICOLON => ;
	Process token 688 on line 135 [opener:650;]: T_WHITESPACE => \n
	Process token 689 on line 136 [opener:650;]: T_WHITESPACE => \n
	Process token 690 on line 137 [opener:650;]: T_WHITESPACE =>     
	Process token 691 on line 137 [opener:650;]: T_CASE => case
	* token is an opening condition *
	* searching for opener *
	=> Begin scope map recursion at token 691 with depth 1
	Process token 692 on line 137 []: T_WHITESPACE =>  
	Process token 693 on line 137 []: T_CONSTANT_ENCAPSED_STRING => 'bar'
	Process token 694 on line 137 []: T_COLON => :
	=> Found scope opener for 691:T_CASE
	Process token 695 on line 137 [opener:694;]: T_WHITESPACE => \n
	Process token 696 on line 138 [opener:694;]: T_WHITESPACE =>         
	Process token 697 on line 138 [opener:694;]: T_FOREACH => foreach
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 697 with depth 2
		Process token 698 on line 138 []: T_WHITESPACE =>  
		Process token 699 on line 138 []: T_OPEN_PARENTHESIS => (
		Process token 700 on line 138 []: T_WHITESPACE =>  
		Process token 701 on line 138 []: T_VARIABLE => $a
		Process token 702 on line 138 []: T_WHITESPACE =>  
		Process token 703 on line 138 []: T_AS => as
		Process token 704 on line 138 []: T_WHITESPACE =>  
		Process token 705 on line 138 []: T_VARIABLE => $b
		Process token 706 on line 138 []: T_WHITESPACE =>  
		Process token 707 on line 138 []: T_CLOSE_PARENTHESIS => )
		Process token 708 on line 138 []: T_WHITESPACE =>  
		Process token 709 on line 138 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 697:T_FOREACH
		Process token 710 on line 138 [opener:709;]: T_WHITESPACE => \n
		Process token 711 on line 139 [opener:709;]: T_WHITESPACE =>             
		Process token 712 on line 139 [opener:709;]: T_VARIABLE => $e
		Process token 713 on line 139 [opener:709;]: T_WHITESPACE =>  
		Process token 714 on line 139 [opener:709;]: T_EQUAL => =
		Process token 715 on line 139 [opener:709;]: T_WHITESPACE =>  
		Process token 716 on line 139 [opener:709;]: T_CONSTANT_ENCAPSED_STRING => 'b'
		Process token 717 on line 139 [opener:709;]: T_SEMICOLON => ;
		Process token 718 on line 139 [opener:709;]: T_WHITESPACE => \n
		Process token 719 on line 140 [opener:709;]: T_WHITESPACE =>         
		Process token 720 on line 140 [opener:709;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (720:T_CLOSE_CURLY_BRACKET) for 697:T_FOREACH
	Process token 721 on line 140 [opener:694;]: T_WHITESPACE => \n
	Process token 722 on line 141 [opener:694;]: T_WHITESPACE =>     
	Process token 723 on line 141 [opener:694;]: T_RETURN => return
	=> Found scope closer (723:T_RETURN) for 691:T_CASE
	Process token 695 on line 137 [opener:650;]: T_WHITESPACE => \n
	Process token 696 on line 138 [opener:650;]: T_WHITESPACE =>         
	Process token 697 on line 138 [opener:650;]: T_FOREACH => foreach
	* token is an opening condition *
	* already processed, skipping *
	Process token 721 on line 140 [opener:650;]: T_WHITESPACE => \n
	Process token 722 on line 141 [opener:650;]: T_WHITESPACE =>     
	Process token 723 on line 141 [opener:650;]: T_RETURN => return
	Process token 724 on line 141 [opener:650;]: T_WHITESPACE =>  
	Process token 725 on line 141 [opener:650;]: T_LNUMBER => 5
	Process token 726 on line 141 [opener:650;]: T_SEMICOLON => ;
	Process token 727 on line 141 [opener:650;]: T_WHITESPACE => \n
	Process token 728 on line 142 [opener:650;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (728:T_CLOSE_CURLY_BRACKET) for 642:T_SWITCH
	Start scope map at 747:T_IF => if
	=> Begin scope map recursion at token 747 with depth 1
	Process token 748 on line 146 []: T_WHITESPACE =>  
	Process token 749 on line 146 []: T_OPEN_PARENTHESIS => (
	Process token 750 on line 146 []: T_VARIABLE => $_cartQty
	Process token 751 on line 146 []: T_WHITESPACE =>  
	Process token 752 on line 146 []: T_IS_EQUAL => ==
	Process token 753 on line 146 []: T_WHITESPACE =>  
	Process token 754 on line 146 []: T_LNUMBER => 0
	Process token 755 on line 146 []: T_CLOSE_PARENTHESIS => )
	Process token 756 on line 146 []: T_COLON => :
	=> Found scope opener for 747:T_IF
	Process token 757 on line 146 [opener:756;]: T_WHITESPACE =>  
	Process token 758 on line 146 [opener:756;]: T_CLOSE_TAG => ?>
	Process token 759 on line 146 [opener:756;]: T_INLINE_HTML => class="empty"
	Process token 760 on line 146 [opener:756;]: T_OPEN_TAG => <?php 
	Process token 761 on line 146 [opener:756;]: T_ENDIF => endif
	=> Found scope closer (761:T_ENDIF) for 747:T_IF
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:5;lvl:0;]: T_OPEN_TAG => <?php\n
	Process token 1 on line 2 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 2 on line 3 [col:1;len:5;lvl:0;]: T_CLASS => class
	Process token 3 on line 3 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 4 on line 3 [col:7;len:4;lvl:0;]: T_STRING => Test
	Process token 5 on line 3 [col:11;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 6 on line 4 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 2:T_CLASS
		* level increased *
		* token 2:T_CLASS added to conditions array *
		Process token 7 on line 4 [col:2;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 8 on line 5 [col:1;len:4;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>     
		Process token 9 on line 5 [col:5;len:6;lvl:1;conds;T_CLASS;]: T_PUBLIC => public
		Process token 10 on line 5 [col:11;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 11 on line 5 [col:12;len:8;lvl:1;conds;T_CLASS;]: T_FUNCTION => function
		Process token 12 on line 5 [col:20;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 13 on line 5 [col:21;len:11;lvl:1;conds;T_CLASS;]: T_STRING => __construct
		Process token 14 on line 5 [col:32;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_PARENTHESIS => (
		Process token 15 on line 5 [col:33;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_PARENTHESIS => )
		Process token 16 on line 5 [col:34;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 17 on line 6 [col:1;len:4;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>     
		Process token 18 on line 6 [col:5;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 11:T_FUNCTION
			* level increased *
			* token 11:T_FUNCTION added to conditions array *
			Process token 19 on line 6 [col:6;len:0;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 20 on line 7 [col:1;len:4;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>     
			Process token 21 on line 7 [col:5;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 18:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 22 on line 7 [col:6;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 23 on line 8 [col:1;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 24 on line 9 [col:1;len:4;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>     
		Process token 25 on line 9 [col:5;len:8;lvl:1;conds;T_CLASS;]: T_FUNCTION => function
		Process token 26 on line 9 [col:13;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 27 on line 9 [col:14;len:5;lvl:1;conds;T_CLASS;]: T_STRING => test1
		Process token 28 on line 9 [col:19;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_PARENTHESIS => (
		Process token 29 on line 9 [col:20;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_PARENTHESIS => )
		Process token 30 on line 9 [col:21;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 31 on line 10 [col:1;len:4;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>     
		Process token 32 on line 10 [col:5;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 25:T_FUNCTION
			* level increased *
			* token 25:T_FUNCTION added to conditions array *
			Process token 33 on line 10 [col:6;len:0;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 34 on line 11 [col:1;len:5;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>      
			Process token 35 on line 11 [col:6;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 32:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 36 on line 11 [col:7;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 37 on line 12 [col:1;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 38 on line 13 [col:1;len:4;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>     
		Process token 39 on line 13 [col:5;len:8;lvl:1;conds;T_CLASS;]: T_FUNCTION => function
		Process token 40 on line 13 [col:13;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 41 on line 13 [col:14;len:5;lvl:1;conds;T_CLASS;]: T_STRING => test2
		Process token 42 on line 13 [col:19;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_PARENTHESIS => (
		Process token 43 on line 13 [col:20;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_PARENTHESIS => )
		Process token 44 on line 13 [col:21;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 45 on line 13 [col:22;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 39:T_FUNCTION
			* level increased *
			* token 39:T_FUNCTION added to conditions array *
			Process token 46 on line 13 [col:23;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 45:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 47 on line 13 [col:24;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 48 on line 14 [col:1;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 49 on line 15 [col:1;len:4;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>     
		Process token 50 on line 15 [col:5;len:7;lvl:1;conds;T_CLASS;]: T_PRIVATE => private
		Process token 51 on line 15 [col:12;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 52 on line 15 [col:13;len:8;lvl:1;conds;T_CLASS;]: T_FUNCTION => function
		Process token 53 on line 15 [col:21;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 54 on line 15 [col:22;len:6;lvl:1;conds;T_CLASS;]: T_STRING => _test3
		Process token 55 on line 15 [col:28;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_PARENTHESIS => (
		Process token 56 on line 15 [col:29;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_PARENTHESIS => )
		Process token 57 on line 15 [col:30;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 58 on line 16 [col:1;len:4;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>     
		Process token 59 on line 16 [col:5;len:1;lvl:1;conds;T_CLASS;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 52:T_FUNCTION
			* level increased *
			* token 52:T_FUNCTION added to conditions array *
			Process token 60 on line 16 [col:6;len:0;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE => \n
			Process token 61 on line 17 [col:1;len:4;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_WHITESPACE =>     
			Process token 62 on line 17 [col:5;len:1;lvl:2;conds;T_CLASS,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 59:T_OPEN_CURLY_BRACKET
			* token T_FUNCTION removed from conditions array *
			* level decreased *
		Process token 63 on line 17 [col:6;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 64 on line 18 [col:1;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 65 on line 19 [col:1;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 6:T_OPEN_CURLY_BRACKET
		* token T_CLASS removed from conditions array *
		* level decreased *
	Process token 66 on line 19 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 67 on line 20 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 68 on line 21 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 69 on line 22 [col:1;len:5;lvl:0;]: T_CLASS => class
	Process token 70 on line 22 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 71 on line 22 [col:7;len:5;lvl:0;]: T_STRING => Test2
	Process token 72 on line 22 [col:12;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 73 on line 23 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 69:T_CLASS
		* level increased *
		* token 69:T_CLASS added to conditions array *
		Process token 74 on line 23 [col:2;len:0;lvl:1;conds;T_CLASS;]: T_WHITESPACE => \n
		Process token 75 on line 24 [col:1;len:1;lvl:1;conds;T_CLASS;]: T_WHITESPACE =>  
		Process token 76 on line 24 [col:2;len:1;lvl:1;conds;T_CLASS;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 73:T_OPEN_CURLY_BRACKET
		* token T_CLASS removed from conditions array *
		* level decreased *
	Process token 77 on line 24 [col:3;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 78 on line 25 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 79 on line 26 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 80 on line 27 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 81 on line 27 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 82 on line 27 [col:10;len:5;lvl:0;]: T_STRING => test2
	Process token 83 on line 27 [col:15;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 84 on line 27 [col:16;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 85 on line 27 [col:17;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 86 on line 28 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 80:T_FUNCTION
		* level increased *
		* token 80:T_FUNCTION added to conditions array *
		Process token 87 on line 28 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 88 on line 29 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 89 on line 29 [col:5;len:2;lvl:1;conds;T_FUNCTION;]: T_IF => if
		Process token 90 on line 29 [col:7;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 91 on line 29 [col:8;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 92 on line 29 [col:9;len:4;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $str
		Process token 93 on line 29 [col:13;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		Process token 94 on line 29 [col:14;len:1;lvl:1;conds;T_FUNCTION;]: T_LNUMBER => 0
		Process token 95 on line 29 [col:15;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		Process token 96 on line 29 [col:16;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 97 on line 29 [col:17;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 98 on line 29 [col:18;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 89:T_IF
			* level increased *
			* token 89:T_IF added to conditions array *
			Process token 99 on line 29 [col:19;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 100 on line 30 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>         
			Process token 101 on line 30 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_VARIABLE => $chr
			Process token 102 on line 30 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>  
			Process token 103 on line 30 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_EQUAL => =
			Process token 104 on line 30 [col:15;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>  
			Process token 105 on line 30 [col:16;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_VARIABLE => $str
			Process token 106 on line 30 [col:20;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_OPEN_CURLY_BRACKET => {
			Process token 107 on line 30 [col:21;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_LNUMBER => 0
			Process token 108 on line 30 [col:22;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			Process token 109 on line 30 [col:23;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_SEMICOLON => ;
			Process token 110 on line 30 [col:24;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>  
			Process token 111 on line 30 [col:25;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 98:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 112 on line 30 [col:26;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 113 on line 31 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 114 on line 32 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 115 on line 33 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 116 on line 33 [col:5;len:2;lvl:1;conds;T_FUNCTION;]: T_IF => if
		Process token 117 on line 33 [col:7;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 118 on line 33 [col:8;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 119 on line 33 [col:9;len:1;lvl:1;conds;T_FUNCTION;]: T_BOOLEAN_NOT => !
		Process token 120 on line 33 [col:10;len:12;lvl:1;conds;T_FUNCTION;]: T_STRING => class_exists
		Process token 121 on line 33 [col:22;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 122 on line 33 [col:23;len:11;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $class_name
		Process token 123 on line 33 [col:34;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 124 on line 33 [col:35;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 125 on line 33 [col:36;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 126 on line 33 [col:37;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 116:T_IF
			* level increased *
			* token 116:T_IF added to conditions array *
			Process token 127 on line 33 [col:38;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 128 on line 34 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>         
			Process token 129 on line 34 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_ECHO => echo
			Process token 130 on line 34 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>  
			Process token 131 on line 34 [col:14;len:6;lvl:2;conds;T_FUNCTION,T_IF;]: T_VARIABLE => $error
			Process token 132 on line 34 [col:20;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_SEMICOLON => ;
			Process token 133 on line 34 [col:21;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 134 on line 35 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>     
			Process token 135 on line 35 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 126:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 136 on line 35 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 137 on line 36 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 138 on line 36 [col:5;len:5;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $this
		Process token 139 on line 36 [col:10;len:2;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => ->
		Process token 140 on line 36 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		Process token 141 on line 36 [col:13;len:9;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $property
		Process token 142 on line 36 [col:22;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		Process token 143 on line 36 [col:23;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 144 on line 36 [col:24;len:1;lvl:1;conds;T_FUNCTION;]: T_EQUAL => =
		Process token 145 on line 36 [col:25;len:1;lvl:1;conds;T_FUNCTION;]: T_BITWISE_AND => &
		Process token 146 on line 36 [col:26;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 147 on line 36 [col:27;len:3;lvl:1;conds;T_FUNCTION;]: T_NEW => new
		Process token 148 on line 36 [col:30;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 149 on line 36 [col:31;len:11;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $class_name
		Process token 150 on line 36 [col:42;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 151 on line 36 [col:43;len:5;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $this
		Process token 152 on line 36 [col:48;len:2;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => ->
		Process token 153 on line 36 [col:50;len:8;lvl:1;conds;T_FUNCTION;]: T_STRING => db_index
		Process token 154 on line 36 [col:58;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 155 on line 36 [col:59;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 156 on line 36 [col:60;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 157 on line 37 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 158 on line 37 [col:5;len:5;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $this
		Process token 159 on line 37 [col:10;len:2;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => ->
		Process token 160 on line 37 [col:12;len:7;lvl:1;conds;T_FUNCTION;]: T_STRING => modules
		Process token 161 on line 37 [col:19;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_SQUARE_BRACKET => [
		Process token 162 on line 37 [col:20;len:7;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $module
		Process token 163 on line 37 [col:27;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_SQUARE_BRACKET => ]
		Process token 164 on line 37 [col:28;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 165 on line 37 [col:29;len:1;lvl:1;conds;T_FUNCTION;]: T_EQUAL => =
		Process token 166 on line 37 [col:30;len:1;lvl:1;conds;T_FUNCTION;]: T_BITWISE_AND => &
		Process token 167 on line 37 [col:31;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 168 on line 37 [col:32;len:5;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $this
		Process token 169 on line 37 [col:37;len:2;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => ->
		Process token 170 on line 37 [col:39;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		Process token 171 on line 37 [col:40;len:9;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $property
		Process token 172 on line 37 [col:49;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		Process token 173 on line 37 [col:50;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 174 on line 37 [col:51;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 175 on line 38 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 86:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 176 on line 38 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 177 on line 39 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 178 on line 40 [col:1;len:7;lvl:0;]: T_FOREACH => foreach
	Process token 179 on line 40 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 180 on line 40 [col:9;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 181 on line 40 [col:10;len:9;lvl:0;]: T_VARIABLE => $elements
	Process token 182 on line 40 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 183 on line 40 [col:20;len:2;lvl:0;]: T_AS => as
	Process token 184 on line 40 [col:22;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 185 on line 40 [col:23;len:8;lvl:0;]: T_VARIABLE => $element
	Process token 186 on line 40 [col:31;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 187 on line 40 [col:32;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 188 on line 40 [col:33;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 178:T_FOREACH
		* level increased *
		* token 178:T_FOREACH added to conditions array *
		Process token 189 on line 40 [col:34;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 190 on line 41 [col:1;len:4;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>     
		Process token 191 on line 41 [col:5;len:2;lvl:1;conds;T_FOREACH;]: T_IF => if
		Process token 192 on line 41 [col:7;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 193 on line 41 [col:8;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_PARENTHESIS => (
		Process token 194 on line 41 [col:9;len:10;lvl:1;conds;T_FOREACH;]: T_VARIABLE => $something
		Process token 195 on line 41 [col:19;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_PARENTHESIS => )
		Process token 196 on line 41 [col:20;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 197 on line 41 [col:21;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 191:T_IF
			* level increased *
			* token 191:T_IF added to conditions array *
			Process token 198 on line 41 [col:22;len:0;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE => \n
			Process token 199 on line 42 [col:1;len:8;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE =>         
			Process token 200 on line 42 [col:9;len:9;lvl:2;conds;T_FOREACH,T_IF;]: T_COMMENT => // Do IF.\n
			Process token 201 on line 43 [col:1;len:4;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE =>     
			Process token 202 on line 43 [col:5;len:1;lvl:2;conds;T_FOREACH,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 197:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 203 on line 43 [col:6;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 204 on line 43 [col:7;len:4;lvl:1;conds;T_FOREACH;]: T_ELSE => else
		Process token 205 on line 43 [col:11;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 206 on line 43 [col:12;len:2;lvl:1;conds;T_FOREACH;]: T_IF => if
		Process token 207 on line 43 [col:14;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 208 on line 43 [col:15;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_PARENTHESIS => (
		Process token 209 on line 43 [col:16;len:14;lvl:1;conds;T_FOREACH;]: T_VARIABLE => $somethingElse
		Process token 210 on line 43 [col:30;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_PARENTHESIS => )
		Process token 211 on line 43 [col:31;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 212 on line 43 [col:32;len:1;lvl:1;conds;T_FOREACH;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 206:T_IF
			* level increased *
			* token 206:T_IF added to conditions array *
			Process token 213 on line 43 [col:33;len:0;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE => \n
			Process token 214 on line 44 [col:1;len:8;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE =>         
			Process token 215 on line 44 [col:9;len:11;lvl:2;conds;T_FOREACH,T_IF;]: T_COMMENT => // Do ELSE.\n
			Process token 216 on line 45 [col:1;len:4;lvl:2;conds;T_FOREACH,T_IF;]: T_WHITESPACE =>     
			Process token 217 on line 45 [col:5;len:1;lvl:2;conds;T_FOREACH,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 212:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 218 on line 45 [col:6;len:0;lvl:1;conds;T_FOREACH;]: T_WHITESPACE => \n
		Process token 219 on line 46 [col:1;len:1;lvl:1;conds;T_FOREACH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 188:T_OPEN_CURLY_BRACKET
		* token T_FOREACH removed from conditions array *
		* level decreased *
	Process token 220 on line 46 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 221 on line 47 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 222 on line 48 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 223 on line 48 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 224 on line 48 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 225 on line 48 [col:9;len:4;lvl:0;]: T_VARIABLE => $foo
	Process token 226 on line 48 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 227 on line 48 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 228 on line 48 [col:15;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 222:T_SWITCH
		* level increased *
		* token 222:T_SWITCH added to conditions array *
		Process token 229 on line 48 [col:16;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 230 on line 49 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 231 on line 49 [col:5;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 232 on line 49 [col:6;len:1;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 1
		Process token 233 on line 49 [col:7;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 230:T_CASE
			* level increased *
			* token 230:T_CASE added to conditions array *
			Process token 234 on line 49 [col:8;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 235 on line 50 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 236 on line 50 [col:5;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_SWITCH => switch
			Process token 237 on line 50 [col:11;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 238 on line 50 [col:12;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
			Process token 239 on line 50 [col:13;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_VARIABLE => $bar
			Process token 240 on line 50 [col:17;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
			Process token 241 on line 50 [col:18;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 242 on line 50 [col:19;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 236:T_SWITCH
				* level increased *
				* token 236:T_SWITCH added to conditions array *
				Process token 243 on line 50 [col:20;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE => \n
				Process token 244 on line 51 [col:1;len:4;lvl:3;conds;T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE =>     
				Process token 245 on line 51 [col:5;len:7;lvl:3;conds;T_SWITCH,T_CASE,T_SWITCH;]: T_DEFAULT => default
				Process token 246 on line 51 [col:12;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_SWITCH;]: T_COLON => :
				=> Found scope opener for 245:T_DEFAULT
					* level increased *
					* token 245:T_DEFAULT added to conditions array *
					Process token 247 on line 51 [col:13;len:0;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
					Process token 248 on line 52 [col:1;len:8;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
					Process token 249 on line 52 [col:9;len:2;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_IF => if
					Process token 250 on line 52 [col:11;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
					Process token 251 on line 52 [col:12;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_OPEN_PARENTHESIS => (
					Process token 252 on line 52 [col:13;len:10;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_VARIABLE => $something
					Process token 253 on line 52 [col:23;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_CLOSE_PARENTHESIS => )
					Process token 254 on line 52 [col:24;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
					Process token 255 on line 52 [col:25;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_OPEN_CURLY_BRACKET => {
					=> Found scope opener for 249:T_IF
						* level increased *
						* token 249:T_IF added to conditions array *
						Process token 256 on line 52 [col:26;len:0;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE => \n
						Process token 257 on line 53 [col:1;len:12;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>             
						Process token 258 on line 53 [col:13;len:4;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_ECHO => echo
						Process token 259 on line 53 [col:17;len:1;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>  
						Process token 260 on line 53 [col:18;len:7;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_VARIABLE => $string
						Process token 261 on line 53 [col:25;len:1;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_OPEN_CURLY_BRACKET => {
						Process token 262 on line 53 [col:26;len:1;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_LNUMBER => 1
						Process token 263 on line 53 [col:27;len:1;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_CLOSE_CURLY_BRACKET => }
						Process token 264 on line 53 [col:28;len:1;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_SEMICOLON => ;
						Process token 265 on line 53 [col:29;len:0;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE => \n
						Process token 266 on line 54 [col:1;len:8;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>         
						Process token 267 on line 54 [col:9;len:1;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_CLOSE_CURLY_BRACKET => }
						=> Found scope closer for 255:T_OPEN_CURLY_BRACKET
						* token T_IF removed from conditions array *
						* level decreased *
					Process token 268 on line 54 [col:10;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
					Process token 269 on line 54 [col:11;len:4;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_ELSE => else
					Process token 270 on line 54 [col:15;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
					Process token 271 on line 54 [col:16;len:2;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_IF => if
					Process token 272 on line 54 [col:18;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
					Process token 273 on line 54 [col:19;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_OPEN_PARENTHESIS => (
					Process token 274 on line 54 [col:20;len:5;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_VARIABLE => $else
					Process token 275 on line 54 [col:25;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_CLOSE_PARENTHESIS => )
					Process token 276 on line 54 [col:26;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
					Process token 277 on line 54 [col:27;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_OPEN_CURLY_BRACKET => {
					=> Found scope opener for 271:T_IF
						* level increased *
						* token 271:T_IF added to conditions array *
						Process token 278 on line 54 [col:28;len:0;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE => \n
						Process token 279 on line 55 [col:1;len:12;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>             
						Process token 280 on line 55 [col:13;len:6;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_SWITCH => switch
						Process token 281 on line 55 [col:19;len:1;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>  
						Process token 282 on line 55 [col:20;len:1;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_OPEN_PARENTHESIS => (
						Process token 283 on line 55 [col:21;len:5;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_VARIABLE => $else
						Process token 284 on line 55 [col:26;len:1;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_CLOSE_PARENTHESIS => )
						Process token 285 on line 55 [col:27;len:1;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>  
						Process token 286 on line 55 [col:28;len:1;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_OPEN_CURLY_BRACKET => {
						=> Found scope opener for 280:T_SWITCH
							* level increased *
							* token 280:T_SWITCH added to conditions array *
							Process token 287 on line 55 [col:29;len:0;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_WHITESPACE => \n
							Process token 288 on line 56 [col:1;len:12;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_WHITESPACE =>             
							Process token 289 on line 56 [col:13;len:4;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_CASE => case
							Process token 290 on line 56 [col:17;len:1;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_WHITESPACE =>  
							Process token 291 on line 56 [col:18;len:1;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_LNUMBER => 1
							Process token 292 on line 56 [col:19;len:1;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_COLON => :
							=> Found scope opener for 289:T_CASE
								* level increased *
								* token 289:T_CASE added to conditions array *
								Process token 293 on line 56 [col:20;len:0;lvl:7;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
								Process token 294 on line 57 [col:1;len:16;lvl:7;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH,T_CASE;]: T_WHITESPACE =>                 
								Process token 295 on line 57 [col:17;len:16;lvl:7;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH,T_CASE;]: T_COMMENT => // Do something.\n
								Process token 296 on line 58 [col:1;len:16;lvl:7;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH,T_CASE;]: T_WHITESPACE =>                 
								Process token 297 on line 58 [col:17;len:5;lvl:7;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH,T_CASE;]: T_BREAK => break
								=> Found scope closer for 292:T_COLON
								* token T_CASE removed from conditions array *
								* level decreased *
							Process token 298 on line 58 [col:22;len:1;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_SEMICOLON => ;
							Process token 299 on line 58 [col:23;len:0;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_WHITESPACE => \n
							Process token 300 on line 59 [col:1;len:12;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_WHITESPACE =>             
							Process token 301 on line 59 [col:13;len:7;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_DEFAULT => default
							Process token 302 on line 59 [col:20;len:1;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_COLON => :
							=> Found scope opener for 301:T_DEFAULT
								* level increased *
								* token 301:T_DEFAULT added to conditions array *
								Process token 303 on line 59 [col:21;len:0;lvl:7;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
								Process token 304 on line 60 [col:1;len:16;lvl:7;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>                 
								Process token 305 on line 60 [col:17;len:16;lvl:7;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH,T_DEFAULT;]: T_COMMENT => // Do something.\n
								Process token 306 on line 61 [col:1;len:12;lvl:7;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>             
								Process token 307 on line 61 [col:13;len:5;lvl:7;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH,T_DEFAULT;]: T_BREAK => break
								=> Found scope closer for 302:T_COLON
								* token T_DEFAULT removed from conditions array *
								* level decreased *
							Process token 308 on line 61 [col:18;len:1;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_SEMICOLON => ;
							Process token 309 on line 61 [col:19;len:0;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_WHITESPACE => \n
							Process token 310 on line 62 [col:1;len:12;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_WHITESPACE =>             
							Process token 311 on line 62 [col:13;len:1;lvl:6;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF,T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
							=> Found scope closer for 286:T_OPEN_CURLY_BRACKET
							* token T_SWITCH removed from conditions array *
							* level decreased *
						Process token 312 on line 62 [col:14;len:0;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE => \n
						Process token 313 on line 63 [col:1;len:8;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>         
						Process token 314 on line 63 [col:9;len:1;lvl:5;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT,T_IF;]: T_CLOSE_CURLY_BRACKET => }
						=> Found scope closer for 277:T_OPEN_CURLY_BRACKET
						* token T_IF removed from conditions array *
						* level decreased *
					Process token 315 on line 63 [col:10;len:0;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
					Process token 316 on line 64 [col:1;len:4;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>     
					Process token 317 on line 64 [col:5;len:1;lvl:4;conds;T_SWITCH,T_CASE,T_SWITCH,T_DEFAULT;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 246:T_COLON
					* token T_DEFAULT removed from conditions array *
					* level decreased *
				=> Found scope closer for 242:T_OPEN_CURLY_BRACKET
				* token T_SWITCH removed from conditions array *
				* level decreased *
			Process token 318 on line 64 [col:6;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 319 on line 65 [col:1;len:5;lvl:2;conds;T_SWITCH,T_CASE;]: T_BREAK => break
			=> Found scope closer for 233:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 320 on line 65 [col:6;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 321 on line 65 [col:7;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 322 on line 66 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 323 on line 66 [col:5;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 324 on line 66 [col:6;len:1;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 2
		Process token 325 on line 66 [col:7;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 322:T_CASE
			* level increased *
			* token 322:T_CASE added to conditions array *
			Process token 326 on line 66 [col:8;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 327 on line 67 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 328 on line 67 [col:5;len:16;lvl:2;conds;T_SWITCH,T_CASE;]: T_COMMENT => // Do something;\n
			Process token 329 on line 68 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 330 on line 68 [col:5;len:5;lvl:2;conds;T_SWITCH,T_CASE;]: T_BREAK => break
			=> Found scope closer for 325:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 331 on line 68 [col:10;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 332 on line 68 [col:11;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 333 on line 69 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 228:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 334 on line 69 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 335 on line 70 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 336 on line 71 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 337 on line 71 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 338 on line 71 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 339 on line 71 [col:9;len:17;lvl:0;]: T_VARIABLE => $httpResponseCode
	Process token 340 on line 71 [col:26;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 341 on line 71 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 342 on line 71 [col:28;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 336:T_SWITCH
		* level increased *
		* token 336:T_SWITCH added to conditions array *
		Process token 343 on line 71 [col:29;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 344 on line 72 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 345 on line 72 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 346 on line 72 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 347 on line 72 [col:10;len:3;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 100
		Process token 348 on line 72 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 345:T_CASE
			* level increased *
			* token 345:T_CASE added to conditions array *
			Process token 349 on line 72 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 350 on line 73 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 351 on line 73 [col:5;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_CASE => case
			Process token 352 on line 73 [col:9;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 353 on line 73 [col:10;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_LNUMBER => 101
			Process token 354 on line 73 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_COLON => :
			=> Found scope opener for 351:T_CASE
			* shared closer, cleaning up 345:T_CASE *
			* cleaned 351:T_CASE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 352:T_WHITESPACE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 353:T_LNUMBER *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 354:T_COLON *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* token 345:T_CASE removed from conditions array *
			* level decreased *
			* level increased *
			* token 351:T_CASE added to conditions array *
			Process token 355 on line 73 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 356 on line 74 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 357 on line 74 [col:5;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_CASE => case
			Process token 358 on line 74 [col:9;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 359 on line 74 [col:10;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_LNUMBER => 102
			Process token 360 on line 74 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_COLON => :
			=> Found scope opener for 357:T_CASE
			* shared closer, cleaning up 351:T_CASE *
			* cleaned 357:T_CASE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 358:T_WHITESPACE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 359:T_LNUMBER *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 360:T_COLON *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* token 351:T_CASE removed from conditions array *
			* level decreased *
			* level increased *
			* token 357:T_CASE added to conditions array *
			Process token 361 on line 74 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 362 on line 75 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 363 on line 75 [col:5;len:7;lvl:2;conds;T_SWITCH,T_CASE;]: T_DEFAULT => default
			Process token 364 on line 75 [col:12;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_COLON => :
			=> Found scope opener for 363:T_DEFAULT
			* shared closer, cleaning up 357:T_CASE *
			* cleaned 363:T_DEFAULT *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 364:T_COLON *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* token 357:T_CASE removed from conditions array *
			* level decreased *
			* level increased *
			* token 363:T_DEFAULT added to conditions array *
			Process token 365 on line 75 [col:13;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 366 on line 76 [col:1;len:8;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
			Process token 367 on line 76 [col:9;len:6;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_RETURN => return
			=> Found scope closer for 364:T_COLON
			* token T_DEFAULT removed from conditions array *
			* level decreased *
		Process token 368 on line 76 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 369 on line 76 [col:16;len:9;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'Unknown'
		Process token 370 on line 76 [col:25;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 371 on line 76 [col:26;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 372 on line 77 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 342:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 373 on line 77 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 374 on line 78 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 375 on line 79 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 376 on line 79 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 377 on line 79 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 378 on line 79 [col:9;len:17;lvl:0;]: T_VARIABLE => $httpResponseCode
	Process token 379 on line 79 [col:26;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 380 on line 79 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 381 on line 79 [col:28;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 375:T_SWITCH
		* level increased *
		* token 375:T_SWITCH added to conditions array *
		Process token 382 on line 79 [col:29;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 383 on line 80 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 384 on line 80 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 385 on line 80 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 386 on line 80 [col:10;len:3;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 100
		Process token 387 on line 80 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 384:T_CASE
			* level increased *
			* token 384:T_CASE added to conditions array *
			Process token 388 on line 80 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 389 on line 81 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 390 on line 81 [col:5;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_CASE => case
			Process token 391 on line 81 [col:9;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 392 on line 81 [col:10;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_LNUMBER => 101
			Process token 393 on line 81 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_COLON => :
			=> Found scope opener for 390:T_CASE
			* shared closer, cleaning up 384:T_CASE *
			* cleaned 390:T_CASE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 391:T_WHITESPACE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 392:T_LNUMBER *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 393:T_COLON *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* token 384:T_CASE removed from conditions array *
			* level decreased *
			* level increased *
			* token 390:T_CASE added to conditions array *
			Process token 394 on line 81 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 395 on line 82 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 396 on line 82 [col:5;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_CASE => case
			Process token 397 on line 82 [col:9;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 398 on line 82 [col:10;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_LNUMBER => 102
			Process token 399 on line 82 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_COLON => :
			=> Found scope opener for 396:T_CASE
			* shared closer, cleaning up 390:T_CASE *
			* cleaned 396:T_CASE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 397:T_WHITESPACE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 398:T_LNUMBER *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 399:T_COLON *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* token 390:T_CASE removed from conditions array *
			* level decreased *
			* level increased *
			* token 396:T_CASE added to conditions array *
			Process token 400 on line 82 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 401 on line 83 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 402 on line 83 [col:9;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 399:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 403 on line 83 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 404 on line 83 [col:16;len:13;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'Processing.'
		Process token 405 on line 83 [col:29;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 406 on line 83 [col:30;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 407 on line 84 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 408 on line 84 [col:5;len:7;lvl:1;conds;T_SWITCH;]: T_DEFAULT => default
		Process token 409 on line 84 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 408:T_DEFAULT
			* level increased *
			* token 408:T_DEFAULT added to conditions array *
			Process token 410 on line 84 [col:13;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 411 on line 85 [col:1;len:4;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>     
			Process token 412 on line 85 [col:5;len:6;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_RETURN => return
			=> Found scope closer for 409:T_COLON
			* token T_DEFAULT removed from conditions array *
			* level decreased *
		Process token 413 on line 85 [col:11;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 414 on line 85 [col:12;len:9;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'Unknown'
		Process token 415 on line 85 [col:21;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 416 on line 85 [col:22;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 417 on line 86 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 381:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 418 on line 86 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 419 on line 87 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 420 on line 88 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 421 on line 88 [col:7;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 422 on line 88 [col:8;len:2;lvl:0;]: T_VARIABLE => $i
	Process token 423 on line 88 [col:10;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 424 on line 88 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 425 on line 88 [col:12;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 420:T_SWITCH
		* level increased *
		* token 420:T_SWITCH added to conditions array *
		Process token 426 on line 88 [col:13;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 427 on line 89 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 428 on line 89 [col:5;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 429 on line 89 [col:6;len:1;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 1
		Process token 430 on line 89 [col:7;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 427:T_CASE
			* level increased *
			* token 427:T_CASE added to conditions array *
			Process token 431 on line 89 [col:8;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 432 on line 89 [col:9;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
			Process token 433 on line 89 [col:10;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_CLOSE_CURLY_BRACKET => }
			Process token 434 on line 89 [col:11;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 435 on line 90 [col:1;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 430:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		=> Found scope closer for 425:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 436 on line 90 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 437 on line 91 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 438 on line 92 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 439 on line 92 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 440 on line 92 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 441 on line 92 [col:9;len:17;lvl:0;]: T_VARIABLE => $httpResponseCode
	Process token 442 on line 92 [col:26;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 443 on line 92 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 444 on line 92 [col:28;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 438:T_SWITCH
		* level increased *
		* token 438:T_SWITCH added to conditions array *
		Process token 445 on line 92 [col:29;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 446 on line 93 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 447 on line 93 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 448 on line 93 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 449 on line 93 [col:10;len:3;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 100
		Process token 450 on line 93 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 447:T_CASE
			* level increased *
			* token 447:T_CASE added to conditions array *
			Process token 451 on line 93 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 452 on line 94 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 453 on line 94 [col:5;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_CASE => case
			Process token 454 on line 94 [col:9;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 455 on line 94 [col:10;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_LNUMBER => 101
			Process token 456 on line 94 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_COLON => :
			=> Found scope opener for 453:T_CASE
			* shared closer, cleaning up 447:T_CASE *
			* cleaned 453:T_CASE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 454:T_WHITESPACE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 455:T_LNUMBER *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 456:T_COLON *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* token 447:T_CASE removed from conditions array *
			* level decreased *
			* level increased *
			* token 453:T_CASE added to conditions array *
			Process token 457 on line 94 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 458 on line 95 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 459 on line 95 [col:5;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_CASE => case
			Process token 460 on line 95 [col:9;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 461 on line 95 [col:10;len:3;lvl:2;conds;T_SWITCH,T_CASE;]: T_LNUMBER => 102
			Process token 462 on line 95 [col:13;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_COLON => :
			=> Found scope opener for 459:T_CASE
			* shared closer, cleaning up 453:T_CASE *
			* cleaned 459:T_CASE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 460:T_WHITESPACE *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 461:T_LNUMBER *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* cleaned 462:T_COLON *
				=> level changed from 2 to 1
				=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
			* token 453:T_CASE removed from conditions array *
			* level decreased *
			* level increased *
			* token 459:T_CASE added to conditions array *
			Process token 463 on line 95 [col:14;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 464 on line 96 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 465 on line 96 [col:9;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_EXIT => exit
			=> Found scope closer for 462:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 466 on line 96 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 467 on line 96 [col:14;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 468 on line 97 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 469 on line 97 [col:5;len:7;lvl:1;conds;T_SWITCH;]: T_DEFAULT => default
		Process token 470 on line 97 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 469:T_DEFAULT
			* level increased *
			* token 469:T_DEFAULT added to conditions array *
			Process token 471 on line 97 [col:13;len:0;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
			Process token 472 on line 98 [col:1;len:4;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>     
			Process token 473 on line 98 [col:5;len:4;lvl:2;conds;T_SWITCH,T_DEFAULT;]: T_EXIT => exit
			=> Found scope closer for 470:T_COLON
			* token T_DEFAULT removed from conditions array *
			* level decreased *
		Process token 474 on line 98 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 475 on line 98 [col:10;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 476 on line 99 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 444:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 477 on line 99 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 478 on line 100 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 479 on line 101 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 480 on line 101 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 481 on line 101 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 482 on line 101 [col:5;len:4;lvl:0;]: T_VARIABLE => $foo
	Process token 483 on line 101 [col:9;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 484 on line 101 [col:10;len:1;lvl:0;]: T_COLON => :
	=> Found scope opener for 479:T_IF
		* level increased *
		* token 479:T_IF added to conditions array *
		Process token 485 on line 101 [col:11;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 486 on line 102 [col:1;len:4;lvl:1;conds;T_IF;]: T_WHITESPACE =>     
		Process token 487 on line 102 [col:5;len:2;lvl:1;conds;T_IF;]: T_IF => if
		Process token 488 on line 102 [col:7;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 489 on line 102 [col:8;len:1;lvl:1;conds;T_IF;]: T_OPEN_PARENTHESIS => (
		Process token 490 on line 102 [col:9;len:4;lvl:1;conds;T_IF;]: T_VARIABLE => $bar
		Process token 491 on line 102 [col:13;len:1;lvl:1;conds;T_IF;]: T_CLOSE_PARENTHESIS => )
		Process token 492 on line 102 [col:14;len:1;lvl:1;conds;T_IF;]: T_COLON => :
		=> Found scope opener for 487:T_IF
			* level increased *
			* token 487:T_IF added to conditions array *
			Process token 493 on line 102 [col:15;len:0;lvl:2;conds;T_IF,T_IF;]: T_WHITESPACE => \n
			Process token 494 on line 103 [col:1;len:8;lvl:2;conds;T_IF,T_IF;]: T_WHITESPACE =>         
			Process token 495 on line 103 [col:9;len:4;lvl:2;conds;T_IF,T_IF;]: T_VARIABLE => $foo
			Process token 496 on line 103 [col:13;len:1;lvl:2;conds;T_IF,T_IF;]: T_WHITESPACE =>  
			Process token 497 on line 103 [col:14;len:1;lvl:2;conds;T_IF,T_IF;]: T_EQUAL => =
			Process token 498 on line 103 [col:15;len:1;lvl:2;conds;T_IF,T_IF;]: T_WHITESPACE =>  
			Process token 499 on line 103 [col:16;len:1;lvl:2;conds;T_IF,T_IF;]: T_LNUMBER => 1
			Process token 500 on line 103 [col:17;len:1;lvl:2;conds;T_IF,T_IF;]: T_SEMICOLON => ;
			Process token 501 on line 103 [col:18;len:0;lvl:2;conds;T_IF,T_IF;]: T_WHITESPACE => \n
			Process token 502 on line 104 [col:1;len:4;lvl:2;conds;T_IF,T_IF;]: T_WHITESPACE =>     
			Process token 503 on line 104 [col:5;len:6;lvl:2;conds;T_IF,T_IF;]: T_ELSEIF => elseif
			=> Found scope closer for 492:T_COLON
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 504 on line 104 [col:11;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 505 on line 104 [col:12;len:1;lvl:1;conds;T_IF;]: T_OPEN_PARENTHESIS => (
		Process token 506 on line 104 [col:13;len:4;lvl:1;conds;T_IF;]: T_VARIABLE => $baz
		Process token 507 on line 104 [col:17;len:1;lvl:1;conds;T_IF;]: T_CLOSE_PARENTHESIS => )
		Process token 508 on line 104 [col:18;len:1;lvl:1;conds;T_IF;]: T_COLON => :
		=> Found scope opener for 503:T_ELSEIF
			* level increased *
			* token 503:T_ELSEIF added to conditions array *
			Process token 509 on line 104 [col:19;len:0;lvl:2;conds;T_IF,T_ELSEIF;]: T_WHITESPACE => \n
			Process token 510 on line 105 [col:1;len:8;lvl:2;conds;T_IF,T_ELSEIF;]: T_WHITESPACE =>         
			Process token 511 on line 105 [col:9;len:4;lvl:2;conds;T_IF,T_ELSEIF;]: T_VARIABLE => $foo
			Process token 512 on line 105 [col:13;len:1;lvl:2;conds;T_IF,T_ELSEIF;]: T_WHITESPACE =>  
			Process token 513 on line 105 [col:14;len:1;lvl:2;conds;T_IF,T_ELSEIF;]: T_EQUAL => =
			Process token 514 on line 105 [col:15;len:1;lvl:2;conds;T_IF,T_ELSEIF;]: T_WHITESPACE =>  
			Process token 515 on line 105 [col:16;len:1;lvl:2;conds;T_IF,T_ELSEIF;]: T_LNUMBER => 2
			Process token 516 on line 105 [col:17;len:1;lvl:2;conds;T_IF,T_ELSEIF;]: T_SEMICOLON => ;
			Process token 517 on line 105 [col:18;len:0;lvl:2;conds;T_IF,T_ELSEIF;]: T_WHITESPACE => \n
			Process token 518 on line 106 [col:1;len:4;lvl:2;conds;T_IF,T_ELSEIF;]: T_WHITESPACE =>     
			Process token 519 on line 106 [col:5;len:5;lvl:2;conds;T_IF,T_ELSEIF;]: T_ENDIF => endif
			=> Found scope closer for 508:T_COLON
			* token T_ELSEIF removed from conditions array *
			* level decreased *
		Process token 520 on line 106 [col:10;len:1;lvl:1;conds;T_IF;]: T_SEMICOLON => ;
		Process token 521 on line 106 [col:11;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 522 on line 107 [col:1;len:5;lvl:1;conds;T_IF;]: T_ENDIF => endif
		=> Found scope closer for 484:T_COLON
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 523 on line 107 [col:6;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 524 on line 107 [col:7;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 525 on line 108 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 526 on line 109 [col:1;len:2;lvl:0;]: T_IF => if
	Process token 527 on line 109 [col:3;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 528 on line 109 [col:4;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 529 on line 109 [col:5;len:4;lvl:0;]: T_VARIABLE => $foo
	Process token 530 on line 109 [col:9;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 531 on line 109 [col:10;len:1;lvl:0;]: T_COLON => :
	=> Found scope opener for 526:T_IF
		* level increased *
		* token 526:T_IF added to conditions array *
		Process token 532 on line 109 [col:11;len:0;lvl:1;conds;T_IF;]: T_WHITESPACE => \n
		Process token 533 on line 110 [col:1;len:6;lvl:1;conds;T_IF;]: T_ELSEIF => elseif
		=> Found scope closer for 531:T_COLON
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 534 on line 110 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 535 on line 110 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 536 on line 110 [col:9;len:4;lvl:0;]: T_VARIABLE => $baz
	Process token 537 on line 110 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 538 on line 110 [col:14;len:1;lvl:0;]: T_COLON => :
	=> Found scope opener for 533:T_ELSEIF
		* level increased *
		* token 533:T_ELSEIF added to conditions array *
		Process token 539 on line 110 [col:15;len:1;lvl:1;conds;T_ELSEIF;]: T_WHITESPACE =>  
		Process token 540 on line 110 [col:16;len:4;lvl:1;conds;T_ELSEIF;]: T_VARIABLE => $foo
		Process token 541 on line 110 [col:20;len:1;lvl:1;conds;T_ELSEIF;]: T_WHITESPACE =>  
		Process token 542 on line 110 [col:21;len:1;lvl:1;conds;T_ELSEIF;]: T_EQUAL => =
		Process token 543 on line 110 [col:22;len:1;lvl:1;conds;T_ELSEIF;]: T_WHITESPACE =>  
		Process token 544 on line 110 [col:23;len:1;lvl:1;conds;T_ELSEIF;]: T_LNUMBER => 2
		Process token 545 on line 110 [col:24;len:1;lvl:1;conds;T_ELSEIF;]: T_SEMICOLON => ;
		Process token 546 on line 110 [col:25;len:0;lvl:1;conds;T_ELSEIF;]: T_WHITESPACE => \n
		Process token 547 on line 111 [col:1;len:5;lvl:1;conds;T_ELSEIF;]: T_ENDIF => endif
		=> Found scope closer for 538:T_COLON
		* token T_ELSEIF removed from conditions array *
		* level decreased *
	Process token 548 on line 111 [col:6;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 549 on line 111 [col:7;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 550 on line 112 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 551 on line 113 [col:1;len:2;lvl:0;]: T_CLOSE_TAG => ?>\n
	Process token 552 on line 114 [col:1;len:4;lvl:0;]: T_INLINE_HTML => <ul>\n
	Process token 553 on line 115 [col:1;len:4;lvl:0;]: T_INLINE_HTML =>     
	Process token 554 on line 115 [col:5;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 555 on line 115 [col:11;len:7;lvl:0;]: T_FOREACH => foreach
	Process token 556 on line 115 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 557 on line 115 [col:19;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 558 on line 115 [col:20;len:6;lvl:0;]: T_VARIABLE => $array
	Process token 559 on line 115 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 560 on line 115 [col:27;len:2;lvl:0;]: T_AS => as
	Process token 561 on line 115 [col:29;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 562 on line 115 [col:30;len:6;lvl:0;]: T_VARIABLE => $value
	Process token 563 on line 115 [col:36;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 564 on line 115 [col:37;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 565 on line 115 [col:38;len:1;lvl:0;]: T_COLON => :
	=> Found scope opener for 555:T_FOREACH
		* level increased *
		* token 555:T_FOREACH added to conditions array *
		Process token 566 on line 115 [col:39;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 567 on line 115 [col:40;len:2;lvl:1;conds;T_FOREACH;]: T_CLOSE_TAG => ?>\n
		Process token 568 on line 116 [col:1;len:12;lvl:1;conds;T_FOREACH;]: T_INLINE_HTML =>         <li>
		Process token 569 on line 116 [col:13;len:6;lvl:1;conds;T_FOREACH;]: T_OPEN_TAG => <?php 
		Process token 570 on line 116 [col:19;len:4;lvl:1;conds;T_FOREACH;]: T_ECHO => echo
		Process token 571 on line 116 [col:23;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 572 on line 116 [col:24;len:6;lvl:1;conds;T_FOREACH;]: T_VARIABLE => $value
		Process token 573 on line 116 [col:30;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 574 on line 116 [col:31;len:2;lvl:1;conds;T_FOREACH;]: T_CLOSE_TAG => ?>
		Process token 575 on line 116 [col:33;len:5;lvl:1;conds;T_FOREACH;]: T_INLINE_HTML => </li>\n
		Process token 576 on line 117 [col:1;len:4;lvl:1;conds;T_FOREACH;]: T_INLINE_HTML =>     
		Process token 577 on line 117 [col:5;len:6;lvl:1;conds;T_FOREACH;]: T_OPEN_TAG => <?php 
		Process token 578 on line 117 [col:11;len:10;lvl:1;conds;T_FOREACH;]: T_ENDFOREACH => endforeach
		=> Found scope closer for 565:T_COLON
		* token T_FOREACH removed from conditions array *
		* level decreased *
	Process token 579 on line 117 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 580 on line 117 [col:22;len:2;lvl:0;]: T_CLOSE_TAG => ?>\n
	Process token 581 on line 118 [col:1;len:5;lvl:0;]: T_INLINE_HTML => </ul>\n
	Process token 582 on line 119 [col:1;len:4;lvl:0;]: T_INLINE_HTML => <ul>\n
	Process token 583 on line 120 [col:1;len:4;lvl:0;]: T_INLINE_HTML =>     
	Process token 584 on line 120 [col:5;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 585 on line 120 [col:11;len:7;lvl:0;]: T_FOREACH => foreach
	Process token 586 on line 120 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 587 on line 120 [col:19;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 588 on line 120 [col:20;len:6;lvl:0;]: T_VARIABLE => $array
	Process token 589 on line 120 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 590 on line 120 [col:27;len:2;lvl:0;]: T_AS => as
	Process token 591 on line 120 [col:29;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 592 on line 120 [col:30;len:6;lvl:0;]: T_VARIABLE => $value
	Process token 593 on line 120 [col:36;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 594 on line 120 [col:37;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 595 on line 120 [col:38;len:1;lvl:0;]: T_COLON => :
	=> Found scope opener for 585:T_FOREACH
		* level increased *
		* token 585:T_FOREACH added to conditions array *
		Process token 596 on line 120 [col:39;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 597 on line 120 [col:40;len:2;lvl:1;conds;T_FOREACH;]: T_CLOSE_TAG => ?>\n
		Process token 598 on line 121 [col:1;len:12;lvl:1;conds;T_FOREACH;]: T_INLINE_HTML =>         <li>
		Process token 599 on line 121 [col:13;len:6;lvl:1;conds;T_FOREACH;]: T_OPEN_TAG => <?php 
		Process token 600 on line 121 [col:19;len:4;lvl:1;conds;T_FOREACH;]: T_ECHO => echo
		Process token 601 on line 121 [col:23;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 602 on line 121 [col:24;len:6;lvl:1;conds;T_FOREACH;]: T_VARIABLE => $value
		Process token 603 on line 121 [col:30;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 604 on line 121 [col:31;len:2;lvl:1;conds;T_FOREACH;]: T_CLOSE_TAG => ?>
		Process token 605 on line 121 [col:33;len:5;lvl:1;conds;T_FOREACH;]: T_INLINE_HTML => </li>\n
		Process token 606 on line 122 [col:1;len:6;lvl:1;conds;T_FOREACH;]: T_OPEN_TAG => <?php 
		Process token 607 on line 122 [col:7;len:10;lvl:1;conds;T_FOREACH;]: T_ENDFOREACH => endforeach
		=> Found scope closer for 595:T_COLON
		* token T_FOREACH removed from conditions array *
		* level decreased *
	Process token 608 on line 122 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 609 on line 122 [col:18;len:2;lvl:0;]: T_CLOSE_TAG => ?>\n
	Process token 610 on line 123 [col:1;len:5;lvl:0;]: T_INLINE_HTML => </ul>\n
	Process token 611 on line 124 [col:1;len:4;lvl:0;]: T_INLINE_HTML => <ul>\n
	Process token 612 on line 125 [col:1;len:4;lvl:0;]: T_INLINE_HTML =>     
	Process token 613 on line 125 [col:5;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 614 on line 125 [col:11;len:7;lvl:0;]: T_FOREACH => foreach
	Process token 615 on line 125 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 616 on line 125 [col:19;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 617 on line 125 [col:20;len:6;lvl:0;]: T_VARIABLE => $array
	Process token 618 on line 125 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 619 on line 125 [col:27;len:2;lvl:0;]: T_AS => as
	Process token 620 on line 125 [col:29;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 621 on line 125 [col:30;len:6;lvl:0;]: T_VARIABLE => $value
	Process token 622 on line 125 [col:36;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 623 on line 125 [col:37;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 624 on line 125 [col:38;len:1;lvl:0;]: T_COLON => :
	=> Found scope opener for 614:T_FOREACH
		* level increased *
		* token 614:T_FOREACH added to conditions array *
		Process token 625 on line 125 [col:39;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 626 on line 125 [col:40;len:2;lvl:1;conds;T_FOREACH;]: T_CLOSE_TAG => ?>\n
		Process token 627 on line 126 [col:1;len:12;lvl:1;conds;T_FOREACH;]: T_INLINE_HTML =>         <li>
		Process token 628 on line 126 [col:13;len:6;lvl:1;conds;T_FOREACH;]: T_OPEN_TAG => <?php 
		Process token 629 on line 126 [col:19;len:4;lvl:1;conds;T_FOREACH;]: T_ECHO => echo
		Process token 630 on line 126 [col:23;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 631 on line 126 [col:24;len:6;lvl:1;conds;T_FOREACH;]: T_VARIABLE => $value
		Process token 632 on line 126 [col:30;len:1;lvl:1;conds;T_FOREACH;]: T_WHITESPACE =>  
		Process token 633 on line 126 [col:31;len:2;lvl:1;conds;T_FOREACH;]: T_CLOSE_TAG => ?>
		Process token 634 on line 126 [col:33;len:5;lvl:1;conds;T_FOREACH;]: T_INLINE_HTML => </li>\n
		Process token 635 on line 127 [col:1;len:12;lvl:1;conds;T_FOREACH;]: T_INLINE_HTML =>             
		Process token 636 on line 127 [col:13;len:6;lvl:1;conds;T_FOREACH;]: T_OPEN_TAG => <?php 
		Process token 637 on line 127 [col:19;len:10;lvl:1;conds;T_FOREACH;]: T_ENDFOREACH => endforeach
		=> Found scope closer for 624:T_COLON
		* token T_FOREACH removed from conditions array *
		* level decreased *
	Process token 638 on line 127 [col:29;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 639 on line 127 [col:30;len:2;lvl:0;]: T_CLOSE_TAG => ?>\n
	Process token 640 on line 128 [col:1;len:5;lvl:0;]: T_INLINE_HTML => </ul>\n
	Process token 641 on line 129 [col:1;len:5;lvl:0;]: T_OPEN_TAG => <?php\n
	Process token 642 on line 130 [col:1;len:6;lvl:0;]: T_SWITCH => switch
	Process token 643 on line 130 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 644 on line 130 [col:8;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 645 on line 130 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 646 on line 130 [col:10;len:2;lvl:0;]: T_VARIABLE => $a
	Process token 647 on line 130 [col:12;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 648 on line 130 [col:13;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 649 on line 130 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 650 on line 130 [col:15;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 642:T_SWITCH
		* level increased *
		* token 642:T_SWITCH added to conditions array *
		Process token 651 on line 130 [col:16;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 652 on line 131 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 653 on line 131 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 654 on line 131 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 655 on line 131 [col:10;len:5;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'foo'
		Process token 656 on line 131 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 653:T_CASE
			* level increased *
			* token 653:T_CASE added to conditions array *
			Process token 657 on line 131 [col:16;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 658 on line 132 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 659 on line 132 [col:9;len:2;lvl:2;conds;T_SWITCH,T_CASE;]: T_DO => do
			Process token 660 on line 132 [col:11;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 661 on line 132 [col:12;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 659:T_DO
				* level increased *
				* token 659:T_DO added to conditions array *
				Process token 662 on line 132 [col:13;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE => \n
				Process token 663 on line 133 [col:1;len:12;lvl:3;conds;T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE =>             
				Process token 664 on line 133 [col:13;len:2;lvl:3;conds;T_SWITCH,T_CASE,T_DO;]: T_VARIABLE => $a
				Process token 665 on line 133 [col:15;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE =>  
				Process token 666 on line 133 [col:16;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_DO;]: T_EQUAL => =
				Process token 667 on line 133 [col:17;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE =>  
				Process token 668 on line 133 [col:18;len:3;lvl:3;conds;T_SWITCH,T_CASE,T_DO;]: T_CONSTANT_ENCAPSED_STRING => 'b'
				Process token 669 on line 133 [col:21;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_DO;]: T_SEMICOLON => ;
				Process token 670 on line 133 [col:22;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE => \n
				Process token 671 on line 134 [col:1;len:8;lvl:3;conds;T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE =>         
				Process token 672 on line 134 [col:9;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_DO;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 661:T_OPEN_CURLY_BRACKET
				* token T_DO removed from conditions array *
				* level decreased *
			Process token 673 on line 134 [col:10;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 674 on line 134 [col:11;len:5;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHILE => while
			Process token 675 on line 134 [col:16;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 676 on line 134 [col:17;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
			Process token 677 on line 134 [col:18;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 678 on line 134 [col:19;len:2;lvl:2;conds;T_SWITCH,T_CASE;]: T_VARIABLE => $a
			Process token 679 on line 134 [col:21;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 680 on line 134 [col:22;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
			Process token 681 on line 134 [col:23;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_SEMICOLON => ;
			Process token 682 on line 134 [col:24;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 683 on line 135 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 684 on line 135 [col:5;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 656:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 685 on line 135 [col:11;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 686 on line 135 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 5
		Process token 687 on line 135 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 688 on line 135 [col:14;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 689 on line 136 [col:1;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 690 on line 137 [col:1;len:4;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>     
		Process token 691 on line 137 [col:5;len:4;lvl:1;conds;T_SWITCH;]: T_CASE => case
		Process token 692 on line 137 [col:9;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 693 on line 137 [col:10;len:5;lvl:1;conds;T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => 'bar'
		Process token 694 on line 137 [col:15;len:1;lvl:1;conds;T_SWITCH;]: T_COLON => :
		=> Found scope opener for 691:T_CASE
			* level increased *
			* token 691:T_CASE added to conditions array *
			Process token 695 on line 137 [col:16;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 696 on line 138 [col:1;len:8;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>         
			Process token 697 on line 138 [col:9;len:7;lvl:2;conds;T_SWITCH,T_CASE;]: T_FOREACH => foreach
			Process token 698 on line 138 [col:16;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 699 on line 138 [col:17;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
			Process token 700 on line 138 [col:18;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 701 on line 138 [col:19;len:2;lvl:2;conds;T_SWITCH,T_CASE;]: T_VARIABLE => $a
			Process token 702 on line 138 [col:21;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 703 on line 138 [col:22;len:2;lvl:2;conds;T_SWITCH,T_CASE;]: T_AS => as
			Process token 704 on line 138 [col:24;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 705 on line 138 [col:25;len:2;lvl:2;conds;T_SWITCH,T_CASE;]: T_VARIABLE => $b
			Process token 706 on line 138 [col:27;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 707 on line 138 [col:28;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
			Process token 708 on line 138 [col:29;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>  
			Process token 709 on line 138 [col:30;len:1;lvl:2;conds;T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 697:T_FOREACH
				* level increased *
				* token 697:T_FOREACH added to conditions array *
				Process token 710 on line 138 [col:31;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_FOREACH;]: T_WHITESPACE => \n
				Process token 711 on line 139 [col:1;len:12;lvl:3;conds;T_SWITCH,T_CASE,T_FOREACH;]: T_WHITESPACE =>             
				Process token 712 on line 139 [col:13;len:2;lvl:3;conds;T_SWITCH,T_CASE,T_FOREACH;]: T_VARIABLE => $e
				Process token 713 on line 139 [col:15;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_FOREACH;]: T_WHITESPACE =>  
				Process token 714 on line 139 [col:16;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_FOREACH;]: T_EQUAL => =
				Process token 715 on line 139 [col:17;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_FOREACH;]: T_WHITESPACE =>  
				Process token 716 on line 139 [col:18;len:3;lvl:3;conds;T_SWITCH,T_CASE,T_FOREACH;]: T_CONSTANT_ENCAPSED_STRING => 'b'
				Process token 717 on line 139 [col:21;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_FOREACH;]: T_SEMICOLON => ;
				Process token 718 on line 139 [col:22;len:0;lvl:3;conds;T_SWITCH,T_CASE,T_FOREACH;]: T_WHITESPACE => \n
				Process token 719 on line 140 [col:1;len:8;lvl:3;conds;T_SWITCH,T_CASE,T_FOREACH;]: T_WHITESPACE =>         
				Process token 720 on line 140 [col:9;len:1;lvl:3;conds;T_SWITCH,T_CASE,T_FOREACH;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 709:T_OPEN_CURLY_BRACKET
				* token T_FOREACH removed from conditions array *
				* level decreased *
			Process token 721 on line 140 [col:10;len:0;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE => \n
			Process token 722 on line 141 [col:1;len:4;lvl:2;conds;T_SWITCH,T_CASE;]: T_WHITESPACE =>     
			Process token 723 on line 141 [col:5;len:6;lvl:2;conds;T_SWITCH,T_CASE;]: T_RETURN => return
			=> Found scope closer for 694:T_COLON
			* token T_CASE removed from conditions array *
			* level decreased *
		Process token 724 on line 141 [col:11;len:1;lvl:1;conds;T_SWITCH;]: T_WHITESPACE =>  
		Process token 725 on line 141 [col:12;len:1;lvl:1;conds;T_SWITCH;]: T_LNUMBER => 5
		Process token 726 on line 141 [col:13;len:1;lvl:1;conds;T_SWITCH;]: T_SEMICOLON => ;
		Process token 727 on line 141 [col:14;len:0;lvl:1;conds;T_SWITCH;]: T_WHITESPACE => \n
		Process token 728 on line 142 [col:1;len:1;lvl:1;conds;T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 650:T_OPEN_CURLY_BRACKET
		* token T_SWITCH removed from conditions array *
		* level decreased *
	Process token 729 on line 142 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 730 on line 143 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 731 on line 144 [col:1;len:2;lvl:0;]: T_CLOSE_TAG => ?>\n
	Process token 732 on line 145 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 733 on line 145 [col:7;len:9;lvl:0;]: T_VARIABLE => $_cartQty
	Process token 734 on line 145 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 735 on line 145 [col:17;len:1;lvl:0;]: T_EQUAL => =
	Process token 736 on line 145 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 737 on line 145 [col:19;len:5;lvl:0;]: T_VARIABLE => $this
	Process token 738 on line 145 [col:24;len:2;lvl:0;]: T_OBJECT_OPERATOR => ->
	Process token 739 on line 145 [col:26;len:15;lvl:0;]: T_STRING => getSummaryCount
	Process token 740 on line 145 [col:41;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 741 on line 145 [col:42;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 742 on line 145 [col:43;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 743 on line 145 [col:44;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 744 on line 145 [col:45;len:2;lvl:0;]: T_CLOSE_TAG => ?>\n
	Process token 745 on line 146 [col:1;len:19;lvl:0;]: T_INLINE_HTML => <div id="minicart" 
	Process token 746 on line 146 [col:20;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 747 on line 146 [col:26;len:2;lvl:0;]: T_IF => if
	Process token 748 on line 146 [col:28;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 749 on line 146 [col:29;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 750 on line 146 [col:30;len:9;lvl:0;]: T_VARIABLE => $_cartQty
	Process token 751 on line 146 [col:39;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 752 on line 146 [col:40;len:2;lvl:0;]: T_IS_EQUAL => ==
	Process token 753 on line 146 [col:42;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 754 on line 146 [col:43;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 755 on line 146 [col:44;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 756 on line 146 [col:45;len:1;lvl:0;]: T_COLON => :
	=> Found scope opener for 747:T_IF
		* level increased *
		* token 747:T_IF added to conditions array *
		Process token 757 on line 146 [col:46;len:1;lvl:1;conds;T_IF;]: T_WHITESPACE =>  
		Process token 758 on line 146 [col:47;len:2;lvl:1;conds;T_IF;]: T_CLOSE_TAG => ?>
		Process token 759 on line 146 [col:49;len:13;lvl:1;conds;T_IF;]: T_INLINE_HTML => class="empty"
		Process token 760 on line 146 [col:62;len:6;lvl:1;conds;T_IF;]: T_OPEN_TAG => <?php 
		Process token 761 on line 146 [col:68;len:5;lvl:1;conds;T_IF;]: T_ENDIF => endif
		=> Found scope closer for 756:T_COLON
		* token T_IF removed from conditions array *
		* level decreased *
	Process token 762 on line 146 [col:73;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 763 on line 146 [col:74;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 764 on line 146 [col:75;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	Process token 765 on line 146 [col:77;len:1;lvl:0;]: T_INLINE_HTML => >\n
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	* token 453 (T_CASE) on line 94 closer changed from 465 (T_EXIT) to 465 (T_EXIT)
	* token 447 (T_CASE) on line 93 closer changed from 465 (T_EXIT) to 465 (T_EXIT)
	* token 427 (T_CASE) on line 89 opener changed from 430 (T_COLON) to 432 (T_OPEN_CURLY_BRACKET)
	* token 427 (T_CASE) on line 89 closer changed from 435 (T_CLOSE_CURLY_BRACKET) to 433 (T_CLOSE_CURLY_BRACKET)
		* cleaned 433 (T_CLOSE_CURLY_BRACKET) *
			=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
		* cleaned 434 (T_WHITESPACE) *
			=> conditions changed from T_SWITCH,T_CASE to T_SWITCH
	* token 390 (T_CASE) on line 81 closer changed from 402 (T_RETURN) to 402 (T_RETURN)
	* token 384 (T_CASE) on line 80 closer changed from 402 (T_RETURN) to 402 (T_RETURN)
	* token 357 (T_CASE) on line 74 closer changed from 367 (T_RETURN) to 367 (T_RETURN)
	* token 351 (T_CASE) on line 73 closer changed from 367 (T_RETURN) to 367 (T_RETURN)
	* token 345 (T_CASE) on line 72 closer changed from 367 (T_RETURN) to 367 (T_RETURN)
	*** END ADDITIONAL PHP PROCESSING ***
[PHP => 766 tokens in 146 lines]... 
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_DO => Do
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_IF => IF
	Process token  4 : T_STRING_CONCAT => .
	Process token [5]: T_WHITESPACE =>  
	Process token [6]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 1:T_DO => Do
	=> Begin scope map recursion at token 1 with depth 1
	Process token 2 on line 1 []: T_WHITESPACE =>  
	Process token 3 on line 1 []: T_IF => IF
	=> Found new opening condition before scope opener for 1:T_DO, backtracking
	Start scope map at 3:T_IF => IF
	=> Begin scope map recursion at token 3 with depth 1
	Process token 4 on line 1 []: T_STRING_CONCAT => .
	Process token 5 on line 1 []: T_WHITESPACE =>  
	Process token 6 on line 1 []: T_CLOSE_TAG => ?>
	=> Found close tag before scope opener for 3:T_IF, bailing
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:2;lvl:0;]: T_DO => Do
	Process token 2 on line 1 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:10;len:2;lvl:0;]: T_IF => IF
	Process token 4 on line 1 [col:12;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 5 on line 1 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 6 on line 1 [col:14;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_DO => Do
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_ELSE => ELSE
	Process token  4 : T_STRING_CONCAT => .
	Process token [5]: T_WHITESPACE =>  
	Process token [6]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 1:T_DO => Do
	=> Begin scope map recursion at token 1 with depth 1
	Process token 2 on line 1 []: T_WHITESPACE =>  
	Process token 3 on line 1 []: T_ELSE => ELSE
	=> Found new opening condition before scope opener for 1:T_DO, backtracking
	Start scope map at 3:T_ELSE => ELSE
	=> Begin scope map recursion at token 3 with depth 1
	Process token 4 on line 1 []: T_STRING_CONCAT => .
	Process token 5 on line 1 []: T_WHITESPACE =>  
	Process token 6 on line 1 []: T_CLOSE_TAG => ?>
	=> Found close tag before scope opener for 3:T_ELSE, bailing
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:2;lvl:0;]: T_DO => Do
	Process token 2 on line 1 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:10;len:4;lvl:0;]: T_ELSE => ELSE
	Process token 4 on line 1 [col:14;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 5 on line 1 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 6 on line 1 [col:16;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_DO => Do
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => something
	Process token  4 : T_STRING_CONCAT => .
	Process token [5]: T_WHITESPACE =>  
	Process token [6]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 1:T_DO => Do
	=> Begin scope map recursion at token 1 with depth 1
	Process token 2 on line 1 []: T_WHITESPACE =>  
	Process token 3 on line 1 []: T_STRING => something
	Process token 4 on line 1 []: T_STRING_CONCAT => .
	Process token 5 on line 1 []: T_WHITESPACE =>  
	Process token 6 on line 1 []: T_CLOSE_TAG => ?>
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:2;lvl:0;]: T_DO => Do
	Process token 2 on line 1 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:10;len:9;lvl:0;]: T_STRING => something
	Process token 4 on line 1 [col:19;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 5 on line 1 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 6 on line 1 [col:21;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_DO => Do
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => something
	Process token  4 : T_STRING_CONCAT => .
	Process token [5]: T_WHITESPACE =>  
	Process token [6]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 1:T_DO => Do
	=> Begin scope map recursion at token 1 with depth 1
	Process token 2 on line 1 []: T_WHITESPACE =>  
	Process token 3 on line 1 []: T_STRING => something
	Process token 4 on line 1 []: T_STRING_CONCAT => .
	Process token 5 on line 1 []: T_WHITESPACE =>  
	Process token 6 on line 1 []: T_CLOSE_TAG => ?>
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:2;lvl:0;]: T_DO => Do
	Process token 2 on line 1 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:10;len:9;lvl:0;]: T_STRING => something
	Process token 4 on line 1 [col:19;len:1;lvl:0;]: T_STRING_CONCAT => .
	Process token 5 on line 1 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 6 on line 1 [col:21;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_DO => Do
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => something
	Process token  4 : T_SEMICOLON => ;
	Process token [5]: T_WHITESPACE =>  
	Process token [6]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 1:T_DO => Do
	=> Begin scope map recursion at token 1 with depth 1
	Process token 2 on line 1 []: T_WHITESPACE =>  
	Process token 3 on line 1 []: T_STRING => something
	Process token 4 on line 1 []: T_SEMICOLON => ;
	Process token 5 on line 1 []: T_WHITESPACE =>  
	Process token 6 on line 1 []: T_CLOSE_TAG => ?>
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:6;lvl:0;]: T_OPEN_TAG => <?php 
	Process token 1 on line 1 [col:7;len:2;lvl:0;]: T_DO => Do
	Process token 2 on line 1 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 3 on line 1 [col:10;len:9;lvl:0;]: T_STRING => something
	Process token 4 on line 1 [col:19;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 5 on line 1 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 6 on line 1 [col:21;len:2;lvl:0;]: T_CLOSE_TAG => ?>
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
DONE in 958ms (97 fixable violations)
	=> Fixing file: 97/97 violations remaining	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 34 (T_WHITESPACE) "     }" => "    }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 75 (T_WHITESPACE) " }" => "}"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 230 (T_CASE) "case" => "    case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 235 (T_WHITESPACE) "    switch" => "        switch"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 244 (T_WHITESPACE) "    default" => "        default"
	* token 244 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 248 (T_WHITESPACE) "        if" => "            if"
	* token 248 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 257 (T_WHITESPACE) "            echo" => "                echo"
	* token 257 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 266 (T_WHITESPACE) "        }" => "            }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 279 (T_WHITESPACE) "            switch" => "                switch"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 288 (T_WHITESPACE) "            case" => "                case"
	* token 288 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 294 (T_WHITESPACE) "                // Do something.\n" => "                    // Do something.\n"
	* token 294 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 296 (T_WHITESPACE) "                break" => "                    break"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 300 (T_WHITESPACE) "            default" => "                default"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 304 (T_WHITESPACE) "                // Do something.\n" => "                    // Do something.\n"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 306 (T_WHITESPACE) "            break" => "                break"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 310 (T_WHITESPACE) "            }" => "                }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 313 (T_WHITESPACE) "        }" => "            }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 316 (T_WHITESPACE) "    }" => "        }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 322 (T_CASE) "case" => "    case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 327 (T_WHITESPACE) "    // Do something;\n" => "        // Do something;\n"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 427 (T_CASE) "case" => "    case"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 187)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 195) replaced token 68 (T_WHITESPACE) "\nclass" => "class"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 198) replaced token 68 (T_WHITESPACE) "\nclass" => "class"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 65 (T_CLOSE_CURLY_BRACKET) "}" => "}//end class\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 21 (T_CLOSE_CURLY_BRACKET) "}" => "}//end __construct()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 20 (T_WHITESPACE) "    }//end __construct()\n" => "\n    }//end __construct()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 23 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 24 (T_WHITESPACE) "    function" => "\n\n    function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 23 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 24 (T_WHITESPACE) "    function" => "\n\n    function"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 7 (T_WHITESPACE) "\n    " => "\n\n\n    "
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 35 (T_CLOSE_CURLY_BRACKET) "}" => "}//end test1()\n"
	* token 34 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 37 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 38 (T_WHITESPACE) "    function" => "\n\n    function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 37 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 38 (T_WHITESPACE) "    function" => "\n\n    function"
	=> Changeset ended: 2 changes applied
	* token 34 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 46 (T_CLOSE_CURLY_BRACKET) "}" => "}//end test2()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 44 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 45 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 44 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 45 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	* token 46 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 48 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 49 (T_WHITESPACE) "    private" => "\n\n    private"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 48 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 49 (T_WHITESPACE) "    private" => "\n\n    private"
	=> Changeset ended: 2 changes applied
	* token 46 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 62 (T_CLOSE_CURLY_BRACKET) "}" => "}//end _test3()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 61 (T_WHITESPACE) "    }//end _test3()\n" => "\n    }//end _test3()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 64 (T_WHITESPACE) "\n}//end class\n" => "}//end class\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 65 (T_CLOSE_CURLY_BRACKET) "}//end class\n" => "\n\n}//end class\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 64 (T_WHITESPACE) "\n}//end class\n" => "}//end class\n"
		* token 65 has already been modified, skipping *
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) reverted token 64 (T_WHITESPACE) "}//end class\n" => "\n}//end class\n"
	=> Changeset failed to apply
	* token 75 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 187)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 195) replaced token 79 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 198) replaced token 79 (T_WHITESPACE) "\nfunction" => "function"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 76 (T_CLOSE_CURLY_BRACKET) "}" => "}//end class\n"
	* token 75 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 175 (T_CLOSE_CURLY_BRACKET) "}" => "}//end test2()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 174 (T_WHITESPACE) "\n}//end test2()\n" => "\n\n}//end test2()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 177 (T_WHITESPACE) "\nforeach" => "foreach"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 178 (T_FOREACH) "foreach" => "\n\nforeach"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 177 (T_WHITESPACE) "\nforeach" => "foreach"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 178 (T_FOREACH) "foreach" => "\n\nforeach"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 72) replaced token 111 (T_CLOSE_CURLY_BRACKET) "}" => "\n}"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 240)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 243) replaced token 113 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 243) replaced token 114 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 247) replaced token 115 (T_WHITESPACE) "    if" => "\n    if"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 248) replaced token 113 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 248) replaced token 114 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 248) replaced token 115 (T_WHITESPACE) "    if" => "\n    if"
	=> Changeset ended: 3 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 135 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	PHP_CodeSniffer\Standards\Generic\Sniffs\Formatting\MultipleStatementAlignmentSniff (line 365) replaced token 143 (T_WHITESPACE) " =" => "      ="
	* token 230 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 170) replaced token 319 (T_BREAK) "break" => "    break"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 322 (T_CASE) "    case" => "\n    case"
		* token 322 has already been modified, skipping *
	=> Changeset failed to apply
	* token 322 has already been modified, skipping *
	* token 244 has already been modified, skipping *
	* token 288 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 300 (T_WHITESPACE) "                default" => "\n                default"
		* token 300 has already been modified, skipping *
	=> Changeset failed to apply
	* token 300 has already been modified, skipping *
	* token 306 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\LongConditionClosingCommentSniff (line 174) replaced token 333 (T_CLOSE_CURLY_BRACKET) "}" => "}//end switch"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 172) replaced token 366 (T_WHITESPACE) "        return" => "    return"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 172) replaced token 401 (T_WHITESPACE) "        return" => "    return"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 407 (T_WHITESPACE) "    default" => "\n    default"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 407 (T_WHITESPACE) "    default" => "\n    default"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 116) replaced token 420 (T_SWITCH) "switch" => "switch "
	* token 427 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 146) replaced token 431 (T_WHITESPACE) " {" => "{"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 72) replaced token 433 (T_CLOSE_CURLY_BRACKET) "}" => "\n}"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 172) replaced token 464 (T_WHITESPACE) "        exit" => "    exit"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 468 (T_WHITESPACE) "    default" => "\n    default"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 468 (T_WHITESPACE) "    default" => "\n    default"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 157) replaced token 483 (T_CLOSE_PARENTHESIS) ")" => ") "
	* token 483 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 157) replaced token 491 (T_CLOSE_PARENTHESIS) ")" => ") "
	* token 491 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 157) replaced token 507 (T_CLOSE_PARENTHESIS) ")" => ") "
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ElseIfDeclarationSniff (line 45) replaced token 503 (T_ELSEIF) "elseif" => "else if"
	* token 507 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 157) replaced token 530 (T_CLOSE_PARENTHESIS) ")" => ") "
	* token 530 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 157) replaced token 537 (T_CLOSE_PARENTHESIS) ")" => ") "
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 224) replaced token 539 (T_WHITESPACE) " $foo" => "$foo"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 538 (T_COLON) ":" => ":\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 539 (T_WHITESPACE) " $foo" => "$foo"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 538 (T_COLON) ":" => ":\n"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ElseIfDeclarationSniff (line 45) replaced token 533 (T_ELSEIF) "elseif" => "else if"
	* token 537 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 354) replaced token 572 (T_VARIABLE) "$value" => "$value;"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 95) replaced token 606 (T_OPEN_TAG) "<?php " => "    <?php "
	PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 354) replaced token 602 (T_VARIABLE) "$value" => "$value;"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 97) replaced token 635 (T_INLINE_HTML) "            <?php " => "    <?php "
	PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 354) replaced token 631 (T_VARIABLE) "$value" => "$value;"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 86) replaced token 645 (T_WHITESPACE) " $a" => "$a"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 100) replaced token 647 (T_WHITESPACE) " )" => ")"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 86) replaced token 677 (T_WHITESPACE) " $a" => "$a"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 100) replaced token 679 (T_WHITESPACE) " )" => ")"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForEachLoopDeclarationSniff (line 80) replaced token 700 (T_WHITESPACE) " $a" => "$a"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForEachLoopDeclarationSniff (line 110) replaced token 706 (T_WHITESPACE) " )" => ")"
	* token 700 has already been modified, skipping *
	* token 706 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 157) replaced token 755 (T_CLOSE_PARENTHESIS) ")" => ") "
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 224) replaced token 757 (T_WHITESPACE) " ?>" => "?>"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 756 (T_COLON) ":" => ":\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 757 (T_WHITESPACE) " ?>" => "?>"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 756 (T_COLON) ":" => ":\n"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 72) replaced token 761 (T_ENDIF) "endif" => "\nendif"
	* token 755 has already been modified, skipping *
                                                                                	=> Fixing file: 84/97 violations remaining [made 1 pass]... 	* fixed 84 violations, starting loop 2 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 52 (T_OPEN_CURLY_BRACKET) "{" => "    {"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 121 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 258 (T_WHITESPACE) "        default" => "            default"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 262 (T_WHITESPACE) "            if" => "                if"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 271 (T_WHITESPACE) "                echo" => "                    echo"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 280 (T_WHITESPACE) "            }" => "                }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 293 (T_WHITESPACE) "                switch" => "                    switch"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 302 (T_WHITESPACE) "                case" => "                    case"
	* token 302 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 308 (T_WHITESPACE) "                    // Do something.\n" => "                        // Do something.\n"
	* token 308 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 310 (T_WHITESPACE) "                    break" => "                        break"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 314 (T_WHITESPACE) "                default" => "                    default"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 318 (T_WHITESPACE) "                    // Do something.\n" => "                        // Do something.\n"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 320 (T_WHITESPACE) "                break" => "                    break"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 324 (T_WHITESPACE) "                }" => "                    }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 327 (T_WHITESPACE) "            }" => "                }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 452 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 507 (T_WHITESPACE) "    if" => "if"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 516 (T_WHITESPACE) "        $foo" => "    $foo"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 569 (T_VARIABLE) "$foo" => "    $foo"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 786 (T_CLOSE_TAG) "?>" => "    ?>"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 187)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 195) replaced token 79 (T_WHITESPACE) "\nclass" => "class"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 198) replaced token 79 (T_WHITESPACE) "\nclass" => "class"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 26 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 27 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 28 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 29 (T_WHITESPACE) "    function" => "\n\n    function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 26 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 27 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 28 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 29 (T_WHITESPACE) "    function" => "\n\n    function"
	=> Changeset ended: 4 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 39 (T_WHITESPACE) "    }" => "\n    }"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 42 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 43 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 44 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 45 (T_WHITESPACE) "    function" => "\n\n    function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 42 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 43 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 44 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 45 (T_WHITESPACE) "    function" => "\n\n    function"
	=> Changeset ended: 4 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 154) replaced token 53 (T_CLOSE_CURLY_BRACKET) "}" => "\n}"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 55 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 56 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 57 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 58 (T_WHITESPACE) "    private" => "\n\n    private"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 55 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 56 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 57 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 58 (T_WHITESPACE) "    private" => "\n\n    private"
	=> Changeset ended: 4 changes applied
	* token 53 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 187)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 195) replaced token 89 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff (line 198) replaced token 89 (T_WHITESPACE) "\nfunction" => "function"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 188 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 189 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 190 (T_WHITESPACE) "\nforeach" => "foreach"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 191 (T_FOREACH) "foreach" => "\n\nforeach"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 188 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 189 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 190 (T_WHITESPACE) "\nforeach" => "foreach"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 191 (T_FOREACH) "foreach" => "\n\nforeach"
	=> Changeset ended: 4 changes applied
	* token 121 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 211) replaced token 120 (T_WHITESPACE) " \n    }" => "\n    }"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 337 (T_WHITESPACE) "    case" => "\n    case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 337 (T_WHITESPACE) "    case" => "\n    case"
	=> Changeset ended: 1 changes applied
	* token 258 has already been modified, skipping *
	* token 302 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 314 (T_WHITESPACE) "                    default" => "\n                    default"
		* token 314 has already been modified, skipping *
	=> Changeset failed to apply
	* token 314 has already been modified, skipping *
	* token 320 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 503 (T_CLOSE_PARENTHESIS) ")" => ") {"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 262) replaced token 547 (T_ENDIF) "endif" => "endif; "
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 293) replaced token 547 (T_ENDIF) "endif" => "endif; \n}"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 503 (T_CLOSE_PARENTHESIS) ")" => ") {"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 547 (T_ENDIF) "endif" => "endif; \n}"
	=> Changeset ended: 2 changes applied
	* token 547 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 555 (T_CLOSE_PARENTHESIS) ")" => ") {"
		R: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 161) rolled back the changeset (1 changes)
	=> Changeset rolled back
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 108)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 109) replaced token 773 (T_OPEN_TAG) "<?php " => "<?php \n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 110) replaced token 773 (T_OPEN_TAG) "<?php " => "<?php \n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 111) replaced token 773 (T_OPEN_TAG) "<?php " => "<?php \n"
	=> Changeset ended: 1 changes applied
	* token 773 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 246)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 247) replaced token 786 (T_CLOSE_TAG) "    ?>" => "    ?>\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 248) replaced token 786 (T_CLOSE_TAG) "    ?>" => "    ?>\n"
		* token 786 has already been modified, skipping *
	=> Changeset failed to apply
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 95) replaced token 790 (T_ENDIF) "endif" => "                   endif"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 187) replaced token 788 (T_OPEN_TAG) "<?php " => "\n<?php "
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 236)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 237) replaced token 793 (T_CLOSE_TAG) "?>" => "?>"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 238) replaced token 793 (T_CLOSE_TAG) "?>" => "\n?>"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 239) replaced token 793 (T_CLOSE_TAG) "?>" => "\n?>"
	=> Changeset ended: 1 changes applied
	* token 788 has already been modified, skipping *
                                                                                	=> Fixing file: 48/97 violations remaining [made 2 passes]... 	* fixed 48 violations, starting loop 3 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 54 (T_CLOSE_CURLY_BRACKET) "}" => "    }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 300 (T_WHITESPACE) "                    case" => "                        case"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 306 (T_WHITESPACE) "                        // Do something.\n" => "                            // Do something.\n"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 312 (T_WHITESPACE) "                    default" => "                        default"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 316 (T_WHITESPACE) "                        // Do something.\n" => "                            // Do something.\n"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 509 (T_IF) "if" => "    if"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 517 (T_WHITESPACE) "    $foo" => "        $foo"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 525 (T_WHITESPACE) "    else" => "        else"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 536 (T_WHITESPACE) "        $foo" => "            $foo"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 544 (T_WHITESPACE) "    endif" => "        endif"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 795 (T_OPEN_TAG) "<?php " => "    <?php "
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 53 (T_WHITESPACE) "\n    }" => "\n\n    }"
	* token 54 has already been modified, skipping *
	* token 300 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 312 (T_WHITESPACE) "                        default" => "\n                        default"
		* token 312 has already been modified, skipping *
	=> Changeset failed to apply
	* token 312 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 172) replaced token 318 (T_WHITESPACE) "                    break" => "                        break"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 224) replaced token 506 (T_WHITESPACE) " :" => ":"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 505 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 506 (T_WHITESPACE) " :" => ":"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 505 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 211) replaced token 550 (T_WHITESPACE) " \n}" => "\n}"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 559 (T_CLOSE_PARENTHESIS) ")" => ") {"
		R: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 161) rolled back the changeset (1 changes)
	=> Changeset rolled back
	PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 187) replaced token 778 (T_OPEN_TAG) "<?php " => "\n<?php "
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 246)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 247) replaced token 793 (T_CLOSE_TAG) "?>" => "?>\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 248) replaced token 793 (T_CLOSE_TAG) "?>" => "?>\n    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 249) replaced token 793 (T_CLOSE_TAG) "?>" => "?>\n    "
	=> Changeset ended: 1 changes applied
	* token 778 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 97) replaced token 797 (T_WHITESPACE) "                   endif" => "endif"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 246)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 247) replaced token 801 (T_CLOSE_TAG) "?>" => "?>\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 248) replaced token 801 (T_CLOSE_TAG) "?>" => "?>\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff (line 249) replaced token 801 (T_CLOSE_TAG) "?>" => "?>\n"
	=> Changeset ended: 1 changes applied
	* token 795 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 211) replaced token 800 (T_WHITESPACE) " \n?>\n" => "\n?>\n"
                                                                                	=> Fixing file: 21/97 violations remaining [made 3 passes]... 	* fixed 21 violations, starting loop 4 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 509 (T_COLON) ":" => "    :"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 314 (T_WHITESPACE) "                        default" => "\n                        default"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 314 (T_WHITESPACE) "                        default" => "\n                        default"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff (line 95) replaced token 551 (T_ENDIF) "endif" => "    endif"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 562 (T_CLOSE_PARENTHESIS) ")" => ") {"
		R: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 161) rolled back the changeset (1 changes)
	=> Changeset rolled back
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 219) replaced token 781 (T_OPEN_TAG) "<?php " => "<?php"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 219) replaced token 799 (T_OPEN_TAG) "<?php " => "<?php"
                                                                                	=> Fixing file: 5/97 violations remaining [made 4 passes]... 	* fixed 5 violations, starting loop 5 *
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 565 (T_CLOSE_PARENTHESIS) ")" => ") {"
		R: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 161) rolled back the changeset (1 changes)
	=> Changeset rolled back
                                                                                	=> Fixing file: 0/97 violations remaining [made 5 passes]... DONE in 1.41 secs
	=> Fixed file written to ScopeClosingBraceUnitTest.inc.squiz-fixed

PHPCBF RESULT SUMMARY
------------------------------------------------------------------------------------------
FILE                                                                      FIXED  REMAINING
------------------------------------------------------------------------------------------
...fer\src\Standards\PEAR\Tests\WhiteSpace\ScopeClosingBraceUnitTest.inc  FAILED TO FIX
------------------------------------------------------------------------------------------
A TOTAL OF 96 ERRORS WERE FIXED IN 1 FILE
------------------------------------------------------------------------------------------
PHPCBF FAILED TO FIX 1 FILE
------------------------------------------------------------------------------------------

Time: 3.51 secs; Memory: 8MB


