PHP 7.2.11 (cli) (built: Oct 10 2018 02:39:52) ( ZTS MSVC15 (Visual C++ 2017) x86 )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies
    with Xdebug v2.6.0, Copyright (c) 2002-2018, by Derick Rethans

PHP_CodeSniffer version 3.4.0 (stable) by Squiz (http://www.squiz.net)

Processing ruleset D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\ruleset.xml
	Adding sniff files from D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs directory
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayBracketSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\ClassDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\ClassFileNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\DuplicatePropertySniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\LowercaseClassKeywordsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\SelfMemberReferenceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Classes\ValidClassNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\BlockCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\ClassCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\DocCommentAlignmentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\EmptyCatchCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\FileCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\FunctionCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\FunctionCommentThrowTagSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\LongConditionClosingCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\PostStatementCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\VariableCommentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ElseIfDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ForEachLoopDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\InlineIfDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\LowercaseDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ClassDefinitionClosingBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ClassDefinitionNameSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ClassDefinitionOpeningBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ColonSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ColourDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\DisallowMultipleStyleDefinitionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\DuplicateClassDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\DuplicateStyleDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\EmptyClassDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\EmptyStyleDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ForbiddenStylesSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\IndentationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\LowercaseStyleDefinitionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\MissingColonSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\NamedColoursSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\OpacitySniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\SemicolonSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\CSS\ShorthandSizeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Debug\JavaScriptLintSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Debug\JSLintSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Files\FileExtensionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Formatting\OperatorBracketSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\FunctionDeclarationArgumentSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\FunctionDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\FunctionDuplicateArgumentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\GlobalFunctionSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\LowercaseFunctionKeywordsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Functions\MultiLineFunctionDeclarationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidFunctionNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidVariableNameSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Objects\DisallowObjectStringIndexSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Objects\ObjectInstantiationSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Objects\ObjectMemberCommaSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Operators\ComparisonOperatorUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Operators\IncrementDecrementUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Operators\ValidLogicalOperatorsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\CommentedOutCodeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowBooleanStatementSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowComparisonAssignmentSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowInlineIfSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowMultipleAssignmentsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DisallowSizeFunctionsInLoopsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\DiscouragedFunctionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\EmbeddedPhpSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\EvalSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\GlobalKeywordSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\HeredocSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\InnerFunctionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\LowercasePHPFunctionsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\PHP\NonExecutableCodeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Scope\MemberVarScopeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Scope\MethodScopeSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Scope\StaticThisUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Strings\ConcatenationSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Strings\DoubleQuoteUsageSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Strings\EchoedStringsSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\CastSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\FunctionOpeningBraceSpaceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\LogicalOperatorSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\MemberVarSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ObjectOperatorSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\OperatorSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\PropertyLabelSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\ScopeKeywordSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff.php
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff.php
	Processing rule "Generic.Arrays.DisallowLongArraySyntax"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Arrays\DisallowLongArraySyntaxSniff.php
	Processing rule "Generic.CodeAnalysis.EmptyStatement"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\CodeAnalysis\EmptyStatementSniff.php
	Processing rule "Generic.Commenting.Todo"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Commenting\TodoSniff.php
	Processing rule "Generic.Commenting.DocComment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Commenting\DocCommentSniff.php
	Processing rule "Generic.ControlStructures.InlineControlStructure"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff.php
	Processing rule "Generic.Formatting.DisallowMultipleStatements"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Formatting\DisallowMultipleStatementsSniff.php
	Processing rule "Generic.Formatting.SpaceAfterCast"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Formatting\SpaceAfterCastSniff.php
	Processing rule "Generic.Functions.FunctionCallArgumentSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Functions\FunctionCallArgumentSpacingSniff.php
	Processing rule "Generic.NamingConventions.ConstructorName"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\NamingConventions\ConstructorNameSniff.php
	Processing rule "Generic.NamingConventions.UpperCaseConstantName"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\NamingConventions\UpperCaseConstantNameSniff.php
	Processing rule "Generic.PHP.DeprecatedFunctions"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\DeprecatedFunctionsSniff.php
	Processing rule "Generic.PHP.DisallowShortOpenTag"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\DisallowShortOpenTagSniff.php
	Processing rule "Generic.PHP.LowerCaseKeyword"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\LowerCaseKeywordSniff.php
	Processing rule "Generic.PHP.LowerCaseConstant"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\LowerCaseConstantSniff.php
	Processing rule "Generic.Strings.UnnecessaryStringConcat"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Strings\UnnecessaryStringConcatSniff.php
	Processing rule "Generic.WhiteSpace.DisallowTabIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\DisallowTabIndentSniff.php
	Processing rule "Generic.WhiteSpace.LanguageConstructSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
	Processing rule "Generic.WhiteSpace.IncrementDecrementSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\IncrementDecrementSpacingSniff.php
	Processing rule "Generic.WhiteSpace.ScopeIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff.php
	Processing rule "PEAR.ControlStructures.MultiLineCondition"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\ControlStructures\MultiLineConditionSniff.php
	Processing rule "PEAR.Files.IncludingFile"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Files\IncludingFileSniff.php
	Processing rule "PEAR.Formatting.MultiLineAssignment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Formatting\MultiLineAssignmentSniff.php
	Processing rule "PEAR.Functions.ValidDefaultValue"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Functions\ValidDefaultValueSniff.php
	Processing rule "PSR2.Files.EndFileNewline"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff.php
	Processing rule "Zend.Files.ClosingTag"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Zend\Sniffs\Files\ClosingTagSniff.php
	Processing rule "Zend.Debug.CodeAnalyzer"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Zend\Sniffs\Debug\CodeAnalyzerSniff.php
	Processing rule "Generic.Files.LineLength"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Files\LineLengthSniff.php
		=> property "lineLimit" set to "120"
		=> property "absoluteLineLimit" set to "0"
	Processing rule "Generic.Files.LineEndings"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Files\LineEndingsSniff.php
		=> property "eolChar" set to "\n"
	Processing rule "Generic.Formatting.MultipleStatementAlignment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Formatting\MultipleStatementAlignmentSniff.php
		=> property "maxPadding" set to "20"
		=> property "error" set to "true"
	Processing rule "Generic.PHP.ForbiddenFunctions"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\PHP\ForbiddenFunctionsSniff.php
		=> array property "forbiddenFunctions" set to "sizeof=>count,delete=>unset,print=>echo,is_null=>null,create_function=>null"
	Processing rule "Generic.CodeAnalysis.EmptyStatement.DetectedCATCH"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\CodeAnalysis\EmptyStatementSniff.php
		=> severity set to 0
	Processing rule "Generic.Debug.ClosureLinter"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Debug\ClosureLinterSniff.php
		=> array property "errorCodes" set to "0210"
		=> array property "ignoreCodes" set to "0001,0110,0240"
	Processing rule "Generic.Debug.ClosureLinter.ExternalToolError"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Debug\ClosureLinterSniff.php
		=> message set to %2$s
	Processing rule "PEAR.Functions.FunctionCallSignature"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff.php
		=> property "allowMultipleArguments" set to "false"
	Processing rule "Generic.Arrays.ArrayIndent"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Sniffs\Arrays\ArrayIndentSniff.php
	Processing rule "Squiz.Arrays.ArrayDeclaration.KeyNotAligned"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.ValueNotAligned"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.WhiteSpace.LanguageConstructSpacing"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
		=> severity set to 0
	Processing rule "Squiz.Commenting.InlineComment"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff.php
		Excluding rule "Squiz.Commenting.InlineComment.SpacingAfterAtFunctionEnd"
		=> severity set to 0
	Processing rule "Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidFunctionNameSniff.php
		=> severity set to 0
	Processing rule "PSR2.Methods.MethodDeclaration.Underscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PSR2\Sniffs\Methods\MethodDeclarationSniff.php
		Excluding sniff "PSR2.Methods.MethodDeclaration" except for "Underscore"
		=> message type set to error
	Processing rule "Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Squiz\Sniffs\NamingConventions\ValidVariableNameSniff.php
		=> severity set to 0
	Processing rule "PSR2.Classes.PropertyDeclaration.Underscore"
		=> D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\PSR2\Sniffs\Classes\PropertyDeclarationSniff.php
		Excluding sniff "PSR2.Classes.PropertyDeclaration" except for "Underscore"
		=> message type set to error
=> Ruleset processing complete; included 133 sniffs and excluded 0
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_FUNCTION => function
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_SEMICOLON => ;
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_FUNCTION => function
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_ABSTRACT => abstract
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_FUNCTION => function
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_SEMICOLON => ;
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
Creating file list... DONE (1 files in queue)
Changing into directory D:\000_GitHub\PHPCS\PHP_CodeSniffer\src\Standards\Generic\Tests\Metrics
Processing CyclomaticComplexityUnitTest.inc 
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php\n
	Process token [1]: T_WHITESPACE => \n
	Process token [2]: T_FUNCTION => function
	Process token [3]: T_WHITESPACE =>  
	Process token [4]: T_STRING => complexityOne
	Process token  5 : T_OPEN_PARENTHESIS => (
	Process token  6 : T_CLOSE_PARENTHESIS => )
	Process token [7]: T_WHITESPACE =>  
	Process token  8 : T_OPEN_CURLY_BRACKET => {
	Process token [9]: T_WHITESPACE =>  
	Process token  10 : T_CLOSE_CURLY_BRACKET => }
	Process token [11]: T_WHITESPACE => \n\n
	Process token [12]: T_FUNCTION => function
	Process token [13]: T_WHITESPACE =>  
	Process token [14]: T_STRING => comlexityFive
	Process token  15 : T_OPEN_PARENTHESIS => (
	Process token  16 : T_CLOSE_PARENTHESIS => )
	Process token [17]: T_WHITESPACE => \n
	Process token  18 : T_OPEN_CURLY_BRACKET => {
	Process token [19]: T_WHITESPACE => \n    
	Process token [20]: T_IF => if
	Process token [21]: T_WHITESPACE =>  
	Process token  22 : T_OPEN_PARENTHESIS => (
	Process token [23]: T_VARIABLE => $condition
	Process token  24 : T_CLOSE_PARENTHESIS => )
	Process token [25]: T_WHITESPACE =>  
	Process token  26 : T_OPEN_CURLY_BRACKET => {
	Process token [27]: T_WHITESPACE => \n    
	Process token  28 : T_CLOSE_CURLY_BRACKET => }
	Process token [29]: T_WHITESPACE => \n\n    
	Process token [30]: T_SWITCH => switch
	Process token [31]: T_WHITESPACE =>  
	Process token  32 : T_OPEN_PARENTHESIS => (
	Process token [33]: T_VARIABLE => $condition
	Process token  34 : T_CLOSE_PARENTHESIS => )
	Process token [35]: T_WHITESPACE =>  
	Process token  36 : T_OPEN_CURLY_BRACKET => {
	Process token [37]: T_WHITESPACE => \n        
	Process token [38]: T_CASE => case
	Process token [39]: T_WHITESPACE =>  
	Process token [40]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  41 : T_COLON => :
	Process token [42]: T_WHITESPACE => \n        
	Process token [43]: T_BREAK => break
	Process token  44 : T_SEMICOLON => ;
	Process token [45]: T_WHITESPACE => \n        
	Process token [46]: T_CASE => case
	Process token [47]: T_WHITESPACE =>  
	Process token [48]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token  49 : T_COLON => :
	Process token [50]: T_WHITESPACE => \n        
	Process token [51]: T_BREAK => break
	Process token  52 : T_SEMICOLON => ;
	Process token [53]: T_WHITESPACE => \n        
	Process token [54]: T_CASE => case
	Process token [55]: T_WHITESPACE =>  
	Process token [56]: T_CONSTANT_ENCAPSED_STRING => '3'
	Process token  57 : T_COLON => :
	Process token [58]: T_WHITESPACE => \n        
	Process token [59]: T_BREAK => break
	Process token  60 : T_SEMICOLON => ;
	Process token [61]: T_WHITESPACE => \n    
	Process token  62 : T_CLOSE_CURLY_BRACKET => }
	Process token [63]: T_WHITESPACE => \n
	Process token  64 : T_CLOSE_CURLY_BRACKET => }
	Process token [65]: T_WHITESPACE => \n\n
	Process token [66]: T_FUNCTION => function
	Process token [67]: T_WHITESPACE =>  
	Process token [68]: T_STRING => comlexityTen
	Process token  69 : T_OPEN_PARENTHESIS => (
	Process token  70 : T_CLOSE_PARENTHESIS => )
	Process token [71]: T_WHITESPACE => \n
	Process token  72 : T_OPEN_CURLY_BRACKET => {
	Process token [73]: T_WHITESPACE => \n    
	Process token [74]: T_WHILE => while
	Process token [75]: T_WHITESPACE =>  
	Process token  76 : T_OPEN_PARENTHESIS => (
	Process token [77]: T_VARIABLE => $condition
	Process token [78]: T_WHITESPACE =>  
	Process token [79]: T_IS_IDENTICAL => ===
	Process token [80]: T_WHITESPACE =>  
	Process token [81]: T_STRING => true
	Process token  82 : T_CLOSE_PARENTHESIS => )
	Process token [83]: T_WHITESPACE =>  
	Process token  84 : T_OPEN_CURLY_BRACKET => {
	Process token [85]: T_WHITESPACE => \n        
	Process token [86]: T_IF => if
	Process token [87]: T_WHITESPACE =>  
	Process token  88 : T_OPEN_PARENTHESIS => (
	Process token [89]: T_VARIABLE => $condition
	Process token  90 : T_CLOSE_PARENTHESIS => )
	Process token [91]: T_WHITESPACE =>  
	Process token  92 : T_OPEN_CURLY_BRACKET => {
	Process token [93]: T_WHITESPACE => \n        
	Process token  94 : T_CLOSE_CURLY_BRACKET => }
	Process token [95]: T_WHITESPACE => \n    
	Process token  96 : T_CLOSE_CURLY_BRACKET => }
	Process token [97]: T_WHITESPACE => \n\n    
	Process token [98]: T_SWITCH => switch
	Process token [99]: T_WHITESPACE =>  
	Process token  100 : T_OPEN_PARENTHESIS => (
	Process token [101]: T_VARIABLE => $condition
	Process token  102 : T_CLOSE_PARENTHESIS => )
	Process token [103]: T_WHITESPACE =>  
	Process token  104 : T_OPEN_CURLY_BRACKET => {
	Process token [105]: T_WHITESPACE => \n        
	Process token [106]: T_CASE => case
	Process token [107]: T_WHITESPACE =>  
	Process token [108]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  109 : T_COLON => :
	Process token [110]: T_WHITESPACE => \n            
	Process token [111]: T_IF => if
	Process token [112]: T_WHITESPACE =>  
	Process token  113 : T_OPEN_PARENTHESIS => (
	Process token [114]: T_VARIABLE => $condition
	Process token  115 : T_CLOSE_PARENTHESIS => )
	Process token [116]: T_WHITESPACE =>  
	Process token  117 : T_OPEN_CURLY_BRACKET => {
	Process token [118]: T_WHITESPACE => \n            
	Process token  119 : T_CLOSE_CURLY_BRACKET => }
	Process token [120]: T_WHITESPACE =>  
	Process token [121]: T_ELSE => else
	Process token [122]: T_WHITESPACE =>  
	Process token [123]: T_IF => if
	Process token [124]: T_WHITESPACE =>  
	Process token  125 : T_OPEN_PARENTHESIS => (
	Process token [126]: T_VARIABLE => $cond
	Process token  127 : T_CLOSE_PARENTHESIS => )
	Process token [128]: T_WHITESPACE =>  
	Process token  129 : T_OPEN_CURLY_BRACKET => {
	Process token [130]: T_WHITESPACE => \n            
	Process token  131 : T_CLOSE_CURLY_BRACKET => }
	Process token [132]: T_WHITESPACE => \n        
	Process token [133]: T_BREAK => break
	Process token  134 : T_SEMICOLON => ;
	Process token [135]: T_WHITESPACE => \n        
	Process token [136]: T_CASE => case
	Process token [137]: T_WHITESPACE =>  
	Process token [138]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token  139 : T_COLON => :
	Process token [140]: T_WHITESPACE => \n            
	Process token [141]: T_WHILE => while
	Process token [142]: T_WHITESPACE =>  
	Process token  143 : T_OPEN_PARENTHESIS => (
	Process token [144]: T_VARIABLE => $cond
	Process token  145 : T_CLOSE_PARENTHESIS => )
	Process token [146]: T_WHITESPACE =>  
	Process token  147 : T_OPEN_CURLY_BRACKET => {
	Process token [148]: T_WHITESPACE => \n                
	Process token [149]: T_ECHO => echo
	Process token [150]: T_WHITESPACE =>  
	Process token [151]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  152 : T_SEMICOLON => ;
	Process token [153]: T_WHITESPACE => \n            
	Process token  154 : T_CLOSE_CURLY_BRACKET => }
	Process token [155]: T_WHITESPACE => \n        
	Process token [156]: T_BREAK => break
	Process token  157 : T_SEMICOLON => ;
	Process token [158]: T_WHITESPACE => \n        
	Process token [159]: T_CASE => case
	Process token [160]: T_WHITESPACE =>  
	Process token [161]: T_CONSTANT_ENCAPSED_STRING => '3'
	Process token  162 : T_COLON => :
	Process token [163]: T_WHITESPACE => \n        
	Process token [164]: T_BREAK => break
	Process token  165 : T_SEMICOLON => ;
	Process token [166]: T_WHITESPACE => \n        
	Process token [167]: T_DEFAULT => default
	Process token  168 : T_COLON => :
	Process token [169]: T_WHITESPACE => \n        
	Process token [170]: T_BREAK => break
	Process token  171 : T_SEMICOLON => ;
	Process token [172]: T_WHITESPACE => \n    
	Process token  173 : T_CLOSE_CURLY_BRACKET => }
	Process token [174]: T_WHITESPACE => \n
	Process token  175 : T_CLOSE_CURLY_BRACKET => }
	Process token [176]: T_WHITESPACE => \n\n
	Process token [177]: T_FUNCTION => function
	Process token [178]: T_WHITESPACE =>  
	Process token [179]: T_STRING => comlexityEleven
	Process token  180 : T_OPEN_PARENTHESIS => (
	Process token  181 : T_CLOSE_PARENTHESIS => )
	Process token [182]: T_WHITESPACE => \n
	Process token  183 : T_OPEN_CURLY_BRACKET => {
	Process token [184]: T_WHITESPACE => \n    
	Process token [185]: T_WHILE => while
	Process token [186]: T_WHITESPACE =>  
	Process token  187 : T_OPEN_PARENTHESIS => (
	Process token [188]: T_VARIABLE => $condition
	Process token [189]: T_WHITESPACE =>  
	Process token [190]: T_IS_IDENTICAL => ===
	Process token [191]: T_WHITESPACE =>  
	Process token [192]: T_STRING => true
	Process token  193 : T_CLOSE_PARENTHESIS => )
	Process token [194]: T_WHITESPACE =>  
	Process token  195 : T_OPEN_CURLY_BRACKET => {
	Process token [196]: T_WHITESPACE => \n        
	Process token [197]: T_IF => if
	Process token [198]: T_WHITESPACE =>  
	Process token  199 : T_OPEN_PARENTHESIS => (
	Process token [200]: T_VARIABLE => $condition
	Process token  201 : T_CLOSE_PARENTHESIS => )
	Process token [202]: T_WHITESPACE =>  
	Process token  203 : T_OPEN_CURLY_BRACKET => {
	Process token [204]: T_WHITESPACE => \n        
	Process token  205 : T_CLOSE_CURLY_BRACKET => }
	Process token [206]: T_WHITESPACE =>  
	Process token [207]: T_ELSE => else
	Process token [208]: T_WHITESPACE =>  
	Process token [209]: T_IF => if
	Process token [210]: T_WHITESPACE =>  
	Process token  211 : T_OPEN_PARENTHESIS => (
	Process token [212]: T_VARIABLE => $cond
	Process token  213 : T_CLOSE_PARENTHESIS => )
	Process token [214]: T_WHITESPACE =>  
	Process token  215 : T_OPEN_CURLY_BRACKET => {
	Process token [216]: T_WHITESPACE => \n        
	Process token  217 : T_CLOSE_CURLY_BRACKET => }
	Process token [218]: T_WHITESPACE => \n    
	Process token  219 : T_CLOSE_CURLY_BRACKET => }
	Process token [220]: T_WHITESPACE => \n\n    
	Process token [221]: T_SWITCH => switch
	Process token [222]: T_WHITESPACE =>  
	Process token  223 : T_OPEN_PARENTHESIS => (
	Process token [224]: T_VARIABLE => $condition
	Process token  225 : T_CLOSE_PARENTHESIS => )
	Process token [226]: T_WHITESPACE =>  
	Process token  227 : T_OPEN_CURLY_BRACKET => {
	Process token [228]: T_WHITESPACE => \n        
	Process token [229]: T_CASE => case
	Process token [230]: T_WHITESPACE =>  
	Process token [231]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  232 : T_COLON => :
	Process token [233]: T_WHITESPACE => \n            
	Process token [234]: T_IF => if
	Process token [235]: T_WHITESPACE =>  
	Process token  236 : T_OPEN_PARENTHESIS => (
	Process token [237]: T_VARIABLE => $condition
	Process token  238 : T_CLOSE_PARENTHESIS => )
	Process token [239]: T_WHITESPACE =>  
	Process token  240 : T_OPEN_CURLY_BRACKET => {
	Process token [241]: T_WHITESPACE => \n            
	Process token  242 : T_CLOSE_CURLY_BRACKET => }
	Process token [243]: T_WHITESPACE =>  
	Process token [244]: T_ELSE => else
	Process token [245]: T_WHITESPACE =>  
	Process token [246]: T_IF => if
	Process token [247]: T_WHITESPACE =>  
	Process token  248 : T_OPEN_PARENTHESIS => (
	Process token [249]: T_VARIABLE => $cond
	Process token  250 : T_CLOSE_PARENTHESIS => )
	Process token [251]: T_WHITESPACE =>  
	Process token  252 : T_OPEN_CURLY_BRACKET => {
	Process token [253]: T_WHITESPACE => \n            
	Process token  254 : T_CLOSE_CURLY_BRACKET => }
	Process token [255]: T_WHITESPACE => \n        
	Process token [256]: T_BREAK => break
	Process token  257 : T_SEMICOLON => ;
	Process token [258]: T_WHITESPACE => \n        
	Process token [259]: T_CASE => case
	Process token [260]: T_WHITESPACE =>  
	Process token [261]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token  262 : T_COLON => :
	Process token [263]: T_WHITESPACE => \n            
	Process token [264]: T_WHILE => while
	Process token [265]: T_WHITESPACE =>  
	Process token  266 : T_OPEN_PARENTHESIS => (
	Process token [267]: T_VARIABLE => $cond
	Process token  268 : T_CLOSE_PARENTHESIS => )
	Process token [269]: T_WHITESPACE =>  
	Process token  270 : T_OPEN_CURLY_BRACKET => {
	Process token [271]: T_WHITESPACE => \n                
	Process token [272]: T_ECHO => echo
	Process token [273]: T_WHITESPACE =>  
	Process token [274]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  275 : T_SEMICOLON => ;
	Process token [276]: T_WHITESPACE => \n            
	Process token  277 : T_CLOSE_CURLY_BRACKET => }
	Process token [278]: T_WHITESPACE => \n        
	Process token [279]: T_BREAK => break
	Process token  280 : T_SEMICOLON => ;
	Process token [281]: T_WHITESPACE => \n        
	Process token [282]: T_CASE => case
	Process token [283]: T_WHITESPACE =>  
	Process token [284]: T_CONSTANT_ENCAPSED_STRING => '3'
	Process token  285 : T_COLON => :
	Process token [286]: T_WHITESPACE => \n        
	Process token [287]: T_BREAK => break
	Process token  288 : T_SEMICOLON => ;
	Process token [289]: T_WHITESPACE => \n        
	Process token [290]: T_DEFAULT => default
	Process token  291 : T_COLON => :
	Process token [292]: T_WHITESPACE => \n        
	Process token [293]: T_BREAK => break
	Process token  294 : T_SEMICOLON => ;
	Process token [295]: T_WHITESPACE => \n    
	Process token  296 : T_CLOSE_CURLY_BRACKET => }
	Process token [297]: T_WHITESPACE => \n
	Process token  298 : T_CLOSE_CURLY_BRACKET => }
	Process token [299]: T_WHITESPACE => \n\n\n
	Process token [300]: T_FUNCTION => function
	Process token [301]: T_WHITESPACE =>  
	Process token [302]: T_STRING => comlexityTwenty
	Process token  303 : T_OPEN_PARENTHESIS => (
	Process token  304 : T_CLOSE_PARENTHESIS => )
	Process token [305]: T_WHITESPACE => \n
	Process token  306 : T_OPEN_CURLY_BRACKET => {
	Process token [307]: T_WHITESPACE => \n    
	Process token [308]: T_WHILE => while
	Process token [309]: T_WHITESPACE =>  
	Process token  310 : T_OPEN_PARENTHESIS => (
	Process token [311]: T_VARIABLE => $condition
	Process token [312]: T_WHITESPACE =>  
	Process token [313]: T_IS_IDENTICAL => ===
	Process token [314]: T_WHITESPACE =>  
	Process token [315]: T_STRING => true
	Process token  316 : T_CLOSE_PARENTHESIS => )
	Process token [317]: T_WHITESPACE =>  
	Process token  318 : T_OPEN_CURLY_BRACKET => {
	Process token [319]: T_WHITESPACE => \n        
	Process token [320]: T_IF => if
	Process token [321]: T_WHITESPACE =>  
	Process token  322 : T_OPEN_PARENTHESIS => (
	Process token [323]: T_VARIABLE => $condition
	Process token  324 : T_CLOSE_PARENTHESIS => )
	Process token [325]: T_WHITESPACE =>  
	Process token  326 : T_OPEN_CURLY_BRACKET => {
	Process token [327]: T_WHITESPACE => \n        
	Process token  328 : T_CLOSE_CURLY_BRACKET => }
	Process token [329]: T_WHITESPACE =>  
	Process token [330]: T_ELSE => else
	Process token [331]: T_WHITESPACE =>  
	Process token [332]: T_IF => if
	Process token [333]: T_WHITESPACE =>  
	Process token  334 : T_OPEN_PARENTHESIS => (
	Process token [335]: T_VARIABLE => $cond
	Process token  336 : T_CLOSE_PARENTHESIS => )
	Process token [337]: T_WHITESPACE =>  
	Process token  338 : T_OPEN_CURLY_BRACKET => {
	Process token [339]: T_WHITESPACE => \n        
	Process token  340 : T_CLOSE_CURLY_BRACKET => }
	Process token [341]: T_WHITESPACE => \n    
	Process token  342 : T_CLOSE_CURLY_BRACKET => }
	Process token [343]: T_WHITESPACE => \n\n    
	Process token [344]: T_SWITCH => switch
	Process token [345]: T_WHITESPACE =>  
	Process token  346 : T_OPEN_PARENTHESIS => (
	Process token [347]: T_VARIABLE => $condition
	Process token  348 : T_CLOSE_PARENTHESIS => )
	Process token [349]: T_WHITESPACE =>  
	Process token  350 : T_OPEN_CURLY_BRACKET => {
	Process token [351]: T_WHITESPACE => \n        
	Process token [352]: T_CASE => case
	Process token [353]: T_WHITESPACE =>  
	Process token [354]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  355 : T_COLON => :
	Process token [356]: T_WHITESPACE => \n            
	Process token [357]: T_IF => if
	Process token [358]: T_WHITESPACE =>  
	Process token  359 : T_OPEN_PARENTHESIS => (
	Process token [360]: T_VARIABLE => $condition
	Process token  361 : T_CLOSE_PARENTHESIS => )
	Process token [362]: T_WHITESPACE =>  
	Process token  363 : T_OPEN_CURLY_BRACKET => {
	Process token [364]: T_WHITESPACE => \n            
	Process token  365 : T_CLOSE_CURLY_BRACKET => }
	Process token [366]: T_WHITESPACE =>  
	Process token [367]: T_ELSE => else
	Process token [368]: T_WHITESPACE =>  
	Process token [369]: T_IF => if
	Process token [370]: T_WHITESPACE =>  
	Process token  371 : T_OPEN_PARENTHESIS => (
	Process token [372]: T_VARIABLE => $cond
	Process token  373 : T_CLOSE_PARENTHESIS => )
	Process token [374]: T_WHITESPACE =>  
	Process token  375 : T_OPEN_CURLY_BRACKET => {
	Process token [376]: T_WHITESPACE => \n            
	Process token  377 : T_CLOSE_CURLY_BRACKET => }
	Process token [378]: T_WHITESPACE => \n        
	Process token [379]: T_BREAK => break
	Process token  380 : T_SEMICOLON => ;
	Process token [381]: T_WHITESPACE => \n        
	Process token [382]: T_CASE => case
	Process token [383]: T_WHITESPACE =>  
	Process token [384]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token  385 : T_COLON => :
	Process token [386]: T_WHITESPACE => \n            
	Process token [387]: T_WHILE => while
	Process token [388]: T_WHITESPACE =>  
	Process token  389 : T_OPEN_PARENTHESIS => (
	Process token [390]: T_VARIABLE => $cond
	Process token  391 : T_CLOSE_PARENTHESIS => )
	Process token [392]: T_WHITESPACE =>  
	Process token  393 : T_OPEN_CURLY_BRACKET => {
	Process token [394]: T_WHITESPACE => \n                
	Process token [395]: T_ECHO => echo
	Process token [396]: T_WHITESPACE =>  
	Process token [397]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  398 : T_SEMICOLON => ;
	Process token [399]: T_WHITESPACE => \n            
	Process token  400 : T_CLOSE_CURLY_BRACKET => }
	Process token [401]: T_WHITESPACE => \n        
	Process token [402]: T_BREAK => break
	Process token  403 : T_SEMICOLON => ;
	Process token [404]: T_WHITESPACE => \n        
	Process token [405]: T_CASE => case
	Process token [406]: T_WHITESPACE =>  
	Process token [407]: T_CONSTANT_ENCAPSED_STRING => '3'
	Process token  408 : T_COLON => :
	Process token [409]: T_WHITESPACE => \n            
	Process token [410]: T_SWITCH => switch
	Process token [411]: T_WHITESPACE =>  
	Process token  412 : T_OPEN_PARENTHESIS => (
	Process token [413]: T_VARIABLE => $cond
	Process token  414 : T_CLOSE_PARENTHESIS => )
	Process token [415]: T_WHITESPACE =>  
	Process token  416 : T_OPEN_CURLY_BRACKET => {
	Process token [417]: T_WHITESPACE => \n                
	Process token [418]: T_CASE => case
	Process token [419]: T_WHITESPACE =>  
	Process token [420]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  421 : T_COLON => :
	Process token [422]: T_WHITESPACE => \n                
	Process token [423]: T_BREAK => break
	Process token  424 : T_SEMICOLON => ;
	Process token [425]: T_WHITESPACE => \n                
	Process token [426]: T_CASE => case
	Process token [427]: T_WHITESPACE =>  
	Process token [428]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token  429 : T_COLON => :
	Process token [430]: T_WHITESPACE => \n                
	Process token [431]: T_BREAK => break
	Process token  432 : T_SEMICOLON => ;
	Process token [433]: T_WHITESPACE => \n            
	Process token  434 : T_CLOSE_CURLY_BRACKET => }
	Process token [435]: T_WHITESPACE => \n        
	Process token [436]: T_BREAK => break
	Process token  437 : T_SEMICOLON => ;
	Process token [438]: T_WHITESPACE => \n        
	Process token [439]: T_CASE => case
	Process token [440]: T_WHITESPACE =>  
	Process token [441]: T_CONSTANT_ENCAPSED_STRING => '4'
	Process token  442 : T_COLON => :
	Process token [443]: T_WHITESPACE => \n            
	Process token [444]: T_DO => do
	Process token [445]: T_WHITESPACE =>  
	Process token  446 : T_OPEN_CURLY_BRACKET => {
	Process token [447]: T_WHITESPACE => \n                
	Process token [448]: T_IF => if
	Process token [449]: T_WHITESPACE =>  
	Process token  450 : T_OPEN_PARENTHESIS => (
	Process token [451]: T_VARIABLE => $condition
	Process token  452 : T_CLOSE_PARENTHESIS => )
	Process token [453]: T_WHITESPACE =>  
	Process token  454 : T_OPEN_CURLY_BRACKET => {
	Process token [455]: T_WHITESPACE => \n                    
	Process token [456]: T_IF => if
	Process token [457]: T_WHITESPACE =>  
	Process token  458 : T_OPEN_PARENTHESIS => (
	Process token [459]: T_VARIABLE => $cond
	Process token  460 : T_CLOSE_PARENTHESIS => )
	Process token [461]: T_WHITESPACE =>  
	Process token  462 : T_OPEN_CURLY_BRACKET => {
	Process token [463]: T_WHITESPACE => \n                    
	Process token  464 : T_CLOSE_CURLY_BRACKET => }
	Process token [465]: T_WHITESPACE =>  
	Process token [466]: T_ELSE => else
	Process token [467]: T_WHITESPACE =>  
	Process token [468]: T_IF => if
	Process token [469]: T_WHITESPACE =>  
	Process token  470 : T_OPEN_PARENTHESIS => (
	Process token [471]: T_VARIABLE => $con
	Process token  472 : T_CLOSE_PARENTHESIS => )
	Process token [473]: T_WHITESPACE =>  
	Process token  474 : T_OPEN_CURLY_BRACKET => {
	Process token [475]: T_WHITESPACE => \n                    
	Process token  476 : T_CLOSE_CURLY_BRACKET => }
	Process token [477]: T_WHITESPACE => \n                
	Process token  478 : T_CLOSE_CURLY_BRACKET => }
	Process token [479]: T_WHITESPACE => \n            
	Process token  480 : T_CLOSE_CURLY_BRACKET => }
	Process token [481]: T_WHITESPACE =>  
	Process token [482]: T_WHILE => while
	Process token [483]: T_WHITESPACE =>  
	Process token  484 : T_OPEN_PARENTHESIS => (
	Process token [485]: T_VARIABLE => $cond
	Process token  486 : T_CLOSE_PARENTHESIS => )
	Process token  487 : T_SEMICOLON => ;
	Process token [488]: T_WHITESPACE => \n        
	Process token [489]: T_BREAK => break
	Process token  490 : T_SEMICOLON => ;
	Process token [491]: T_WHITESPACE => \n        
	Process token [492]: T_DEFAULT => default
	Process token  493 : T_COLON => :
	Process token [494]: T_WHITESPACE => \n            
	Process token [495]: T_IF => if
	Process token [496]: T_WHITESPACE =>  
	Process token  497 : T_OPEN_PARENTHESIS => (
	Process token [498]: T_VARIABLE => $condition
	Process token  499 : T_CLOSE_PARENTHESIS => )
	Process token [500]: T_WHITESPACE =>  
	Process token  501 : T_OPEN_CURLY_BRACKET => {
	Process token [502]: T_WHITESPACE => \n            
	Process token  503 : T_CLOSE_CURLY_BRACKET => }
	Process token [504]: T_WHITESPACE => \n        
	Process token [505]: T_BREAK => break
	Process token  506 : T_SEMICOLON => ;
	Process token [507]: T_WHITESPACE => \n    
	Process token  508 : T_CLOSE_CURLY_BRACKET => }
	Process token [509]: T_WHITESPACE => \n
	Process token  510 : T_CLOSE_CURLY_BRACKET => }
	Process token [511]: T_WHITESPACE => \n\n\n
	Process token [512]: T_FUNCTION => function
	Process token [513]: T_WHITESPACE =>  
	Process token [514]: T_STRING => comlexityTwentyOne
	Process token  515 : T_OPEN_PARENTHESIS => (
	Process token  516 : T_CLOSE_PARENTHESIS => )
	Process token [517]: T_WHITESPACE => \n
	Process token  518 : T_OPEN_CURLY_BRACKET => {
	Process token [519]: T_WHITESPACE => \n    
	Process token [520]: T_WHILE => while
	Process token [521]: T_WHITESPACE =>  
	Process token  522 : T_OPEN_PARENTHESIS => (
	Process token [523]: T_VARIABLE => $condition
	Process token [524]: T_WHITESPACE =>  
	Process token [525]: T_IS_IDENTICAL => ===
	Process token [526]: T_WHITESPACE =>  
	Process token [527]: T_STRING => true
	Process token  528 : T_CLOSE_PARENTHESIS => )
	Process token [529]: T_WHITESPACE =>  
	Process token  530 : T_OPEN_CURLY_BRACKET => {
	Process token [531]: T_WHITESPACE => \n        
	Process token [532]: T_IF => if
	Process token [533]: T_WHITESPACE =>  
	Process token  534 : T_OPEN_PARENTHESIS => (
	Process token [535]: T_VARIABLE => $condition
	Process token  536 : T_CLOSE_PARENTHESIS => )
	Process token [537]: T_WHITESPACE =>  
	Process token  538 : T_OPEN_CURLY_BRACKET => {
	Process token [539]: T_WHITESPACE => \n        
	Process token  540 : T_CLOSE_CURLY_BRACKET => }
	Process token [541]: T_WHITESPACE =>  
	Process token [542]: T_ELSE => else
	Process token [543]: T_WHITESPACE =>  
	Process token [544]: T_IF => if
	Process token [545]: T_WHITESPACE =>  
	Process token  546 : T_OPEN_PARENTHESIS => (
	Process token [547]: T_VARIABLE => $cond
	Process token  548 : T_CLOSE_PARENTHESIS => )
	Process token [549]: T_WHITESPACE =>  
	Process token  550 : T_OPEN_CURLY_BRACKET => {
	Process token [551]: T_WHITESPACE => \n        
	Process token  552 : T_CLOSE_CURLY_BRACKET => }
	Process token [553]: T_WHITESPACE => \n    
	Process token  554 : T_CLOSE_CURLY_BRACKET => }
	Process token [555]: T_WHITESPACE => \n\n    
	Process token [556]: T_SWITCH => switch
	Process token [557]: T_WHITESPACE =>  
	Process token  558 : T_OPEN_PARENTHESIS => (
	Process token [559]: T_VARIABLE => $condition
	Process token  560 : T_CLOSE_PARENTHESIS => )
	Process token [561]: T_WHITESPACE =>  
	Process token  562 : T_OPEN_CURLY_BRACKET => {
	Process token [563]: T_WHITESPACE => \n        
	Process token [564]: T_CASE => case
	Process token [565]: T_WHITESPACE =>  
	Process token [566]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  567 : T_COLON => :
	Process token [568]: T_WHITESPACE => \n            
	Process token [569]: T_IF => if
	Process token [570]: T_WHITESPACE =>  
	Process token  571 : T_OPEN_PARENTHESIS => (
	Process token [572]: T_VARIABLE => $condition
	Process token  573 : T_CLOSE_PARENTHESIS => )
	Process token [574]: T_WHITESPACE =>  
	Process token  575 : T_OPEN_CURLY_BRACKET => {
	Process token [576]: T_WHITESPACE => \n            
	Process token  577 : T_CLOSE_CURLY_BRACKET => }
	Process token [578]: T_WHITESPACE =>  
	Process token [579]: T_ELSE => else
	Process token [580]: T_WHITESPACE =>  
	Process token [581]: T_IF => if
	Process token [582]: T_WHITESPACE =>  
	Process token  583 : T_OPEN_PARENTHESIS => (
	Process token [584]: T_VARIABLE => $cond
	Process token  585 : T_CLOSE_PARENTHESIS => )
	Process token [586]: T_WHITESPACE =>  
	Process token  587 : T_OPEN_CURLY_BRACKET => {
	Process token [588]: T_WHITESPACE => \n            
	Process token  589 : T_CLOSE_CURLY_BRACKET => }
	Process token [590]: T_WHITESPACE => \n        
	Process token [591]: T_BREAK => break
	Process token  592 : T_SEMICOLON => ;
	Process token [593]: T_WHITESPACE => \n        
	Process token [594]: T_CASE => case
	Process token [595]: T_WHITESPACE =>  
	Process token [596]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token  597 : T_COLON => :
	Process token [598]: T_WHITESPACE => \n            
	Process token [599]: T_WHILE => while
	Process token [600]: T_WHITESPACE =>  
	Process token  601 : T_OPEN_PARENTHESIS => (
	Process token [602]: T_VARIABLE => $cond
	Process token  603 : T_CLOSE_PARENTHESIS => )
	Process token [604]: T_WHITESPACE =>  
	Process token  605 : T_OPEN_CURLY_BRACKET => {
	Process token [606]: T_WHITESPACE => \n                
	Process token [607]: T_ECHO => echo
	Process token [608]: T_WHITESPACE =>  
	Process token [609]: T_CONSTANT_ENCAPSED_STRING => 'hi'
	Process token  610 : T_SEMICOLON => ;
	Process token [611]: T_WHITESPACE => \n            
	Process token  612 : T_CLOSE_CURLY_BRACKET => }
	Process token [613]: T_WHITESPACE => \n        
	Process token [614]: T_BREAK => break
	Process token  615 : T_SEMICOLON => ;
	Process token [616]: T_WHITESPACE => \n        
	Process token [617]: T_CASE => case
	Process token [618]: T_WHITESPACE =>  
	Process token [619]: T_CONSTANT_ENCAPSED_STRING => '3'
	Process token  620 : T_COLON => :
	Process token [621]: T_WHITESPACE => \n            
	Process token [622]: T_SWITCH => switch
	Process token [623]: T_WHITESPACE =>  
	Process token  624 : T_OPEN_PARENTHESIS => (
	Process token [625]: T_VARIABLE => $cond
	Process token  626 : T_CLOSE_PARENTHESIS => )
	Process token [627]: T_WHITESPACE =>  
	Process token  628 : T_OPEN_CURLY_BRACKET => {
	Process token [629]: T_WHITESPACE => \n                
	Process token [630]: T_CASE => case
	Process token [631]: T_WHITESPACE =>  
	Process token [632]: T_CONSTANT_ENCAPSED_STRING => '1'
	Process token  633 : T_COLON => :
	Process token [634]: T_WHITESPACE => \n                
	Process token [635]: T_BREAK => break
	Process token  636 : T_SEMICOLON => ;
	Process token [637]: T_WHITESPACE => \n                
	Process token [638]: T_CASE => case
	Process token [639]: T_WHITESPACE =>  
	Process token [640]: T_CONSTANT_ENCAPSED_STRING => '2'
	Process token  641 : T_COLON => :
	Process token [642]: T_WHITESPACE => \n                
	Process token [643]: T_BREAK => break
	Process token  644 : T_SEMICOLON => ;
	Process token [645]: T_WHITESPACE => \n            
	Process token  646 : T_CLOSE_CURLY_BRACKET => }
	Process token [647]: T_WHITESPACE => \n        
	Process token [648]: T_BREAK => break
	Process token  649 : T_SEMICOLON => ;
	Process token [650]: T_WHITESPACE => \n        
	Process token [651]: T_CASE => case
	Process token [652]: T_WHITESPACE =>  
	Process token [653]: T_CONSTANT_ENCAPSED_STRING => '4'
	Process token  654 : T_COLON => :
	Process token [655]: T_WHITESPACE => \n            
	Process token [656]: T_DO => do
	Process token [657]: T_WHITESPACE =>  
	Process token  658 : T_OPEN_CURLY_BRACKET => {
	Process token [659]: T_WHITESPACE => \n                
	Process token [660]: T_IF => if
	Process token [661]: T_WHITESPACE =>  
	Process token  662 : T_OPEN_PARENTHESIS => (
	Process token [663]: T_VARIABLE => $condition
	Process token  664 : T_CLOSE_PARENTHESIS => )
	Process token [665]: T_WHITESPACE =>  
	Process token  666 : T_OPEN_CURLY_BRACKET => {
	Process token [667]: T_WHITESPACE => \n                    
	Process token [668]: T_IF => if
	Process token [669]: T_WHITESPACE =>  
	Process token  670 : T_OPEN_PARENTHESIS => (
	Process token [671]: T_VARIABLE => $cond
	Process token  672 : T_CLOSE_PARENTHESIS => )
	Process token [673]: T_WHITESPACE =>  
	Process token  674 : T_OPEN_CURLY_BRACKET => {
	Process token [675]: T_WHITESPACE => \n                    
	Process token  676 : T_CLOSE_CURLY_BRACKET => }
	Process token [677]: T_WHITESPACE =>  
	Process token [678]: T_ELSE => else
	Process token [679]: T_WHITESPACE =>  
	Process token [680]: T_IF => if
	Process token [681]: T_WHITESPACE =>  
	Process token  682 : T_OPEN_PARENTHESIS => (
	Process token [683]: T_VARIABLE => $con
	Process token  684 : T_CLOSE_PARENTHESIS => )
	Process token [685]: T_WHITESPACE =>  
	Process token  686 : T_OPEN_CURLY_BRACKET => {
	Process token [687]: T_WHITESPACE => \n                    
	Process token  688 : T_CLOSE_CURLY_BRACKET => }
	Process token [689]: T_WHITESPACE => \n                
	Process token  690 : T_CLOSE_CURLY_BRACKET => }
	Process token [691]: T_WHITESPACE => \n            
	Process token  692 : T_CLOSE_CURLY_BRACKET => }
	Process token [693]: T_WHITESPACE =>  
	Process token [694]: T_WHILE => while
	Process token [695]: T_WHITESPACE =>  
	Process token  696 : T_OPEN_PARENTHESIS => (
	Process token [697]: T_VARIABLE => $cond
	Process token  698 : T_CLOSE_PARENTHESIS => )
	Process token  699 : T_SEMICOLON => ;
	Process token [700]: T_WHITESPACE => \n        
	Process token [701]: T_BREAK => break
	Process token  702 : T_SEMICOLON => ;
	Process token [703]: T_WHITESPACE => \n        
	Process token [704]: T_DEFAULT => default
	Process token  705 : T_COLON => :
	Process token [706]: T_WHITESPACE => \n            
	Process token [707]: T_IF => if
	Process token [708]: T_WHITESPACE =>  
	Process token  709 : T_OPEN_PARENTHESIS => (
	Process token [710]: T_VARIABLE => $condition
	Process token  711 : T_CLOSE_PARENTHESIS => )
	Process token [712]: T_WHITESPACE =>  
	Process token  713 : T_OPEN_CURLY_BRACKET => {
	Process token [714]: T_WHITESPACE => \n            
	Process token  715 : T_CLOSE_CURLY_BRACKET => }
	Process token [716]: T_WHITESPACE =>  
	Process token [717]: T_ELSE => else
	Process token [718]: T_WHITESPACE =>  
	Process token [719]: T_IF => if
	Process token [720]: T_WHITESPACE =>  
	Process token  721 : T_OPEN_PARENTHESIS => (
	Process token [722]: T_VARIABLE => $cond
	Process token  723 : T_CLOSE_PARENTHESIS => )
	Process token [724]: T_WHITESPACE =>  
	Process token  725 : T_OPEN_CURLY_BRACKET => {
	Process token [726]: T_WHITESPACE => \n            
	Process token  727 : T_CLOSE_CURLY_BRACKET => }
	Process token [728]: T_WHITESPACE => \n        
	Process token [729]: T_BREAK => break
	Process token  730 : T_SEMICOLON => ;
	Process token [731]: T_WHITESPACE => \n    
	Process token  732 : T_CLOSE_CURLY_BRACKET => }
	Process token [733]: T_WHITESPACE => \n
	Process token  734 : T_CLOSE_CURLY_BRACKET => }
	Process token [735]: T_WHITESPACE => \n\n
	Process token [736]: T_CLOSE_TAG => ?>\n
	*** END PHP TOKENIZING ***
	*** START TOKEN MAP ***
	=> Found curly bracket opener at 8
	=> Found curly bracket closer at 10 for 8
	=> Found curly bracket opener at 19
		=> Found curly bracket opener at 28
		=> Found curly bracket closer at 31 for 28
		=> Found curly bracket opener at 41
		=> Found curly bracket closer at 74 for 41
	=> Found curly bracket closer at 76 for 19
	=> Found curly bracket opener at 85
		=> Found curly bracket opener at 98
			=> Found curly bracket opener at 107
			=> Found curly bracket closer at 110 for 107
		=> Found curly bracket closer at 113 for 98
		=> Found curly bracket opener at 123
			=> Found curly bracket opener at 138
			=> Found curly bracket closer at 141 for 138
			=> Found curly bracket opener at 151
			=> Found curly bracket closer at 154 for 151
			=> Found curly bracket opener at 173
			=> Found curly bracket closer at 182 for 173
		=> Found curly bracket closer at 207 for 123
	=> Found curly bracket closer at 209 for 85
	=> Found curly bracket opener at 218
		=> Found curly bracket opener at 231
			=> Found curly bracket opener at 240
			=> Found curly bracket closer at 243 for 240
			=> Found curly bracket opener at 253
			=> Found curly bracket closer at 256 for 253
		=> Found curly bracket closer at 259 for 231
		=> Found curly bracket opener at 269
			=> Found curly bracket opener at 284
			=> Found curly bracket closer at 287 for 284
			=> Found curly bracket opener at 297
			=> Found curly bracket closer at 300 for 297
			=> Found curly bracket opener at 319
			=> Found curly bracket closer at 328 for 319
		=> Found curly bracket closer at 353 for 269
	=> Found curly bracket closer at 355 for 218
	=> Found curly bracket opener at 365
		=> Found curly bracket opener at 378
			=> Found curly bracket opener at 387
			=> Found curly bracket closer at 390 for 387
			=> Found curly bracket opener at 400
			=> Found curly bracket closer at 403 for 400
		=> Found curly bracket closer at 406 for 378
		=> Found curly bracket opener at 416
			=> Found curly bracket opener at 431
			=> Found curly bracket closer at 434 for 431
			=> Found curly bracket opener at 444
			=> Found curly bracket closer at 447 for 444
			=> Found curly bracket opener at 466
			=> Found curly bracket closer at 475 for 466
			=> Found curly bracket opener at 494
			=> Found curly bracket closer at 517 for 494
			=> Found curly bracket opener at 532
				=> Found curly bracket opener at 541
					=> Found curly bracket opener at 550
					=> Found curly bracket closer at 553 for 550
					=> Found curly bracket opener at 563
					=> Found curly bracket closer at 566 for 563
				=> Found curly bracket closer at 569 for 541
			=> Found curly bracket closer at 572 for 532
			=> Found curly bracket opener at 596
			=> Found curly bracket closer at 599 for 596
		=> Found curly bracket closer at 606 for 416
	=> Found curly bracket closer at 608 for 365
	=> Found curly bracket opener at 618
		=> Found curly bracket opener at 631
			=> Found curly bracket opener at 640
			=> Found curly bracket closer at 643 for 640
			=> Found curly bracket opener at 653
			=> Found curly bracket closer at 656 for 653
		=> Found curly bracket closer at 659 for 631
		=> Found curly bracket opener at 669
			=> Found curly bracket opener at 684
			=> Found curly bracket closer at 687 for 684
			=> Found curly bracket opener at 697
			=> Found curly bracket closer at 700 for 697
			=> Found curly bracket opener at 719
			=> Found curly bracket closer at 728 for 719
			=> Found curly bracket opener at 747
			=> Found curly bracket closer at 770 for 747
			=> Found curly bracket opener at 785
				=> Found curly bracket opener at 794
					=> Found curly bracket opener at 803
					=> Found curly bracket closer at 806 for 803
					=> Found curly bracket opener at 816
					=> Found curly bracket closer at 819 for 816
				=> Found curly bracket closer at 822 for 794
			=> Found curly bracket closer at 825 for 785
			=> Found curly bracket opener at 849
			=> Found curly bracket closer at 852 for 849
			=> Found curly bracket opener at 862
			=> Found curly bracket closer at 865 for 862
		=> Found curly bracket closer at 872 for 669
	=> Found curly bracket closer at 874 for 618
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 2:T_FUNCTION => function
	=> Begin scope map recursion at token 2 with depth 1
	Process token 3 on line 3 []: T_WHITESPACE =>  
	Process token 4 on line 3 []: T_STRING => complexityOne
	Process token 5 on line 3 []: T_OPEN_PARENTHESIS => (
	Process token 6 on line 3 []: T_CLOSE_PARENTHESIS => )
	Process token 7 on line 3 []: T_WHITESPACE =>  
	Process token 8 on line 3 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 2:T_FUNCTION
	Process token 9 on line 3 [opener:8;]: T_WHITESPACE =>  
	Process token 10 on line 3 [opener:8;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (10:T_CLOSE_CURLY_BRACKET) for 2:T_FUNCTION
	Start scope map at 13:T_FUNCTION => function
	=> Begin scope map recursion at token 13 with depth 1
	Process token 14 on line 5 []: T_WHITESPACE =>  
	Process token 15 on line 5 []: T_STRING => comlexityFive
	Process token 16 on line 5 []: T_OPEN_PARENTHESIS => (
	Process token 17 on line 5 []: T_CLOSE_PARENTHESIS => )
	Process token 18 on line 5 []: T_WHITESPACE => \n
	Process token 19 on line 6 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 13:T_FUNCTION
	Process token 20 on line 6 [opener:19;]: T_WHITESPACE => \n
	Process token 21 on line 7 [opener:19;]: T_WHITESPACE =>     
	Process token 22 on line 7 [opener:19;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 22 with depth 2
		Process token 23 on line 7 []: T_WHITESPACE =>  
		Process token 24 on line 7 []: T_OPEN_PARENTHESIS => (
		Process token 25 on line 7 []: T_VARIABLE => $condition
		Process token 26 on line 7 []: T_CLOSE_PARENTHESIS => )
		Process token 27 on line 7 []: T_WHITESPACE =>  
		Process token 28 on line 7 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 22:T_IF
		Process token 29 on line 7 [opener:28;]: T_WHITESPACE => \n
		Process token 30 on line 8 [opener:28;]: T_WHITESPACE =>     
		Process token 31 on line 8 [opener:28;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (31:T_CLOSE_CURLY_BRACKET) for 22:T_IF
	Process token 32 on line 8 [opener:19;]: T_WHITESPACE => \n
	Process token 33 on line 9 [opener:19;]: T_WHITESPACE => \n
	Process token 34 on line 10 [opener:19;]: T_WHITESPACE =>     
	Process token 35 on line 10 [opener:19;]: T_SWITCH => switch
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 35 with depth 2
		Process token 36 on line 10 []: T_WHITESPACE =>  
		Process token 37 on line 10 []: T_OPEN_PARENTHESIS => (
		Process token 38 on line 10 []: T_VARIABLE => $condition
		Process token 39 on line 10 []: T_CLOSE_PARENTHESIS => )
		Process token 40 on line 10 []: T_WHITESPACE =>  
		Process token 41 on line 10 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 35:T_SWITCH
		Process token 42 on line 10 [opener:41;]: T_WHITESPACE => \n
		Process token 43 on line 11 [opener:41;]: T_WHITESPACE =>         
		Process token 44 on line 11 [opener:41;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 44 with depth 2
		Process token 45 on line 11 []: T_WHITESPACE =>  
		Process token 46 on line 11 []: T_CONSTANT_ENCAPSED_STRING => '1'
		Process token 47 on line 11 []: T_COLON => :
		=> Found scope opener for 44:T_CASE
		Process token 48 on line 11 [opener:47;]: T_WHITESPACE => \n
		Process token 49 on line 12 [opener:47;]: T_WHITESPACE =>         
		Process token 50 on line 12 [opener:47;]: T_BREAK => break
		=> Found scope closer (50:T_BREAK) for 44:T_CASE
		Process token 48 on line 11 [opener:41;]: T_WHITESPACE => \n
		Process token 49 on line 12 [opener:41;]: T_WHITESPACE =>         
		Process token 50 on line 12 [opener:41;]: T_BREAK => break
		Process token 51 on line 12 [opener:41;]: T_SEMICOLON => ;
		Process token 52 on line 12 [opener:41;]: T_WHITESPACE => \n
		Process token 53 on line 13 [opener:41;]: T_WHITESPACE =>         
		Process token 54 on line 13 [opener:41;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 54 with depth 2
		Process token 55 on line 13 []: T_WHITESPACE =>  
		Process token 56 on line 13 []: T_CONSTANT_ENCAPSED_STRING => '2'
		Process token 57 on line 13 []: T_COLON => :
		=> Found scope opener for 54:T_CASE
		Process token 58 on line 13 [opener:57;]: T_WHITESPACE => \n
		Process token 59 on line 14 [opener:57;]: T_WHITESPACE =>         
		Process token 60 on line 14 [opener:57;]: T_BREAK => break
		=> Found scope closer (60:T_BREAK) for 54:T_CASE
		Process token 58 on line 13 [opener:41;]: T_WHITESPACE => \n
		Process token 59 on line 14 [opener:41;]: T_WHITESPACE =>         
		Process token 60 on line 14 [opener:41;]: T_BREAK => break
		Process token 61 on line 14 [opener:41;]: T_SEMICOLON => ;
		Process token 62 on line 14 [opener:41;]: T_WHITESPACE => \n
		Process token 63 on line 15 [opener:41;]: T_WHITESPACE =>         
		Process token 64 on line 15 [opener:41;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 64 with depth 2
		Process token 65 on line 15 []: T_WHITESPACE =>  
		Process token 66 on line 15 []: T_CONSTANT_ENCAPSED_STRING => '3'
		Process token 67 on line 15 []: T_COLON => :
		=> Found scope opener for 64:T_CASE
		Process token 68 on line 15 [opener:67;]: T_WHITESPACE => \n
		Process token 69 on line 16 [opener:67;]: T_WHITESPACE =>         
		Process token 70 on line 16 [opener:67;]: T_BREAK => break
		=> Found scope closer (70:T_BREAK) for 64:T_CASE
		Process token 68 on line 15 [opener:41;]: T_WHITESPACE => \n
		Process token 69 on line 16 [opener:41;]: T_WHITESPACE =>         
		Process token 70 on line 16 [opener:41;]: T_BREAK => break
		Process token 71 on line 16 [opener:41;]: T_SEMICOLON => ;
		Process token 72 on line 16 [opener:41;]: T_WHITESPACE => \n
		Process token 73 on line 17 [opener:41;]: T_WHITESPACE =>     
		Process token 74 on line 17 [opener:41;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (74:T_CLOSE_CURLY_BRACKET) for 35:T_SWITCH
	Process token 75 on line 17 [opener:19;]: T_WHITESPACE => \n
	Process token 76 on line 18 [opener:19;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (76:T_CLOSE_CURLY_BRACKET) for 13:T_FUNCTION
	Start scope map at 79:T_FUNCTION => function
	=> Begin scope map recursion at token 79 with depth 1
	Process token 80 on line 20 []: T_WHITESPACE =>  
	Process token 81 on line 20 []: T_STRING => comlexityTen
	Process token 82 on line 20 []: T_OPEN_PARENTHESIS => (
	Process token 83 on line 20 []: T_CLOSE_PARENTHESIS => )
	Process token 84 on line 20 []: T_WHITESPACE => \n
	Process token 85 on line 21 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 79:T_FUNCTION
	Process token 86 on line 21 [opener:85;]: T_WHITESPACE => \n
	Process token 87 on line 22 [opener:85;]: T_WHITESPACE =>     
	Process token 88 on line 22 [opener:85;]: T_WHILE => while
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 88 with depth 2
		Process token 89 on line 22 []: T_WHITESPACE =>  
		Process token 90 on line 22 []: T_OPEN_PARENTHESIS => (
		Process token 91 on line 22 []: T_VARIABLE => $condition
		Process token 92 on line 22 []: T_WHITESPACE =>  
		Process token 93 on line 22 []: T_IS_IDENTICAL => ===
		Process token 94 on line 22 []: T_WHITESPACE =>  
		Process token 95 on line 22 []: T_TRUE => true
		Process token 96 on line 22 []: T_CLOSE_PARENTHESIS => )
		Process token 97 on line 22 []: T_WHITESPACE =>  
		Process token 98 on line 22 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 88:T_WHILE
		Process token 99 on line 22 [opener:98;]: T_WHITESPACE => \n
		Process token 100 on line 23 [opener:98;]: T_WHITESPACE =>         
		Process token 101 on line 23 [opener:98;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 101 with depth 3
			Process token 102 on line 23 []: T_WHITESPACE =>  
			Process token 103 on line 23 []: T_OPEN_PARENTHESIS => (
			Process token 104 on line 23 []: T_VARIABLE => $condition
			Process token 105 on line 23 []: T_CLOSE_PARENTHESIS => )
			Process token 106 on line 23 []: T_WHITESPACE =>  
			Process token 107 on line 23 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 101:T_IF
			Process token 108 on line 23 [opener:107;]: T_WHITESPACE => \n
			Process token 109 on line 24 [opener:107;]: T_WHITESPACE =>         
			Process token 110 on line 24 [opener:107;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (110:T_CLOSE_CURLY_BRACKET) for 101:T_IF
		Process token 111 on line 24 [opener:98;]: T_WHITESPACE => \n
		Process token 112 on line 25 [opener:98;]: T_WHITESPACE =>     
		Process token 113 on line 25 [opener:98;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (113:T_CLOSE_CURLY_BRACKET) for 88:T_WHILE
	Process token 114 on line 25 [opener:85;]: T_WHITESPACE => \n
	Process token 115 on line 26 [opener:85;]: T_WHITESPACE => \n
	Process token 116 on line 27 [opener:85;]: T_WHITESPACE =>     
	Process token 117 on line 27 [opener:85;]: T_SWITCH => switch
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 117 with depth 2
		Process token 118 on line 27 []: T_WHITESPACE =>  
		Process token 119 on line 27 []: T_OPEN_PARENTHESIS => (
		Process token 120 on line 27 []: T_VARIABLE => $condition
		Process token 121 on line 27 []: T_CLOSE_PARENTHESIS => )
		Process token 122 on line 27 []: T_WHITESPACE =>  
		Process token 123 on line 27 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 117:T_SWITCH
		Process token 124 on line 27 [opener:123;]: T_WHITESPACE => \n
		Process token 125 on line 28 [opener:123;]: T_WHITESPACE =>         
		Process token 126 on line 28 [opener:123;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 126 with depth 2
		Process token 127 on line 28 []: T_WHITESPACE =>  
		Process token 128 on line 28 []: T_CONSTANT_ENCAPSED_STRING => '1'
		Process token 129 on line 28 []: T_COLON => :
		=> Found scope opener for 126:T_CASE
		Process token 130 on line 28 [opener:129;]: T_WHITESPACE => \n
		Process token 131 on line 29 [opener:129;]: T_WHITESPACE =>             
		Process token 132 on line 29 [opener:129;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 132 with depth 3
			Process token 133 on line 29 []: T_WHITESPACE =>  
			Process token 134 on line 29 []: T_OPEN_PARENTHESIS => (
			Process token 135 on line 29 []: T_VARIABLE => $condition
			Process token 136 on line 29 []: T_CLOSE_PARENTHESIS => )
			Process token 137 on line 29 []: T_WHITESPACE =>  
			Process token 138 on line 29 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 132:T_IF
			Process token 139 on line 29 [opener:138;]: T_WHITESPACE => \n
			Process token 140 on line 30 [opener:138;]: T_WHITESPACE =>             
			Process token 141 on line 30 [opener:138;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (141:T_CLOSE_CURLY_BRACKET) for 132:T_IF
		Process token 142 on line 30 [opener:129;]: T_WHITESPACE =>  
		Process token 143 on line 30 [opener:129;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 143 with depth 3
			Process token 144 on line 30 []: T_WHITESPACE =>  
			Process token 145 on line 30 []: T_IF => if
			=> Found new opening condition before scope opener for 143:T_ELSE, backtracking
		Process token 144 on line 30 [opener:129;]: T_WHITESPACE =>  
		Process token 145 on line 30 [opener:129;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 145 with depth 3
			Process token 146 on line 30 []: T_WHITESPACE =>  
			Process token 147 on line 30 []: T_OPEN_PARENTHESIS => (
			Process token 148 on line 30 []: T_VARIABLE => $cond
			Process token 149 on line 30 []: T_CLOSE_PARENTHESIS => )
			Process token 150 on line 30 []: T_WHITESPACE =>  
			Process token 151 on line 30 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 145:T_IF
			Process token 152 on line 30 [opener:151;]: T_WHITESPACE => \n
			Process token 153 on line 31 [opener:151;]: T_WHITESPACE =>             
			Process token 154 on line 31 [opener:151;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (154:T_CLOSE_CURLY_BRACKET) for 145:T_IF
		Process token 155 on line 31 [opener:129;]: T_WHITESPACE => \n
		Process token 156 on line 32 [opener:129;]: T_WHITESPACE =>         
		Process token 157 on line 32 [opener:129;]: T_BREAK => break
		=> Found scope closer (157:T_BREAK) for 126:T_CASE
		Process token 130 on line 28 [opener:123;]: T_WHITESPACE => \n
		Process token 131 on line 29 [opener:123;]: T_WHITESPACE =>             
		Process token 132 on line 29 [opener:123;]: T_IF => if
		* token is an opening condition *
		* already processed, skipping *
		Process token 142 on line 30 [opener:123;]: T_WHITESPACE =>  
		Process token 143 on line 30 [opener:123;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 143 with depth 3
			Process token 144 on line 30 []: T_WHITESPACE =>  
			Process token 145 on line 30 []: T_IF => if
			=> Found new opening condition before scope opener for 143:T_ELSE, backtracking
		Process token 144 on line 30 [opener:123;]: T_WHITESPACE =>  
		Process token 145 on line 30 [opener:123;]: T_IF => if
		* token is an opening condition *
		* already processed, skipping *
		Process token 155 on line 31 [opener:123;]: T_WHITESPACE => \n
		Process token 156 on line 32 [opener:123;]: T_WHITESPACE =>         
		Process token 157 on line 32 [opener:123;]: T_BREAK => break
		Process token 158 on line 32 [opener:123;]: T_SEMICOLON => ;
		Process token 159 on line 32 [opener:123;]: T_WHITESPACE => \n
		Process token 160 on line 33 [opener:123;]: T_WHITESPACE =>         
		Process token 161 on line 33 [opener:123;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 161 with depth 2
		Process token 162 on line 33 []: T_WHITESPACE =>  
		Process token 163 on line 33 []: T_CONSTANT_ENCAPSED_STRING => '2'
		Process token 164 on line 33 []: T_COLON => :
		=> Found scope opener for 161:T_CASE
		Process token 165 on line 33 [opener:164;]: T_WHITESPACE => \n
		Process token 166 on line 34 [opener:164;]: T_WHITESPACE =>             
		Process token 167 on line 34 [opener:164;]: T_WHILE => while
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 167 with depth 3
			Process token 168 on line 34 []: T_WHITESPACE =>  
			Process token 169 on line 34 []: T_OPEN_PARENTHESIS => (
			Process token 170 on line 34 []: T_VARIABLE => $cond
			Process token 171 on line 34 []: T_CLOSE_PARENTHESIS => )
			Process token 172 on line 34 []: T_WHITESPACE =>  
			Process token 173 on line 34 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 167:T_WHILE
			Process token 174 on line 34 [opener:173;]: T_WHITESPACE => \n
			Process token 175 on line 35 [opener:173;]: T_WHITESPACE =>                 
			Process token 176 on line 35 [opener:173;]: T_ECHO => echo
			Process token 177 on line 35 [opener:173;]: T_WHITESPACE =>  
			Process token 178 on line 35 [opener:173;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
			Process token 179 on line 35 [opener:173;]: T_SEMICOLON => ;
			Process token 180 on line 35 [opener:173;]: T_WHITESPACE => \n
			Process token 181 on line 36 [opener:173;]: T_WHITESPACE =>             
			Process token 182 on line 36 [opener:173;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (182:T_CLOSE_CURLY_BRACKET) for 167:T_WHILE
		Process token 183 on line 36 [opener:164;]: T_WHITESPACE => \n
		Process token 184 on line 37 [opener:164;]: T_WHITESPACE =>         
		Process token 185 on line 37 [opener:164;]: T_BREAK => break
		=> Found scope closer (185:T_BREAK) for 161:T_CASE
		Process token 165 on line 33 [opener:123;]: T_WHITESPACE => \n
		Process token 166 on line 34 [opener:123;]: T_WHITESPACE =>             
		Process token 167 on line 34 [opener:123;]: T_WHILE => while
		* token is an opening condition *
		* already processed, skipping *
		Process token 183 on line 36 [opener:123;]: T_WHITESPACE => \n
		Process token 184 on line 37 [opener:123;]: T_WHITESPACE =>         
		Process token 185 on line 37 [opener:123;]: T_BREAK => break
		Process token 186 on line 37 [opener:123;]: T_SEMICOLON => ;
		Process token 187 on line 37 [opener:123;]: T_WHITESPACE => \n
		Process token 188 on line 38 [opener:123;]: T_WHITESPACE =>         
		Process token 189 on line 38 [opener:123;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 189 with depth 2
		Process token 190 on line 38 []: T_WHITESPACE =>  
		Process token 191 on line 38 []: T_CONSTANT_ENCAPSED_STRING => '3'
		Process token 192 on line 38 []: T_COLON => :
		=> Found scope opener for 189:T_CASE
		Process token 193 on line 38 [opener:192;]: T_WHITESPACE => \n
		Process token 194 on line 39 [opener:192;]: T_WHITESPACE =>         
		Process token 195 on line 39 [opener:192;]: T_BREAK => break
		=> Found scope closer (195:T_BREAK) for 189:T_CASE
		Process token 193 on line 38 [opener:123;]: T_WHITESPACE => \n
		Process token 194 on line 39 [opener:123;]: T_WHITESPACE =>         
		Process token 195 on line 39 [opener:123;]: T_BREAK => break
		Process token 196 on line 39 [opener:123;]: T_SEMICOLON => ;
		Process token 197 on line 39 [opener:123;]: T_WHITESPACE => \n
		Process token 198 on line 40 [opener:123;]: T_WHITESPACE =>         
		Process token 199 on line 40 [opener:123;]: T_DEFAULT => default
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 199 with depth 2
		Process token 200 on line 40 []: T_COLON => :
		=> Found scope opener for 199:T_DEFAULT
		Process token 201 on line 40 [opener:200;]: T_WHITESPACE => \n
		Process token 202 on line 41 [opener:200;]: T_WHITESPACE =>         
		Process token 203 on line 41 [opener:200;]: T_BREAK => break
		=> Found scope closer (203:T_BREAK) for 199:T_DEFAULT
		Process token 201 on line 40 [opener:123;]: T_WHITESPACE => \n
		Process token 202 on line 41 [opener:123;]: T_WHITESPACE =>         
		Process token 203 on line 41 [opener:123;]: T_BREAK => break
		Process token 204 on line 41 [opener:123;]: T_SEMICOLON => ;
		Process token 205 on line 41 [opener:123;]: T_WHITESPACE => \n
		Process token 206 on line 42 [opener:123;]: T_WHITESPACE =>     
		Process token 207 on line 42 [opener:123;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (207:T_CLOSE_CURLY_BRACKET) for 117:T_SWITCH
	Process token 208 on line 42 [opener:85;]: T_WHITESPACE => \n
	Process token 209 on line 43 [opener:85;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (209:T_CLOSE_CURLY_BRACKET) for 79:T_FUNCTION
	Start scope map at 212:T_FUNCTION => function
	=> Begin scope map recursion at token 212 with depth 1
	Process token 213 on line 45 []: T_WHITESPACE =>  
	Process token 214 on line 45 []: T_STRING => comlexityEleven
	Process token 215 on line 45 []: T_OPEN_PARENTHESIS => (
	Process token 216 on line 45 []: T_CLOSE_PARENTHESIS => )
	Process token 217 on line 45 []: T_WHITESPACE => \n
	Process token 218 on line 46 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 212:T_FUNCTION
	Process token 219 on line 46 [opener:218;]: T_WHITESPACE => \n
	Process token 220 on line 47 [opener:218;]: T_WHITESPACE =>     
	Process token 221 on line 47 [opener:218;]: T_WHILE => while
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 221 with depth 2
		Process token 222 on line 47 []: T_WHITESPACE =>  
		Process token 223 on line 47 []: T_OPEN_PARENTHESIS => (
		Process token 224 on line 47 []: T_VARIABLE => $condition
		Process token 225 on line 47 []: T_WHITESPACE =>  
		Process token 226 on line 47 []: T_IS_IDENTICAL => ===
		Process token 227 on line 47 []: T_WHITESPACE =>  
		Process token 228 on line 47 []: T_TRUE => true
		Process token 229 on line 47 []: T_CLOSE_PARENTHESIS => )
		Process token 230 on line 47 []: T_WHITESPACE =>  
		Process token 231 on line 47 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 221:T_WHILE
		Process token 232 on line 47 [opener:231;]: T_WHITESPACE => \n
		Process token 233 on line 48 [opener:231;]: T_WHITESPACE =>         
		Process token 234 on line 48 [opener:231;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 234 with depth 3
			Process token 235 on line 48 []: T_WHITESPACE =>  
			Process token 236 on line 48 []: T_OPEN_PARENTHESIS => (
			Process token 237 on line 48 []: T_VARIABLE => $condition
			Process token 238 on line 48 []: T_CLOSE_PARENTHESIS => )
			Process token 239 on line 48 []: T_WHITESPACE =>  
			Process token 240 on line 48 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 234:T_IF
			Process token 241 on line 48 [opener:240;]: T_WHITESPACE => \n
			Process token 242 on line 49 [opener:240;]: T_WHITESPACE =>         
			Process token 243 on line 49 [opener:240;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (243:T_CLOSE_CURLY_BRACKET) for 234:T_IF
		Process token 244 on line 49 [opener:231;]: T_WHITESPACE =>  
		Process token 245 on line 49 [opener:231;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 245 with depth 3
			Process token 246 on line 49 []: T_WHITESPACE =>  
			Process token 247 on line 49 []: T_IF => if
			=> Found new opening condition before scope opener for 245:T_ELSE, backtracking
		Process token 246 on line 49 [opener:231;]: T_WHITESPACE =>  
		Process token 247 on line 49 [opener:231;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 247 with depth 3
			Process token 248 on line 49 []: T_WHITESPACE =>  
			Process token 249 on line 49 []: T_OPEN_PARENTHESIS => (
			Process token 250 on line 49 []: T_VARIABLE => $cond
			Process token 251 on line 49 []: T_CLOSE_PARENTHESIS => )
			Process token 252 on line 49 []: T_WHITESPACE =>  
			Process token 253 on line 49 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 247:T_IF
			Process token 254 on line 49 [opener:253;]: T_WHITESPACE => \n
			Process token 255 on line 50 [opener:253;]: T_WHITESPACE =>         
			Process token 256 on line 50 [opener:253;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (256:T_CLOSE_CURLY_BRACKET) for 247:T_IF
		Process token 257 on line 50 [opener:231;]: T_WHITESPACE => \n
		Process token 258 on line 51 [opener:231;]: T_WHITESPACE =>     
		Process token 259 on line 51 [opener:231;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (259:T_CLOSE_CURLY_BRACKET) for 221:T_WHILE
	Process token 260 on line 51 [opener:218;]: T_WHITESPACE => \n
	Process token 261 on line 52 [opener:218;]: T_WHITESPACE => \n
	Process token 262 on line 53 [opener:218;]: T_WHITESPACE =>     
	Process token 263 on line 53 [opener:218;]: T_SWITCH => switch
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 263 with depth 2
		Process token 264 on line 53 []: T_WHITESPACE =>  
		Process token 265 on line 53 []: T_OPEN_PARENTHESIS => (
		Process token 266 on line 53 []: T_VARIABLE => $condition
		Process token 267 on line 53 []: T_CLOSE_PARENTHESIS => )
		Process token 268 on line 53 []: T_WHITESPACE =>  
		Process token 269 on line 53 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 263:T_SWITCH
		Process token 270 on line 53 [opener:269;]: T_WHITESPACE => \n
		Process token 271 on line 54 [opener:269;]: T_WHITESPACE =>         
		Process token 272 on line 54 [opener:269;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 272 with depth 2
		Process token 273 on line 54 []: T_WHITESPACE =>  
		Process token 274 on line 54 []: T_CONSTANT_ENCAPSED_STRING => '1'
		Process token 275 on line 54 []: T_COLON => :
		=> Found scope opener for 272:T_CASE
		Process token 276 on line 54 [opener:275;]: T_WHITESPACE => \n
		Process token 277 on line 55 [opener:275;]: T_WHITESPACE =>             
		Process token 278 on line 55 [opener:275;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 278 with depth 3
			Process token 279 on line 55 []: T_WHITESPACE =>  
			Process token 280 on line 55 []: T_OPEN_PARENTHESIS => (
			Process token 281 on line 55 []: T_VARIABLE => $condition
			Process token 282 on line 55 []: T_CLOSE_PARENTHESIS => )
			Process token 283 on line 55 []: T_WHITESPACE =>  
			Process token 284 on line 55 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 278:T_IF
			Process token 285 on line 55 [opener:284;]: T_WHITESPACE => \n
			Process token 286 on line 56 [opener:284;]: T_WHITESPACE =>             
			Process token 287 on line 56 [opener:284;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (287:T_CLOSE_CURLY_BRACKET) for 278:T_IF
		Process token 288 on line 56 [opener:275;]: T_WHITESPACE =>  
		Process token 289 on line 56 [opener:275;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 289 with depth 3
			Process token 290 on line 56 []: T_WHITESPACE =>  
			Process token 291 on line 56 []: T_IF => if
			=> Found new opening condition before scope opener for 289:T_ELSE, backtracking
		Process token 290 on line 56 [opener:275;]: T_WHITESPACE =>  
		Process token 291 on line 56 [opener:275;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 291 with depth 3
			Process token 292 on line 56 []: T_WHITESPACE =>  
			Process token 293 on line 56 []: T_OPEN_PARENTHESIS => (
			Process token 294 on line 56 []: T_VARIABLE => $cond
			Process token 295 on line 56 []: T_CLOSE_PARENTHESIS => )
			Process token 296 on line 56 []: T_WHITESPACE =>  
			Process token 297 on line 56 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 291:T_IF
			Process token 298 on line 56 [opener:297;]: T_WHITESPACE => \n
			Process token 299 on line 57 [opener:297;]: T_WHITESPACE =>             
			Process token 300 on line 57 [opener:297;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (300:T_CLOSE_CURLY_BRACKET) for 291:T_IF
		Process token 301 on line 57 [opener:275;]: T_WHITESPACE => \n
		Process token 302 on line 58 [opener:275;]: T_WHITESPACE =>         
		Process token 303 on line 58 [opener:275;]: T_BREAK => break
		=> Found scope closer (303:T_BREAK) for 272:T_CASE
		Process token 276 on line 54 [opener:269;]: T_WHITESPACE => \n
		Process token 277 on line 55 [opener:269;]: T_WHITESPACE =>             
		Process token 278 on line 55 [opener:269;]: T_IF => if
		* token is an opening condition *
		* already processed, skipping *
		Process token 288 on line 56 [opener:269;]: T_WHITESPACE =>  
		Process token 289 on line 56 [opener:269;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 289 with depth 3
			Process token 290 on line 56 []: T_WHITESPACE =>  
			Process token 291 on line 56 []: T_IF => if
			=> Found new opening condition before scope opener for 289:T_ELSE, backtracking
		Process token 290 on line 56 [opener:269;]: T_WHITESPACE =>  
		Process token 291 on line 56 [opener:269;]: T_IF => if
		* token is an opening condition *
		* already processed, skipping *
		Process token 301 on line 57 [opener:269;]: T_WHITESPACE => \n
		Process token 302 on line 58 [opener:269;]: T_WHITESPACE =>         
		Process token 303 on line 58 [opener:269;]: T_BREAK => break
		Process token 304 on line 58 [opener:269;]: T_SEMICOLON => ;
		Process token 305 on line 58 [opener:269;]: T_WHITESPACE => \n
		Process token 306 on line 59 [opener:269;]: T_WHITESPACE =>         
		Process token 307 on line 59 [opener:269;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 307 with depth 2
		Process token 308 on line 59 []: T_WHITESPACE =>  
		Process token 309 on line 59 []: T_CONSTANT_ENCAPSED_STRING => '2'
		Process token 310 on line 59 []: T_COLON => :
		=> Found scope opener for 307:T_CASE
		Process token 311 on line 59 [opener:310;]: T_WHITESPACE => \n
		Process token 312 on line 60 [opener:310;]: T_WHITESPACE =>             
		Process token 313 on line 60 [opener:310;]: T_WHILE => while
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 313 with depth 3
			Process token 314 on line 60 []: T_WHITESPACE =>  
			Process token 315 on line 60 []: T_OPEN_PARENTHESIS => (
			Process token 316 on line 60 []: T_VARIABLE => $cond
			Process token 317 on line 60 []: T_CLOSE_PARENTHESIS => )
			Process token 318 on line 60 []: T_WHITESPACE =>  
			Process token 319 on line 60 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 313:T_WHILE
			Process token 320 on line 60 [opener:319;]: T_WHITESPACE => \n
			Process token 321 on line 61 [opener:319;]: T_WHITESPACE =>                 
			Process token 322 on line 61 [opener:319;]: T_ECHO => echo
			Process token 323 on line 61 [opener:319;]: T_WHITESPACE =>  
			Process token 324 on line 61 [opener:319;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
			Process token 325 on line 61 [opener:319;]: T_SEMICOLON => ;
			Process token 326 on line 61 [opener:319;]: T_WHITESPACE => \n
			Process token 327 on line 62 [opener:319;]: T_WHITESPACE =>             
			Process token 328 on line 62 [opener:319;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (328:T_CLOSE_CURLY_BRACKET) for 313:T_WHILE
		Process token 329 on line 62 [opener:310;]: T_WHITESPACE => \n
		Process token 330 on line 63 [opener:310;]: T_WHITESPACE =>         
		Process token 331 on line 63 [opener:310;]: T_BREAK => break
		=> Found scope closer (331:T_BREAK) for 307:T_CASE
		Process token 311 on line 59 [opener:269;]: T_WHITESPACE => \n
		Process token 312 on line 60 [opener:269;]: T_WHITESPACE =>             
		Process token 313 on line 60 [opener:269;]: T_WHILE => while
		* token is an opening condition *
		* already processed, skipping *
		Process token 329 on line 62 [opener:269;]: T_WHITESPACE => \n
		Process token 330 on line 63 [opener:269;]: T_WHITESPACE =>         
		Process token 331 on line 63 [opener:269;]: T_BREAK => break
		Process token 332 on line 63 [opener:269;]: T_SEMICOLON => ;
		Process token 333 on line 63 [opener:269;]: T_WHITESPACE => \n
		Process token 334 on line 64 [opener:269;]: T_WHITESPACE =>         
		Process token 335 on line 64 [opener:269;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 335 with depth 2
		Process token 336 on line 64 []: T_WHITESPACE =>  
		Process token 337 on line 64 []: T_CONSTANT_ENCAPSED_STRING => '3'
		Process token 338 on line 64 []: T_COLON => :
		=> Found scope opener for 335:T_CASE
		Process token 339 on line 64 [opener:338;]: T_WHITESPACE => \n
		Process token 340 on line 65 [opener:338;]: T_WHITESPACE =>         
		Process token 341 on line 65 [opener:338;]: T_BREAK => break
		=> Found scope closer (341:T_BREAK) for 335:T_CASE
		Process token 339 on line 64 [opener:269;]: T_WHITESPACE => \n
		Process token 340 on line 65 [opener:269;]: T_WHITESPACE =>         
		Process token 341 on line 65 [opener:269;]: T_BREAK => break
		Process token 342 on line 65 [opener:269;]: T_SEMICOLON => ;
		Process token 343 on line 65 [opener:269;]: T_WHITESPACE => \n
		Process token 344 on line 66 [opener:269;]: T_WHITESPACE =>         
		Process token 345 on line 66 [opener:269;]: T_DEFAULT => default
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 345 with depth 2
		Process token 346 on line 66 []: T_COLON => :
		=> Found scope opener for 345:T_DEFAULT
		Process token 347 on line 66 [opener:346;]: T_WHITESPACE => \n
		Process token 348 on line 67 [opener:346;]: T_WHITESPACE =>         
		Process token 349 on line 67 [opener:346;]: T_BREAK => break
		=> Found scope closer (349:T_BREAK) for 345:T_DEFAULT
		Process token 347 on line 66 [opener:269;]: T_WHITESPACE => \n
		Process token 348 on line 67 [opener:269;]: T_WHITESPACE =>         
		Process token 349 on line 67 [opener:269;]: T_BREAK => break
		Process token 350 on line 67 [opener:269;]: T_SEMICOLON => ;
		Process token 351 on line 67 [opener:269;]: T_WHITESPACE => \n
		Process token 352 on line 68 [opener:269;]: T_WHITESPACE =>     
		Process token 353 on line 68 [opener:269;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (353:T_CLOSE_CURLY_BRACKET) for 263:T_SWITCH
	Process token 354 on line 68 [opener:218;]: T_WHITESPACE => \n
	Process token 355 on line 69 [opener:218;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (355:T_CLOSE_CURLY_BRACKET) for 212:T_FUNCTION
	Start scope map at 359:T_FUNCTION => function
	=> Begin scope map recursion at token 359 with depth 1
	Process token 360 on line 72 []: T_WHITESPACE =>  
	Process token 361 on line 72 []: T_STRING => comlexityTwenty
	Process token 362 on line 72 []: T_OPEN_PARENTHESIS => (
	Process token 363 on line 72 []: T_CLOSE_PARENTHESIS => )
	Process token 364 on line 72 []: T_WHITESPACE => \n
	Process token 365 on line 73 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 359:T_FUNCTION
	Process token 366 on line 73 [opener:365;]: T_WHITESPACE => \n
	Process token 367 on line 74 [opener:365;]: T_WHITESPACE =>     
	Process token 368 on line 74 [opener:365;]: T_WHILE => while
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 368 with depth 2
		Process token 369 on line 74 []: T_WHITESPACE =>  
		Process token 370 on line 74 []: T_OPEN_PARENTHESIS => (
		Process token 371 on line 74 []: T_VARIABLE => $condition
		Process token 372 on line 74 []: T_WHITESPACE =>  
		Process token 373 on line 74 []: T_IS_IDENTICAL => ===
		Process token 374 on line 74 []: T_WHITESPACE =>  
		Process token 375 on line 74 []: T_TRUE => true
		Process token 376 on line 74 []: T_CLOSE_PARENTHESIS => )
		Process token 377 on line 74 []: T_WHITESPACE =>  
		Process token 378 on line 74 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 368:T_WHILE
		Process token 379 on line 74 [opener:378;]: T_WHITESPACE => \n
		Process token 380 on line 75 [opener:378;]: T_WHITESPACE =>         
		Process token 381 on line 75 [opener:378;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 381 with depth 3
			Process token 382 on line 75 []: T_WHITESPACE =>  
			Process token 383 on line 75 []: T_OPEN_PARENTHESIS => (
			Process token 384 on line 75 []: T_VARIABLE => $condition
			Process token 385 on line 75 []: T_CLOSE_PARENTHESIS => )
			Process token 386 on line 75 []: T_WHITESPACE =>  
			Process token 387 on line 75 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 381:T_IF
			Process token 388 on line 75 [opener:387;]: T_WHITESPACE => \n
			Process token 389 on line 76 [opener:387;]: T_WHITESPACE =>         
			Process token 390 on line 76 [opener:387;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (390:T_CLOSE_CURLY_BRACKET) for 381:T_IF
		Process token 391 on line 76 [opener:378;]: T_WHITESPACE =>  
		Process token 392 on line 76 [opener:378;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 392 with depth 3
			Process token 393 on line 76 []: T_WHITESPACE =>  
			Process token 394 on line 76 []: T_IF => if
			=> Found new opening condition before scope opener for 392:T_ELSE, backtracking
		Process token 393 on line 76 [opener:378;]: T_WHITESPACE =>  
		Process token 394 on line 76 [opener:378;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 394 with depth 3
			Process token 395 on line 76 []: T_WHITESPACE =>  
			Process token 396 on line 76 []: T_OPEN_PARENTHESIS => (
			Process token 397 on line 76 []: T_VARIABLE => $cond
			Process token 398 on line 76 []: T_CLOSE_PARENTHESIS => )
			Process token 399 on line 76 []: T_WHITESPACE =>  
			Process token 400 on line 76 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 394:T_IF
			Process token 401 on line 76 [opener:400;]: T_WHITESPACE => \n
			Process token 402 on line 77 [opener:400;]: T_WHITESPACE =>         
			Process token 403 on line 77 [opener:400;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (403:T_CLOSE_CURLY_BRACKET) for 394:T_IF
		Process token 404 on line 77 [opener:378;]: T_WHITESPACE => \n
		Process token 405 on line 78 [opener:378;]: T_WHITESPACE =>     
		Process token 406 on line 78 [opener:378;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (406:T_CLOSE_CURLY_BRACKET) for 368:T_WHILE
	Process token 407 on line 78 [opener:365;]: T_WHITESPACE => \n
	Process token 408 on line 79 [opener:365;]: T_WHITESPACE => \n
	Process token 409 on line 80 [opener:365;]: T_WHITESPACE =>     
	Process token 410 on line 80 [opener:365;]: T_SWITCH => switch
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 410 with depth 2
		Process token 411 on line 80 []: T_WHITESPACE =>  
		Process token 412 on line 80 []: T_OPEN_PARENTHESIS => (
		Process token 413 on line 80 []: T_VARIABLE => $condition
		Process token 414 on line 80 []: T_CLOSE_PARENTHESIS => )
		Process token 415 on line 80 []: T_WHITESPACE =>  
		Process token 416 on line 80 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 410:T_SWITCH
		Process token 417 on line 80 [opener:416;]: T_WHITESPACE => \n
		Process token 418 on line 81 [opener:416;]: T_WHITESPACE =>         
		Process token 419 on line 81 [opener:416;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 419 with depth 2
		Process token 420 on line 81 []: T_WHITESPACE =>  
		Process token 421 on line 81 []: T_CONSTANT_ENCAPSED_STRING => '1'
		Process token 422 on line 81 []: T_COLON => :
		=> Found scope opener for 419:T_CASE
		Process token 423 on line 81 [opener:422;]: T_WHITESPACE => \n
		Process token 424 on line 82 [opener:422;]: T_WHITESPACE =>             
		Process token 425 on line 82 [opener:422;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 425 with depth 3
			Process token 426 on line 82 []: T_WHITESPACE =>  
			Process token 427 on line 82 []: T_OPEN_PARENTHESIS => (
			Process token 428 on line 82 []: T_VARIABLE => $condition
			Process token 429 on line 82 []: T_CLOSE_PARENTHESIS => )
			Process token 430 on line 82 []: T_WHITESPACE =>  
			Process token 431 on line 82 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 425:T_IF
			Process token 432 on line 82 [opener:431;]: T_WHITESPACE => \n
			Process token 433 on line 83 [opener:431;]: T_WHITESPACE =>             
			Process token 434 on line 83 [opener:431;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (434:T_CLOSE_CURLY_BRACKET) for 425:T_IF
		Process token 435 on line 83 [opener:422;]: T_WHITESPACE =>  
		Process token 436 on line 83 [opener:422;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 436 with depth 3
			Process token 437 on line 83 []: T_WHITESPACE =>  
			Process token 438 on line 83 []: T_IF => if
			=> Found new opening condition before scope opener for 436:T_ELSE, backtracking
		Process token 437 on line 83 [opener:422;]: T_WHITESPACE =>  
		Process token 438 on line 83 [opener:422;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 438 with depth 3
			Process token 439 on line 83 []: T_WHITESPACE =>  
			Process token 440 on line 83 []: T_OPEN_PARENTHESIS => (
			Process token 441 on line 83 []: T_VARIABLE => $cond
			Process token 442 on line 83 []: T_CLOSE_PARENTHESIS => )
			Process token 443 on line 83 []: T_WHITESPACE =>  
			Process token 444 on line 83 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 438:T_IF
			Process token 445 on line 83 [opener:444;]: T_WHITESPACE => \n
			Process token 446 on line 84 [opener:444;]: T_WHITESPACE =>             
			Process token 447 on line 84 [opener:444;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (447:T_CLOSE_CURLY_BRACKET) for 438:T_IF
		Process token 448 on line 84 [opener:422;]: T_WHITESPACE => \n
		Process token 449 on line 85 [opener:422;]: T_WHITESPACE =>         
		Process token 450 on line 85 [opener:422;]: T_BREAK => break
		=> Found scope closer (450:T_BREAK) for 419:T_CASE
		Process token 423 on line 81 [opener:416;]: T_WHITESPACE => \n
		Process token 424 on line 82 [opener:416;]: T_WHITESPACE =>             
		Process token 425 on line 82 [opener:416;]: T_IF => if
		* token is an opening condition *
		* already processed, skipping *
		Process token 435 on line 83 [opener:416;]: T_WHITESPACE =>  
		Process token 436 on line 83 [opener:416;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 436 with depth 3
			Process token 437 on line 83 []: T_WHITESPACE =>  
			Process token 438 on line 83 []: T_IF => if
			=> Found new opening condition before scope opener for 436:T_ELSE, backtracking
		Process token 437 on line 83 [opener:416;]: T_WHITESPACE =>  
		Process token 438 on line 83 [opener:416;]: T_IF => if
		* token is an opening condition *
		* already processed, skipping *
		Process token 448 on line 84 [opener:416;]: T_WHITESPACE => \n
		Process token 449 on line 85 [opener:416;]: T_WHITESPACE =>         
		Process token 450 on line 85 [opener:416;]: T_BREAK => break
		Process token 451 on line 85 [opener:416;]: T_SEMICOLON => ;
		Process token 452 on line 85 [opener:416;]: T_WHITESPACE => \n
		Process token 453 on line 86 [opener:416;]: T_WHITESPACE =>         
		Process token 454 on line 86 [opener:416;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 454 with depth 2
		Process token 455 on line 86 []: T_WHITESPACE =>  
		Process token 456 on line 86 []: T_CONSTANT_ENCAPSED_STRING => '2'
		Process token 457 on line 86 []: T_COLON => :
		=> Found scope opener for 454:T_CASE
		Process token 458 on line 86 [opener:457;]: T_WHITESPACE => \n
		Process token 459 on line 87 [opener:457;]: T_WHITESPACE =>             
		Process token 460 on line 87 [opener:457;]: T_WHILE => while
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 460 with depth 3
			Process token 461 on line 87 []: T_WHITESPACE =>  
			Process token 462 on line 87 []: T_OPEN_PARENTHESIS => (
			Process token 463 on line 87 []: T_VARIABLE => $cond
			Process token 464 on line 87 []: T_CLOSE_PARENTHESIS => )
			Process token 465 on line 87 []: T_WHITESPACE =>  
			Process token 466 on line 87 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 460:T_WHILE
			Process token 467 on line 87 [opener:466;]: T_WHITESPACE => \n
			Process token 468 on line 88 [opener:466;]: T_WHITESPACE =>                 
			Process token 469 on line 88 [opener:466;]: T_ECHO => echo
			Process token 470 on line 88 [opener:466;]: T_WHITESPACE =>  
			Process token 471 on line 88 [opener:466;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
			Process token 472 on line 88 [opener:466;]: T_SEMICOLON => ;
			Process token 473 on line 88 [opener:466;]: T_WHITESPACE => \n
			Process token 474 on line 89 [opener:466;]: T_WHITESPACE =>             
			Process token 475 on line 89 [opener:466;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (475:T_CLOSE_CURLY_BRACKET) for 460:T_WHILE
		Process token 476 on line 89 [opener:457;]: T_WHITESPACE => \n
		Process token 477 on line 90 [opener:457;]: T_WHITESPACE =>         
		Process token 478 on line 90 [opener:457;]: T_BREAK => break
		=> Found scope closer (478:T_BREAK) for 454:T_CASE
		Process token 458 on line 86 [opener:416;]: T_WHITESPACE => \n
		Process token 459 on line 87 [opener:416;]: T_WHITESPACE =>             
		Process token 460 on line 87 [opener:416;]: T_WHILE => while
		* token is an opening condition *
		* already processed, skipping *
		Process token 476 on line 89 [opener:416;]: T_WHITESPACE => \n
		Process token 477 on line 90 [opener:416;]: T_WHITESPACE =>         
		Process token 478 on line 90 [opener:416;]: T_BREAK => break
		Process token 479 on line 90 [opener:416;]: T_SEMICOLON => ;
		Process token 480 on line 90 [opener:416;]: T_WHITESPACE => \n
		Process token 481 on line 91 [opener:416;]: T_WHITESPACE =>         
		Process token 482 on line 91 [opener:416;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 482 with depth 2
		Process token 483 on line 91 []: T_WHITESPACE =>  
		Process token 484 on line 91 []: T_CONSTANT_ENCAPSED_STRING => '3'
		Process token 485 on line 91 []: T_COLON => :
		=> Found scope opener for 482:T_CASE
		Process token 486 on line 91 [opener:485;]: T_WHITESPACE => \n
		Process token 487 on line 92 [opener:485;]: T_WHITESPACE =>             
		Process token 488 on line 92 [opener:485;]: T_SWITCH => switch
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 488 with depth 3
			Process token 489 on line 92 []: T_WHITESPACE =>  
			Process token 490 on line 92 []: T_OPEN_PARENTHESIS => (
			Process token 491 on line 92 []: T_VARIABLE => $cond
			Process token 492 on line 92 []: T_CLOSE_PARENTHESIS => )
			Process token 493 on line 92 []: T_WHITESPACE =>  
			Process token 494 on line 92 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 488:T_SWITCH
			Process token 495 on line 92 [opener:494;]: T_WHITESPACE => \n
			Process token 496 on line 93 [opener:494;]: T_WHITESPACE =>                 
			Process token 497 on line 93 [opener:494;]: T_CASE => case
			* token is an opening condition *
			* searching for opener *
			=> Begin scope map recursion at token 497 with depth 3
			Process token 498 on line 93 []: T_WHITESPACE =>  
			Process token 499 on line 93 []: T_CONSTANT_ENCAPSED_STRING => '1'
			Process token 500 on line 93 []: T_COLON => :
			=> Found scope opener for 497:T_CASE
			Process token 501 on line 93 [opener:500;]: T_WHITESPACE => \n
			Process token 502 on line 94 [opener:500;]: T_WHITESPACE =>                 
			Process token 503 on line 94 [opener:500;]: T_BREAK => break
			=> Found scope closer (503:T_BREAK) for 497:T_CASE
			Process token 501 on line 93 [opener:494;]: T_WHITESPACE => \n
			Process token 502 on line 94 [opener:494;]: T_WHITESPACE =>                 
			Process token 503 on line 94 [opener:494;]: T_BREAK => break
			Process token 504 on line 94 [opener:494;]: T_SEMICOLON => ;
			Process token 505 on line 94 [opener:494;]: T_WHITESPACE => \n
			Process token 506 on line 95 [opener:494;]: T_WHITESPACE =>                 
			Process token 507 on line 95 [opener:494;]: T_CASE => case
			* token is an opening condition *
			* searching for opener *
			=> Begin scope map recursion at token 507 with depth 3
			Process token 508 on line 95 []: T_WHITESPACE =>  
			Process token 509 on line 95 []: T_CONSTANT_ENCAPSED_STRING => '2'
			Process token 510 on line 95 []: T_COLON => :
			=> Found scope opener for 507:T_CASE
			Process token 511 on line 95 [opener:510;]: T_WHITESPACE => \n
			Process token 512 on line 96 [opener:510;]: T_WHITESPACE =>                 
			Process token 513 on line 96 [opener:510;]: T_BREAK => break
			=> Found scope closer (513:T_BREAK) for 507:T_CASE
			Process token 511 on line 95 [opener:494;]: T_WHITESPACE => \n
			Process token 512 on line 96 [opener:494;]: T_WHITESPACE =>                 
			Process token 513 on line 96 [opener:494;]: T_BREAK => break
			Process token 514 on line 96 [opener:494;]: T_SEMICOLON => ;
			Process token 515 on line 96 [opener:494;]: T_WHITESPACE => \n
			Process token 516 on line 97 [opener:494;]: T_WHITESPACE =>             
			Process token 517 on line 97 [opener:494;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (517:T_CLOSE_CURLY_BRACKET) for 488:T_SWITCH
		Process token 518 on line 97 [opener:485;]: T_WHITESPACE => \n
		Process token 519 on line 98 [opener:485;]: T_WHITESPACE =>         
		Process token 520 on line 98 [opener:485;]: T_BREAK => break
		=> Found scope closer (520:T_BREAK) for 482:T_CASE
		Process token 486 on line 91 [opener:416;]: T_WHITESPACE => \n
		Process token 487 on line 92 [opener:416;]: T_WHITESPACE =>             
		Process token 488 on line 92 [opener:416;]: T_SWITCH => switch
		* token is an opening condition *
		* already processed, skipping *
		Process token 518 on line 97 [opener:416;]: T_WHITESPACE => \n
		Process token 519 on line 98 [opener:416;]: T_WHITESPACE =>         
		Process token 520 on line 98 [opener:416;]: T_BREAK => break
		Process token 521 on line 98 [opener:416;]: T_SEMICOLON => ;
		Process token 522 on line 98 [opener:416;]: T_WHITESPACE => \n
		Process token 523 on line 99 [opener:416;]: T_WHITESPACE =>         
		Process token 524 on line 99 [opener:416;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 524 with depth 2
		Process token 525 on line 99 []: T_WHITESPACE =>  
		Process token 526 on line 99 []: T_CONSTANT_ENCAPSED_STRING => '4'
		Process token 527 on line 99 []: T_COLON => :
		=> Found scope opener for 524:T_CASE
		Process token 528 on line 99 [opener:527;]: T_WHITESPACE => \n
		Process token 529 on line 100 [opener:527;]: T_WHITESPACE =>             
		Process token 530 on line 100 [opener:527;]: T_DO => do
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 530 with depth 3
			Process token 531 on line 100 []: T_WHITESPACE =>  
			Process token 532 on line 100 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 530:T_DO
			Process token 533 on line 100 [opener:532;]: T_WHITESPACE => \n
			Process token 534 on line 101 [opener:532;]: T_WHITESPACE =>                 
			Process token 535 on line 101 [opener:532;]: T_IF => if
			* token is an opening condition *
			* searching for opener *
				=> Begin scope map recursion at token 535 with depth 4
				Process token 536 on line 101 []: T_WHITESPACE =>  
				Process token 537 on line 101 []: T_OPEN_PARENTHESIS => (
				Process token 538 on line 101 []: T_VARIABLE => $condition
				Process token 539 on line 101 []: T_CLOSE_PARENTHESIS => )
				Process token 540 on line 101 []: T_WHITESPACE =>  
				Process token 541 on line 101 []: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 535:T_IF
				Process token 542 on line 101 [opener:541;]: T_WHITESPACE => \n
				Process token 543 on line 102 [opener:541;]: T_WHITESPACE =>                     
				Process token 544 on line 102 [opener:541;]: T_IF => if
				* token is an opening condition *
				* searching for opener *
					=> Begin scope map recursion at token 544 with depth 5
					Process token 545 on line 102 []: T_WHITESPACE =>  
					Process token 546 on line 102 []: T_OPEN_PARENTHESIS => (
					Process token 547 on line 102 []: T_VARIABLE => $cond
					Process token 548 on line 102 []: T_CLOSE_PARENTHESIS => )
					Process token 549 on line 102 []: T_WHITESPACE =>  
					Process token 550 on line 102 []: T_OPEN_CURLY_BRACKET => {
					=> Found scope opener for 544:T_IF
					Process token 551 on line 102 [opener:550;]: T_WHITESPACE => \n
					Process token 552 on line 103 [opener:550;]: T_WHITESPACE =>                     
					Process token 553 on line 103 [opener:550;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer (553:T_CLOSE_CURLY_BRACKET) for 544:T_IF
				Process token 554 on line 103 [opener:541;]: T_WHITESPACE =>  
				Process token 555 on line 103 [opener:541;]: T_ELSE => else
				=> Ignoring non-curly scope closer for 535:T_IF
				* token is an opening condition *
				* searching for opener *
					=> Begin scope map recursion at token 555 with depth 5
					Process token 556 on line 103 []: T_WHITESPACE =>  
					Process token 557 on line 103 []: T_IF => if
					=> Found new opening condition before scope opener for 555:T_ELSE, backtracking
				Process token 556 on line 103 [opener:541;]: T_WHITESPACE =>  
				Process token 557 on line 103 [opener:541;]: T_IF => if
				* token is an opening condition *
				* searching for opener *
					=> Begin scope map recursion at token 557 with depth 5
					Process token 558 on line 103 []: T_WHITESPACE =>  
					Process token 559 on line 103 []: T_OPEN_PARENTHESIS => (
					Process token 560 on line 103 []: T_VARIABLE => $con
					Process token 561 on line 103 []: T_CLOSE_PARENTHESIS => )
					Process token 562 on line 103 []: T_WHITESPACE =>  
					Process token 563 on line 103 []: T_OPEN_CURLY_BRACKET => {
					=> Found scope opener for 557:T_IF
					Process token 564 on line 103 [opener:563;]: T_WHITESPACE => \n
					Process token 565 on line 104 [opener:563;]: T_WHITESPACE =>                     
					Process token 566 on line 104 [opener:563;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer (566:T_CLOSE_CURLY_BRACKET) for 557:T_IF
				Process token 567 on line 104 [opener:541;]: T_WHITESPACE => \n
				Process token 568 on line 105 [opener:541;]: T_WHITESPACE =>                 
				Process token 569 on line 105 [opener:541;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer (569:T_CLOSE_CURLY_BRACKET) for 535:T_IF
			Process token 570 on line 105 [opener:532;]: T_WHITESPACE => \n
			Process token 571 on line 106 [opener:532;]: T_WHITESPACE =>             
			Process token 572 on line 106 [opener:532;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (572:T_CLOSE_CURLY_BRACKET) for 530:T_DO
		Process token 573 on line 106 [opener:527;]: T_WHITESPACE =>  
		Process token 574 on line 106 [opener:527;]: T_WHILE => while
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 574 with depth 3
			Process token 575 on line 106 []: T_WHITESPACE =>  
			Process token 576 on line 106 []: T_OPEN_PARENTHESIS => (
			Process token 577 on line 106 []: T_VARIABLE => $cond
			Process token 578 on line 106 []: T_CLOSE_PARENTHESIS => )
			Process token 579 on line 106 []: T_SEMICOLON => ;
			Process token 580 on line 106 []: T_WHITESPACE => \n
			Process token 581 on line 107 []: T_WHITESPACE =>         
			Process token 582 on line 107 []: T_BREAK => break
			Process token 583 on line 107 []: T_SEMICOLON => ;
			Process token 584 on line 107 []: T_WHITESPACE => \n
			Process token 585 on line 108 []: T_WHITESPACE =>         
			Process token 586 on line 108 []: T_DEFAULT => default
			=> Found new opening condition before scope opener for 574:T_WHILE, backtracking
		Process token 575 on line 106 [opener:527;]: T_WHITESPACE =>  
		Process token 576 on line 106 [opener:527;]: T_OPEN_PARENTHESIS => (
		Process token 577 on line 106 [opener:527;]: T_VARIABLE => $cond
		Process token 578 on line 106 [opener:527;]: T_CLOSE_PARENTHESIS => )
		Process token 579 on line 106 [opener:527;]: T_SEMICOLON => ;
		Process token 580 on line 106 [opener:527;]: T_WHITESPACE => \n
		Process token 581 on line 107 [opener:527;]: T_WHITESPACE =>         
		Process token 582 on line 107 [opener:527;]: T_BREAK => break
		=> Found scope closer (582:T_BREAK) for 524:T_CASE
		Process token 528 on line 99 [opener:416;]: T_WHITESPACE => \n
		Process token 529 on line 100 [opener:416;]: T_WHITESPACE =>             
		Process token 530 on line 100 [opener:416;]: T_DO => do
		* token is an opening condition *
		* already processed, skipping *
		Process token 573 on line 106 [opener:416;]: T_WHITESPACE =>  
		Process token 574 on line 106 [opener:416;]: T_WHILE => while
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 574 with depth 3
			Process token 575 on line 106 []: T_WHITESPACE =>  
			Process token 576 on line 106 []: T_OPEN_PARENTHESIS => (
			Process token 577 on line 106 []: T_VARIABLE => $cond
			Process token 578 on line 106 []: T_CLOSE_PARENTHESIS => )
			Process token 579 on line 106 []: T_SEMICOLON => ;
			Process token 580 on line 106 []: T_WHITESPACE => \n
			Process token 581 on line 107 []: T_WHITESPACE =>         
			Process token 582 on line 107 []: T_BREAK => break
			Process token 583 on line 107 []: T_SEMICOLON => ;
			Process token 584 on line 107 []: T_WHITESPACE => \n
			Process token 585 on line 108 []: T_WHITESPACE =>         
			Process token 586 on line 108 []: T_DEFAULT => default
			=> Found new opening condition before scope opener for 574:T_WHILE, backtracking
		Process token 575 on line 106 [opener:416;]: T_WHITESPACE =>  
		Process token 576 on line 106 [opener:416;]: T_OPEN_PARENTHESIS => (
		Process token 577 on line 106 [opener:416;]: T_VARIABLE => $cond
		Process token 578 on line 106 [opener:416;]: T_CLOSE_PARENTHESIS => )
		Process token 579 on line 106 [opener:416;]: T_SEMICOLON => ;
		Process token 580 on line 106 [opener:416;]: T_WHITESPACE => \n
		Process token 581 on line 107 [opener:416;]: T_WHITESPACE =>         
		Process token 582 on line 107 [opener:416;]: T_BREAK => break
		Process token 583 on line 107 [opener:416;]: T_SEMICOLON => ;
		Process token 584 on line 107 [opener:416;]: T_WHITESPACE => \n
		Process token 585 on line 108 [opener:416;]: T_WHITESPACE =>         
		Process token 586 on line 108 [opener:416;]: T_DEFAULT => default
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 586 with depth 2
		Process token 587 on line 108 []: T_COLON => :
		=> Found scope opener for 586:T_DEFAULT
		Process token 588 on line 108 [opener:587;]: T_WHITESPACE => \n
		Process token 589 on line 109 [opener:587;]: T_WHITESPACE =>             
		Process token 590 on line 109 [opener:587;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 590 with depth 3
			Process token 591 on line 109 []: T_WHITESPACE =>  
			Process token 592 on line 109 []: T_OPEN_PARENTHESIS => (
			Process token 593 on line 109 []: T_VARIABLE => $condition
			Process token 594 on line 109 []: T_CLOSE_PARENTHESIS => )
			Process token 595 on line 109 []: T_WHITESPACE =>  
			Process token 596 on line 109 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 590:T_IF
			Process token 597 on line 109 [opener:596;]: T_WHITESPACE => \n
			Process token 598 on line 110 [opener:596;]: T_WHITESPACE =>             
			Process token 599 on line 110 [opener:596;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (599:T_CLOSE_CURLY_BRACKET) for 590:T_IF
		Process token 600 on line 110 [opener:587;]: T_WHITESPACE => \n
		Process token 601 on line 111 [opener:587;]: T_WHITESPACE =>         
		Process token 602 on line 111 [opener:587;]: T_BREAK => break
		=> Found scope closer (602:T_BREAK) for 586:T_DEFAULT
		Process token 588 on line 108 [opener:416;]: T_WHITESPACE => \n
		Process token 589 on line 109 [opener:416;]: T_WHITESPACE =>             
		Process token 590 on line 109 [opener:416;]: T_IF => if
		* token is an opening condition *
		* already processed, skipping *
		Process token 600 on line 110 [opener:416;]: T_WHITESPACE => \n
		Process token 601 on line 111 [opener:416;]: T_WHITESPACE =>         
		Process token 602 on line 111 [opener:416;]: T_BREAK => break
		Process token 603 on line 111 [opener:416;]: T_SEMICOLON => ;
		Process token 604 on line 111 [opener:416;]: T_WHITESPACE => \n
		Process token 605 on line 112 [opener:416;]: T_WHITESPACE =>     
		Process token 606 on line 112 [opener:416;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (606:T_CLOSE_CURLY_BRACKET) for 410:T_SWITCH
	Process token 607 on line 112 [opener:365;]: T_WHITESPACE => \n
	Process token 608 on line 113 [opener:365;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (608:T_CLOSE_CURLY_BRACKET) for 359:T_FUNCTION
	Start scope map at 612:T_FUNCTION => function
	=> Begin scope map recursion at token 612 with depth 1
	Process token 613 on line 116 []: T_WHITESPACE =>  
	Process token 614 on line 116 []: T_STRING => comlexityTwentyOne
	Process token 615 on line 116 []: T_OPEN_PARENTHESIS => (
	Process token 616 on line 116 []: T_CLOSE_PARENTHESIS => )
	Process token 617 on line 116 []: T_WHITESPACE => \n
	Process token 618 on line 117 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 612:T_FUNCTION
	Process token 619 on line 117 [opener:618;]: T_WHITESPACE => \n
	Process token 620 on line 118 [opener:618;]: T_WHITESPACE =>     
	Process token 621 on line 118 [opener:618;]: T_WHILE => while
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 621 with depth 2
		Process token 622 on line 118 []: T_WHITESPACE =>  
		Process token 623 on line 118 []: T_OPEN_PARENTHESIS => (
		Process token 624 on line 118 []: T_VARIABLE => $condition
		Process token 625 on line 118 []: T_WHITESPACE =>  
		Process token 626 on line 118 []: T_IS_IDENTICAL => ===
		Process token 627 on line 118 []: T_WHITESPACE =>  
		Process token 628 on line 118 []: T_TRUE => true
		Process token 629 on line 118 []: T_CLOSE_PARENTHESIS => )
		Process token 630 on line 118 []: T_WHITESPACE =>  
		Process token 631 on line 118 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 621:T_WHILE
		Process token 632 on line 118 [opener:631;]: T_WHITESPACE => \n
		Process token 633 on line 119 [opener:631;]: T_WHITESPACE =>         
		Process token 634 on line 119 [opener:631;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 634 with depth 3
			Process token 635 on line 119 []: T_WHITESPACE =>  
			Process token 636 on line 119 []: T_OPEN_PARENTHESIS => (
			Process token 637 on line 119 []: T_VARIABLE => $condition
			Process token 638 on line 119 []: T_CLOSE_PARENTHESIS => )
			Process token 639 on line 119 []: T_WHITESPACE =>  
			Process token 640 on line 119 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 634:T_IF
			Process token 641 on line 119 [opener:640;]: T_WHITESPACE => \n
			Process token 642 on line 120 [opener:640;]: T_WHITESPACE =>         
			Process token 643 on line 120 [opener:640;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (643:T_CLOSE_CURLY_BRACKET) for 634:T_IF
		Process token 644 on line 120 [opener:631;]: T_WHITESPACE =>  
		Process token 645 on line 120 [opener:631;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 645 with depth 3
			Process token 646 on line 120 []: T_WHITESPACE =>  
			Process token 647 on line 120 []: T_IF => if
			=> Found new opening condition before scope opener for 645:T_ELSE, backtracking
		Process token 646 on line 120 [opener:631;]: T_WHITESPACE =>  
		Process token 647 on line 120 [opener:631;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 647 with depth 3
			Process token 648 on line 120 []: T_WHITESPACE =>  
			Process token 649 on line 120 []: T_OPEN_PARENTHESIS => (
			Process token 650 on line 120 []: T_VARIABLE => $cond
			Process token 651 on line 120 []: T_CLOSE_PARENTHESIS => )
			Process token 652 on line 120 []: T_WHITESPACE =>  
			Process token 653 on line 120 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 647:T_IF
			Process token 654 on line 120 [opener:653;]: T_WHITESPACE => \n
			Process token 655 on line 121 [opener:653;]: T_WHITESPACE =>         
			Process token 656 on line 121 [opener:653;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (656:T_CLOSE_CURLY_BRACKET) for 647:T_IF
		Process token 657 on line 121 [opener:631;]: T_WHITESPACE => \n
		Process token 658 on line 122 [opener:631;]: T_WHITESPACE =>     
		Process token 659 on line 122 [opener:631;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (659:T_CLOSE_CURLY_BRACKET) for 621:T_WHILE
	Process token 660 on line 122 [opener:618;]: T_WHITESPACE => \n
	Process token 661 on line 123 [opener:618;]: T_WHITESPACE => \n
	Process token 662 on line 124 [opener:618;]: T_WHITESPACE =>     
	Process token 663 on line 124 [opener:618;]: T_SWITCH => switch
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 663 with depth 2
		Process token 664 on line 124 []: T_WHITESPACE =>  
		Process token 665 on line 124 []: T_OPEN_PARENTHESIS => (
		Process token 666 on line 124 []: T_VARIABLE => $condition
		Process token 667 on line 124 []: T_CLOSE_PARENTHESIS => )
		Process token 668 on line 124 []: T_WHITESPACE =>  
		Process token 669 on line 124 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 663:T_SWITCH
		Process token 670 on line 124 [opener:669;]: T_WHITESPACE => \n
		Process token 671 on line 125 [opener:669;]: T_WHITESPACE =>         
		Process token 672 on line 125 [opener:669;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 672 with depth 2
		Process token 673 on line 125 []: T_WHITESPACE =>  
		Process token 674 on line 125 []: T_CONSTANT_ENCAPSED_STRING => '1'
		Process token 675 on line 125 []: T_COLON => :
		=> Found scope opener for 672:T_CASE
		Process token 676 on line 125 [opener:675;]: T_WHITESPACE => \n
		Process token 677 on line 126 [opener:675;]: T_WHITESPACE =>             
		Process token 678 on line 126 [opener:675;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 678 with depth 3
			Process token 679 on line 126 []: T_WHITESPACE =>  
			Process token 680 on line 126 []: T_OPEN_PARENTHESIS => (
			Process token 681 on line 126 []: T_VARIABLE => $condition
			Process token 682 on line 126 []: T_CLOSE_PARENTHESIS => )
			Process token 683 on line 126 []: T_WHITESPACE =>  
			Process token 684 on line 126 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 678:T_IF
			Process token 685 on line 126 [opener:684;]: T_WHITESPACE => \n
			Process token 686 on line 127 [opener:684;]: T_WHITESPACE =>             
			Process token 687 on line 127 [opener:684;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (687:T_CLOSE_CURLY_BRACKET) for 678:T_IF
		Process token 688 on line 127 [opener:675;]: T_WHITESPACE =>  
		Process token 689 on line 127 [opener:675;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 689 with depth 3
			Process token 690 on line 127 []: T_WHITESPACE =>  
			Process token 691 on line 127 []: T_IF => if
			=> Found new opening condition before scope opener for 689:T_ELSE, backtracking
		Process token 690 on line 127 [opener:675;]: T_WHITESPACE =>  
		Process token 691 on line 127 [opener:675;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 691 with depth 3
			Process token 692 on line 127 []: T_WHITESPACE =>  
			Process token 693 on line 127 []: T_OPEN_PARENTHESIS => (
			Process token 694 on line 127 []: T_VARIABLE => $cond
			Process token 695 on line 127 []: T_CLOSE_PARENTHESIS => )
			Process token 696 on line 127 []: T_WHITESPACE =>  
			Process token 697 on line 127 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 691:T_IF
			Process token 698 on line 127 [opener:697;]: T_WHITESPACE => \n
			Process token 699 on line 128 [opener:697;]: T_WHITESPACE =>             
			Process token 700 on line 128 [opener:697;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (700:T_CLOSE_CURLY_BRACKET) for 691:T_IF
		Process token 701 on line 128 [opener:675;]: T_WHITESPACE => \n
		Process token 702 on line 129 [opener:675;]: T_WHITESPACE =>         
		Process token 703 on line 129 [opener:675;]: T_BREAK => break
		=> Found scope closer (703:T_BREAK) for 672:T_CASE
		Process token 676 on line 125 [opener:669;]: T_WHITESPACE => \n
		Process token 677 on line 126 [opener:669;]: T_WHITESPACE =>             
		Process token 678 on line 126 [opener:669;]: T_IF => if
		* token is an opening condition *
		* already processed, skipping *
		Process token 688 on line 127 [opener:669;]: T_WHITESPACE =>  
		Process token 689 on line 127 [opener:669;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 689 with depth 3
			Process token 690 on line 127 []: T_WHITESPACE =>  
			Process token 691 on line 127 []: T_IF => if
			=> Found new opening condition before scope opener for 689:T_ELSE, backtracking
		Process token 690 on line 127 [opener:669;]: T_WHITESPACE =>  
		Process token 691 on line 127 [opener:669;]: T_IF => if
		* token is an opening condition *
		* already processed, skipping *
		Process token 701 on line 128 [opener:669;]: T_WHITESPACE => \n
		Process token 702 on line 129 [opener:669;]: T_WHITESPACE =>         
		Process token 703 on line 129 [opener:669;]: T_BREAK => break
		Process token 704 on line 129 [opener:669;]: T_SEMICOLON => ;
		Process token 705 on line 129 [opener:669;]: T_WHITESPACE => \n
		Process token 706 on line 130 [opener:669;]: T_WHITESPACE =>         
		Process token 707 on line 130 [opener:669;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 707 with depth 2
		Process token 708 on line 130 []: T_WHITESPACE =>  
		Process token 709 on line 130 []: T_CONSTANT_ENCAPSED_STRING => '2'
		Process token 710 on line 130 []: T_COLON => :
		=> Found scope opener for 707:T_CASE
		Process token 711 on line 130 [opener:710;]: T_WHITESPACE => \n
		Process token 712 on line 131 [opener:710;]: T_WHITESPACE =>             
		Process token 713 on line 131 [opener:710;]: T_WHILE => while
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 713 with depth 3
			Process token 714 on line 131 []: T_WHITESPACE =>  
			Process token 715 on line 131 []: T_OPEN_PARENTHESIS => (
			Process token 716 on line 131 []: T_VARIABLE => $cond
			Process token 717 on line 131 []: T_CLOSE_PARENTHESIS => )
			Process token 718 on line 131 []: T_WHITESPACE =>  
			Process token 719 on line 131 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 713:T_WHILE
			Process token 720 on line 131 [opener:719;]: T_WHITESPACE => \n
			Process token 721 on line 132 [opener:719;]: T_WHITESPACE =>                 
			Process token 722 on line 132 [opener:719;]: T_ECHO => echo
			Process token 723 on line 132 [opener:719;]: T_WHITESPACE =>  
			Process token 724 on line 132 [opener:719;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
			Process token 725 on line 132 [opener:719;]: T_SEMICOLON => ;
			Process token 726 on line 132 [opener:719;]: T_WHITESPACE => \n
			Process token 727 on line 133 [opener:719;]: T_WHITESPACE =>             
			Process token 728 on line 133 [opener:719;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (728:T_CLOSE_CURLY_BRACKET) for 713:T_WHILE
		Process token 729 on line 133 [opener:710;]: T_WHITESPACE => \n
		Process token 730 on line 134 [opener:710;]: T_WHITESPACE =>         
		Process token 731 on line 134 [opener:710;]: T_BREAK => break
		=> Found scope closer (731:T_BREAK) for 707:T_CASE
		Process token 711 on line 130 [opener:669;]: T_WHITESPACE => \n
		Process token 712 on line 131 [opener:669;]: T_WHITESPACE =>             
		Process token 713 on line 131 [opener:669;]: T_WHILE => while
		* token is an opening condition *
		* already processed, skipping *
		Process token 729 on line 133 [opener:669;]: T_WHITESPACE => \n
		Process token 730 on line 134 [opener:669;]: T_WHITESPACE =>         
		Process token 731 on line 134 [opener:669;]: T_BREAK => break
		Process token 732 on line 134 [opener:669;]: T_SEMICOLON => ;
		Process token 733 on line 134 [opener:669;]: T_WHITESPACE => \n
		Process token 734 on line 135 [opener:669;]: T_WHITESPACE =>         
		Process token 735 on line 135 [opener:669;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 735 with depth 2
		Process token 736 on line 135 []: T_WHITESPACE =>  
		Process token 737 on line 135 []: T_CONSTANT_ENCAPSED_STRING => '3'
		Process token 738 on line 135 []: T_COLON => :
		=> Found scope opener for 735:T_CASE
		Process token 739 on line 135 [opener:738;]: T_WHITESPACE => \n
		Process token 740 on line 136 [opener:738;]: T_WHITESPACE =>             
		Process token 741 on line 136 [opener:738;]: T_SWITCH => switch
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 741 with depth 3
			Process token 742 on line 136 []: T_WHITESPACE =>  
			Process token 743 on line 136 []: T_OPEN_PARENTHESIS => (
			Process token 744 on line 136 []: T_VARIABLE => $cond
			Process token 745 on line 136 []: T_CLOSE_PARENTHESIS => )
			Process token 746 on line 136 []: T_WHITESPACE =>  
			Process token 747 on line 136 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 741:T_SWITCH
			Process token 748 on line 136 [opener:747;]: T_WHITESPACE => \n
			Process token 749 on line 137 [opener:747;]: T_WHITESPACE =>                 
			Process token 750 on line 137 [opener:747;]: T_CASE => case
			* token is an opening condition *
			* searching for opener *
			=> Begin scope map recursion at token 750 with depth 3
			Process token 751 on line 137 []: T_WHITESPACE =>  
			Process token 752 on line 137 []: T_CONSTANT_ENCAPSED_STRING => '1'
			Process token 753 on line 137 []: T_COLON => :
			=> Found scope opener for 750:T_CASE
			Process token 754 on line 137 [opener:753;]: T_WHITESPACE => \n
			Process token 755 on line 138 [opener:753;]: T_WHITESPACE =>                 
			Process token 756 on line 138 [opener:753;]: T_BREAK => break
			=> Found scope closer (756:T_BREAK) for 750:T_CASE
			Process token 754 on line 137 [opener:747;]: T_WHITESPACE => \n
			Process token 755 on line 138 [opener:747;]: T_WHITESPACE =>                 
			Process token 756 on line 138 [opener:747;]: T_BREAK => break
			Process token 757 on line 138 [opener:747;]: T_SEMICOLON => ;
			Process token 758 on line 138 [opener:747;]: T_WHITESPACE => \n
			Process token 759 on line 139 [opener:747;]: T_WHITESPACE =>                 
			Process token 760 on line 139 [opener:747;]: T_CASE => case
			* token is an opening condition *
			* searching for opener *
			=> Begin scope map recursion at token 760 with depth 3
			Process token 761 on line 139 []: T_WHITESPACE =>  
			Process token 762 on line 139 []: T_CONSTANT_ENCAPSED_STRING => '2'
			Process token 763 on line 139 []: T_COLON => :
			=> Found scope opener for 760:T_CASE
			Process token 764 on line 139 [opener:763;]: T_WHITESPACE => \n
			Process token 765 on line 140 [opener:763;]: T_WHITESPACE =>                 
			Process token 766 on line 140 [opener:763;]: T_BREAK => break
			=> Found scope closer (766:T_BREAK) for 760:T_CASE
			Process token 764 on line 139 [opener:747;]: T_WHITESPACE => \n
			Process token 765 on line 140 [opener:747;]: T_WHITESPACE =>                 
			Process token 766 on line 140 [opener:747;]: T_BREAK => break
			Process token 767 on line 140 [opener:747;]: T_SEMICOLON => ;
			Process token 768 on line 140 [opener:747;]: T_WHITESPACE => \n
			Process token 769 on line 141 [opener:747;]: T_WHITESPACE =>             
			Process token 770 on line 141 [opener:747;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (770:T_CLOSE_CURLY_BRACKET) for 741:T_SWITCH
		Process token 771 on line 141 [opener:738;]: T_WHITESPACE => \n
		Process token 772 on line 142 [opener:738;]: T_WHITESPACE =>         
		Process token 773 on line 142 [opener:738;]: T_BREAK => break
		=> Found scope closer (773:T_BREAK) for 735:T_CASE
		Process token 739 on line 135 [opener:669;]: T_WHITESPACE => \n
		Process token 740 on line 136 [opener:669;]: T_WHITESPACE =>             
		Process token 741 on line 136 [opener:669;]: T_SWITCH => switch
		* token is an opening condition *
		* already processed, skipping *
		Process token 771 on line 141 [opener:669;]: T_WHITESPACE => \n
		Process token 772 on line 142 [opener:669;]: T_WHITESPACE =>         
		Process token 773 on line 142 [opener:669;]: T_BREAK => break
		Process token 774 on line 142 [opener:669;]: T_SEMICOLON => ;
		Process token 775 on line 142 [opener:669;]: T_WHITESPACE => \n
		Process token 776 on line 143 [opener:669;]: T_WHITESPACE =>         
		Process token 777 on line 143 [opener:669;]: T_CASE => case
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 777 with depth 2
		Process token 778 on line 143 []: T_WHITESPACE =>  
		Process token 779 on line 143 []: T_CONSTANT_ENCAPSED_STRING => '4'
		Process token 780 on line 143 []: T_COLON => :
		=> Found scope opener for 777:T_CASE
		Process token 781 on line 143 [opener:780;]: T_WHITESPACE => \n
		Process token 782 on line 144 [opener:780;]: T_WHITESPACE =>             
		Process token 783 on line 144 [opener:780;]: T_DO => do
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 783 with depth 3
			Process token 784 on line 144 []: T_WHITESPACE =>  
			Process token 785 on line 144 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 783:T_DO
			Process token 786 on line 144 [opener:785;]: T_WHITESPACE => \n
			Process token 787 on line 145 [opener:785;]: T_WHITESPACE =>                 
			Process token 788 on line 145 [opener:785;]: T_IF => if
			* token is an opening condition *
			* searching for opener *
				=> Begin scope map recursion at token 788 with depth 4
				Process token 789 on line 145 []: T_WHITESPACE =>  
				Process token 790 on line 145 []: T_OPEN_PARENTHESIS => (
				Process token 791 on line 145 []: T_VARIABLE => $condition
				Process token 792 on line 145 []: T_CLOSE_PARENTHESIS => )
				Process token 793 on line 145 []: T_WHITESPACE =>  
				Process token 794 on line 145 []: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 788:T_IF
				Process token 795 on line 145 [opener:794;]: T_WHITESPACE => \n
				Process token 796 on line 146 [opener:794;]: T_WHITESPACE =>                     
				Process token 797 on line 146 [opener:794;]: T_IF => if
				* token is an opening condition *
				* searching for opener *
					=> Begin scope map recursion at token 797 with depth 5
					Process token 798 on line 146 []: T_WHITESPACE =>  
					Process token 799 on line 146 []: T_OPEN_PARENTHESIS => (
					Process token 800 on line 146 []: T_VARIABLE => $cond
					Process token 801 on line 146 []: T_CLOSE_PARENTHESIS => )
					Process token 802 on line 146 []: T_WHITESPACE =>  
					Process token 803 on line 146 []: T_OPEN_CURLY_BRACKET => {
					=> Found scope opener for 797:T_IF
					Process token 804 on line 146 [opener:803;]: T_WHITESPACE => \n
					Process token 805 on line 147 [opener:803;]: T_WHITESPACE =>                     
					Process token 806 on line 147 [opener:803;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer (806:T_CLOSE_CURLY_BRACKET) for 797:T_IF
				Process token 807 on line 147 [opener:794;]: T_WHITESPACE =>  
				Process token 808 on line 147 [opener:794;]: T_ELSE => else
				=> Ignoring non-curly scope closer for 788:T_IF
				* token is an opening condition *
				* searching for opener *
					=> Begin scope map recursion at token 808 with depth 5
					Process token 809 on line 147 []: T_WHITESPACE =>  
					Process token 810 on line 147 []: T_IF => if
					=> Found new opening condition before scope opener for 808:T_ELSE, backtracking
				Process token 809 on line 147 [opener:794;]: T_WHITESPACE =>  
				Process token 810 on line 147 [opener:794;]: T_IF => if
				* token is an opening condition *
				* searching for opener *
					=> Begin scope map recursion at token 810 with depth 5
					Process token 811 on line 147 []: T_WHITESPACE =>  
					Process token 812 on line 147 []: T_OPEN_PARENTHESIS => (
					Process token 813 on line 147 []: T_VARIABLE => $con
					Process token 814 on line 147 []: T_CLOSE_PARENTHESIS => )
					Process token 815 on line 147 []: T_WHITESPACE =>  
					Process token 816 on line 147 []: T_OPEN_CURLY_BRACKET => {
					=> Found scope opener for 810:T_IF
					Process token 817 on line 147 [opener:816;]: T_WHITESPACE => \n
					Process token 818 on line 148 [opener:816;]: T_WHITESPACE =>                     
					Process token 819 on line 148 [opener:816;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer (819:T_CLOSE_CURLY_BRACKET) for 810:T_IF
				Process token 820 on line 148 [opener:794;]: T_WHITESPACE => \n
				Process token 821 on line 149 [opener:794;]: T_WHITESPACE =>                 
				Process token 822 on line 149 [opener:794;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer (822:T_CLOSE_CURLY_BRACKET) for 788:T_IF
			Process token 823 on line 149 [opener:785;]: T_WHITESPACE => \n
			Process token 824 on line 150 [opener:785;]: T_WHITESPACE =>             
			Process token 825 on line 150 [opener:785;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (825:T_CLOSE_CURLY_BRACKET) for 783:T_DO
		Process token 826 on line 150 [opener:780;]: T_WHITESPACE =>  
		Process token 827 on line 150 [opener:780;]: T_WHILE => while
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 827 with depth 3
			Process token 828 on line 150 []: T_WHITESPACE =>  
			Process token 829 on line 150 []: T_OPEN_PARENTHESIS => (
			Process token 830 on line 150 []: T_VARIABLE => $cond
			Process token 831 on line 150 []: T_CLOSE_PARENTHESIS => )
			Process token 832 on line 150 []: T_SEMICOLON => ;
			Process token 833 on line 150 []: T_WHITESPACE => \n
			Process token 834 on line 151 []: T_WHITESPACE =>         
			Process token 835 on line 151 []: T_BREAK => break
			Process token 836 on line 151 []: T_SEMICOLON => ;
			Process token 837 on line 151 []: T_WHITESPACE => \n
			Process token 838 on line 152 []: T_WHITESPACE =>         
			Process token 839 on line 152 []: T_DEFAULT => default
			=> Found new opening condition before scope opener for 827:T_WHILE, backtracking
		Process token 828 on line 150 [opener:780;]: T_WHITESPACE =>  
		Process token 829 on line 150 [opener:780;]: T_OPEN_PARENTHESIS => (
		Process token 830 on line 150 [opener:780;]: T_VARIABLE => $cond
		Process token 831 on line 150 [opener:780;]: T_CLOSE_PARENTHESIS => )
		Process token 832 on line 150 [opener:780;]: T_SEMICOLON => ;
		Process token 833 on line 150 [opener:780;]: T_WHITESPACE => \n
		Process token 834 on line 151 [opener:780;]: T_WHITESPACE =>         
		Process token 835 on line 151 [opener:780;]: T_BREAK => break
		=> Found scope closer (835:T_BREAK) for 777:T_CASE
		Process token 781 on line 143 [opener:669;]: T_WHITESPACE => \n
		Process token 782 on line 144 [opener:669;]: T_WHITESPACE =>             
		Process token 783 on line 144 [opener:669;]: T_DO => do
		* token is an opening condition *
		* already processed, skipping *
		Process token 826 on line 150 [opener:669;]: T_WHITESPACE =>  
		Process token 827 on line 150 [opener:669;]: T_WHILE => while
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 827 with depth 3
			Process token 828 on line 150 []: T_WHITESPACE =>  
			Process token 829 on line 150 []: T_OPEN_PARENTHESIS => (
			Process token 830 on line 150 []: T_VARIABLE => $cond
			Process token 831 on line 150 []: T_CLOSE_PARENTHESIS => )
			Process token 832 on line 150 []: T_SEMICOLON => ;
			Process token 833 on line 150 []: T_WHITESPACE => \n
			Process token 834 on line 151 []: T_WHITESPACE =>         
			Process token 835 on line 151 []: T_BREAK => break
			Process token 836 on line 151 []: T_SEMICOLON => ;
			Process token 837 on line 151 []: T_WHITESPACE => \n
			Process token 838 on line 152 []: T_WHITESPACE =>         
			Process token 839 on line 152 []: T_DEFAULT => default
			=> Found new opening condition before scope opener for 827:T_WHILE, backtracking
		Process token 828 on line 150 [opener:669;]: T_WHITESPACE =>  
		Process token 829 on line 150 [opener:669;]: T_OPEN_PARENTHESIS => (
		Process token 830 on line 150 [opener:669;]: T_VARIABLE => $cond
		Process token 831 on line 150 [opener:669;]: T_CLOSE_PARENTHESIS => )
		Process token 832 on line 150 [opener:669;]: T_SEMICOLON => ;
		Process token 833 on line 150 [opener:669;]: T_WHITESPACE => \n
		Process token 834 on line 151 [opener:669;]: T_WHITESPACE =>         
		Process token 835 on line 151 [opener:669;]: T_BREAK => break
		Process token 836 on line 151 [opener:669;]: T_SEMICOLON => ;
		Process token 837 on line 151 [opener:669;]: T_WHITESPACE => \n
		Process token 838 on line 152 [opener:669;]: T_WHITESPACE =>         
		Process token 839 on line 152 [opener:669;]: T_DEFAULT => default
		* token is an opening condition *
		* searching for opener *
		=> Begin scope map recursion at token 839 with depth 2
		Process token 840 on line 152 []: T_COLON => :
		=> Found scope opener for 839:T_DEFAULT
		Process token 841 on line 152 [opener:840;]: T_WHITESPACE => \n
		Process token 842 on line 153 [opener:840;]: T_WHITESPACE =>             
		Process token 843 on line 153 [opener:840;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 843 with depth 3
			Process token 844 on line 153 []: T_WHITESPACE =>  
			Process token 845 on line 153 []: T_OPEN_PARENTHESIS => (
			Process token 846 on line 153 []: T_VARIABLE => $condition
			Process token 847 on line 153 []: T_CLOSE_PARENTHESIS => )
			Process token 848 on line 153 []: T_WHITESPACE =>  
			Process token 849 on line 153 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 843:T_IF
			Process token 850 on line 153 [opener:849;]: T_WHITESPACE => \n
			Process token 851 on line 154 [opener:849;]: T_WHITESPACE =>             
			Process token 852 on line 154 [opener:849;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (852:T_CLOSE_CURLY_BRACKET) for 843:T_IF
		Process token 853 on line 154 [opener:840;]: T_WHITESPACE =>  
		Process token 854 on line 154 [opener:840;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 854 with depth 3
			Process token 855 on line 154 []: T_WHITESPACE =>  
			Process token 856 on line 154 []: T_IF => if
			=> Found new opening condition before scope opener for 854:T_ELSE, backtracking
		Process token 855 on line 154 [opener:840;]: T_WHITESPACE =>  
		Process token 856 on line 154 [opener:840;]: T_IF => if
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 856 with depth 3
			Process token 857 on line 154 []: T_WHITESPACE =>  
			Process token 858 on line 154 []: T_OPEN_PARENTHESIS => (
			Process token 859 on line 154 []: T_VARIABLE => $cond
			Process token 860 on line 154 []: T_CLOSE_PARENTHESIS => )
			Process token 861 on line 154 []: T_WHITESPACE =>  
			Process token 862 on line 154 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 856:T_IF
			Process token 863 on line 154 [opener:862;]: T_WHITESPACE => \n
			Process token 864 on line 155 [opener:862;]: T_WHITESPACE =>             
			Process token 865 on line 155 [opener:862;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (865:T_CLOSE_CURLY_BRACKET) for 856:T_IF
		Process token 866 on line 155 [opener:840;]: T_WHITESPACE => \n
		Process token 867 on line 156 [opener:840;]: T_WHITESPACE =>         
		Process token 868 on line 156 [opener:840;]: T_BREAK => break
		=> Found scope closer (868:T_BREAK) for 839:T_DEFAULT
		Process token 841 on line 152 [opener:669;]: T_WHITESPACE => \n
		Process token 842 on line 153 [opener:669;]: T_WHITESPACE =>             
		Process token 843 on line 153 [opener:669;]: T_IF => if
		* token is an opening condition *
		* already processed, skipping *
		Process token 853 on line 154 [opener:669;]: T_WHITESPACE =>  
		Process token 854 on line 154 [opener:669;]: T_ELSE => else
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 854 with depth 3
			Process token 855 on line 154 []: T_WHITESPACE =>  
			Process token 856 on line 154 []: T_IF => if
			=> Found new opening condition before scope opener for 854:T_ELSE, backtracking
		Process token 855 on line 154 [opener:669;]: T_WHITESPACE =>  
		Process token 856 on line 154 [opener:669;]: T_IF => if
		* token is an opening condition *
		* already processed, skipping *
		Process token 866 on line 155 [opener:669;]: T_WHITESPACE => \n
		Process token 867 on line 156 [opener:669;]: T_WHITESPACE =>         
		Process token 868 on line 156 [opener:669;]: T_BREAK => break
		Process token 869 on line 156 [opener:669;]: T_SEMICOLON => ;
		Process token 870 on line 156 [opener:669;]: T_WHITESPACE => \n
		Process token 871 on line 157 [opener:669;]: T_WHITESPACE =>     
		Process token 872 on line 157 [opener:669;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (872:T_CLOSE_CURLY_BRACKET) for 663:T_SWITCH
	Process token 873 on line 157 [opener:618;]: T_WHITESPACE => \n
	Process token 874 on line 158 [opener:618;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (874:T_CLOSE_CURLY_BRACKET) for 612:T_FUNCTION
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:5;lvl:0;]: T_OPEN_TAG => <?php\n
	Process token 1 on line 2 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 2 on line 3 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 3 on line 3 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 4 on line 3 [col:10;len:13;lvl:0;]: T_STRING => complexityOne
	Process token 5 on line 3 [col:23;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 6 on line 3 [col:24;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 7 on line 3 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 8 on line 3 [col:26;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 2:T_FUNCTION
		* level increased *
		* token 2:T_FUNCTION added to conditions array *
		Process token 9 on line 3 [col:27;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 10 on line 3 [col:28;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 8:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 11 on line 3 [col:29;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 12 on line 4 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 13 on line 5 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 14 on line 5 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 15 on line 5 [col:10;len:13;lvl:0;]: T_STRING => comlexityFive
	Process token 16 on line 5 [col:23;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 17 on line 5 [col:24;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 18 on line 5 [col:25;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 19 on line 6 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 13:T_FUNCTION
		* level increased *
		* token 13:T_FUNCTION added to conditions array *
		Process token 20 on line 6 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 21 on line 7 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 22 on line 7 [col:5;len:2;lvl:1;conds;T_FUNCTION;]: T_IF => if
		Process token 23 on line 7 [col:7;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 24 on line 7 [col:8;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 25 on line 7 [col:9;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $condition
		Process token 26 on line 7 [col:19;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 27 on line 7 [col:20;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 28 on line 7 [col:21;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 22:T_IF
			* level increased *
			* token 22:T_IF added to conditions array *
			Process token 29 on line 7 [col:22;len:0;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE => \n
			Process token 30 on line 8 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_IF;]: T_WHITESPACE =>     
			Process token 31 on line 8 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 28:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 32 on line 8 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 33 on line 9 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 34 on line 10 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 35 on line 10 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_SWITCH => switch
		Process token 36 on line 10 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 37 on line 10 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 38 on line 10 [col:13;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $condition
		Process token 39 on line 10 [col:23;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 40 on line 10 [col:24;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 41 on line 10 [col:25;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 35:T_SWITCH
			* level increased *
			* token 35:T_SWITCH added to conditions array *
			Process token 42 on line 10 [col:26;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 43 on line 11 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 44 on line 11 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 45 on line 11 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 46 on line 11 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '1'
			Process token 47 on line 11 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 44:T_CASE
				* level increased *
				* token 44:T_CASE added to conditions array *
				Process token 48 on line 11 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 49 on line 12 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 50 on line 12 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 47:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 51 on line 12 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 52 on line 12 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 53 on line 13 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 54 on line 13 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 55 on line 13 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 56 on line 13 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '2'
			Process token 57 on line 13 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 54:T_CASE
				* level increased *
				* token 54:T_CASE added to conditions array *
				Process token 58 on line 13 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 59 on line 14 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 60 on line 14 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 57:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 61 on line 14 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 62 on line 14 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 63 on line 15 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 64 on line 15 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 65 on line 15 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 66 on line 15 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '3'
			Process token 67 on line 15 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 64:T_CASE
				* level increased *
				* token 64:T_CASE added to conditions array *
				Process token 68 on line 15 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 69 on line 16 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 70 on line 16 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 67:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 71 on line 16 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 72 on line 16 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 73 on line 17 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>     
			Process token 74 on line 17 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 41:T_OPEN_CURLY_BRACKET
			* token T_SWITCH removed from conditions array *
			* level decreased *
		Process token 75 on line 17 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 76 on line 18 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 19:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 77 on line 18 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 78 on line 19 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 79 on line 20 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 80 on line 20 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 81 on line 20 [col:10;len:12;lvl:0;]: T_STRING => comlexityTen
	Process token 82 on line 20 [col:22;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 83 on line 20 [col:23;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 84 on line 20 [col:24;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 85 on line 21 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 79:T_FUNCTION
		* level increased *
		* token 79:T_FUNCTION added to conditions array *
		Process token 86 on line 21 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 87 on line 22 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 88 on line 22 [col:5;len:5;lvl:1;conds;T_FUNCTION;]: T_WHILE => while
		Process token 89 on line 22 [col:10;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 90 on line 22 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 91 on line 22 [col:12;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $condition
		Process token 92 on line 22 [col:22;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 93 on line 22 [col:23;len:3;lvl:1;conds;T_FUNCTION;]: T_IS_IDENTICAL => ===
		Process token 94 on line 22 [col:26;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 95 on line 22 [col:27;len:4;lvl:1;conds;T_FUNCTION;]: T_TRUE => true
		Process token 96 on line 22 [col:31;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 97 on line 22 [col:32;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 98 on line 22 [col:33;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 88:T_WHILE
			* level increased *
			* token 88:T_WHILE added to conditions array *
			Process token 99 on line 22 [col:34;len:0;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE => \n
			Process token 100 on line 23 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>         
			Process token 101 on line 23 [col:9;len:2;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_IF => if
			Process token 102 on line 23 [col:11;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 103 on line 23 [col:12;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_PARENTHESIS => (
			Process token 104 on line 23 [col:13;len:10;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_VARIABLE => $condition
			Process token 105 on line 23 [col:23;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_CLOSE_PARENTHESIS => )
			Process token 106 on line 23 [col:24;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 107 on line 23 [col:25;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 101:T_IF
				* level increased *
				* token 101:T_IF added to conditions array *
				Process token 108 on line 23 [col:26;len:0;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE => \n
				Process token 109 on line 24 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE =>         
				Process token 110 on line 24 [col:9;len:1;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 107:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 111 on line 24 [col:10;len:0;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE => \n
			Process token 112 on line 25 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>     
			Process token 113 on line 25 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 98:T_OPEN_CURLY_BRACKET
			* token T_WHILE removed from conditions array *
			* level decreased *
		Process token 114 on line 25 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 115 on line 26 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 116 on line 27 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 117 on line 27 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_SWITCH => switch
		Process token 118 on line 27 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 119 on line 27 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 120 on line 27 [col:13;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $condition
		Process token 121 on line 27 [col:23;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 122 on line 27 [col:24;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 123 on line 27 [col:25;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 117:T_SWITCH
			* level increased *
			* token 117:T_SWITCH added to conditions array *
			Process token 124 on line 27 [col:26;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 125 on line 28 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 126 on line 28 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 127 on line 28 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 128 on line 28 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '1'
			Process token 129 on line 28 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 126:T_CASE
				* level increased *
				* token 126:T_CASE added to conditions array *
				Process token 130 on line 28 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 131 on line 29 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 132 on line 29 [col:13;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_IF => if
				Process token 133 on line 29 [col:15;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 134 on line 29 [col:16;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 135 on line 29 [col:17;len:10;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $condition
				Process token 136 on line 29 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 137 on line 29 [col:28;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 138 on line 29 [col:29;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 132:T_IF
					* level increased *
					* token 132:T_IF added to conditions array *
					Process token 139 on line 29 [col:30;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
					Process token 140 on line 30 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
					Process token 141 on line 30 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 138:T_OPEN_CURLY_BRACKET
					* token T_IF removed from conditions array *
					* level decreased *
				Process token 142 on line 30 [col:14;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 143 on line 30 [col:15;len:4;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_ELSE => else
				Process token 144 on line 30 [col:19;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 145 on line 30 [col:20;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_IF => if
				Process token 146 on line 30 [col:22;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 147 on line 30 [col:23;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 148 on line 30 [col:24;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $cond
				Process token 149 on line 30 [col:29;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 150 on line 30 [col:30;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 151 on line 30 [col:31;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 145:T_IF
					* level increased *
					* token 145:T_IF added to conditions array *
					Process token 152 on line 30 [col:32;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
					Process token 153 on line 31 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
					Process token 154 on line 31 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 151:T_OPEN_CURLY_BRACKET
					* token T_IF removed from conditions array *
					* level decreased *
				Process token 155 on line 31 [col:14;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 156 on line 32 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 157 on line 32 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 129:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 158 on line 32 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 159 on line 32 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 160 on line 33 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 161 on line 33 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 162 on line 33 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 163 on line 33 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '2'
			Process token 164 on line 33 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 161:T_CASE
				* level increased *
				* token 161:T_CASE added to conditions array *
				Process token 165 on line 33 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 166 on line 34 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 167 on line 34 [col:13;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHILE => while
				Process token 168 on line 34 [col:18;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 169 on line 34 [col:19;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 170 on line 34 [col:20;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $cond
				Process token 171 on line 34 [col:25;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 172 on line 34 [col:26;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 173 on line 34 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 167:T_WHILE
					* level increased *
					* token 167:T_WHILE added to conditions array *
					Process token 174 on line 34 [col:28;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE => \n
					Process token 175 on line 35 [col:1;len:16;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE =>                 
					Process token 176 on line 35 [col:17;len:4;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_ECHO => echo
					Process token 177 on line 35 [col:21;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE =>  
					Process token 178 on line 35 [col:22;len:4;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
					Process token 179 on line 35 [col:26;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_SEMICOLON => ;
					Process token 180 on line 35 [col:27;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE => \n
					Process token 181 on line 36 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE =>             
					Process token 182 on line 36 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 173:T_OPEN_CURLY_BRACKET
					* token T_WHILE removed from conditions array *
					* level decreased *
				Process token 183 on line 36 [col:14;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 184 on line 37 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 185 on line 37 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 164:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 186 on line 37 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 187 on line 37 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 188 on line 38 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 189 on line 38 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 190 on line 38 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 191 on line 38 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '3'
			Process token 192 on line 38 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 189:T_CASE
				* level increased *
				* token 189:T_CASE added to conditions array *
				Process token 193 on line 38 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 194 on line 39 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 195 on line 39 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 192:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 196 on line 39 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 197 on line 39 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 198 on line 40 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 199 on line 40 [col:9;len:7;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_DEFAULT => default
			Process token 200 on line 40 [col:16;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 199:T_DEFAULT
				* level increased *
				* token 199:T_DEFAULT added to conditions array *
				Process token 201 on line 40 [col:17;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
				Process token 202 on line 41 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
				Process token 203 on line 41 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_BREAK => break
				=> Found scope closer for 200:T_COLON
				* token T_DEFAULT removed from conditions array *
				* level decreased *
			Process token 204 on line 41 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 205 on line 41 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 206 on line 42 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>     
			Process token 207 on line 42 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 123:T_OPEN_CURLY_BRACKET
			* token T_SWITCH removed from conditions array *
			* level decreased *
		Process token 208 on line 42 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 209 on line 43 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 85:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 210 on line 43 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 211 on line 44 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 212 on line 45 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 213 on line 45 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 214 on line 45 [col:10;len:15;lvl:0;]: T_STRING => comlexityEleven
	Process token 215 on line 45 [col:25;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 216 on line 45 [col:26;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 217 on line 45 [col:27;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 218 on line 46 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 212:T_FUNCTION
		* level increased *
		* token 212:T_FUNCTION added to conditions array *
		Process token 219 on line 46 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 220 on line 47 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 221 on line 47 [col:5;len:5;lvl:1;conds;T_FUNCTION;]: T_WHILE => while
		Process token 222 on line 47 [col:10;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 223 on line 47 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 224 on line 47 [col:12;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $condition
		Process token 225 on line 47 [col:22;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 226 on line 47 [col:23;len:3;lvl:1;conds;T_FUNCTION;]: T_IS_IDENTICAL => ===
		Process token 227 on line 47 [col:26;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 228 on line 47 [col:27;len:4;lvl:1;conds;T_FUNCTION;]: T_TRUE => true
		Process token 229 on line 47 [col:31;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 230 on line 47 [col:32;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 231 on line 47 [col:33;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 221:T_WHILE
			* level increased *
			* token 221:T_WHILE added to conditions array *
			Process token 232 on line 47 [col:34;len:0;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE => \n
			Process token 233 on line 48 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>         
			Process token 234 on line 48 [col:9;len:2;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_IF => if
			Process token 235 on line 48 [col:11;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 236 on line 48 [col:12;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_PARENTHESIS => (
			Process token 237 on line 48 [col:13;len:10;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_VARIABLE => $condition
			Process token 238 on line 48 [col:23;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_CLOSE_PARENTHESIS => )
			Process token 239 on line 48 [col:24;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 240 on line 48 [col:25;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 234:T_IF
				* level increased *
				* token 234:T_IF added to conditions array *
				Process token 241 on line 48 [col:26;len:0;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE => \n
				Process token 242 on line 49 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE =>         
				Process token 243 on line 49 [col:9;len:1;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 240:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 244 on line 49 [col:10;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 245 on line 49 [col:11;len:4;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_ELSE => else
			Process token 246 on line 49 [col:15;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 247 on line 49 [col:16;len:2;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_IF => if
			Process token 248 on line 49 [col:18;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 249 on line 49 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_PARENTHESIS => (
			Process token 250 on line 49 [col:20;len:5;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_VARIABLE => $cond
			Process token 251 on line 49 [col:25;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_CLOSE_PARENTHESIS => )
			Process token 252 on line 49 [col:26;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 253 on line 49 [col:27;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 247:T_IF
				* level increased *
				* token 247:T_IF added to conditions array *
				Process token 254 on line 49 [col:28;len:0;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE => \n
				Process token 255 on line 50 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE =>         
				Process token 256 on line 50 [col:9;len:1;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 253:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 257 on line 50 [col:10;len:0;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE => \n
			Process token 258 on line 51 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>     
			Process token 259 on line 51 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 231:T_OPEN_CURLY_BRACKET
			* token T_WHILE removed from conditions array *
			* level decreased *
		Process token 260 on line 51 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 261 on line 52 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 262 on line 53 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 263 on line 53 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_SWITCH => switch
		Process token 264 on line 53 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 265 on line 53 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 266 on line 53 [col:13;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $condition
		Process token 267 on line 53 [col:23;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 268 on line 53 [col:24;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 269 on line 53 [col:25;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 263:T_SWITCH
			* level increased *
			* token 263:T_SWITCH added to conditions array *
			Process token 270 on line 53 [col:26;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 271 on line 54 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 272 on line 54 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 273 on line 54 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 274 on line 54 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '1'
			Process token 275 on line 54 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 272:T_CASE
				* level increased *
				* token 272:T_CASE added to conditions array *
				Process token 276 on line 54 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 277 on line 55 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 278 on line 55 [col:13;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_IF => if
				Process token 279 on line 55 [col:15;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 280 on line 55 [col:16;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 281 on line 55 [col:17;len:10;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $condition
				Process token 282 on line 55 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 283 on line 55 [col:28;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 284 on line 55 [col:29;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 278:T_IF
					* level increased *
					* token 278:T_IF added to conditions array *
					Process token 285 on line 55 [col:30;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
					Process token 286 on line 56 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
					Process token 287 on line 56 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 284:T_OPEN_CURLY_BRACKET
					* token T_IF removed from conditions array *
					* level decreased *
				Process token 288 on line 56 [col:14;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 289 on line 56 [col:15;len:4;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_ELSE => else
				Process token 290 on line 56 [col:19;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 291 on line 56 [col:20;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_IF => if
				Process token 292 on line 56 [col:22;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 293 on line 56 [col:23;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 294 on line 56 [col:24;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $cond
				Process token 295 on line 56 [col:29;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 296 on line 56 [col:30;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 297 on line 56 [col:31;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 291:T_IF
					* level increased *
					* token 291:T_IF added to conditions array *
					Process token 298 on line 56 [col:32;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
					Process token 299 on line 57 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
					Process token 300 on line 57 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 297:T_OPEN_CURLY_BRACKET
					* token T_IF removed from conditions array *
					* level decreased *
				Process token 301 on line 57 [col:14;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 302 on line 58 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 303 on line 58 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 275:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 304 on line 58 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 305 on line 58 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 306 on line 59 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 307 on line 59 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 308 on line 59 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 309 on line 59 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '2'
			Process token 310 on line 59 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 307:T_CASE
				* level increased *
				* token 307:T_CASE added to conditions array *
				Process token 311 on line 59 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 312 on line 60 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 313 on line 60 [col:13;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHILE => while
				Process token 314 on line 60 [col:18;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 315 on line 60 [col:19;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 316 on line 60 [col:20;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $cond
				Process token 317 on line 60 [col:25;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 318 on line 60 [col:26;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 319 on line 60 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 313:T_WHILE
					* level increased *
					* token 313:T_WHILE added to conditions array *
					Process token 320 on line 60 [col:28;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE => \n
					Process token 321 on line 61 [col:1;len:16;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE =>                 
					Process token 322 on line 61 [col:17;len:4;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_ECHO => echo
					Process token 323 on line 61 [col:21;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE =>  
					Process token 324 on line 61 [col:22;len:4;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
					Process token 325 on line 61 [col:26;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_SEMICOLON => ;
					Process token 326 on line 61 [col:27;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE => \n
					Process token 327 on line 62 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE =>             
					Process token 328 on line 62 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 319:T_OPEN_CURLY_BRACKET
					* token T_WHILE removed from conditions array *
					* level decreased *
				Process token 329 on line 62 [col:14;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 330 on line 63 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 331 on line 63 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 310:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 332 on line 63 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 333 on line 63 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 334 on line 64 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 335 on line 64 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 336 on line 64 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 337 on line 64 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '3'
			Process token 338 on line 64 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 335:T_CASE
				* level increased *
				* token 335:T_CASE added to conditions array *
				Process token 339 on line 64 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 340 on line 65 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 341 on line 65 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 338:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 342 on line 65 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 343 on line 65 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 344 on line 66 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 345 on line 66 [col:9;len:7;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_DEFAULT => default
			Process token 346 on line 66 [col:16;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 345:T_DEFAULT
				* level increased *
				* token 345:T_DEFAULT added to conditions array *
				Process token 347 on line 66 [col:17;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
				Process token 348 on line 67 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
				Process token 349 on line 67 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_BREAK => break
				=> Found scope closer for 346:T_COLON
				* token T_DEFAULT removed from conditions array *
				* level decreased *
			Process token 350 on line 67 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 351 on line 67 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 352 on line 68 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>     
			Process token 353 on line 68 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 269:T_OPEN_CURLY_BRACKET
			* token T_SWITCH removed from conditions array *
			* level decreased *
		Process token 354 on line 68 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 355 on line 69 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 218:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 356 on line 69 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 357 on line 70 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 358 on line 71 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 359 on line 72 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 360 on line 72 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 361 on line 72 [col:10;len:15;lvl:0;]: T_STRING => comlexityTwenty
	Process token 362 on line 72 [col:25;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 363 on line 72 [col:26;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 364 on line 72 [col:27;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 365 on line 73 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 359:T_FUNCTION
		* level increased *
		* token 359:T_FUNCTION added to conditions array *
		Process token 366 on line 73 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 367 on line 74 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 368 on line 74 [col:5;len:5;lvl:1;conds;T_FUNCTION;]: T_WHILE => while
		Process token 369 on line 74 [col:10;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 370 on line 74 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 371 on line 74 [col:12;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $condition
		Process token 372 on line 74 [col:22;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 373 on line 74 [col:23;len:3;lvl:1;conds;T_FUNCTION;]: T_IS_IDENTICAL => ===
		Process token 374 on line 74 [col:26;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 375 on line 74 [col:27;len:4;lvl:1;conds;T_FUNCTION;]: T_TRUE => true
		Process token 376 on line 74 [col:31;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 377 on line 74 [col:32;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 378 on line 74 [col:33;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 368:T_WHILE
			* level increased *
			* token 368:T_WHILE added to conditions array *
			Process token 379 on line 74 [col:34;len:0;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE => \n
			Process token 380 on line 75 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>         
			Process token 381 on line 75 [col:9;len:2;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_IF => if
			Process token 382 on line 75 [col:11;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 383 on line 75 [col:12;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_PARENTHESIS => (
			Process token 384 on line 75 [col:13;len:10;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_VARIABLE => $condition
			Process token 385 on line 75 [col:23;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_CLOSE_PARENTHESIS => )
			Process token 386 on line 75 [col:24;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 387 on line 75 [col:25;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 381:T_IF
				* level increased *
				* token 381:T_IF added to conditions array *
				Process token 388 on line 75 [col:26;len:0;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE => \n
				Process token 389 on line 76 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE =>         
				Process token 390 on line 76 [col:9;len:1;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 387:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 391 on line 76 [col:10;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 392 on line 76 [col:11;len:4;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_ELSE => else
			Process token 393 on line 76 [col:15;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 394 on line 76 [col:16;len:2;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_IF => if
			Process token 395 on line 76 [col:18;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 396 on line 76 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_PARENTHESIS => (
			Process token 397 on line 76 [col:20;len:5;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_VARIABLE => $cond
			Process token 398 on line 76 [col:25;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_CLOSE_PARENTHESIS => )
			Process token 399 on line 76 [col:26;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 400 on line 76 [col:27;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 394:T_IF
				* level increased *
				* token 394:T_IF added to conditions array *
				Process token 401 on line 76 [col:28;len:0;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE => \n
				Process token 402 on line 77 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE =>         
				Process token 403 on line 77 [col:9;len:1;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 400:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 404 on line 77 [col:10;len:0;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE => \n
			Process token 405 on line 78 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>     
			Process token 406 on line 78 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 378:T_OPEN_CURLY_BRACKET
			* token T_WHILE removed from conditions array *
			* level decreased *
		Process token 407 on line 78 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 408 on line 79 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 409 on line 80 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 410 on line 80 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_SWITCH => switch
		Process token 411 on line 80 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 412 on line 80 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 413 on line 80 [col:13;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $condition
		Process token 414 on line 80 [col:23;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 415 on line 80 [col:24;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 416 on line 80 [col:25;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 410:T_SWITCH
			* level increased *
			* token 410:T_SWITCH added to conditions array *
			Process token 417 on line 80 [col:26;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 418 on line 81 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 419 on line 81 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 420 on line 81 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 421 on line 81 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '1'
			Process token 422 on line 81 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 419:T_CASE
				* level increased *
				* token 419:T_CASE added to conditions array *
				Process token 423 on line 81 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 424 on line 82 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 425 on line 82 [col:13;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_IF => if
				Process token 426 on line 82 [col:15;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 427 on line 82 [col:16;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 428 on line 82 [col:17;len:10;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $condition
				Process token 429 on line 82 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 430 on line 82 [col:28;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 431 on line 82 [col:29;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 425:T_IF
					* level increased *
					* token 425:T_IF added to conditions array *
					Process token 432 on line 82 [col:30;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
					Process token 433 on line 83 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
					Process token 434 on line 83 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 431:T_OPEN_CURLY_BRACKET
					* token T_IF removed from conditions array *
					* level decreased *
				Process token 435 on line 83 [col:14;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 436 on line 83 [col:15;len:4;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_ELSE => else
				Process token 437 on line 83 [col:19;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 438 on line 83 [col:20;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_IF => if
				Process token 439 on line 83 [col:22;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 440 on line 83 [col:23;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 441 on line 83 [col:24;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $cond
				Process token 442 on line 83 [col:29;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 443 on line 83 [col:30;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 444 on line 83 [col:31;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 438:T_IF
					* level increased *
					* token 438:T_IF added to conditions array *
					Process token 445 on line 83 [col:32;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
					Process token 446 on line 84 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
					Process token 447 on line 84 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 444:T_OPEN_CURLY_BRACKET
					* token T_IF removed from conditions array *
					* level decreased *
				Process token 448 on line 84 [col:14;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 449 on line 85 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 450 on line 85 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 422:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 451 on line 85 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 452 on line 85 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 453 on line 86 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 454 on line 86 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 455 on line 86 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 456 on line 86 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '2'
			Process token 457 on line 86 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 454:T_CASE
				* level increased *
				* token 454:T_CASE added to conditions array *
				Process token 458 on line 86 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 459 on line 87 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 460 on line 87 [col:13;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHILE => while
				Process token 461 on line 87 [col:18;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 462 on line 87 [col:19;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 463 on line 87 [col:20;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $cond
				Process token 464 on line 87 [col:25;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 465 on line 87 [col:26;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 466 on line 87 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 460:T_WHILE
					* level increased *
					* token 460:T_WHILE added to conditions array *
					Process token 467 on line 87 [col:28;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE => \n
					Process token 468 on line 88 [col:1;len:16;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE =>                 
					Process token 469 on line 88 [col:17;len:4;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_ECHO => echo
					Process token 470 on line 88 [col:21;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE =>  
					Process token 471 on line 88 [col:22;len:4;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
					Process token 472 on line 88 [col:26;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_SEMICOLON => ;
					Process token 473 on line 88 [col:27;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE => \n
					Process token 474 on line 89 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE =>             
					Process token 475 on line 89 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 466:T_OPEN_CURLY_BRACKET
					* token T_WHILE removed from conditions array *
					* level decreased *
				Process token 476 on line 89 [col:14;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 477 on line 90 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 478 on line 90 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 457:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 479 on line 90 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 480 on line 90 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 481 on line 91 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 482 on line 91 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 483 on line 91 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 484 on line 91 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '3'
			Process token 485 on line 91 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 482:T_CASE
				* level increased *
				* token 482:T_CASE added to conditions array *
				Process token 486 on line 91 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 487 on line 92 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 488 on line 92 [col:13;len:6;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_SWITCH => switch
				Process token 489 on line 92 [col:19;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 490 on line 92 [col:20;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 491 on line 92 [col:21;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $cond
				Process token 492 on line 92 [col:26;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 493 on line 92 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 494 on line 92 [col:28;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 488:T_SWITCH
					* level increased *
					* token 488:T_SWITCH added to conditions array *
					Process token 495 on line 92 [col:29;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE => \n
					Process token 496 on line 93 [col:1;len:16;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE =>                 
					Process token 497 on line 93 [col:17;len:4;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_CASE => case
					Process token 498 on line 93 [col:21;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE =>  
					Process token 499 on line 93 [col:22;len:3;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '1'
					Process token 500 on line 93 [col:25;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_COLON => :
					=> Found scope opener for 497:T_CASE
						* level increased *
						* token 497:T_CASE added to conditions array *
						Process token 501 on line 93 [col:26;len:0;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
						Process token 502 on line 94 [col:1;len:16;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH,T_CASE;]: T_WHITESPACE =>                 
						Process token 503 on line 94 [col:17;len:5;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH,T_CASE;]: T_BREAK => break
						=> Found scope closer for 500:T_COLON
						* token T_CASE removed from conditions array *
						* level decreased *
					Process token 504 on line 94 [col:22;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_SEMICOLON => ;
					Process token 505 on line 94 [col:23;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE => \n
					Process token 506 on line 95 [col:1;len:16;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE =>                 
					Process token 507 on line 95 [col:17;len:4;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_CASE => case
					Process token 508 on line 95 [col:21;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE =>  
					Process token 509 on line 95 [col:22;len:3;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '2'
					Process token 510 on line 95 [col:25;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_COLON => :
					=> Found scope opener for 507:T_CASE
						* level increased *
						* token 507:T_CASE added to conditions array *
						Process token 511 on line 95 [col:26;len:0;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
						Process token 512 on line 96 [col:1;len:16;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH,T_CASE;]: T_WHITESPACE =>                 
						Process token 513 on line 96 [col:17;len:5;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH,T_CASE;]: T_BREAK => break
						=> Found scope closer for 510:T_COLON
						* token T_CASE removed from conditions array *
						* level decreased *
					Process token 514 on line 96 [col:22;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_SEMICOLON => ;
					Process token 515 on line 96 [col:23;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE => \n
					Process token 516 on line 97 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE =>             
					Process token 517 on line 97 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 494:T_OPEN_CURLY_BRACKET
					* token T_SWITCH removed from conditions array *
					* level decreased *
				Process token 518 on line 97 [col:14;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 519 on line 98 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 520 on line 98 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 485:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 521 on line 98 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 522 on line 98 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 523 on line 99 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 524 on line 99 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 525 on line 99 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 526 on line 99 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '4'
			Process token 527 on line 99 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 524:T_CASE
				* level increased *
				* token 524:T_CASE added to conditions array *
				Process token 528 on line 99 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 529 on line 100 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 530 on line 100 [col:13;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_DO => do
				Process token 531 on line 100 [col:15;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 532 on line 100 [col:16;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 530:T_DO
					* level increased *
					* token 530:T_DO added to conditions array *
					Process token 533 on line 100 [col:17;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE => \n
					Process token 534 on line 101 [col:1;len:16;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE =>                 
					Process token 535 on line 101 [col:17;len:2;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_IF => if
					Process token 536 on line 101 [col:19;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE =>  
					Process token 537 on line 101 [col:20;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_OPEN_PARENTHESIS => (
					Process token 538 on line 101 [col:21;len:10;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_VARIABLE => $condition
					Process token 539 on line 101 [col:31;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_CLOSE_PARENTHESIS => )
					Process token 540 on line 101 [col:32;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE =>  
					Process token 541 on line 101 [col:33;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_OPEN_CURLY_BRACKET => {
					=> Found scope opener for 535:T_IF
						* level increased *
						* token 535:T_IF added to conditions array *
						Process token 542 on line 101 [col:34;len:0;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE => \n
						Process token 543 on line 102 [col:1;len:20;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>                     
						Process token 544 on line 102 [col:21;len:2;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_IF => if
						Process token 545 on line 102 [col:23;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>  
						Process token 546 on line 102 [col:24;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_OPEN_PARENTHESIS => (
						Process token 547 on line 102 [col:25;len:5;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_VARIABLE => $cond
						Process token 548 on line 102 [col:30;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_CLOSE_PARENTHESIS => )
						Process token 549 on line 102 [col:31;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>  
						Process token 550 on line 102 [col:32;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_OPEN_CURLY_BRACKET => {
						=> Found scope opener for 544:T_IF
							* level increased *
							* token 544:T_IF added to conditions array *
							Process token 551 on line 102 [col:33;len:0;lvl:6;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF,T_IF;]: T_WHITESPACE => \n
							Process token 552 on line 103 [col:1;len:20;lvl:6;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF,T_IF;]: T_WHITESPACE =>                     
							Process token 553 on line 103 [col:21;len:1;lvl:6;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF,T_IF;]: T_CLOSE_CURLY_BRACKET => }
							=> Found scope closer for 550:T_OPEN_CURLY_BRACKET
							* token T_IF removed from conditions array *
							* level decreased *
						Process token 554 on line 103 [col:22;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>  
						Process token 555 on line 103 [col:23;len:4;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_ELSE => else
						Process token 556 on line 103 [col:27;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>  
						Process token 557 on line 103 [col:28;len:2;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_IF => if
						Process token 558 on line 103 [col:30;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>  
						Process token 559 on line 103 [col:31;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_OPEN_PARENTHESIS => (
						Process token 560 on line 103 [col:32;len:4;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_VARIABLE => $con
						Process token 561 on line 103 [col:36;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_CLOSE_PARENTHESIS => )
						Process token 562 on line 103 [col:37;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>  
						Process token 563 on line 103 [col:38;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_OPEN_CURLY_BRACKET => {
						=> Found scope opener for 557:T_IF
							* level increased *
							* token 557:T_IF added to conditions array *
							Process token 564 on line 103 [col:39;len:0;lvl:6;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF,T_IF;]: T_WHITESPACE => \n
							Process token 565 on line 104 [col:1;len:20;lvl:6;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF,T_IF;]: T_WHITESPACE =>                     
							Process token 566 on line 104 [col:21;len:1;lvl:6;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF,T_IF;]: T_CLOSE_CURLY_BRACKET => }
							=> Found scope closer for 563:T_OPEN_CURLY_BRACKET
							* token T_IF removed from conditions array *
							* level decreased *
						Process token 567 on line 104 [col:22;len:0;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE => \n
						Process token 568 on line 105 [col:1;len:16;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>                 
						Process token 569 on line 105 [col:17;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_CLOSE_CURLY_BRACKET => }
						=> Found scope closer for 541:T_OPEN_CURLY_BRACKET
						* token T_IF removed from conditions array *
						* level decreased *
					Process token 570 on line 105 [col:18;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE => \n
					Process token 571 on line 106 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE =>             
					Process token 572 on line 106 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 532:T_OPEN_CURLY_BRACKET
					* token T_DO removed from conditions array *
					* level decreased *
				Process token 573 on line 106 [col:14;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 574 on line 106 [col:15;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHILE => while
				Process token 575 on line 106 [col:20;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 576 on line 106 [col:21;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 577 on line 106 [col:22;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $cond
				Process token 578 on line 106 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 579 on line 106 [col:28;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_SEMICOLON => ;
				Process token 580 on line 106 [col:29;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 581 on line 107 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 582 on line 107 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 527:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 583 on line 107 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 584 on line 107 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 585 on line 108 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 586 on line 108 [col:9;len:7;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_DEFAULT => default
			Process token 587 on line 108 [col:16;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 586:T_DEFAULT
				* level increased *
				* token 586:T_DEFAULT added to conditions array *
				Process token 588 on line 108 [col:17;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
				Process token 589 on line 109 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>             
				Process token 590 on line 109 [col:13;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_IF => if
				Process token 591 on line 109 [col:15;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
				Process token 592 on line 109 [col:16;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_OPEN_PARENTHESIS => (
				Process token 593 on line 109 [col:17;len:10;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_VARIABLE => $condition
				Process token 594 on line 109 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_CLOSE_PARENTHESIS => )
				Process token 595 on line 109 [col:28;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
				Process token 596 on line 109 [col:29;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 590:T_IF
					* level increased *
					* token 590:T_IF added to conditions array *
					Process token 597 on line 109 [col:30;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE => \n
					Process token 598 on line 110 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>             
					Process token 599 on line 110 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_DEFAULT,T_IF;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 596:T_OPEN_CURLY_BRACKET
					* token T_IF removed from conditions array *
					* level decreased *
				Process token 600 on line 110 [col:14;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
				Process token 601 on line 111 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
				Process token 602 on line 111 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_BREAK => break
				=> Found scope closer for 587:T_COLON
				* token T_DEFAULT removed from conditions array *
				* level decreased *
			Process token 603 on line 111 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 604 on line 111 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 605 on line 112 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>     
			Process token 606 on line 112 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 416:T_OPEN_CURLY_BRACKET
			* token T_SWITCH removed from conditions array *
			* level decreased *
		Process token 607 on line 112 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 608 on line 113 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 365:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 609 on line 113 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 610 on line 114 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 611 on line 115 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 612 on line 116 [col:1;len:8;lvl:0;]: T_FUNCTION => function
	Process token 613 on line 116 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 614 on line 116 [col:10;len:18;lvl:0;]: T_STRING => comlexityTwentyOne
	Process token 615 on line 116 [col:28;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 616 on line 116 [col:29;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 617 on line 116 [col:30;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 618 on line 117 [col:1;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 612:T_FUNCTION
		* level increased *
		* token 612:T_FUNCTION added to conditions array *
		Process token 619 on line 117 [col:2;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 620 on line 118 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 621 on line 118 [col:5;len:5;lvl:1;conds;T_FUNCTION;]: T_WHILE => while
		Process token 622 on line 118 [col:10;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 623 on line 118 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 624 on line 118 [col:12;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $condition
		Process token 625 on line 118 [col:22;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 626 on line 118 [col:23;len:3;lvl:1;conds;T_FUNCTION;]: T_IS_IDENTICAL => ===
		Process token 627 on line 118 [col:26;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 628 on line 118 [col:27;len:4;lvl:1;conds;T_FUNCTION;]: T_TRUE => true
		Process token 629 on line 118 [col:31;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 630 on line 118 [col:32;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 631 on line 118 [col:33;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 621:T_WHILE
			* level increased *
			* token 621:T_WHILE added to conditions array *
			Process token 632 on line 118 [col:34;len:0;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE => \n
			Process token 633 on line 119 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>         
			Process token 634 on line 119 [col:9;len:2;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_IF => if
			Process token 635 on line 119 [col:11;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 636 on line 119 [col:12;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_PARENTHESIS => (
			Process token 637 on line 119 [col:13;len:10;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_VARIABLE => $condition
			Process token 638 on line 119 [col:23;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_CLOSE_PARENTHESIS => )
			Process token 639 on line 119 [col:24;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 640 on line 119 [col:25;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 634:T_IF
				* level increased *
				* token 634:T_IF added to conditions array *
				Process token 641 on line 119 [col:26;len:0;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE => \n
				Process token 642 on line 120 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE =>         
				Process token 643 on line 120 [col:9;len:1;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 640:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 644 on line 120 [col:10;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 645 on line 120 [col:11;len:4;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_ELSE => else
			Process token 646 on line 120 [col:15;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 647 on line 120 [col:16;len:2;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_IF => if
			Process token 648 on line 120 [col:18;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 649 on line 120 [col:19;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_PARENTHESIS => (
			Process token 650 on line 120 [col:20;len:5;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_VARIABLE => $cond
			Process token 651 on line 120 [col:25;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_CLOSE_PARENTHESIS => )
			Process token 652 on line 120 [col:26;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>  
			Process token 653 on line 120 [col:27;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 647:T_IF
				* level increased *
				* token 647:T_IF added to conditions array *
				Process token 654 on line 120 [col:28;len:0;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE => \n
				Process token 655 on line 121 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_WHITESPACE =>         
				Process token 656 on line 121 [col:9;len:1;lvl:3;conds;T_FUNCTION,T_WHILE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 653:T_OPEN_CURLY_BRACKET
				* token T_IF removed from conditions array *
				* level decreased *
			Process token 657 on line 121 [col:10;len:0;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE => \n
			Process token 658 on line 122 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_WHITESPACE =>     
			Process token 659 on line 122 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_WHILE;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 631:T_OPEN_CURLY_BRACKET
			* token T_WHILE removed from conditions array *
			* level decreased *
		Process token 660 on line 122 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 661 on line 123 [col:1;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 662 on line 124 [col:1;len:4;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>     
		Process token 663 on line 124 [col:5;len:6;lvl:1;conds;T_FUNCTION;]: T_SWITCH => switch
		Process token 664 on line 124 [col:11;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 665 on line 124 [col:12;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 666 on line 124 [col:13;len:10;lvl:1;conds;T_FUNCTION;]: T_VARIABLE => $condition
		Process token 667 on line 124 [col:23;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 668 on line 124 [col:24;len:1;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>  
		Process token 669 on line 124 [col:25;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 663:T_SWITCH
			* level increased *
			* token 663:T_SWITCH added to conditions array *
			Process token 670 on line 124 [col:26;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 671 on line 125 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 672 on line 125 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 673 on line 125 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 674 on line 125 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '1'
			Process token 675 on line 125 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 672:T_CASE
				* level increased *
				* token 672:T_CASE added to conditions array *
				Process token 676 on line 125 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 677 on line 126 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 678 on line 126 [col:13;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_IF => if
				Process token 679 on line 126 [col:15;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 680 on line 126 [col:16;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 681 on line 126 [col:17;len:10;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $condition
				Process token 682 on line 126 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 683 on line 126 [col:28;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 684 on line 126 [col:29;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 678:T_IF
					* level increased *
					* token 678:T_IF added to conditions array *
					Process token 685 on line 126 [col:30;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
					Process token 686 on line 127 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
					Process token 687 on line 127 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 684:T_OPEN_CURLY_BRACKET
					* token T_IF removed from conditions array *
					* level decreased *
				Process token 688 on line 127 [col:14;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 689 on line 127 [col:15;len:4;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_ELSE => else
				Process token 690 on line 127 [col:19;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 691 on line 127 [col:20;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_IF => if
				Process token 692 on line 127 [col:22;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 693 on line 127 [col:23;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 694 on line 127 [col:24;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $cond
				Process token 695 on line 127 [col:29;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 696 on line 127 [col:30;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 697 on line 127 [col:31;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 691:T_IF
					* level increased *
					* token 691:T_IF added to conditions array *
					Process token 698 on line 127 [col:32;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE => \n
					Process token 699 on line 128 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_WHITESPACE =>             
					Process token 700 on line 128 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_IF;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 697:T_OPEN_CURLY_BRACKET
					* token T_IF removed from conditions array *
					* level decreased *
				Process token 701 on line 128 [col:14;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 702 on line 129 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 703 on line 129 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 675:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 704 on line 129 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 705 on line 129 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 706 on line 130 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 707 on line 130 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 708 on line 130 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 709 on line 130 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '2'
			Process token 710 on line 130 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 707:T_CASE
				* level increased *
				* token 707:T_CASE added to conditions array *
				Process token 711 on line 130 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 712 on line 131 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 713 on line 131 [col:13;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHILE => while
				Process token 714 on line 131 [col:18;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 715 on line 131 [col:19;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 716 on line 131 [col:20;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $cond
				Process token 717 on line 131 [col:25;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 718 on line 131 [col:26;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 719 on line 131 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 713:T_WHILE
					* level increased *
					* token 713:T_WHILE added to conditions array *
					Process token 720 on line 131 [col:28;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE => \n
					Process token 721 on line 132 [col:1;len:16;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE =>                 
					Process token 722 on line 132 [col:17;len:4;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_ECHO => echo
					Process token 723 on line 132 [col:21;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE =>  
					Process token 724 on line 132 [col:22;len:4;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_CONSTANT_ENCAPSED_STRING => 'hi'
					Process token 725 on line 132 [col:26;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_SEMICOLON => ;
					Process token 726 on line 132 [col:27;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE => \n
					Process token 727 on line 133 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_WHITESPACE =>             
					Process token 728 on line 133 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_WHILE;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 719:T_OPEN_CURLY_BRACKET
					* token T_WHILE removed from conditions array *
					* level decreased *
				Process token 729 on line 133 [col:14;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 730 on line 134 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 731 on line 134 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 710:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 732 on line 134 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 733 on line 134 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 734 on line 135 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 735 on line 135 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 736 on line 135 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 737 on line 135 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '3'
			Process token 738 on line 135 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 735:T_CASE
				* level increased *
				* token 735:T_CASE added to conditions array *
				Process token 739 on line 135 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 740 on line 136 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 741 on line 136 [col:13;len:6;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_SWITCH => switch
				Process token 742 on line 136 [col:19;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 743 on line 136 [col:20;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 744 on line 136 [col:21;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $cond
				Process token 745 on line 136 [col:26;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 746 on line 136 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 747 on line 136 [col:28;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 741:T_SWITCH
					* level increased *
					* token 741:T_SWITCH added to conditions array *
					Process token 748 on line 136 [col:29;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE => \n
					Process token 749 on line 137 [col:1;len:16;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE =>                 
					Process token 750 on line 137 [col:17;len:4;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_CASE => case
					Process token 751 on line 137 [col:21;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE =>  
					Process token 752 on line 137 [col:22;len:3;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '1'
					Process token 753 on line 137 [col:25;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_COLON => :
					=> Found scope opener for 750:T_CASE
						* level increased *
						* token 750:T_CASE added to conditions array *
						Process token 754 on line 137 [col:26;len:0;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
						Process token 755 on line 138 [col:1;len:16;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH,T_CASE;]: T_WHITESPACE =>                 
						Process token 756 on line 138 [col:17;len:5;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH,T_CASE;]: T_BREAK => break
						=> Found scope closer for 753:T_COLON
						* token T_CASE removed from conditions array *
						* level decreased *
					Process token 757 on line 138 [col:22;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_SEMICOLON => ;
					Process token 758 on line 138 [col:23;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE => \n
					Process token 759 on line 139 [col:1;len:16;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE =>                 
					Process token 760 on line 139 [col:17;len:4;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_CASE => case
					Process token 761 on line 139 [col:21;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE =>  
					Process token 762 on line 139 [col:22;len:3;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '2'
					Process token 763 on line 139 [col:25;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_COLON => :
					=> Found scope opener for 760:T_CASE
						* level increased *
						* token 760:T_CASE added to conditions array *
						Process token 764 on line 139 [col:26;len:0;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
						Process token 765 on line 140 [col:1;len:16;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH,T_CASE;]: T_WHITESPACE =>                 
						Process token 766 on line 140 [col:17;len:5;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH,T_CASE;]: T_BREAK => break
						=> Found scope closer for 763:T_COLON
						* token T_CASE removed from conditions array *
						* level decreased *
					Process token 767 on line 140 [col:22;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_SEMICOLON => ;
					Process token 768 on line 140 [col:23;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE => \n
					Process token 769 on line 141 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_WHITESPACE =>             
					Process token 770 on line 141 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 747:T_OPEN_CURLY_BRACKET
					* token T_SWITCH removed from conditions array *
					* level decreased *
				Process token 771 on line 141 [col:14;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 772 on line 142 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 773 on line 142 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 738:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 774 on line 142 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 775 on line 142 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 776 on line 143 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 777 on line 143 [col:9;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CASE => case
			Process token 778 on line 143 [col:13;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>  
			Process token 779 on line 143 [col:14;len:3;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CONSTANT_ENCAPSED_STRING => '4'
			Process token 780 on line 143 [col:17;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 777:T_CASE
				* level increased *
				* token 777:T_CASE added to conditions array *
				Process token 781 on line 143 [col:18;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 782 on line 144 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>             
				Process token 783 on line 144 [col:13;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_DO => do
				Process token 784 on line 144 [col:15;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 785 on line 144 [col:16;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 783:T_DO
					* level increased *
					* token 783:T_DO added to conditions array *
					Process token 786 on line 144 [col:17;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE => \n
					Process token 787 on line 145 [col:1;len:16;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE =>                 
					Process token 788 on line 145 [col:17;len:2;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_IF => if
					Process token 789 on line 145 [col:19;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE =>  
					Process token 790 on line 145 [col:20;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_OPEN_PARENTHESIS => (
					Process token 791 on line 145 [col:21;len:10;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_VARIABLE => $condition
					Process token 792 on line 145 [col:31;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_CLOSE_PARENTHESIS => )
					Process token 793 on line 145 [col:32;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE =>  
					Process token 794 on line 145 [col:33;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_OPEN_CURLY_BRACKET => {
					=> Found scope opener for 788:T_IF
						* level increased *
						* token 788:T_IF added to conditions array *
						Process token 795 on line 145 [col:34;len:0;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE => \n
						Process token 796 on line 146 [col:1;len:20;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>                     
						Process token 797 on line 146 [col:21;len:2;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_IF => if
						Process token 798 on line 146 [col:23;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>  
						Process token 799 on line 146 [col:24;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_OPEN_PARENTHESIS => (
						Process token 800 on line 146 [col:25;len:5;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_VARIABLE => $cond
						Process token 801 on line 146 [col:30;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_CLOSE_PARENTHESIS => )
						Process token 802 on line 146 [col:31;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>  
						Process token 803 on line 146 [col:32;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_OPEN_CURLY_BRACKET => {
						=> Found scope opener for 797:T_IF
							* level increased *
							* token 797:T_IF added to conditions array *
							Process token 804 on line 146 [col:33;len:0;lvl:6;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF,T_IF;]: T_WHITESPACE => \n
							Process token 805 on line 147 [col:1;len:20;lvl:6;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF,T_IF;]: T_WHITESPACE =>                     
							Process token 806 on line 147 [col:21;len:1;lvl:6;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF,T_IF;]: T_CLOSE_CURLY_BRACKET => }
							=> Found scope closer for 803:T_OPEN_CURLY_BRACKET
							* token T_IF removed from conditions array *
							* level decreased *
						Process token 807 on line 147 [col:22;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>  
						Process token 808 on line 147 [col:23;len:4;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_ELSE => else
						Process token 809 on line 147 [col:27;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>  
						Process token 810 on line 147 [col:28;len:2;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_IF => if
						Process token 811 on line 147 [col:30;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>  
						Process token 812 on line 147 [col:31;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_OPEN_PARENTHESIS => (
						Process token 813 on line 147 [col:32;len:4;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_VARIABLE => $con
						Process token 814 on line 147 [col:36;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_CLOSE_PARENTHESIS => )
						Process token 815 on line 147 [col:37;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>  
						Process token 816 on line 147 [col:38;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_OPEN_CURLY_BRACKET => {
						=> Found scope opener for 810:T_IF
							* level increased *
							* token 810:T_IF added to conditions array *
							Process token 817 on line 147 [col:39;len:0;lvl:6;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF,T_IF;]: T_WHITESPACE => \n
							Process token 818 on line 148 [col:1;len:20;lvl:6;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF,T_IF;]: T_WHITESPACE =>                     
							Process token 819 on line 148 [col:21;len:1;lvl:6;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF,T_IF;]: T_CLOSE_CURLY_BRACKET => }
							=> Found scope closer for 816:T_OPEN_CURLY_BRACKET
							* token T_IF removed from conditions array *
							* level decreased *
						Process token 820 on line 148 [col:22;len:0;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE => \n
						Process token 821 on line 149 [col:1;len:16;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_WHITESPACE =>                 
						Process token 822 on line 149 [col:17;len:1;lvl:5;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO,T_IF;]: T_CLOSE_CURLY_BRACKET => }
						=> Found scope closer for 794:T_OPEN_CURLY_BRACKET
						* token T_IF removed from conditions array *
						* level decreased *
					Process token 823 on line 149 [col:18;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE => \n
					Process token 824 on line 150 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_WHITESPACE =>             
					Process token 825 on line 150 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_CASE,T_DO;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 785:T_OPEN_CURLY_BRACKET
					* token T_DO removed from conditions array *
					* level decreased *
				Process token 826 on line 150 [col:14;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 827 on line 150 [col:15;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHILE => while
				Process token 828 on line 150 [col:20;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>  
				Process token 829 on line 150 [col:21;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_OPEN_PARENTHESIS => (
				Process token 830 on line 150 [col:22;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_VARIABLE => $cond
				Process token 831 on line 150 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_CLOSE_PARENTHESIS => )
				Process token 832 on line 150 [col:28;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_SEMICOLON => ;
				Process token 833 on line 150 [col:29;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE => \n
				Process token 834 on line 151 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_WHITESPACE =>         
				Process token 835 on line 151 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_CASE;]: T_BREAK => break
				=> Found scope closer for 780:T_COLON
				* token T_CASE removed from conditions array *
				* level decreased *
			Process token 836 on line 151 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 837 on line 151 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 838 on line 152 [col:1;len:8;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>         
			Process token 839 on line 152 [col:9;len:7;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_DEFAULT => default
			Process token 840 on line 152 [col:16;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_COLON => :
			=> Found scope opener for 839:T_DEFAULT
				* level increased *
				* token 839:T_DEFAULT added to conditions array *
				Process token 841 on line 152 [col:17;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
				Process token 842 on line 153 [col:1;len:12;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>             
				Process token 843 on line 153 [col:13;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_IF => if
				Process token 844 on line 153 [col:15;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
				Process token 845 on line 153 [col:16;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_OPEN_PARENTHESIS => (
				Process token 846 on line 153 [col:17;len:10;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_VARIABLE => $condition
				Process token 847 on line 153 [col:27;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_CLOSE_PARENTHESIS => )
				Process token 848 on line 153 [col:28;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
				Process token 849 on line 153 [col:29;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 843:T_IF
					* level increased *
					* token 843:T_IF added to conditions array *
					Process token 850 on line 153 [col:30;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE => \n
					Process token 851 on line 154 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>             
					Process token 852 on line 154 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_DEFAULT,T_IF;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 849:T_OPEN_CURLY_BRACKET
					* token T_IF removed from conditions array *
					* level decreased *
				Process token 853 on line 154 [col:14;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
				Process token 854 on line 154 [col:15;len:4;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_ELSE => else
				Process token 855 on line 154 [col:19;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
				Process token 856 on line 154 [col:20;len:2;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_IF => if
				Process token 857 on line 154 [col:22;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
				Process token 858 on line 154 [col:23;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_OPEN_PARENTHESIS => (
				Process token 859 on line 154 [col:24;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_VARIABLE => $cond
				Process token 860 on line 154 [col:29;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_CLOSE_PARENTHESIS => )
				Process token 861 on line 154 [col:30;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>  
				Process token 862 on line 154 [col:31;len:1;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_OPEN_CURLY_BRACKET => {
				=> Found scope opener for 856:T_IF
					* level increased *
					* token 856:T_IF added to conditions array *
					Process token 863 on line 154 [col:32;len:0;lvl:4;conds;T_FUNCTION,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE => \n
					Process token 864 on line 155 [col:1;len:12;lvl:4;conds;T_FUNCTION,T_SWITCH,T_DEFAULT,T_IF;]: T_WHITESPACE =>             
					Process token 865 on line 155 [col:13;len:1;lvl:4;conds;T_FUNCTION,T_SWITCH,T_DEFAULT,T_IF;]: T_CLOSE_CURLY_BRACKET => }
					=> Found scope closer for 862:T_OPEN_CURLY_BRACKET
					* token T_IF removed from conditions array *
					* level decreased *
				Process token 866 on line 155 [col:14;len:0;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE => \n
				Process token 867 on line 156 [col:1;len:8;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_WHITESPACE =>         
				Process token 868 on line 156 [col:9;len:5;lvl:3;conds;T_FUNCTION,T_SWITCH,T_DEFAULT;]: T_BREAK => break
				=> Found scope closer for 840:T_COLON
				* token T_DEFAULT removed from conditions array *
				* level decreased *
			Process token 869 on line 156 [col:14;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_SEMICOLON => ;
			Process token 870 on line 156 [col:15;len:0;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE => \n
			Process token 871 on line 157 [col:1;len:4;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_WHITESPACE =>     
			Process token 872 on line 157 [col:5;len:1;lvl:2;conds;T_FUNCTION,T_SWITCH;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 669:T_OPEN_CURLY_BRACKET
			* token T_SWITCH removed from conditions array *
			* level decreased *
		Process token 873 on line 157 [col:6;len:0;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE => \n
		Process token 874 on line 158 [col:1;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 618:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 875 on line 158 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 876 on line 159 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 877 on line 160 [col:1;len:2;lvl:0;]: T_CLOSE_TAG => ?>\n
	*** END LEVEL MAP ***
	*** START ADDITIONAL PHP PROCESSING ***
	*** END ADDITIONAL PHP PROCESSING ***
[PHP => 878 tokens in 160 lines]... 
DONE in 1.05 secs (40 fixable violations)
	=> Fixing file: 40/40 violations remaining	=> Changeset started by PHP_CodeSniffer\Standards\Zend\Sniffs\Files\ClosingTagSniff (line 55)
		Q: PHP_CodeSniffer\Standards\Zend\Sniffs\Files\ClosingTagSniff (line 56) replaced token 877 (T_CLOSE_TAG) "?>\n" => "\n"
		A: PHP_CodeSniffer\Standards\Zend\Sniffs\Files\ClosingTagSniff (line 64) replaced token 877 (T_CLOSE_TAG) "?>\n" => "\n"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 10 (T_CLOSE_CURLY_BRACKET) "}" => "}//end complexityOne()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 112)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 121) replaced token 7 (T_WHITESPACE) " {" => "{"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 124) replaced token 8 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 7 (T_WHITESPACE) " {" => "{"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceBsdAllmanSniff (line 135) replaced token 8 (T_OPEN_CURLY_BRACKET) "{" => "\n{"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 9 (T_WHITESPACE) " }//end complexityOne()\n" => "\n }//end complexityOne()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 12 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 13 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 12 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 13 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
	* token 10 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 76 (T_CLOSE_CURLY_BRACKET) "}" => "}//end comlexityFive()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 75 (T_WHITESPACE) "\n}//end comlexityFive()\n" => "\n\n}//end comlexityFive()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 78 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 79 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 78 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 79 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 53 (T_WHITESPACE) "        case" => "\n        case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 53 (T_WHITESPACE) "        case" => "\n        case"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 63 (T_WHITESPACE) "        case" => "\n        case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 63 (T_WHITESPACE) "        case" => "\n        case"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 209 (T_CLOSE_CURLY_BRACKET) "}" => "}//end comlexityTen()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 208 (T_WHITESPACE) "\n}//end comlexityTen()\n" => "\n\n}//end comlexityTen()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 211 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 212 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 211 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 212 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 160 (T_WHITESPACE) "        case" => "\n        case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 160 (T_WHITESPACE) "        case" => "\n        case"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 188 (T_WHITESPACE) "        case" => "\n        case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 188 (T_WHITESPACE) "        case" => "\n        case"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 198 (T_WHITESPACE) "        default" => "\n        default"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 198 (T_WHITESPACE) "        default" => "\n        default"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 355 (T_CLOSE_CURLY_BRACKET) "}" => "}//end comlexityEleven()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 354 (T_WHITESPACE) "\n}//end comlexityEleven()\n" => "\n\n}//end comlexityEleven()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 306 (T_WHITESPACE) "        case" => "\n        case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 306 (T_WHITESPACE) "        case" => "\n        case"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 334 (T_WHITESPACE) "        case" => "\n        case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 334 (T_WHITESPACE) "        case" => "\n        case"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 344 (T_WHITESPACE) "        default" => "\n        default"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 344 (T_WHITESPACE) "        default" => "\n        default"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 608 (T_CLOSE_CURLY_BRACKET) "}" => "}//end comlexityTwenty()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 607 (T_WHITESPACE) "\n}//end comlexityTwenty()\n" => "\n\n}//end comlexityTwenty()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 453 (T_WHITESPACE) "        case" => "\n        case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 453 (T_WHITESPACE) "        case" => "\n        case"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 481 (T_WHITESPACE) "        case" => "\n        case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 481 (T_WHITESPACE) "        case" => "\n        case"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 523 (T_WHITESPACE) "        case" => "\n        case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 523 (T_WHITESPACE) "        case" => "\n        case"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 585 (T_WHITESPACE) "        default" => "\n        default"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 585 (T_WHITESPACE) "        default" => "\n        default"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 506 (T_WHITESPACE) "                case" => "\n                case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 506 (T_WHITESPACE) "                case" => "\n                case"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\LongConditionClosingCommentSniff (line 174) replaced token 606 (T_CLOSE_CURLY_BRACKET) "}" => "}//end switch"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff (line 110) replaced token 874 (T_CLOSE_CURLY_BRACKET) "}" => "}//end comlexityTwentyOne()\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 873 (T_WHITESPACE) "\n}//end comlexityTwentyOne()\n" => "\n\n}//end comlexityTwentyOne()\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 876 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 877 (T_CLOSE_TAG) "\n" => "\n\n\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 876 (T_WHITESPACE) "\n\n" => "\n"
		* token 877 has already been modified, skipping *
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) reverted token 876 (T_WHITESPACE) "\n" => "\n\n"
	=> Changeset failed to apply
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 706 (T_WHITESPACE) "        case" => "\n        case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 706 (T_WHITESPACE) "        case" => "\n        case"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 734 (T_WHITESPACE) "        case" => "\n        case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 734 (T_WHITESPACE) "        case" => "\n        case"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 776 (T_WHITESPACE) "        case" => "\n        case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 776 (T_WHITESPACE) "        case" => "\n        case"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 838 (T_WHITESPACE) "        default" => "\n        default"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 838 (T_WHITESPACE) "        default" => "\n        default"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 199)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 202) replaced token 759 (T_WHITESPACE) "                case" => "\n                case"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff (line 213) replaced token 759 (T_WHITESPACE) "                case" => "\n                case"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\LongConditionClosingCommentSniff (line 174) replaced token 872 (T_CLOSE_CURLY_BRACKET) "}" => "}//end switch"
                                                                                	=> Fixing file: 42/40 violations remaining [made 1 pass]... 	* fixed 42 violations, starting loop 2 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 11 (T_WHITESPACE) " }" => "}"
	=> Changeset started by PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 87)
		Q: PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 88) replaced token 908 (T_COMMENT) "//end comlexityTwentyOne()\n" => "//end comlexityTwentyOne()"
		Q: PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 90) replaced token 909 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 90) replaced token 910 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 93) replaced token 911 (T_WHITESPACE) "\n" => "\n"
		A: PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 94) replaced token 908 (T_COMMENT) "//end comlexityTwentyOne()\n" => "//end comlexityTwentyOne()"
		A: PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 94) replaced token 909 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 94) replaced token 910 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\PSR2\Sniffs\Files\EndFileNewlineSniff (line 94) replaced token 911 (T_WHITESPACE) "\n" => "\n"
	=> Changeset ended: 4 changes applied
	* token 11 has already been modified, skipping *
	* token 11 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 85 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 86 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 87 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 88 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 85 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 86 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 87 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 88 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 224 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 225 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 226 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 227 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 224 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 225 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 226 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 227 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 376 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 377 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 378 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 379 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 376 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 377 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 378 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 379 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 636 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 637 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 638 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 639 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 636 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 637 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 638 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 639 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 4 changes applied
                                                                                	=> Fixing file: 22/40 violations remaining [made 2 passes]... 	* fixed 22 violations, starting loop 3 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 152) replaced token 9 (T_WHITESPACE) "\n}" => "\n\n}"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 185)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 12 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 13 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 192) replaced token 14 (T_WHITESPACE) "\nfunction" => "function"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 188) replaced token 15 (T_FUNCTION) "function" => "\n\nfunction"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 12 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 13 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 14 (T_WHITESPACE) "\nfunction" => "function"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 195) replaced token 15 (T_FUNCTION) "function" => "\n\nfunction"
	=> Changeset ended: 4 changes applied
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 1; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 5/40 violations remaining [made 3 passes]... 	* fixed 5 violations, starting loop 4 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/40 violations remaining [made 4 passes]... 	* fixed 1 violations, starting loop 5 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 3; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/40 violations remaining [made 5 passes]... 	* fixed 0 violations, starting loop 6 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/40 violations remaining [made 6 passes]... 	* fixed 1 violations, starting loop 7 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 5; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/40 violations remaining [made 7 passes]... 	* fixed 0 violations, starting loop 8 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/40 violations remaining [made 8 passes]... 	* fixed 1 violations, starting loop 9 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 7; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/40 violations remaining [made 9 passes]... 	* fixed 0 violations, starting loop 10 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/40 violations remaining [made 10 passes]... 	* fixed 1 violations, starting loop 11 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 9; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/40 violations remaining [made 11 passes]... 	* fixed 0 violations, starting loop 12 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/40 violations remaining [made 12 passes]... 	* fixed 1 violations, starting loop 13 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 11; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/40 violations remaining [made 13 passes]... 	* fixed 0 violations, starting loop 14 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/40 violations remaining [made 14 passes]... 	* fixed 1 violations, starting loop 15 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 13; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/40 violations remaining [made 15 passes]... 	* fixed 0 violations, starting loop 16 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/40 violations remaining [made 16 passes]... 	* fixed 1 violations, starting loop 17 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 15; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/40 violations remaining [made 17 passes]... 	* fixed 0 violations, starting loop 18 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/40 violations remaining [made 18 passes]... 	* fixed 1 violations, starting loop 19 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 17; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/40 violations remaining [made 19 passes]... 	* fixed 0 violations, starting loop 20 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/40 violations remaining [made 20 passes]... 	* fixed 1 violations, starting loop 21 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 19; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/40 violations remaining [made 21 passes]... 	* fixed 0 violations, starting loop 22 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/40 violations remaining [made 22 passes]... 	* fixed 1 violations, starting loop 23 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 21; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/40 violations remaining [made 23 passes]... 	* fixed 0 violations, starting loop 24 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/40 violations remaining [made 24 passes]... 	* fixed 1 violations, starting loop 25 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 23; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/40 violations remaining [made 25 passes]... 	* fixed 0 violations, starting loop 26 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/40 violations remaining [made 26 passes]... 	* fixed 1 violations, starting loop 27 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 25; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/40 violations remaining [made 27 passes]... 	* fixed 0 violations, starting loop 28 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/40 violations remaining [made 28 passes]... 	* fixed 1 violations, starting loop 29 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 27; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/40 violations remaining [made 29 passes]... 	* fixed 0 violations, starting loop 30 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/40 violations remaining [made 30 passes]... 	* fixed 1 violations, starting loop 31 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 29; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/40 violations remaining [made 31 passes]... 	* fixed 0 violations, starting loop 32 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/40 violations remaining [made 32 passes]... 	* fixed 1 violations, starting loop 33 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 31; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/40 violations remaining [made 33 passes]... 	* fixed 0 violations, starting loop 34 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/40 violations remaining [made 34 passes]... 	* fixed 1 violations, starting loop 35 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 33; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/40 violations remaining [made 35 passes]... 	* fixed 0 violations, starting loop 36 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/40 violations remaining [made 36 passes]... 	* fixed 1 violations, starting loop 37 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 35; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/40 violations remaining [made 37 passes]... 	* fixed 0 violations, starting loop 38 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/40 violations remaining [made 38 passes]... 	* fixed 1 violations, starting loop 39 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 37; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/40 violations remaining [made 39 passes]... 	* fixed 0 violations, starting loop 40 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/40 violations remaining [made 40 passes]... 	* fixed 1 violations, starting loop 41 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 39; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/40 violations remaining [made 41 passes]... 	* fixed 0 violations, starting loop 42 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/40 violations remaining [made 42 passes]... 	* fixed 1 violations, starting loop 43 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 41; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/40 violations remaining [made 43 passes]... 	* fixed 0 violations, starting loop 44 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/40 violations remaining [made 44 passes]... 	* fixed 1 violations, starting loop 45 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 43; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/40 violations remaining [made 45 passes]... 	* fixed 0 violations, starting loop 46 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/40 violations remaining [made 46 passes]... 	* fixed 1 violations, starting loop 47 *
	**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) has possible conflict with another sniff on loop 45; caused by the following change ****
	**** replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n" ****
	**** ignoring all changes until next loop ****
                                                                                	=> Fixing file: 0/40 violations remaining [made 47 passes]... 	* fixed 0 violations, starting loop 48 *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff (line 305) replaced token 0 (T_OPEN_TAG) "<?php\n" => "\n<?php\n"
                                                                                	=> Fixing file: 1/40 violations remaining [made 48 passes]... 	* fixed 1 violations, starting loop 49 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) has possible conflict with another sniff on loop 47; caused by the following change ****
		**** replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/40 violations remaining [made 49 passes]... 	* fixed 0 violations, starting loop 50 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 117)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 119) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 122) replaced token 0 (T_INLINE_HTML) "\n<?php\n" => "<?php\n"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 1/40 violations remaining [made 50 passes]... 	* fixed 1 violations, starting loop 51 *
	*** Reached maximum number of loops with 1 violations left unfixed ***
ERROR in 14.3 secs

PHPCBF RESULT SUMMARY
------------------------------------------------------------------------------------------
FILE                                                                      FIXED  REMAINING
------------------------------------------------------------------------------------------
...\src\Standards\Generic\Tests\Metrics\CyclomaticComplexityUnitTest.inc  FAILED TO FIX
------------------------------------------------------------------------------------------
A TOTAL OF 39 ERRORS WERE FIXED IN 1 FILE
------------------------------------------------------------------------------------------
PHPCBF FAILED TO FIX 1 FILE
------------------------------------------------------------------------------------------

Time: 16.55 secs; Memory: 8MB


