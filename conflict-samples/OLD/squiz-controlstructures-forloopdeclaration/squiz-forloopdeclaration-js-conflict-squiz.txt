PHP 7.2.11 (cli) (built: Oct 10 2018 02:39:52) ( ZTS MSVC15 (Visual C++ 2017) x86 )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies
    with Xdebug v2.6.0, Copyright (c) 2002-2018, by Derick Rethans
    with blackfire v1.23.1~win-x32-zts72, https://blackfire.io, by Blackfire

PHP_CodeSniffer version 3.4.0 (stable) by Squiz (http://www.squiz.net)

Processing ruleset Squiz\ruleset.xml
	Adding sniff files from Squiz\Sniffs directory
		=> Squiz\Sniffs\Arrays\ArrayBracketSpacingSniff.php
		=> Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> Squiz\Sniffs\Classes\ClassDeclarationSniff.php
		=> Squiz\Sniffs\Classes\ClassFileNameSniff.php
		=> Squiz\Sniffs\Classes\DuplicatePropertySniff.php
		=> Squiz\Sniffs\Classes\LowercaseClassKeywordsSniff.php
		=> Squiz\Sniffs\Classes\SelfMemberReferenceSniff.php
		=> Squiz\Sniffs\Classes\ValidClassNameSniff.php
		=> Squiz\Sniffs\Commenting\BlockCommentSniff.php
		=> Squiz\Sniffs\Commenting\ClassCommentSniff.php
		=> Squiz\Sniffs\Commenting\ClosingDeclarationCommentSniff.php
		=> Squiz\Sniffs\Commenting\DocCommentAlignmentSniff.php
		=> Squiz\Sniffs\Commenting\EmptyCatchCommentSniff.php
		=> Squiz\Sniffs\Commenting\FileCommentSniff.php
		=> Squiz\Sniffs\Commenting\FunctionCommentSniff.php
		=> Squiz\Sniffs\Commenting\FunctionCommentThrowTagSniff.php
		=> Squiz\Sniffs\Commenting\InlineCommentSniff.php
		=> Squiz\Sniffs\Commenting\LongConditionClosingCommentSniff.php
		=> Squiz\Sniffs\Commenting\PostStatementCommentSniff.php
		=> Squiz\Sniffs\Commenting\VariableCommentSniff.php
		=> Squiz\Sniffs\ControlStructures\ControlSignatureSniff.php
		=> Squiz\Sniffs\ControlStructures\ElseIfDeclarationSniff.php
		=> Squiz\Sniffs\ControlStructures\ForEachLoopDeclarationSniff.php
		=> Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff.php
		=> Squiz\Sniffs\ControlStructures\InlineIfDeclarationSniff.php
		=> Squiz\Sniffs\ControlStructures\LowercaseDeclarationSniff.php
		=> Squiz\Sniffs\ControlStructures\SwitchDeclarationSniff.php
		=> Squiz\Sniffs\CSS\ClassDefinitionClosingBraceSpaceSniff.php
		=> Squiz\Sniffs\CSS\ClassDefinitionNameSpacingSniff.php
		=> Squiz\Sniffs\CSS\ClassDefinitionOpeningBraceSpaceSniff.php
		=> Squiz\Sniffs\CSS\ColonSpacingSniff.php
		=> Squiz\Sniffs\CSS\ColourDefinitionSniff.php
		=> Squiz\Sniffs\CSS\DisallowMultipleStyleDefinitionsSniff.php
		=> Squiz\Sniffs\CSS\DuplicateClassDefinitionSniff.php
		=> Squiz\Sniffs\CSS\DuplicateStyleDefinitionSniff.php
		=> Squiz\Sniffs\CSS\EmptyClassDefinitionSniff.php
		=> Squiz\Sniffs\CSS\EmptyStyleDefinitionSniff.php
		=> Squiz\Sniffs\CSS\ForbiddenStylesSniff.php
		=> Squiz\Sniffs\CSS\IndentationSniff.php
		=> Squiz\Sniffs\CSS\LowercaseStyleDefinitionSniff.php
		=> Squiz\Sniffs\CSS\MissingColonSniff.php
		=> Squiz\Sniffs\CSS\NamedColoursSniff.php
		=> Squiz\Sniffs\CSS\OpacitySniff.php
		=> Squiz\Sniffs\CSS\SemicolonSpacingSniff.php
		=> Squiz\Sniffs\CSS\ShorthandSizeSniff.php
		=> Squiz\Sniffs\Debug\JavaScriptLintSniff.php
		=> Squiz\Sniffs\Debug\JSLintSniff.php
		=> Squiz\Sniffs\Files\FileExtensionSniff.php
		=> Squiz\Sniffs\Formatting\OperatorBracketSniff.php
		=> Squiz\Sniffs\Functions\FunctionDeclarationArgumentSpacingSniff.php
		=> Squiz\Sniffs\Functions\FunctionDeclarationSniff.php
		=> Squiz\Sniffs\Functions\FunctionDuplicateArgumentSniff.php
		=> Squiz\Sniffs\Functions\GlobalFunctionSniff.php
		=> Squiz\Sniffs\Functions\LowercaseFunctionKeywordsSniff.php
		=> Squiz\Sniffs\Functions\MultiLineFunctionDeclarationSniff.php
		=> Squiz\Sniffs\NamingConventions\ValidFunctionNameSniff.php
		=> Squiz\Sniffs\NamingConventions\ValidVariableNameSniff.php
		=> Squiz\Sniffs\Objects\DisallowObjectStringIndexSniff.php
		=> Squiz\Sniffs\Objects\ObjectInstantiationSniff.php
		=> Squiz\Sniffs\Objects\ObjectMemberCommaSniff.php
		=> Squiz\Sniffs\Operators\ComparisonOperatorUsageSniff.php
		=> Squiz\Sniffs\Operators\IncrementDecrementUsageSniff.php
		=> Squiz\Sniffs\Operators\ValidLogicalOperatorsSniff.php
		=> Squiz\Sniffs\PHP\CommentedOutCodeSniff.php
		=> Squiz\Sniffs\PHP\DisallowBooleanStatementSniff.php
		=> Squiz\Sniffs\PHP\DisallowComparisonAssignmentSniff.php
		=> Squiz\Sniffs\PHP\DisallowInlineIfSniff.php
		=> Squiz\Sniffs\PHP\DisallowMultipleAssignmentsSniff.php
		=> Squiz\Sniffs\PHP\DisallowSizeFunctionsInLoopsSniff.php
		=> Squiz\Sniffs\PHP\DiscouragedFunctionsSniff.php
		=> Squiz\Sniffs\PHP\EmbeddedPhpSniff.php
		=> Squiz\Sniffs\PHP\EvalSniff.php
		=> Squiz\Sniffs\PHP\GlobalKeywordSniff.php
		=> Squiz\Sniffs\PHP\HeredocSniff.php
		=> Squiz\Sniffs\PHP\InnerFunctionsSniff.php
		=> Squiz\Sniffs\PHP\LowercasePHPFunctionsSniff.php
		=> Squiz\Sniffs\PHP\NonExecutableCodeSniff.php
		=> Squiz\Sniffs\Scope\MemberVarScopeSniff.php
		=> Squiz\Sniffs\Scope\MethodScopeSniff.php
		=> Squiz\Sniffs\Scope\StaticThisUsageSniff.php
		=> Squiz\Sniffs\Strings\ConcatenationSpacingSniff.php
		=> Squiz\Sniffs\Strings\DoubleQuoteUsageSniff.php
		=> Squiz\Sniffs\Strings\EchoedStringsSniff.php
		=> Squiz\Sniffs\WhiteSpace\CastSpacingSniff.php
		=> Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff.php
		=> Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff.php
		=> Squiz\Sniffs\WhiteSpace\FunctionOpeningBraceSpaceSniff.php
		=> Squiz\Sniffs\WhiteSpace\FunctionSpacingSniff.php
		=> Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
		=> Squiz\Sniffs\WhiteSpace\LogicalOperatorSpacingSniff.php
		=> Squiz\Sniffs\WhiteSpace\MemberVarSpacingSniff.php
		=> Squiz\Sniffs\WhiteSpace\ObjectOperatorSpacingSniff.php
		=> Squiz\Sniffs\WhiteSpace\OperatorSpacingSniff.php
		=> Squiz\Sniffs\WhiteSpace\PropertyLabelSpacingSniff.php
		=> Squiz\Sniffs\WhiteSpace\ScopeClosingBraceSniff.php
		=> Squiz\Sniffs\WhiteSpace\ScopeKeywordSpacingSniff.php
		=> Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff.php
		=> Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff.php
	Processing rule "Generic.Arrays.DisallowLongArraySyntax"
		=> Generic\Sniffs\Arrays\DisallowLongArraySyntaxSniff.php
	Processing rule "Generic.CodeAnalysis.EmptyStatement"
		=> Generic\Sniffs\CodeAnalysis\EmptyStatementSniff.php
	Processing rule "Generic.Commenting.Todo"
		=> Generic\Sniffs\Commenting\TodoSniff.php
	Processing rule "Generic.Commenting.DocComment"
		=> Generic\Sniffs\Commenting\DocCommentSniff.php
	Processing rule "Generic.ControlStructures.InlineControlStructure"
		=> Generic\Sniffs\ControlStructures\InlineControlStructureSniff.php
	Processing rule "Generic.Formatting.DisallowMultipleStatements"
		=> Generic\Sniffs\Formatting\DisallowMultipleStatementsSniff.php
	Processing rule "Generic.Formatting.SpaceAfterCast"
		=> Generic\Sniffs\Formatting\SpaceAfterCastSniff.php
	Processing rule "Generic.Functions.FunctionCallArgumentSpacing"
		=> Generic\Sniffs\Functions\FunctionCallArgumentSpacingSniff.php
	Processing rule "Generic.NamingConventions.ConstructorName"
		=> Generic\Sniffs\NamingConventions\ConstructorNameSniff.php
	Processing rule "Generic.NamingConventions.UpperCaseConstantName"
		=> Generic\Sniffs\NamingConventions\UpperCaseConstantNameSniff.php
	Processing rule "Generic.PHP.DeprecatedFunctions"
		=> Generic\Sniffs\PHP\DeprecatedFunctionsSniff.php
	Processing rule "Generic.PHP.DisallowShortOpenTag"
		=> Generic\Sniffs\PHP\DisallowShortOpenTagSniff.php
	Processing rule "Generic.PHP.LowerCaseKeyword"
		=> Generic\Sniffs\PHP\LowerCaseKeywordSniff.php
	Processing rule "Generic.PHP.LowerCaseConstant"
		=> Generic\Sniffs\PHP\LowerCaseConstantSniff.php
	Processing rule "Generic.Strings.UnnecessaryStringConcat"
		=> Generic\Sniffs\Strings\UnnecessaryStringConcatSniff.php
	Processing rule "Generic.WhiteSpace.DisallowTabIndent"
		=> Generic\Sniffs\WhiteSpace\DisallowTabIndentSniff.php
	Processing rule "Generic.WhiteSpace.LanguageConstructSpacing"
		=> Generic\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
	Processing rule "Generic.WhiteSpace.IncrementDecrementSpacing"
		=> Generic\Sniffs\WhiteSpace\IncrementDecrementSpacingSniff.php
	Processing rule "Generic.WhiteSpace.ScopeIndent"
		=> Generic\Sniffs\WhiteSpace\ScopeIndentSniff.php
	Processing rule "PEAR.ControlStructures.MultiLineCondition"
		=> PEAR\Sniffs\ControlStructures\MultiLineConditionSniff.php
	Processing rule "PEAR.Files.IncludingFile"
		=> PEAR\Sniffs\Files\IncludingFileSniff.php
	Processing rule "PEAR.Formatting.MultiLineAssignment"
		=> PEAR\Sniffs\Formatting\MultiLineAssignmentSniff.php
	Processing rule "PEAR.Functions.ValidDefaultValue"
		=> PEAR\Sniffs\Functions\ValidDefaultValueSniff.php
	Processing rule "PSR2.Files.EndFileNewline"
		=> PSR2\Sniffs\Files\EndFileNewlineSniff.php
	Processing rule "Zend.Files.ClosingTag"
		=> Zend\Sniffs\Files\ClosingTagSniff.php
	Processing rule "Zend.Debug.CodeAnalyzer"
		=> Zend\Sniffs\Debug\CodeAnalyzerSniff.php
	Processing rule "Generic.Files.LineLength"
		=> Generic\Sniffs\Files\LineLengthSniff.php
		=> property "lineLimit" set to "120"
		=> property "absoluteLineLimit" set to "0"
	Processing rule "Generic.Files.LineEndings"
		=> Generic\Sniffs\Files\LineEndingsSniff.php
		=> property "eolChar" set to "\n"
	Processing rule "Generic.Formatting.MultipleStatementAlignment"
		=> Generic\Sniffs\Formatting\MultipleStatementAlignmentSniff.php
		=> property "maxPadding" set to "20"
		=> property "error" set to "true"
	Processing rule "Generic.PHP.ForbiddenFunctions"
		=> Generic\Sniffs\PHP\ForbiddenFunctionsSniff.php
		=> array property "forbiddenFunctions" set to "sizeof=>count,delete=>unset,print=>echo,is_null=>null,create_function=>null"
	Processing rule "Generic.CodeAnalysis.EmptyStatement.DetectedCATCH"
		=> Generic\Sniffs\CodeAnalysis\EmptyStatementSniff.php
		=> severity set to 0
	Processing rule "Generic.Debug.ClosureLinter"
		=> Generic\Sniffs\Debug\ClosureLinterSniff.php
		=> array property "errorCodes" set to "0210"
		=> array property "ignoreCodes" set to "0001,0110,0240"
	Processing rule "Generic.Debug.ClosureLinter.ExternalToolError"
		=> Generic\Sniffs\Debug\ClosureLinterSniff.php
		=> message set to %2$s
	Processing rule "PEAR.Functions.FunctionCallSignature"
		=> PEAR\Sniffs\Functions\FunctionCallSignatureSniff.php
		=> property "allowMultipleArguments" set to "false"
	Processing rule "Generic.Arrays.ArrayIndent"
		=> Generic\Sniffs\Arrays\ArrayIndentSniff.php
	Processing rule "Squiz.Arrays.ArrayDeclaration.KeyNotAligned"
		=> Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.ValueNotAligned"
		=> Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned"
		=> Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine"
		=> Squiz\Sniffs\Arrays\ArrayDeclarationSniff.php
		=> severity set to 0
	Processing rule "Squiz.WhiteSpace.LanguageConstructSpacing"
		=> Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff.php
		=> severity set to 0
	Processing rule "Squiz.Commenting.InlineComment"
		=> Squiz\Sniffs\Commenting\InlineCommentSniff.php
		Excluding rule "Squiz.Commenting.InlineComment.SpacingAfterAtFunctionEnd"
		=> severity set to 0
	Processing rule "Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore"
		=> Squiz\Sniffs\NamingConventions\ValidFunctionNameSniff.php
		=> severity set to 0
	Processing rule "PSR2.Methods.MethodDeclaration.Underscore"
		=> PSR2\Sniffs\Methods\MethodDeclarationSniff.php
		Excluding sniff "PSR2.Methods.MethodDeclaration" except for "Underscore"
		=> message type set to error
	Processing rule "Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"
		=> Squiz\Sniffs\NamingConventions\ValidVariableNameSniff.php
		=> severity set to 0
	Processing rule "PSR2.Classes.PropertyDeclaration.Underscore"
		=> PSR2\Sniffs\Classes\PropertyDeclarationSniff.php
		Excluding sniff "PSR2.Classes.PropertyDeclaration" except for "Underscore"
		=> message type set to error
=> Ruleset processing complete; included 133 sniffs and excluded 0
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_FUNCTION => function
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_SEMICOLON => ;
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_FUNCTION => function
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token [1]: T_ABSTRACT => abstract
	Process token [2]: T_WHITESPACE =>  
	Process token [3]: T_FUNCTION => function
	Process token [4]: T_WHITESPACE =>  
	Process token [5]: T_STRING => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_OPEN_PARENTHESIS => (
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
	*** START PHP TOKENIZING ***
	Process token [0]: T_OPEN_TAG => <?php 
	Process token  1 : T_SEMICOLON => ;
	Process token [2]: T_CLOSE_TAG => ?>
	*** END PHP TOKENIZING ***
Creating file list... DONE (1 files in queue)
Changing into directory Squiz\Tests\ControlStructures
Processing ForLoopDeclarationUnitTest.js 
	*** START JS TOKENIZING ***
	Process char 0 => / (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 0 *
	Process char 1 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // V
		=> Looking ahead 3 chars => // Va
		=> Looking ahead 4 chars => // Val
		=> Looking ahead 5 chars => // Vali
		=> Looking ahead 6 chars => // Valid
		=> Looking ahead 7 chars => // Valid.
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 2 =>   (buffer: )
		Process char 3 => V (buffer:  )
		Process char 4 => a (buffer:  V)
		Process char 5 => l (buffer:  Va)
		Process char 6 => i (buffer:  Val)
		Process char 7 => d (buffer:  Vali)
		Process char 8 => . (buffer:  Valid)
	=> Added token T_STRING ( Valid)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .\n
		=> Looking ahead 2 chars => .\nf
		=> Looking ahead 3 chars => .\nfo
		=> Looking ahead 4 chars => .\nfor
		=> Looking ahead 5 chars => .\nfor 
		=> Looking ahead 6 chars => .\nfor (
		=> Looking ahead 7 chars => .\nfor (v
		=> Looking ahead 8 chars => .\nfor (va
		=> Looking ahead 9 chars => .\nfor (var
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 9 => \n (buffer: )
		* found end of comment *
	=> Added token T_STRING (\n)
	Process char 10 => f (buffer: )
	Process char 11 => o (buffer: f)
	Process char 12 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (v
		=> Looking ahead 4 chars => for (va
		=> Looking ahead 5 chars => for (var
		=> Looking ahead 6 chars => for (var 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 13 =>   (buffer: )
	Process char 14 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (v
		=> Looking ahead 2 chars => (va
		=> Looking ahead 3 chars => (var
		=> Looking ahead 4 chars => (var 
		=> Looking ahead 5 chars => (var i
		=> Looking ahead 6 chars => (var i 
		=> Looking ahead 7 chars => (var i =
		=> Looking ahead 8 chars => (var i = 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 15 => v (buffer: )
	Process char 16 => a (buffer: v)
	Process char 17 => r (buffer: va)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => var 
		=> Looking ahead 2 chars => var i
		=> Looking ahead 3 chars => var i 
		=> Looking ahead 4 chars => var i =
		=> Looking ahead 5 chars => var i = 
		=> Looking ahead 6 chars => var i = 0
		* look ahead found nothing *
	=> Added token T_VAR (var)
	Process char 18 =>   (buffer: )
	Process char 19 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 20 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 21 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0; i
		=> Looking ahead 6 chars => = 0; i 
		=> Looking ahead 7 chars => = 0; i <
		=> Looking ahead 8 chars => = 0; i < 
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 22 =>   (buffer: )
	Process char 23 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 24 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		=> Looking ahead 9 chars => ; i < 10; 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 25 =>   (buffer: )
	Process char 26 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 27 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 28 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; i
		=> Looking ahead 7 chars => < 10; i+
		=> Looking ahead 8 chars => < 10; i++
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 29 =>   (buffer: )
	Process char 30 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 31 => 0 (buffer: 1)
	Process char 32 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++)
		=> Looking ahead 6 chars => ; i++) 
		=> Looking ahead 7 chars => ; i++) {
		=> Looking ahead 8 chars => ; i++) {\n
		=> Looking ahead 9 chars => ; i++) {\n}
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 33 =>   (buffer: )
	Process char 34 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 35 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 35 *
	Process char 36 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++)
		=> Looking ahead 2 chars => ++) 
		=> Looking ahead 3 chars => ++) {
		=> Looking ahead 4 chars => ++) {\n
		=> Looking ahead 5 chars => ++) {\n}
		=> Looking ahead 6 chars => ++) {\n}\n
		=> Looking ahead 7 chars => ++) {\n}\n\n
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 37 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {\n
		=> Looking ahead 4 chars => ) {\n}
		=> Looking ahead 5 chars => ) {\n}\n
		=> Looking ahead 6 chars => ) {\n}\n\n
		=> Looking ahead 7 chars => ) {\n}\n\n/
		=> Looking ahead 8 chars => ) {\n}\n\n//
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 38 =>   (buffer: )
	Process char 39 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {\n
		=> Looking ahead 2 chars => {\n}
		=> Looking ahead 3 chars => {\n}\n
		=> Looking ahead 4 chars => {\n}\n\n
		=> Looking ahead 5 chars => {\n}\n\n/
		=> Looking ahead 6 chars => {\n}\n\n//
		=> Looking ahead 7 chars => {\n}\n\n// 
		=> Looking ahead 8 chars => {\n}\n\n// I
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 40 => \n (buffer: )
	Process char 41 => } (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\n/
		=> Looking ahead 4 chars => }\n\n//
		=> Looking ahead 5 chars => }\n\n// 
		=> Looking ahead 6 chars => }\n\n// I
		=> Looking ahead 7 chars => }\n\n// In
		=> Looking ahead 8 chars => }\n\n// Inv
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 42 => \n (buffer: )
	Process char 43 => \n (buffer: \n)
	Process char 44 => / (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 44 *
	Process char 45 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // I
		=> Looking ahead 3 chars => // In
		=> Looking ahead 4 chars => // Inv
		=> Looking ahead 5 chars => // Inva
		=> Looking ahead 6 chars => // Inval
		=> Looking ahead 7 chars => // Invali
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 46 =>   (buffer: )
		Process char 47 => I (buffer:  )
		Process char 48 => n (buffer:  I)
		Process char 49 => v (buffer:  In)
		Process char 50 => a (buffer:  Inv)
		Process char 51 => l (buffer:  Inva)
		Process char 52 => i (buffer:  Inval)
		Process char 53 => d (buffer:  Invali)
		Process char 54 => . (buffer:  Invalid)
	=> Added token T_STRING ( Invalid)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .\n
		=> Looking ahead 2 chars => .\nf
		=> Looking ahead 3 chars => .\nfo
		=> Looking ahead 4 chars => .\nfor
		=> Looking ahead 5 chars => .\nfor 
		=> Looking ahead 6 chars => .\nfor (
		=> Looking ahead 7 chars => .\nfor ( 
		=> Looking ahead 8 chars => .\nfor ( i
		=> Looking ahead 9 chars => .\nfor ( i 
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 55 => \n (buffer: )
		* found end of comment *
	=> Added token T_STRING (\n)
	Process char 56 => f (buffer: )
	Process char 57 => o (buffer: f)
	Process char 58 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for ( 
		=> Looking ahead 4 chars => for ( i
		=> Looking ahead 5 chars => for ( i 
		=> Looking ahead 6 chars => for ( i =
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 59 =>   (buffer: )
	Process char 60 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ( 
		=> Looking ahead 2 chars => ( i
		=> Looking ahead 3 chars => ( i 
		=> Looking ahead 4 chars => ( i =
		=> Looking ahead 5 chars => ( i = 
		=> Looking ahead 6 chars => ( i = 0
		=> Looking ahead 7 chars => ( i = 0;
		=> Looking ahead 8 chars => ( i = 0; 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 61 =>   (buffer: )
	Process char 62 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 63 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 64 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0; i
		=> Looking ahead 6 chars => = 0; i 
		=> Looking ahead 7 chars => = 0; i <
		=> Looking ahead 8 chars => = 0; i < 
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 65 =>   (buffer: )
	Process char 66 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 67 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		=> Looking ahead 9 chars => ; i < 10; 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 68 =>   (buffer: )
	Process char 69 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 70 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 71 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; i
		=> Looking ahead 7 chars => < 10; i+
		=> Looking ahead 8 chars => < 10; i++
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 72 =>   (buffer: )
	Process char 73 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 74 => 0 (buffer: 1)
	Process char 75 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++ 
		=> Looking ahead 6 chars => ; i++ )
		=> Looking ahead 7 chars => ; i++ ) 
		=> Looking ahead 8 chars => ; i++ ) {
		=> Looking ahead 9 chars => ; i++ ) {\n
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 76 =>   (buffer: )
	Process char 77 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 78 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 78 *
	Process char 79 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++ 
		=> Looking ahead 2 chars => ++ )
		=> Looking ahead 3 chars => ++ ) 
		=> Looking ahead 4 chars => ++ ) {
		=> Looking ahead 5 chars => ++ ) {\n
		=> Looking ahead 6 chars => ++ ) {\n}
		=> Looking ahead 7 chars => ++ ) {\n}\n
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 80 =>   (buffer: )
	Process char 81 => ) (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {\n
		=> Looking ahead 4 chars => ) {\n}
		=> Looking ahead 5 chars => ) {\n}\n
		=> Looking ahead 6 chars => ) {\n}\n\n
		=> Looking ahead 7 chars => ) {\n}\n\nf
		=> Looking ahead 8 chars => ) {\n}\n\nfo
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 82 =>   (buffer: )
	Process char 83 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {\n
		=> Looking ahead 2 chars => {\n}
		=> Looking ahead 3 chars => {\n}\n
		=> Looking ahead 4 chars => {\n}\n\n
		=> Looking ahead 5 chars => {\n}\n\nf
		=> Looking ahead 6 chars => {\n}\n\nfo
		=> Looking ahead 7 chars => {\n}\n\nfor
		=> Looking ahead 8 chars => {\n}\n\nfor 
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 84 => \n (buffer: )
	Process char 85 => } (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\nf
		=> Looking ahead 4 chars => }\n\nfo
		=> Looking ahead 5 chars => }\n\nfor
		=> Looking ahead 6 chars => }\n\nfor 
		=> Looking ahead 7 chars => }\n\nfor (
		=> Looking ahead 8 chars => }\n\nfor (i
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 86 => \n (buffer: )
	Process char 87 => \n (buffer: \n)
	Process char 88 => f (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
	Process char 89 => o (buffer: f)
	Process char 90 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (i
		=> Looking ahead 4 chars => for (i 
		=> Looking ahead 5 chars => for (i =
		=> Looking ahead 6 chars => for (i = 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 91 =>   (buffer: )
	Process char 92 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (i
		=> Looking ahead 2 chars => (i 
		=> Looking ahead 3 chars => (i =
		=> Looking ahead 4 chars => (i = 
		=> Looking ahead 5 chars => (i = 0
		=> Looking ahead 6 chars => (i = 0;
		=> Looking ahead 7 chars => (i = 0; 
		=> Looking ahead 8 chars => (i = 0;  
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 93 => i (buffer: )
	Process char 94 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 95 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0;  
		=> Looking ahead 6 chars => = 0;  i
		=> Looking ahead 7 chars => = 0;  i 
		=> Looking ahead 8 chars => = 0;  i <
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 96 =>   (buffer: )
	Process char 97 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 98 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ;  
		=> Looking ahead 3 chars => ;  i
		=> Looking ahead 4 chars => ;  i 
		=> Looking ahead 5 chars => ;  i <
		=> Looking ahead 6 chars => ;  i < 
		=> Looking ahead 7 chars => ;  i < 1
		=> Looking ahead 8 chars => ;  i < 10
		=> Looking ahead 9 chars => ;  i < 10;
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 99 =>   (buffer: )
	Process char 100 =>   (buffer:  )
	Process char 101 => i (buffer:   )
	=> Added token T_WHITESPACE (  )
	Process char 102 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 103 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10;  
		=> Looking ahead 7 chars => < 10;  i
		=> Looking ahead 8 chars => < 10;  i+
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 104 =>   (buffer: )
	Process char 105 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 106 => 0 (buffer: 1)
	Process char 107 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ;  
		=> Looking ahead 3 chars => ;  i
		=> Looking ahead 4 chars => ;  i+
		=> Looking ahead 5 chars => ;  i++
		=> Looking ahead 6 chars => ;  i++)
		=> Looking ahead 7 chars => ;  i++) 
		=> Looking ahead 8 chars => ;  i++) {
		=> Looking ahead 9 chars => ;  i++) {\n
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 108 =>   (buffer: )
	Process char 109 =>   (buffer:  )
	Process char 110 => i (buffer:   )
	=> Added token T_WHITESPACE (  )
	Process char 111 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 111 *
	Process char 112 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++)
		=> Looking ahead 2 chars => ++) 
		=> Looking ahead 3 chars => ++) {
		=> Looking ahead 4 chars => ++) {\n
		=> Looking ahead 5 chars => ++) {\n}
		=> Looking ahead 6 chars => ++) {\n}\n
		=> Looking ahead 7 chars => ++) {\n}\n\n
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 113 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {\n
		=> Looking ahead 4 chars => ) {\n}
		=> Looking ahead 5 chars => ) {\n}\n
		=> Looking ahead 6 chars => ) {\n}\n\n
		=> Looking ahead 7 chars => ) {\n}\n\nf
		=> Looking ahead 8 chars => ) {\n}\n\nfo
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 114 =>   (buffer: )
	Process char 115 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {\n
		=> Looking ahead 2 chars => {\n}
		=> Looking ahead 3 chars => {\n}\n
		=> Looking ahead 4 chars => {\n}\n\n
		=> Looking ahead 5 chars => {\n}\n\nf
		=> Looking ahead 6 chars => {\n}\n\nfo
		=> Looking ahead 7 chars => {\n}\n\nfor
		=> Looking ahead 8 chars => {\n}\n\nfor 
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 116 => \n (buffer: )
	Process char 117 => } (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\nf
		=> Looking ahead 4 chars => }\n\nfo
		=> Looking ahead 5 chars => }\n\nfor
		=> Looking ahead 6 chars => }\n\nfor 
		=> Looking ahead 7 chars => }\n\nfor (
		=> Looking ahead 8 chars => }\n\nfor (v
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 118 => \n (buffer: )
	Process char 119 => \n (buffer: \n)
	Process char 120 => f (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
	Process char 121 => o (buffer: f)
	Process char 122 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (v
		=> Looking ahead 4 chars => for (va
		=> Looking ahead 5 chars => for (var
		=> Looking ahead 6 chars => for (var 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 123 =>   (buffer: )
	Process char 124 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (v
		=> Looking ahead 2 chars => (va
		=> Looking ahead 3 chars => (var
		=> Looking ahead 4 chars => (var 
		=> Looking ahead 5 chars => (var i
		=> Looking ahead 6 chars => (var i 
		=> Looking ahead 7 chars => (var i =
		=> Looking ahead 8 chars => (var i = 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 125 => v (buffer: )
	Process char 126 => a (buffer: v)
	Process char 127 => r (buffer: va)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => var 
		=> Looking ahead 2 chars => var i
		=> Looking ahead 3 chars => var i 
		=> Looking ahead 4 chars => var i =
		=> Looking ahead 5 chars => var i = 
		=> Looking ahead 6 chars => var i = 0
		* look ahead found nothing *
	=> Added token T_VAR (var)
	Process char 128 =>   (buffer: )
	Process char 129 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 130 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 131 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0 
		=> Looking ahead 4 chars => = 0 ;
		=> Looking ahead 5 chars => = 0 ; 
		=> Looking ahead 6 chars => = 0 ; i
		=> Looking ahead 7 chars => = 0 ; i 
		=> Looking ahead 8 chars => = 0 ; i <
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 132 =>   (buffer: )
	Process char 133 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 134 =>   (buffer: 0)
	=> Added token T_STRING (0)
	Process char 135 => ; (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 136 =>   (buffer: )
	Process char 137 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 138 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 139 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10 
		=> Looking ahead 5 chars => < 10 ;
		=> Looking ahead 6 chars => < 10 ; 
		=> Looking ahead 7 chars => < 10 ; i
		=> Looking ahead 8 chars => < 10 ; i+
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 140 =>   (buffer: )
	Process char 141 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 142 => 0 (buffer: 1)
	Process char 143 =>   (buffer: 10)
	=> Added token T_STRING (10)
	Process char 144 => ; (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++)
		=> Looking ahead 6 chars => ; i++) 
		=> Looking ahead 7 chars => ; i++) {
		=> Looking ahead 8 chars => ; i++) {\n
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 145 =>   (buffer: )
	Process char 146 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 147 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 147 *
	Process char 148 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++)
		=> Looking ahead 2 chars => ++) 
		=> Looking ahead 3 chars => ++) {
		=> Looking ahead 4 chars => ++) {\n
		=> Looking ahead 5 chars => ++) {\n}
		=> Looking ahead 6 chars => ++) {\n}\n
		=> Looking ahead 7 chars => ++) {\n}\n\n
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 149 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {\n
		=> Looking ahead 4 chars => ) {\n}
		=> Looking ahead 5 chars => ) {\n}\n
		=> Looking ahead 6 chars => ) {\n}\n\n
		=> Looking ahead 7 chars => ) {\n}\n\nf
		=> Looking ahead 8 chars => ) {\n}\n\nfo
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 150 =>   (buffer: )
	Process char 151 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {\n
		=> Looking ahead 2 chars => {\n}
		=> Looking ahead 3 chars => {\n}\n
		=> Looking ahead 4 chars => {\n}\n\n
		=> Looking ahead 5 chars => {\n}\n\nf
		=> Looking ahead 6 chars => {\n}\n\nfo
		=> Looking ahead 7 chars => {\n}\n\nfor
		=> Looking ahead 8 chars => {\n}\n\nfor 
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 152 => \n (buffer: )
	Process char 153 => } (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\nf
		=> Looking ahead 4 chars => }\n\nfo
		=> Looking ahead 5 chars => }\n\nfor
		=> Looking ahead 6 chars => }\n\nfor 
		=> Looking ahead 7 chars => }\n\nfor (
		=> Looking ahead 8 chars => }\n\nfor (i
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 154 => \n (buffer: )
	Process char 155 => \n (buffer: \n)
	Process char 156 => f (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
	Process char 157 => o (buffer: f)
	Process char 158 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (i
		=> Looking ahead 4 chars => for (i 
		=> Looking ahead 5 chars => for (i =
		=> Looking ahead 6 chars => for (i = 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 159 =>   (buffer: )
	Process char 160 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (i
		=> Looking ahead 2 chars => (i 
		=> Looking ahead 3 chars => (i =
		=> Looking ahead 4 chars => (i = 
		=> Looking ahead 5 chars => (i = 0
		=> Looking ahead 6 chars => (i = 0;
		=> Looking ahead 7 chars => (i = 0;i
		=> Looking ahead 8 chars => (i = 0;i 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 161 => i (buffer: )
	Process char 162 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 163 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0;i
		=> Looking ahead 5 chars => = 0;i 
		=> Looking ahead 6 chars => = 0;i <
		=> Looking ahead 7 chars => = 0;i < 
		=> Looking ahead 8 chars => = 0;i < 1
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 164 =>   (buffer: )
	Process char 165 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 166 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;i
		=> Looking ahead 2 chars => ;i 
		=> Looking ahead 3 chars => ;i <
		=> Looking ahead 4 chars => ;i < 
		=> Looking ahead 5 chars => ;i < 1
		=> Looking ahead 6 chars => ;i < 10
		=> Looking ahead 7 chars => ;i < 10;
		=> Looking ahead 8 chars => ;i < 10;i
		=> Looking ahead 9 chars => ;i < 10;i+
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 167 => i (buffer: )
	Process char 168 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 169 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10;i
		=> Looking ahead 6 chars => < 10;i+
		=> Looking ahead 7 chars => < 10;i++
		=> Looking ahead 8 chars => < 10;i++)
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 170 =>   (buffer: )
	Process char 171 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 172 => 0 (buffer: 1)
	Process char 173 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;i
		=> Looking ahead 2 chars => ;i+
		=> Looking ahead 3 chars => ;i++
		=> Looking ahead 4 chars => ;i++)
		=> Looking ahead 5 chars => ;i++) 
		=> Looking ahead 6 chars => ;i++) {
		=> Looking ahead 7 chars => ;i++) {\n
		=> Looking ahead 8 chars => ;i++) {\n}
		=> Looking ahead 9 chars => ;i++) {\n}\n
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 174 => i (buffer: )
	Process char 175 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 175 *
	Process char 176 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++)
		=> Looking ahead 2 chars => ++) 
		=> Looking ahead 3 chars => ++) {
		=> Looking ahead 4 chars => ++) {\n
		=> Looking ahead 5 chars => ++) {\n}
		=> Looking ahead 6 chars => ++) {\n}\n
		=> Looking ahead 7 chars => ++) {\n}\n\n
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 177 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {\n
		=> Looking ahead 4 chars => ) {\n}
		=> Looking ahead 5 chars => ) {\n}\n
		=> Looking ahead 6 chars => ) {\n}\n\n
		=> Looking ahead 7 chars => ) {\n}\n\n/
		=> Looking ahead 8 chars => ) {\n}\n\n//
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 178 =>   (buffer: )
	Process char 179 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {\n
		=> Looking ahead 2 chars => {\n}
		=> Looking ahead 3 chars => {\n}\n
		=> Looking ahead 4 chars => {\n}\n\n
		=> Looking ahead 5 chars => {\n}\n\n/
		=> Looking ahead 6 chars => {\n}\n\n//
		=> Looking ahead 7 chars => {\n}\n\n// 
		=> Looking ahead 8 chars => {\n}\n\n// T
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 180 => \n (buffer: )
	Process char 181 => } (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\n/
		=> Looking ahead 4 chars => }\n\n//
		=> Looking ahead 5 chars => }\n\n// 
		=> Looking ahead 6 chars => }\n\n// T
		=> Looking ahead 7 chars => }\n\n// Th
		=> Looking ahead 8 chars => }\n\n// The
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 182 => \n (buffer: )
	Process char 183 => \n (buffer: \n)
	Process char 184 => / (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 184 *
	Process char 185 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // T
		=> Looking ahead 3 chars => // Th
		=> Looking ahead 4 chars => // The
		=> Looking ahead 5 chars => // The 
		=> Looking ahead 6 chars => // The w
		=> Looking ahead 7 chars => // The wo
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 186 =>   (buffer: )
		Process char 187 => T (buffer:  )
		Process char 188 => h (buffer:  T)
		Process char 189 => e (buffer:  Th)
		Process char 190 =>   (buffer:  The)
		Process char 191 => w (buffer:  The )
		Process char 192 => o (buffer:  The w)
		Process char 193 => r (buffer:  The wo)
		Process char 194 => k (buffer:  The wor)
		Process char 195 => s (buffer:  The work)
		Process char 196 => . (buffer:  The works)
	=> Added token T_STRING ( The works)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .\n
		=> Looking ahead 2 chars => .\nf
		=> Looking ahead 3 chars => .\nfo
		=> Looking ahead 4 chars => .\nfor
		=> Looking ahead 5 chars => .\nfor 
		=> Looking ahead 6 chars => .\nfor (
		=> Looking ahead 7 chars => .\nfor ( 
		=> Looking ahead 8 chars => .\nfor ( v
		=> Looking ahead 9 chars => .\nfor ( va
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 197 => \n (buffer: )
		* found end of comment *
	=> Added token T_STRING (\n)
	Process char 198 => f (buffer: )
	Process char 199 => o (buffer: f)
	Process char 200 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for ( 
		=> Looking ahead 4 chars => for ( v
		=> Looking ahead 5 chars => for ( va
		=> Looking ahead 6 chars => for ( var
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 201 =>   (buffer: )
	Process char 202 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ( 
		=> Looking ahead 2 chars => ( v
		=> Looking ahead 3 chars => ( va
		=> Looking ahead 4 chars => ( var
		=> Looking ahead 5 chars => ( var 
		=> Looking ahead 6 chars => ( var i
		=> Looking ahead 7 chars => ( var i 
		=> Looking ahead 8 chars => ( var i =
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 203 =>   (buffer: )
	Process char 204 => v (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 205 => a (buffer: v)
	Process char 206 => r (buffer: va)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => var 
		=> Looking ahead 2 chars => var i
		=> Looking ahead 3 chars => var i 
		=> Looking ahead 4 chars => var i =
		=> Looking ahead 5 chars => var i = 
		=> Looking ahead 6 chars => var i = 0
		* look ahead found nothing *
	=> Added token T_VAR (var)
	Process char 207 =>   (buffer: )
	Process char 208 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 209 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 210 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0 
		=> Looking ahead 4 chars => = 0 ;
		=> Looking ahead 5 chars => = 0 ; 
		=> Looking ahead 6 chars => = 0 ;  
		=> Looking ahead 7 chars => = 0 ;  i
		=> Looking ahead 8 chars => = 0 ;  i 
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 211 =>   (buffer: )
	Process char 212 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 213 =>   (buffer: 0)
	=> Added token T_STRING (0)
	Process char 214 => ; (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ;  
		=> Looking ahead 3 chars => ;  i
		=> Looking ahead 4 chars => ;  i 
		=> Looking ahead 5 chars => ;  i <
		=> Looking ahead 6 chars => ;  i < 
		=> Looking ahead 7 chars => ;  i < 1
		=> Looking ahead 8 chars => ;  i < 10
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 215 =>   (buffer: )
	Process char 216 =>   (buffer:  )
	Process char 217 => i (buffer:   )
	=> Added token T_WHITESPACE (  )
	Process char 218 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 219 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10 
		=> Looking ahead 5 chars => < 10 ;
		=> Looking ahead 6 chars => < 10 ; 
		=> Looking ahead 7 chars => < 10 ;  
		=> Looking ahead 8 chars => < 10 ;  i
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 220 =>   (buffer: )
	Process char 221 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 222 => 0 (buffer: 1)
	Process char 223 =>   (buffer: 10)
	=> Added token T_STRING (10)
	Process char 224 => ; (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ;  
		=> Looking ahead 3 chars => ;  i
		=> Looking ahead 4 chars => ;  i+
		=> Looking ahead 5 chars => ;  i++
		=> Looking ahead 6 chars => ;  i++ 
		=> Looking ahead 7 chars => ;  i++ )
		=> Looking ahead 8 chars => ;  i++ ) 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 225 =>   (buffer: )
	Process char 226 =>   (buffer:  )
	Process char 227 => i (buffer:   )
	=> Added token T_WHITESPACE (  )
	Process char 228 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 228 *
	Process char 229 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++ 
		=> Looking ahead 2 chars => ++ )
		=> Looking ahead 3 chars => ++ ) 
		=> Looking ahead 4 chars => ++ ) {
		=> Looking ahead 5 chars => ++ ) {\n
		=> Looking ahead 6 chars => ++ ) {\n}
		=> Looking ahead 7 chars => ++ ) {\n}\n
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 230 =>   (buffer: )
	Process char 231 => ) (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {\n
		=> Looking ahead 4 chars => ) {\n}
		=> Looking ahead 5 chars => ) {\n}\n
		=> Looking ahead 6 chars => ) {\n}\n\n
		=> Looking ahead 7 chars => ) {\n}\n\nt
		=> Looking ahead 8 chars => ) {\n}\n\nth
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 232 =>   (buffer: )
	Process char 233 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {\n
		=> Looking ahead 2 chars => {\n}
		=> Looking ahead 3 chars => {\n}\n
		=> Looking ahead 4 chars => {\n}\n\n
		=> Looking ahead 5 chars => {\n}\n\nt
		=> Looking ahead 6 chars => {\n}\n\nth
		=> Looking ahead 7 chars => {\n}\n\nthi
		=> Looking ahead 8 chars => {\n}\n\nthis
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 234 => \n (buffer: )
	Process char 235 => } (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\nt
		=> Looking ahead 4 chars => }\n\nth
		=> Looking ahead 5 chars => }\n\nthi
		=> Looking ahead 6 chars => }\n\nthis
		=> Looking ahead 7 chars => }\n\nthis.
		=> Looking ahead 8 chars => }\n\nthis.f
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 236 => \n (buffer: )
	Process char 237 => \n (buffer: \n)
	Process char 238 => t (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
	Process char 239 => h (buffer: t)
	Process char 240 => i (buffer: th)
	Process char 241 => s (buffer: thi)
		* buffer possibly contains token, looking ahead 5 chars *
		=> Looking ahead 1 chars => this.
		=> Looking ahead 2 chars => this.f
		=> Looking ahead 3 chars => this.fo
		=> Looking ahead 4 chars => this.for
		=> Looking ahead 5 chars => this.form
		* look ahead found nothing *
	=> Added token T_THIS (this)
	Process char 242 => . (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .f
		=> Looking ahead 2 chars => .fo
		=> Looking ahead 3 chars => .for
		=> Looking ahead 4 chars => .form
		=> Looking ahead 5 chars => .forma
		=> Looking ahead 6 chars => .format
		=> Looking ahead 7 chars => .formats
		=> Looking ahead 8 chars => .formats 
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 243 => f (buffer: )
	Process char 244 => o (buffer: f)
	Process char 245 => r (buffer: fo)
	Process char 246 => m (buffer: for)
	Process char 247 => a (buffer: form)
	Process char 248 => t (buffer: forma)
	Process char 249 => s (buffer: format)
	Process char 250 =>   (buffer: formats)
	=> Added token T_STRING (formats)
	Process char 251 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = {
		=> Looking ahead 3 chars => = {}
		=> Looking ahead 4 chars => = {};
		=> Looking ahead 5 chars => = {};\n
		=> Looking ahead 6 chars => = {};\nd
		=> Looking ahead 7 chars => = {};\ndf
		=> Looking ahead 8 chars => = {};\ndfx
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 252 =>   (buffer: )
	Process char 253 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {};
		=> Looking ahead 3 chars => {};\n
		=> Looking ahead 4 chars => {};\nd
		=> Looking ahead 5 chars => {};\ndf
		=> Looking ahead 6 chars => {};\ndfx
		=> Looking ahead 7 chars => {};\ndfx.
		=> Looking ahead 8 chars => {};\ndfx.i
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 254 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => };
		=> Looking ahead 2 chars => };\n
		=> Looking ahead 3 chars => };\nd
		=> Looking ahead 4 chars => };\ndf
		=> Looking ahead 5 chars => };\ndfx
		=> Looking ahead 6 chars => };\ndfx.
		=> Looking ahead 7 chars => };\ndfx.i
		=> Looking ahead 8 chars => };\ndfx.in
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 255 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;\n
		=> Looking ahead 2 chars => ;\nd
		=> Looking ahead 3 chars => ;\ndf
		=> Looking ahead 4 chars => ;\ndfx
		=> Looking ahead 5 chars => ;\ndfx.
		=> Looking ahead 6 chars => ;\ndfx.i
		=> Looking ahead 7 chars => ;\ndfx.in
		=> Looking ahead 8 chars => ;\ndfx.inh
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 256 => \n (buffer: )
	Process char 257 => d (buffer: \n)
	=> Added token T_WHITESPACE (\n)
	Process char 258 => f (buffer: d)
	Process char 259 => x (buffer: df)
	Process char 260 => . (buffer: dfx)
	=> Added token T_STRING (dfx)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .i
		=> Looking ahead 2 chars => .in
		=> Looking ahead 3 chars => .inh
		=> Looking ahead 4 chars => .inhe
		=> Looking ahead 5 chars => .inher
		=> Looking ahead 6 chars => .inheri
		=> Looking ahead 7 chars => .inherit
		=> Looking ahead 8 chars => .inherits
		=> Looking ahead 9 chars => .inherits(
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 261 => i (buffer: )
	Process char 262 => n (buffer: i)
	Process char 263 => h (buffer: in)
	Process char 264 => e (buffer: inh)
	Process char 265 => r (buffer: inhe)
	Process char 266 => i (buffer: inher)
	Process char 267 => t (buffer: inheri)
	Process char 268 => s (buffer: inherit)
	Process char 269 => ( (buffer: inherits)
	=> Added token T_STRING (inherits)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ('
		=> Looking ahead 2 chars => ('C
		=> Looking ahead 3 chars => ('Co
		=> Looking ahead 4 chars => ('Con
		=> Looking ahead 5 chars => ('Cont
		=> Looking ahead 6 chars => ('Conte
		=> Looking ahead 7 chars => ('Conten
		=> Looking ahead 8 chars => ('Content
		=> Looking ahead 9 chars => ('ContentF
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 270 => ' (buffer: )
		* looking for string closer *
		Process char 271 => C (buffer: ')
		Process char 272 => o (buffer: 'C)
		Process char 273 => n (buffer: 'Co)
		Process char 274 => t (buffer: 'Con)
		Process char 275 => e (buffer: 'Cont)
		Process char 276 => n (buffer: 'Conte)
		Process char 277 => t (buffer: 'Conten)
		Process char 278 => F (buffer: 'Content)
		Process char 279 => o (buffer: 'ContentF)
		Process char 280 => r (buffer: 'ContentFo)
		Process char 281 => m (buffer: 'ContentFor)
		Process char 282 => a (buffer: 'ContentForm)
		Process char 283 => t (buffer: 'ContentForma)
		Process char 284 => ' (buffer: 'ContentFormat)
		* found end of string *
	=> Added token T_CONSTANT_ENCAPSED_STRING ('ContentFormat')
	Process char 285 => , (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => , 
		=> Looking ahead 2 chars => , '
		=> Looking ahead 3 chars => , 'W
		=> Looking ahead 4 chars => , 'Wi
		=> Looking ahead 5 chars => , 'Wid
		=> Looking ahead 6 chars => , 'Widg
		=> Looking ahead 7 chars => , 'Widge
		=> Looking ahead 8 chars => , 'Widget
		* look ahead found nothing *
	=> Added token T_COMMA (,)
	Process char 286 =>   (buffer: )
	Process char 287 => ' (buffer:  )
	=> Added token T_WHITESPACE ( )
		* looking for string closer *
		Process char 288 => W (buffer: ')
		Process char 289 => i (buffer: 'W)
		Process char 290 => d (buffer: 'Wi)
		Process char 291 => g (buffer: 'Wid)
		Process char 292 => e (buffer: 'Widg)
		Process char 293 => t (buffer: 'Widge)
		Process char 294 => ' (buffer: 'Widget)
		* found end of string *
	=> Added token T_CONSTANT_ENCAPSED_STRING ('Widget')
	Process char 295 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => );
		=> Looking ahead 2 chars => );\n
		=> Looking ahead 3 chars => );\n\n
		=> Looking ahead 4 chars => );\n\nf
		=> Looking ahead 5 chars => );\n\nfo
		=> Looking ahead 6 chars => );\n\nfor
		=> Looking ahead 7 chars => );\n\nfor 
		=> Looking ahead 8 chars => );\n\nfor (
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 296 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;\n
		=> Looking ahead 2 chars => ;\n\n
		=> Looking ahead 3 chars => ;\n\nf
		=> Looking ahead 4 chars => ;\n\nfo
		=> Looking ahead 5 chars => ;\n\nfor
		=> Looking ahead 6 chars => ;\n\nfor 
		=> Looking ahead 7 chars => ;\n\nfor (
		=> Looking ahead 8 chars => ;\n\nfor (v
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 297 => \n (buffer: )
	Process char 298 => \n (buffer: \n)
	Process char 299 => f (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
	Process char 300 => o (buffer: f)
	Process char 301 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (v
		=> Looking ahead 4 chars => for (va
		=> Looking ahead 5 chars => for (var
		=> Looking ahead 6 chars => for (var 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 302 =>   (buffer: )
	Process char 303 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (v
		=> Looking ahead 2 chars => (va
		=> Looking ahead 3 chars => (var
		=> Looking ahead 4 chars => (var 
		=> Looking ahead 5 chars => (var w
		=> Looking ahead 6 chars => (var wi
		=> Looking ahead 7 chars => (var wid
		=> Looking ahead 8 chars => (var widg
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 304 => v (buffer: )
	Process char 305 => a (buffer: v)
	Process char 306 => r (buffer: va)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => var 
		=> Looking ahead 2 chars => var w
		=> Looking ahead 3 chars => var wi
		=> Looking ahead 4 chars => var wid
		=> Looking ahead 5 chars => var widg
		=> Looking ahead 6 chars => var widge
		* look ahead found nothing *
	=> Added token T_VAR (var)
	Process char 307 =>   (buffer: )
	Process char 308 => w (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 309 => i (buffer: w)
	Process char 310 => d (buffer: wi)
	Process char 311 => g (buffer: wid)
	Process char 312 => e (buffer: widg)
	Process char 313 => t (buffer: widge)
	Process char 314 => i (buffer: widget)
	Process char 315 => d (buffer: widgeti)
	Process char 316 =>   (buffer: widgetid)
	=> Added token T_STRING (widgetid)
	Process char 317 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 318 => n (buffer: i)
	Process char 319 =>   (buffer: in)
	=> Added token T_STRING (in)
	Process char 320 => t (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 321 => h (buffer: t)
	Process char 322 => i (buffer: th)
	Process char 323 => s (buffer: thi)
		* buffer possibly contains token, looking ahead 5 chars *
		=> Looking ahead 1 chars => this.
		=> Looking ahead 2 chars => this.l
		=> Looking ahead 3 chars => this.lo
		=> Looking ahead 4 chars => this.loa
		=> Looking ahead 5 chars => this.load
		* look ahead found nothing *
	=> Added token T_THIS (this)
	Process char 324 => . (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .l
		=> Looking ahead 2 chars => .lo
		=> Looking ahead 3 chars => .loa
		=> Looking ahead 4 chars => .load
		=> Looking ahead 5 chars => .loade
		=> Looking ahead 6 chars => .loaded
		=> Looking ahead 7 chars => .loadedC
		=> Looking ahead 8 chars => .loadedCo
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 325 => l (buffer: )
	Process char 326 => o (buffer: l)
	Process char 327 => a (buffer: lo)
	Process char 328 => d (buffer: loa)
	Process char 329 => e (buffer: load)
	Process char 330 => d (buffer: loade)
	Process char 331 => C (buffer: loaded)
	Process char 332 => o (buffer: loadedC)
	Process char 333 => n (buffer: loadedCo)
	Process char 334 => t (buffer: loadedCon)
	Process char 335 => e (buffer: loadedCont)
	Process char 336 => n (buffer: loadedConte)
	Process char 337 => t (buffer: loadedConten)
	Process char 338 => s (buffer: loadedContent)
	Process char 339 => ) (buffer: loadedContents)
	=> Added token T_STRING (loadedContents)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {\n
		=> Looking ahead 4 chars => ) {\n 
		=> Looking ahead 5 chars => ) {\n  
		=> Looking ahead 6 chars => ) {\n   
		=> Looking ahead 7 chars => ) {\n    
		=> Looking ahead 8 chars => ) {\n    i
		=> Looking ahead 9 chars => ) {\n    if
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 340 =>   (buffer: )
	Process char 341 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {\n
		=> Looking ahead 2 chars => {\n 
		=> Looking ahead 3 chars => {\n  
		=> Looking ahead 4 chars => {\n   
		=> Looking ahead 5 chars => {\n    
		=> Looking ahead 6 chars => {\n    i
		=> Looking ahead 7 chars => {\n    if
		=> Looking ahead 8 chars => {\n    if 
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 342 => \n (buffer: )
	Process char 343 =>   (buffer: \n)
	Process char 344 =>   (buffer: \n )
	Process char 345 =>   (buffer: \n  )
	Process char 346 =>   (buffer: \n   )
	Process char 347 => i (buffer: \n    )
	=> Added token T_WHITESPACE (\n    )
	Process char 348 => f (buffer: i)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => if 
		=> Looking ahead 2 chars => if (
		=> Looking ahead 3 chars => if (d
		=> Looking ahead 4 chars => if (df
		=> Looking ahead 5 chars => if (dfx
		=> Looking ahead 6 chars => if (dfx.
		=> Looking ahead 7 chars => if (dfx.i
		* look ahead found nothing *
	=> Added token T_IF (if)
	Process char 349 =>   (buffer: )
	Process char 350 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (d
		=> Looking ahead 2 chars => (df
		=> Looking ahead 3 chars => (dfx
		=> Looking ahead 4 chars => (dfx.
		=> Looking ahead 5 chars => (dfx.i
		=> Looking ahead 6 chars => (dfx.is
		=> Looking ahead 7 chars => (dfx.iss
		=> Looking ahead 8 chars => (dfx.isse
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 351 => d (buffer: )
	Process char 352 => f (buffer: d)
	Process char 353 => x (buffer: df)
	Process char 354 => . (buffer: dfx)
	=> Added token T_STRING (dfx)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .i
		=> Looking ahead 2 chars => .is
		=> Looking ahead 3 chars => .iss
		=> Looking ahead 4 chars => .isse
		=> Looking ahead 5 chars => .isset
		=> Looking ahead 6 chars => .isset(
		=> Looking ahead 7 chars => .isset(w
		=> Looking ahead 8 chars => .isset(wi
		=> Looking ahead 9 chars => .isset(wid
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 355 => i (buffer: )
	Process char 356 => s (buffer: i)
	Process char 357 => s (buffer: is)
	Process char 358 => e (buffer: iss)
	Process char 359 => t (buffer: isse)
	Process char 360 => ( (buffer: isset)
	=> Added token T_STRING (isset)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (w
		=> Looking ahead 2 chars => (wi
		=> Looking ahead 3 chars => (wid
		=> Looking ahead 4 chars => (widg
		=> Looking ahead 5 chars => (widge
		=> Looking ahead 6 chars => (widget
		=> Looking ahead 7 chars => (widget)
		=> Looking ahead 8 chars => (widget) 
		=> Looking ahead 9 chars => (widget) =
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 361 => w (buffer: )
	Process char 362 => i (buffer: w)
	Process char 363 => d (buffer: wi)
	Process char 364 => g (buffer: wid)
	Process char 365 => e (buffer: widg)
	Process char 366 => t (buffer: widge)
	Process char 367 => ) (buffer: widget)
	=> Added token T_STRING (widget)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) =
		=> Looking ahead 3 chars => ) ==
		=> Looking ahead 4 chars => ) ===
		=> Looking ahead 5 chars => ) === 
		=> Looking ahead 6 chars => ) === t
		=> Looking ahead 7 chars => ) === tr
		=> Looking ahead 8 chars => ) === tru
		=> Looking ahead 9 chars => ) === true
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 368 =>   (buffer: )
	Process char 369 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ==
		* look ahead found more specific token (T_IS_EQUAL), ignoring 369 *
	Process char 370 => = (buffer: =)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ===
		* look ahead found more specific token (T_IS_IDENTICAL), ignoring 370 *
	Process char 371 => = (buffer: ==)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => === 
		=> Looking ahead 2 chars => === t
		=> Looking ahead 3 chars => === tr
		=> Looking ahead 4 chars => === tru
		=> Looking ahead 5 chars => === true
		=> Looking ahead 6 chars => === true)
		* look ahead found nothing *
	=> Added token T_IS_IDENTICAL (===)
	Process char 372 =>   (buffer: )
	Process char 373 => t (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 374 => r (buffer: t)
	Process char 375 => u (buffer: tr)
	Process char 376 => e (buffer: tru)
		* buffer possibly contains token, looking ahead 5 chars *
		=> Looking ahead 1 chars => true)
		=> Looking ahead 2 chars => true) 
		=> Looking ahead 3 chars => true) {
		=> Looking ahead 4 chars => true) {\n
		=> Looking ahead 5 chars => true) {\n 
		* look ahead found nothing *
	=> Added token T_TRUE (true)
	Process char 377 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {\n
		=> Looking ahead 4 chars => ) {\n 
		=> Looking ahead 5 chars => ) {\n  
		=> Looking ahead 6 chars => ) {\n   
		=> Looking ahead 7 chars => ) {\n    
		=> Looking ahead 8 chars => ) {\n     
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 378 =>   (buffer: )
	Process char 379 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {\n
		=> Looking ahead 2 chars => {\n 
		=> Looking ahead 3 chars => {\n  
		=> Looking ahead 4 chars => {\n   
		=> Looking ahead 5 chars => {\n    
		=> Looking ahead 6 chars => {\n     
		=> Looking ahead 7 chars => {\n      
		=> Looking ahead 8 chars => {\n       
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 380 => \n (buffer: )
	Process char 381 =>   (buffer: \n)
	Process char 382 =>   (buffer: \n )
	Process char 383 =>   (buffer: \n  )
	Process char 384 =>   (buffer: \n   )
	Process char 385 =>   (buffer: \n    )
	Process char 386 =>   (buffer: \n     )
	Process char 387 =>   (buffer: \n      )
	Process char 388 =>   (buffer: \n       )
	Process char 389 => w (buffer: \n        )
	=> Added token T_WHITESPACE (\n        )
	Process char 390 => i (buffer: w)
	Process char 391 => d (buffer: wi)
	Process char 392 => g (buffer: wid)
	Process char 393 => e (buffer: widg)
	Process char 394 => t (buffer: widge)
	Process char 395 => . (buffer: widget)
	=> Added token T_STRING (widget)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .l
		=> Looking ahead 2 chars => .lo
		=> Looking ahead 3 chars => .loa
		=> Looking ahead 4 chars => .load
		=> Looking ahead 5 chars => .loadA
		=> Looking ahead 6 chars => .loadAu
		=> Looking ahead 7 chars => .loadAut
		=> Looking ahead 8 chars => .loadAuto
		=> Looking ahead 9 chars => .loadAutoS
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 396 => l (buffer: )
	Process char 397 => o (buffer: l)
	Process char 398 => a (buffer: lo)
	Process char 399 => d (buffer: loa)
	Process char 400 => A (buffer: load)
	Process char 401 => u (buffer: loadA)
	Process char 402 => t (buffer: loadAu)
	Process char 403 => o (buffer: loadAut)
	Process char 404 => S (buffer: loadAuto)
	Process char 405 => a (buffer: loadAutoS)
	Process char 406 => v (buffer: loadAutoSa)
	Process char 407 => e (buffer: loadAutoSav)
	Process char 408 => C (buffer: loadAutoSave)
	Process char 409 => W (buffer: loadAutoSaveC)
	Process char 410 => i (buffer: loadAutoSaveCW)
	Process char 411 => d (buffer: loadAutoSaveCWi)
	Process char 412 => g (buffer: loadAutoSaveCWid)
	Process char 413 => e (buffer: loadAutoSaveCWidg)
	Process char 414 => t (buffer: loadAutoSaveCWidge)
	Process char 415 => S (buffer: loadAutoSaveCWidget)
	Process char 416 => t (buffer: loadAutoSaveCWidgetS)
	Process char 417 => o (buffer: loadAutoSaveCWidgetSt)
	Process char 418 => r (buffer: loadAutoSaveCWidgetSto)
	Process char 419 => e (buffer: loadAutoSaveCWidgetStor)
	Process char 420 => . (buffer: loadAutoSaveCWidgetStore)
	=> Added token T_STRING (loadAutoSaveCWidgetStore)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .s
		=> Looking ahead 2 chars => .se
		=> Looking ahead 3 chars => .set
		=> Looking ahead 4 chars => .setD
		=> Looking ahead 5 chars => .setDa
		=> Looking ahead 6 chars => .setDat
		=> Looking ahead 7 chars => .setData
		=> Looking ahead 8 chars => .setData(
		=> Looking ahead 9 chars => .setData('
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 421 => s (buffer: )
	Process char 422 => e (buffer: s)
	Process char 423 => t (buffer: se)
	Process char 424 => D (buffer: set)
	Process char 425 => a (buffer: setD)
	Process char 426 => t (buffer: setDa)
	Process char 427 => a (buffer: setDat)
	Process char 428 => ( (buffer: setData)
	=> Added token T_STRING (setData)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ('
		=> Looking ahead 2 chars => ('a
		=> Looking ahead 3 chars => ('ac
		=> Looking ahead 4 chars => ('act
		=> Looking ahead 5 chars => ('acti
		=> Looking ahead 6 chars => ('activ
		=> Looking ahead 7 chars => ('active
		=> Looking ahead 8 chars => ('activeS
		=> Looking ahead 9 chars => ('activeSc
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 429 => ' (buffer: )
		* looking for string closer *
		Process char 430 => a (buffer: ')
		Process char 431 => c (buffer: 'a)
		Process char 432 => t (buffer: 'ac)
		Process char 433 => i (buffer: 'act)
		Process char 434 => v (buffer: 'acti)
		Process char 435 => e (buffer: 'activ)
		Process char 436 => S (buffer: 'active)
		Process char 437 => c (buffer: 'activeS)
		Process char 438 => r (buffer: 'activeSc)
		Process char 439 => e (buffer: 'activeScr)
		Process char 440 => e (buffer: 'activeScre)
		Process char 441 => n (buffer: 'activeScree)
		Process char 442 => ' (buffer: 'activeScreen)
		* found end of string *
	=> Added token T_CONSTANT_ENCAPSED_STRING ('activeScreen')
	Process char 443 => , (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => , 
		=> Looking ahead 2 chars => , n
		=> Looking ahead 3 chars => , nu
		=> Looking ahead 4 chars => , nul
		=> Looking ahead 5 chars => , null
		=> Looking ahead 6 chars => , null)
		=> Looking ahead 7 chars => , null);
		=> Looking ahead 8 chars => , null);w
		* look ahead found nothing *
	=> Added token T_COMMA (,)
	Process char 444 =>   (buffer: )
	Process char 445 => n (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 446 => u (buffer: n)
	Process char 447 => l (buffer: nu)
	Process char 448 => l (buffer: nul)
		* buffer possibly contains token, looking ahead 5 chars *
		=> Looking ahead 1 chars => null)
		=> Looking ahead 2 chars => null);
		=> Looking ahead 3 chars => null);w
		=> Looking ahead 4 chars => null);wi
		=> Looking ahead 5 chars => null);wid
		* look ahead found nothing *
	=> Added token T_NULL (null)
	Process char 449 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => );
		=> Looking ahead 2 chars => );w
		=> Looking ahead 3 chars => );wi
		=> Looking ahead 4 chars => );wid
		=> Looking ahead 5 chars => );widg
		=> Looking ahead 6 chars => );widge
		=> Looking ahead 7 chars => );widget
		=> Looking ahead 8 chars => );widget.
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 450 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;w
		=> Looking ahead 2 chars => ;wi
		=> Looking ahead 3 chars => ;wid
		=> Looking ahead 4 chars => ;widg
		=> Looking ahead 5 chars => ;widge
		=> Looking ahead 6 chars => ;widget
		=> Looking ahead 7 chars => ;widget.
		=> Looking ahead 8 chars => ;widget.g
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 451 => w (buffer: )
	Process char 452 => i (buffer: w)
	Process char 453 => d (buffer: wi)
	Process char 454 => g (buffer: wid)
	Process char 455 => e (buffer: widg)
	Process char 456 => t (buffer: widge)
	Process char 457 => . (buffer: widget)
	=> Added token T_STRING (widget)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .g
		=> Looking ahead 2 chars => .ge
		=> Looking ahead 3 chars => .get
		=> Looking ahead 4 chars => .getC
		=> Looking ahead 5 chars => .getCo
		=> Looking ahead 6 chars => .getCon
		=> Looking ahead 7 chars => .getCont
		=> Looking ahead 8 chars => .getConte
		=> Looking ahead 9 chars => .getConten
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 458 => g (buffer: )
	Process char 459 => e (buffer: g)
	Process char 460 => t (buffer: ge)
	Process char 461 => C (buffer: get)
	Process char 462 => o (buffer: getC)
	Process char 463 => n (buffer: getCo)
	Process char 464 => t (buffer: getCon)
	Process char 465 => e (buffer: getCont)
	Process char 466 => n (buffer: getConte)
	Process char 467 => t (buffer: getConten)
	Process char 468 => s (buffer: getContent)
	Process char 469 => ( (buffer: getContents)
	=> Added token T_STRING (getContents)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (t
		=> Looking ahead 2 chars => (th
		=> Looking ahead 3 chars => (thi
		=> Looking ahead 4 chars => (this
		=> Looking ahead 5 chars => (this.
		=> Looking ahead 6 chars => (this.l
		=> Looking ahead 7 chars => (this.lo
		=> Looking ahead 8 chars => (this.loa
		=> Looking ahead 9 chars => (this.load
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 470 => t (buffer: )
	Process char 471 => h (buffer: t)
	Process char 472 => i (buffer: th)
	Process char 473 => s (buffer: thi)
		* buffer possibly contains token, looking ahead 5 chars *
		=> Looking ahead 1 chars => this.
		=> Looking ahead 2 chars => this.l
		=> Looking ahead 3 chars => this.lo
		=> Looking ahead 4 chars => this.loa
		=> Looking ahead 5 chars => this.load
		* look ahead found nothing *
	=> Added token T_THIS (this)
	Process char 474 => . (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .l
		=> Looking ahead 2 chars => .lo
		=> Looking ahead 3 chars => .loa
		=> Looking ahead 4 chars => .load
		=> Looking ahead 5 chars => .loade
		=> Looking ahead 6 chars => .loaded
		=> Looking ahead 7 chars => .loadedC
		=> Looking ahead 8 chars => .loadedCo
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 475 => l (buffer: )
	Process char 476 => o (buffer: l)
	Process char 477 => a (buffer: lo)
	Process char 478 => d (buffer: loa)
	Process char 479 => e (buffer: load)
	Process char 480 => d (buffer: loade)
	Process char 481 => C (buffer: loaded)
	Process char 482 => o (buffer: loadedC)
	Process char 483 => n (buffer: loadedCo)
	Process char 484 => t (buffer: loadedCon)
	Process char 485 => e (buffer: loadedCont)
	Process char 486 => n (buffer: loadedConte)
	Process char 487 => t (buffer: loadedConten)
	Process char 488 => s (buffer: loadedContent)
	Process char 489 => [ (buffer: loadedContents)
	=> Added token T_STRING (loadedContents)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => [w
		=> Looking ahead 2 chars => [wi
		=> Looking ahead 3 chars => [wid
		=> Looking ahead 4 chars => [widg
		=> Looking ahead 5 chars => [widge
		=> Looking ahead 6 chars => [widget
		=> Looking ahead 7 chars => [widgeti
		=> Looking ahead 8 chars => [widgetid
		=> Looking ahead 9 chars => [widgetid]
		* look ahead found nothing *
	=> Added token T_OPEN_SQUARE_BRACKET ([)
	Process char 490 => w (buffer: )
	Process char 491 => i (buffer: w)
	Process char 492 => d (buffer: wi)
	Process char 493 => g (buffer: wid)
	Process char 494 => e (buffer: widg)
	Process char 495 => t (buffer: widge)
	Process char 496 => i (buffer: widget)
	Process char 497 => d (buffer: widgeti)
	Process char 498 => ] (buffer: widgetid)
	=> Added token T_STRING (widgetid)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ],
		=> Looking ahead 2 chars => ], 
		=> Looking ahead 3 chars => ], f
		=> Looking ahead 4 chars => ], fu
		=> Looking ahead 5 chars => ], fun
		=> Looking ahead 6 chars => ], func
		=> Looking ahead 7 chars => ], funct
		=> Looking ahead 8 chars => ], functi
		=> Looking ahead 9 chars => ], functio
		* look ahead found nothing *
	=> Added token T_CLOSE_SQUARE_BRACKET (])
	Process char 499 => , (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => , 
		=> Looking ahead 2 chars => , f
		=> Looking ahead 3 chars => , fu
		=> Looking ahead 4 chars => , fun
		=> Looking ahead 5 chars => , func
		=> Looking ahead 6 chars => , funct
		=> Looking ahead 7 chars => , functi
		=> Looking ahead 8 chars => , functio
		* look ahead found nothing *
	=> Added token T_COMMA (,)
	Process char 500 =>   (buffer: )
	Process char 501 => f (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 502 => u (buffer: f)
	Process char 503 => n (buffer: fu)
	Process char 504 => c (buffer: fun)
	Process char 505 => t (buffer: func)
	Process char 506 => i (buffer: funct)
	Process char 507 => o (buffer: functi)
	Process char 508 => n (buffer: functio)
		* buffer possibly contains token, looking ahead 1 chars *
		=> Looking ahead 1 chars => function(
		* look ahead found nothing *
	=> Added token T_FUNCTION (function)
	Process char 509 => ( (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ()
		=> Looking ahead 2 chars => () 
		=> Looking ahead 3 chars => () {
		=> Looking ahead 4 chars => () {s
		=> Looking ahead 5 chars => () {se
		=> Looking ahead 6 chars => () {sel
		=> Looking ahead 7 chars => () {self
		=> Looking ahead 8 chars => () {self.
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 510 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {s
		=> Looking ahead 4 chars => ) {se
		=> Looking ahead 5 chars => ) {sel
		=> Looking ahead 6 chars => ) {self
		=> Looking ahead 7 chars => ) {self.
		=> Looking ahead 8 chars => ) {self.w
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 511 =>   (buffer: )
	Process char 512 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {s
		=> Looking ahead 2 chars => {se
		=> Looking ahead 3 chars => {sel
		=> Looking ahead 4 chars => {self
		=> Looking ahead 5 chars => {self.
		=> Looking ahead 6 chars => {self.w
		=> Looking ahead 7 chars => {self.wi
		=> Looking ahead 8 chars => {self.wid
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 513 => s (buffer: )
	Process char 514 => e (buffer: s)
	Process char 515 => l (buffer: se)
	Process char 516 => f (buffer: sel)
	Process char 517 => . (buffer: self)
	=> Added token T_STRING (self)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .w
		=> Looking ahead 2 chars => .wi
		=> Looking ahead 3 chars => .wid
		=> Looking ahead 4 chars => .widg
		=> Looking ahead 5 chars => .widge
		=> Looking ahead 6 chars => .widget
		=> Looking ahead 7 chars => .widgetL
		=> Looking ahead 8 chars => .widgetLo
		=> Looking ahead 9 chars => .widgetLoa
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 518 => w (buffer: )
	Process char 519 => i (buffer: w)
	Process char 520 => d (buffer: wi)
	Process char 521 => g (buffer: wid)
	Process char 522 => e (buffer: widg)
	Process char 523 => t (buffer: widge)
	Process char 524 => L (buffer: widget)
	Process char 525 => o (buffer: widgetL)
	Process char 526 => a (buffer: widgetLo)
	Process char 527 => d (buffer: widgetLoa)
	Process char 528 => e (buffer: widgetLoad)
	Process char 529 => d (buffer: widgetLoade)
	Process char 530 => ( (buffer: widgetLoaded)
	=> Added token T_STRING (widgetLoaded)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (w
		=> Looking ahead 2 chars => (wi
		=> Looking ahead 3 chars => (wid
		=> Looking ahead 4 chars => (widg
		=> Looking ahead 5 chars => (widge
		=> Looking ahead 6 chars => (widget
		=> Looking ahead 7 chars => (widget.
		=> Looking ahead 8 chars => (widget.i
		=> Looking ahead 9 chars => (widget.id
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 531 => w (buffer: )
	Process char 532 => i (buffer: w)
	Process char 533 => d (buffer: wi)
	Process char 534 => g (buffer: wid)
	Process char 535 => e (buffer: widg)
	Process char 536 => t (buffer: widge)
	Process char 537 => . (buffer: widget)
	=> Added token T_STRING (widget)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .i
		=> Looking ahead 2 chars => .id
		=> Looking ahead 3 chars => .id)
		=> Looking ahead 4 chars => .id);
		=> Looking ahead 5 chars => .id);}
		=> Looking ahead 6 chars => .id);})
		=> Looking ahead 7 chars => .id);});
		=> Looking ahead 8 chars => .id);});\n
		=> Looking ahead 9 chars => .id);});\n 
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 538 => i (buffer: )
	Process char 539 => d (buffer: i)
	Process char 540 => ) (buffer: id)
	=> Added token T_STRING (id)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => );
		=> Looking ahead 2 chars => );}
		=> Looking ahead 3 chars => );})
		=> Looking ahead 4 chars => );});
		=> Looking ahead 5 chars => );});\n
		=> Looking ahead 6 chars => );});\n 
		=> Looking ahead 7 chars => );});\n  
		=> Looking ahead 8 chars => );});\n   
		=> Looking ahead 9 chars => );});\n    
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 541 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;}
		=> Looking ahead 2 chars => ;})
		=> Looking ahead 3 chars => ;});
		=> Looking ahead 4 chars => ;});\n
		=> Looking ahead 5 chars => ;});\n 
		=> Looking ahead 6 chars => ;});\n  
		=> Looking ahead 7 chars => ;});\n   
		=> Looking ahead 8 chars => ;});\n    
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 542 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => })
		=> Looking ahead 2 chars => });
		=> Looking ahead 3 chars => });\n
		=> Looking ahead 4 chars => });\n 
		=> Looking ahead 5 chars => });\n  
		=> Looking ahead 6 chars => });\n   
		=> Looking ahead 7 chars => });\n    
		=> Looking ahead 8 chars => });\n    }
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 543 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => );
		=> Looking ahead 2 chars => );\n
		=> Looking ahead 3 chars => );\n 
		=> Looking ahead 4 chars => );\n  
		=> Looking ahead 5 chars => );\n   
		=> Looking ahead 6 chars => );\n    
		=> Looking ahead 7 chars => );\n    }
		=> Looking ahead 8 chars => );\n    }\n
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 544 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;\n
		=> Looking ahead 2 chars => ;\n 
		=> Looking ahead 3 chars => ;\n  
		=> Looking ahead 4 chars => ;\n   
		=> Looking ahead 5 chars => ;\n    
		=> Looking ahead 6 chars => ;\n    }
		=> Looking ahead 7 chars => ;\n    }\n
		=> Looking ahead 8 chars => ;\n    }\n}
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 545 => \n (buffer: )
	Process char 546 =>   (buffer: \n)
	Process char 547 =>   (buffer: \n )
	Process char 548 =>   (buffer: \n  )
	Process char 549 =>   (buffer: \n   )
	Process char 550 => } (buffer: \n    )
	=> Added token T_WHITESPACE (\n    )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n}
		=> Looking ahead 3 chars => }\n}\n
		=> Looking ahead 4 chars => }\n}\n\n
		=> Looking ahead 5 chars => }\n}\n\nf
		=> Looking ahead 6 chars => }\n}\n\nfo
		=> Looking ahead 7 chars => }\n}\n\nfor
		=> Looking ahead 8 chars => }\n}\n\nfor 
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 551 => \n (buffer: )
	Process char 552 => } (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\nf
		=> Looking ahead 4 chars => }\n\nfo
		=> Looking ahead 5 chars => }\n\nfor
		=> Looking ahead 6 chars => }\n\nfor 
		=> Looking ahead 7 chars => }\n\nfor (
		=> Looking ahead 8 chars => }\n\nfor (v
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 553 => \n (buffer: )
	Process char 554 => \n (buffer: \n)
	Process char 555 => f (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
	Process char 556 => o (buffer: f)
	Process char 557 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (v
		=> Looking ahead 4 chars => for (va
		=> Looking ahead 5 chars => for (var
		=> Looking ahead 6 chars => for (var 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 558 =>   (buffer: )
	Process char 559 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (v
		=> Looking ahead 2 chars => (va
		=> Looking ahead 3 chars => (var
		=> Looking ahead 4 chars => (var 
		=> Looking ahead 5 chars => (var i
		=> Looking ahead 6 chars => (var i 
		=> Looking ahead 7 chars => (var i =
		=> Looking ahead 8 chars => (var i = 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 560 => v (buffer: )
	Process char 561 => a (buffer: v)
	Process char 562 => r (buffer: va)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => var 
		=> Looking ahead 2 chars => var i
		=> Looking ahead 3 chars => var i 
		=> Looking ahead 4 chars => var i =
		=> Looking ahead 5 chars => var i = 
		=> Looking ahead 6 chars => var i = 0
		* look ahead found nothing *
	=> Added token T_VAR (var)
	Process char 563 =>   (buffer: )
	Process char 564 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 565 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 566 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0; i
		=> Looking ahead 6 chars => = 0; i 
		=> Looking ahead 7 chars => = 0; i <
		=> Looking ahead 8 chars => = 0; i < 
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 567 =>   (buffer: )
	Process char 568 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 569 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		=> Looking ahead 9 chars => ; i < 10;)
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 570 =>   (buffer: )
	Process char 571 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 572 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 573 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10;)
		=> Looking ahead 6 chars => < 10;) 
		=> Looking ahead 7 chars => < 10;) {
		=> Looking ahead 8 chars => < 10;) {\n
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 574 =>   (buffer: )
	Process char 575 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 576 => 0 (buffer: 1)
	Process char 577 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;)
		=> Looking ahead 2 chars => ;) 
		=> Looking ahead 3 chars => ;) {
		=> Looking ahead 4 chars => ;) {\n
		=> Looking ahead 5 chars => ;) {\n}
		=> Looking ahead 6 chars => ;) {\n}\n
		=> Looking ahead 7 chars => ;) {\n}\nf
		=> Looking ahead 8 chars => ;) {\n}\nfo
		=> Looking ahead 9 chars => ;) {\n}\nfor
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 578 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {\n
		=> Looking ahead 4 chars => ) {\n}
		=> Looking ahead 5 chars => ) {\n}\n
		=> Looking ahead 6 chars => ) {\n}\nf
		=> Looking ahead 7 chars => ) {\n}\nfo
		=> Looking ahead 8 chars => ) {\n}\nfor
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 579 =>   (buffer: )
	Process char 580 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {\n
		=> Looking ahead 2 chars => {\n}
		=> Looking ahead 3 chars => {\n}\n
		=> Looking ahead 4 chars => {\n}\nf
		=> Looking ahead 5 chars => {\n}\nfo
		=> Looking ahead 6 chars => {\n}\nfor
		=> Looking ahead 7 chars => {\n}\nfor 
		=> Looking ahead 8 chars => {\n}\nfor (
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 581 => \n (buffer: )
	Process char 582 => } (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\nf
		=> Looking ahead 3 chars => }\nfo
		=> Looking ahead 4 chars => }\nfor
		=> Looking ahead 5 chars => }\nfor 
		=> Looking ahead 6 chars => }\nfor (
		=> Looking ahead 7 chars => }\nfor (v
		=> Looking ahead 8 chars => }\nfor (va
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 583 => \n (buffer: )
	Process char 584 => f (buffer: \n)
	=> Added token T_WHITESPACE (\n)
	Process char 585 => o (buffer: f)
	Process char 586 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (v
		=> Looking ahead 4 chars => for (va
		=> Looking ahead 5 chars => for (var
		=> Looking ahead 6 chars => for (var 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 587 =>   (buffer: )
	Process char 588 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (v
		=> Looking ahead 2 chars => (va
		=> Looking ahead 3 chars => (var
		=> Looking ahead 4 chars => (var 
		=> Looking ahead 5 chars => (var i
		=> Looking ahead 6 chars => (var i 
		=> Looking ahead 7 chars => (var i =
		=> Looking ahead 8 chars => (var i = 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 589 => v (buffer: )
	Process char 590 => a (buffer: v)
	Process char 591 => r (buffer: va)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => var 
		=> Looking ahead 2 chars => var i
		=> Looking ahead 3 chars => var i 
		=> Looking ahead 4 chars => var i =
		=> Looking ahead 5 chars => var i = 
		=> Looking ahead 6 chars => var i = 0
		* look ahead found nothing *
	=> Added token T_VAR (var)
	Process char 592 =>   (buffer: )
	Process char 593 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 594 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 595 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0; i
		=> Looking ahead 6 chars => = 0; i 
		=> Looking ahead 7 chars => = 0; i <
		=> Looking ahead 8 chars => = 0; i < 
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 596 =>   (buffer: )
	Process char 597 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 598 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		=> Looking ahead 9 chars => ; i < 10; 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 599 =>   (buffer: )
	Process char 600 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 601 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 602 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; )
		=> Looking ahead 7 chars => < 10; ) 
		=> Looking ahead 8 chars => < 10; ) {
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 603 =>   (buffer: )
	Process char 604 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 605 => 0 (buffer: 1)
	Process char 606 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; )
		=> Looking ahead 3 chars => ; ) 
		=> Looking ahead 4 chars => ; ) {
		=> Looking ahead 5 chars => ; ) {\n
		=> Looking ahead 6 chars => ; ) {\n}
		=> Looking ahead 7 chars => ; ) {\n}\n
		=> Looking ahead 8 chars => ; ) {\n}\n\n
		=> Looking ahead 9 chars => ; ) {\n}\n\nf
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 607 =>   (buffer: )
	Process char 608 => ) (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {\n
		=> Looking ahead 4 chars => ) {\n}
		=> Looking ahead 5 chars => ) {\n}\n
		=> Looking ahead 6 chars => ) {\n}\n\n
		=> Looking ahead 7 chars => ) {\n}\n\nf
		=> Looking ahead 8 chars => ) {\n}\n\nfo
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 609 =>   (buffer: )
	Process char 610 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {\n
		=> Looking ahead 2 chars => {\n}
		=> Looking ahead 3 chars => {\n}\n
		=> Looking ahead 4 chars => {\n}\n\n
		=> Looking ahead 5 chars => {\n}\n\nf
		=> Looking ahead 6 chars => {\n}\n\nfo
		=> Looking ahead 7 chars => {\n}\n\nfor
		=> Looking ahead 8 chars => {\n}\n\nfor 
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 611 => \n (buffer: )
	Process char 612 => } (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\nf
		=> Looking ahead 4 chars => }\n\nfo
		=> Looking ahead 5 chars => }\n\nfor
		=> Looking ahead 6 chars => }\n\nfor 
		=> Looking ahead 7 chars => }\n\nfor (
		=> Looking ahead 8 chars => }\n\nfor (v
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 613 => \n (buffer: )
	Process char 614 => \n (buffer: \n)
	Process char 615 => f (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
	Process char 616 => o (buffer: f)
	Process char 617 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (v
		=> Looking ahead 4 chars => for (va
		=> Looking ahead 5 chars => for (var
		=> Looking ahead 6 chars => for (var 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 618 =>   (buffer: )
	Process char 619 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (v
		=> Looking ahead 2 chars => (va
		=> Looking ahead 3 chars => (var
		=> Looking ahead 4 chars => (var 
		=> Looking ahead 5 chars => (var i
		=> Looking ahead 6 chars => (var i 
		=> Looking ahead 7 chars => (var i =
		=> Looking ahead 8 chars => (var i = 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 620 => v (buffer: )
	Process char 621 => a (buffer: v)
	Process char 622 => r (buffer: va)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => var 
		=> Looking ahead 2 chars => var i
		=> Looking ahead 3 chars => var i 
		=> Looking ahead 4 chars => var i =
		=> Looking ahead 5 chars => var i = 
		=> Looking ahead 6 chars => var i = 0
		* look ahead found nothing *
	=> Added token T_VAR (var)
	Process char 623 =>   (buffer: )
	Process char 624 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 625 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 626 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0; ;
		=> Looking ahead 6 chars => = 0; ; 
		=> Looking ahead 7 chars => = 0; ; i
		=> Looking ahead 8 chars => = 0; ; i+
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 627 =>   (buffer: )
	Process char 628 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 629 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; ;
		=> Looking ahead 3 chars => ; ; 
		=> Looking ahead 4 chars => ; ; i
		=> Looking ahead 5 chars => ; ; i+
		=> Looking ahead 6 chars => ; ; i++
		=> Looking ahead 7 chars => ; ; i++)
		=> Looking ahead 8 chars => ; ; i++) 
		=> Looking ahead 9 chars => ; ; i++) {
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 630 =>   (buffer: )
	Process char 631 => ; (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++)
		=> Looking ahead 6 chars => ; i++) 
		=> Looking ahead 7 chars => ; i++) {
		=> Looking ahead 8 chars => ; i++) {\n
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 632 =>   (buffer: )
	Process char 633 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 634 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 634 *
	Process char 635 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++)
		=> Looking ahead 2 chars => ++) 
		=> Looking ahead 3 chars => ++) {
		=> Looking ahead 4 chars => ++) {\n
		=> Looking ahead 5 chars => ++) {\n}
		=> Looking ahead 6 chars => ++) {\n}\n
		=> Looking ahead 7 chars => ++) {\n}\nf
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 636 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {\n
		=> Looking ahead 4 chars => ) {\n}
		=> Looking ahead 5 chars => ) {\n}\n
		=> Looking ahead 6 chars => ) {\n}\nf
		=> Looking ahead 7 chars => ) {\n}\nfo
		=> Looking ahead 8 chars => ) {\n}\nfor
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 637 =>   (buffer: )
	Process char 638 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {\n
		=> Looking ahead 2 chars => {\n}
		=> Looking ahead 3 chars => {\n}\n
		=> Looking ahead 4 chars => {\n}\nf
		=> Looking ahead 5 chars => {\n}\nfo
		=> Looking ahead 6 chars => {\n}\nfor
		=> Looking ahead 7 chars => {\n}\nfor 
		=> Looking ahead 8 chars => {\n}\nfor (
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 639 => \n (buffer: )
	Process char 640 => } (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\nf
		=> Looking ahead 3 chars => }\nfo
		=> Looking ahead 4 chars => }\nfor
		=> Looking ahead 5 chars => }\nfor 
		=> Looking ahead 6 chars => }\nfor (
		=> Looking ahead 7 chars => }\nfor (v
		=> Looking ahead 8 chars => }\nfor (va
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 641 => \n (buffer: )
	Process char 642 => f (buffer: \n)
	=> Added token T_WHITESPACE (\n)
	Process char 643 => o (buffer: f)
	Process char 644 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (v
		=> Looking ahead 4 chars => for (va
		=> Looking ahead 5 chars => for (var
		=> Looking ahead 6 chars => for (var 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 645 =>   (buffer: )
	Process char 646 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (v
		=> Looking ahead 2 chars => (va
		=> Looking ahead 3 chars => (var
		=> Looking ahead 4 chars => (var 
		=> Looking ahead 5 chars => (var i
		=> Looking ahead 6 chars => (var i 
		=> Looking ahead 7 chars => (var i =
		=> Looking ahead 8 chars => (var i = 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 647 => v (buffer: )
	Process char 648 => a (buffer: v)
	Process char 649 => r (buffer: va)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => var 
		=> Looking ahead 2 chars => var i
		=> Looking ahead 3 chars => var i 
		=> Looking ahead 4 chars => var i =
		=> Looking ahead 5 chars => var i = 
		=> Looking ahead 6 chars => var i = 0
		* look ahead found nothing *
	=> Added token T_VAR (var)
	Process char 650 =>   (buffer: )
	Process char 651 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 652 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 653 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0;;
		=> Looking ahead 5 chars => = 0;; 
		=> Looking ahead 6 chars => = 0;; i
		=> Looking ahead 7 chars => = 0;; i+
		=> Looking ahead 8 chars => = 0;; i++
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 654 =>   (buffer: )
	Process char 655 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 656 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;;
		=> Looking ahead 2 chars => ;; 
		=> Looking ahead 3 chars => ;; i
		=> Looking ahead 4 chars => ;; i+
		=> Looking ahead 5 chars => ;; i++
		=> Looking ahead 6 chars => ;; i++)
		=> Looking ahead 7 chars => ;; i++) 
		=> Looking ahead 8 chars => ;; i++) {
		=> Looking ahead 9 chars => ;; i++) {\n
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 657 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++)
		=> Looking ahead 6 chars => ; i++) 
		=> Looking ahead 7 chars => ; i++) {
		=> Looking ahead 8 chars => ; i++) {\n
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 658 =>   (buffer: )
	Process char 659 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 660 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 660 *
	Process char 661 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++)
		=> Looking ahead 2 chars => ++) 
		=> Looking ahead 3 chars => ++) {
		=> Looking ahead 4 chars => ++) {\n
		=> Looking ahead 5 chars => ++) {\n}
		=> Looking ahead 6 chars => ++) {\n}\n
		=> Looking ahead 7 chars => ++) {\n}\n\n
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 662 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {\n
		=> Looking ahead 4 chars => ) {\n}
		=> Looking ahead 5 chars => ) {\n}\n
		=> Looking ahead 6 chars => ) {\n}\n\n
		=> Looking ahead 7 chars => ) {\n}\n\n/
		=> Looking ahead 8 chars => ) {\n}\n\n//
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 663 =>   (buffer: )
	Process char 664 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {\n
		=> Looking ahead 2 chars => {\n}
		=> Looking ahead 3 chars => {\n}\n
		=> Looking ahead 4 chars => {\n}\n\n
		=> Looking ahead 5 chars => {\n}\n\n/
		=> Looking ahead 6 chars => {\n}\n\n//
		=> Looking ahead 7 chars => {\n}\n\n// 
		=> Looking ahead 8 chars => {\n}\n\n// p
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 665 => \n (buffer: )
	Process char 666 => } (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\n/
		=> Looking ahead 4 chars => }\n\n//
		=> Looking ahead 5 chars => }\n\n// 
		=> Looking ahead 6 chars => }\n\n// p
		=> Looking ahead 7 chars => }\n\n// ph
		=> Looking ahead 8 chars => }\n\n// php
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 667 => \n (buffer: )
	Process char 668 => \n (buffer: \n)
	Process char 669 => / (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 669 *
	Process char 670 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 671 =>   (buffer: )
		Process char 672 => p (buffer:  )
		Process char 673 => h (buffer:  p)
		Process char 674 => p (buffer:  ph)
		Process char 675 => c (buffer:  php)
		Process char 676 => s (buffer:  phpc)
		Process char 677 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 678 => s (buffer: )
		Process char 679 => e (buffer: s)
		Process char 680 => t (buffer: se)
		Process char 681 =>   (buffer: set)
		Process char 682 => S (buffer: set )
		Process char 683 => q (buffer: set S)
		Process char 684 => u (buffer: set Sq)
		Process char 685 => i (buffer: set Squ)
		Process char 686 => z (buffer: set Squi)
		Process char 687 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 688 => C (buffer: )
		Process char 689 => o (buffer: C)
		Process char 690 => n (buffer: Co)
		Process char 691 => t (buffer: Con)
		Process char 692 => r (buffer: Cont)
		Process char 693 => o (buffer: Contr)
		Process char 694 => l (buffer: Contro)
		Process char 695 => S (buffer: Control)
		Process char 696 => t (buffer: ControlS)
		Process char 697 => r (buffer: ControlSt)
		Process char 698 => u (buffer: ControlStr)
		Process char 699 => c (buffer: ControlStru)
		Process char 700 => t (buffer: ControlStruc)
		Process char 701 => u (buffer: ControlStruct)
		Process char 702 => r (buffer: ControlStructu)
		Process char 703 => e (buffer: ControlStructur)
		Process char 704 => s (buffer: ControlStructure)
		Process char 705 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 706 => F (buffer: )
		Process char 707 => o (buffer: F)
		Process char 708 => r (buffer: Fo)
		Process char 709 => L (buffer: For)
		Process char 710 => o (buffer: ForL)
		Process char 711 => o (buffer: ForLo)
		Process char 712 => p (buffer: ForLoo)
		Process char 713 => D (buffer: ForLoop)
		Process char 714 => e (buffer: ForLoopD)
		Process char 715 => c (buffer: ForLoopDe)
		Process char 716 => l (buffer: ForLoopDec)
		Process char 717 => a (buffer: ForLoopDecl)
		Process char 718 => r (buffer: ForLoopDecla)
		Process char 719 => a (buffer: ForLoopDeclar)
		Process char 720 => t (buffer: ForLoopDeclara)
		Process char 721 => i (buffer: ForLoopDeclarat)
		Process char 722 => o (buffer: ForLoopDeclarati)
		Process char 723 => n (buffer: ForLoopDeclaratio)
		Process char 724 =>   (buffer: ForLoopDeclaration)
		Process char 725 => r (buffer: ForLoopDeclaration )
		Process char 726 => e (buffer: ForLoopDeclaration r)
		Process char 727 => q (buffer: ForLoopDeclaration re)
		Process char 728 => u (buffer: ForLoopDeclaration req)
		Process char 729 => i (buffer: ForLoopDeclaration requ)
		Process char 730 => r (buffer: ForLoopDeclaration requi)
		Process char 731 => e (buffer: ForLoopDeclaration requir)
		Process char 732 => d (buffer: ForLoopDeclaration require)
		Process char 733 => S (buffer: ForLoopDeclaration required)
		Process char 734 => p (buffer: ForLoopDeclaration requiredS)
		Process char 735 => a (buffer: ForLoopDeclaration requiredSp)
		Process char 736 => c (buffer: ForLoopDeclaration requiredSpa)
		Process char 737 => e (buffer: ForLoopDeclaration requiredSpac)
		Process char 738 => s (buffer: ForLoopDeclaration requiredSpace)
		Process char 739 => A (buffer: ForLoopDeclaration requiredSpaces)
		Process char 740 => f (buffer: ForLoopDeclaration requiredSpacesA)
		Process char 741 => t (buffer: ForLoopDeclaration requiredSpacesAf)
		Process char 742 => e (buffer: ForLoopDeclaration requiredSpacesAft)
		Process char 743 => r (buffer: ForLoopDeclaration requiredSpacesAfte)
		Process char 744 => O (buffer: ForLoopDeclaration requiredSpacesAfter)
		Process char 745 => p (buffer: ForLoopDeclaration requiredSpacesAfterO)
		Process char 746 => e (buffer: ForLoopDeclaration requiredSpacesAfterOp)
		Process char 747 => n (buffer: ForLoopDeclaration requiredSpacesAfterOpe)
		Process char 748 =>   (buffer: ForLoopDeclaration requiredSpacesAfterOpen)
		Process char 749 => 1 (buffer: ForLoopDeclaration requiredSpacesAfterOpen )
		Process char 750 => \n (buffer: ForLoopDeclaration requiredSpacesAfterOpen 1)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration requiredSpacesAfterOpen 1\n)
	Process char 751 => / (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 751 *
	Process char 752 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 753 =>   (buffer: )
		Process char 754 => p (buffer:  )
		Process char 755 => h (buffer:  p)
		Process char 756 => p (buffer:  ph)
		Process char 757 => c (buffer:  php)
		Process char 758 => s (buffer:  phpc)
		Process char 759 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 760 => s (buffer: )
		Process char 761 => e (buffer: s)
		Process char 762 => t (buffer: se)
		Process char 763 =>   (buffer: set)
		Process char 764 => S (buffer: set )
		Process char 765 => q (buffer: set S)
		Process char 766 => u (buffer: set Sq)
		Process char 767 => i (buffer: set Squ)
		Process char 768 => z (buffer: set Squi)
		Process char 769 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 770 => C (buffer: )
		Process char 771 => o (buffer: C)
		Process char 772 => n (buffer: Co)
		Process char 773 => t (buffer: Con)
		Process char 774 => r (buffer: Cont)
		Process char 775 => o (buffer: Contr)
		Process char 776 => l (buffer: Contro)
		Process char 777 => S (buffer: Control)
		Process char 778 => t (buffer: ControlS)
		Process char 779 => r (buffer: ControlSt)
		Process char 780 => u (buffer: ControlStr)
		Process char 781 => c (buffer: ControlStru)
		Process char 782 => t (buffer: ControlStruc)
		Process char 783 => u (buffer: ControlStruct)
		Process char 784 => r (buffer: ControlStructu)
		Process char 785 => e (buffer: ControlStructur)
		Process char 786 => s (buffer: ControlStructure)
		Process char 787 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 788 => F (buffer: )
		Process char 789 => o (buffer: F)
		Process char 790 => r (buffer: Fo)
		Process char 791 => L (buffer: For)
		Process char 792 => o (buffer: ForL)
		Process char 793 => o (buffer: ForLo)
		Process char 794 => p (buffer: ForLoo)
		Process char 795 => D (buffer: ForLoop)
		Process char 796 => e (buffer: ForLoopD)
		Process char 797 => c (buffer: ForLoopDe)
		Process char 798 => l (buffer: ForLoopDec)
		Process char 799 => a (buffer: ForLoopDecl)
		Process char 800 => r (buffer: ForLoopDecla)
		Process char 801 => a (buffer: ForLoopDeclar)
		Process char 802 => t (buffer: ForLoopDeclara)
		Process char 803 => i (buffer: ForLoopDeclarat)
		Process char 804 => o (buffer: ForLoopDeclarati)
		Process char 805 => n (buffer: ForLoopDeclaratio)
		Process char 806 =>   (buffer: ForLoopDeclaration)
		Process char 807 => r (buffer: ForLoopDeclaration )
		Process char 808 => e (buffer: ForLoopDeclaration r)
		Process char 809 => q (buffer: ForLoopDeclaration re)
		Process char 810 => u (buffer: ForLoopDeclaration req)
		Process char 811 => i (buffer: ForLoopDeclaration requ)
		Process char 812 => r (buffer: ForLoopDeclaration requi)
		Process char 813 => e (buffer: ForLoopDeclaration requir)
		Process char 814 => d (buffer: ForLoopDeclaration require)
		Process char 815 => S (buffer: ForLoopDeclaration required)
		Process char 816 => p (buffer: ForLoopDeclaration requiredS)
		Process char 817 => a (buffer: ForLoopDeclaration requiredSp)
		Process char 818 => c (buffer: ForLoopDeclaration requiredSpa)
		Process char 819 => e (buffer: ForLoopDeclaration requiredSpac)
		Process char 820 => s (buffer: ForLoopDeclaration requiredSpace)
		Process char 821 => B (buffer: ForLoopDeclaration requiredSpaces)
		Process char 822 => e (buffer: ForLoopDeclaration requiredSpacesB)
		Process char 823 => f (buffer: ForLoopDeclaration requiredSpacesBe)
		Process char 824 => o (buffer: ForLoopDeclaration requiredSpacesBef)
		Process char 825 => r (buffer: ForLoopDeclaration requiredSpacesBefo)
		Process char 826 => e (buffer: ForLoopDeclaration requiredSpacesBefor)
		Process char 827 => C (buffer: ForLoopDeclaration requiredSpacesBefore)
		Process char 828 => l (buffer: ForLoopDeclaration requiredSpacesBeforeC)
		Process char 829 => o (buffer: ForLoopDeclaration requiredSpacesBeforeCl)
		Process char 830 => s (buffer: ForLoopDeclaration requiredSpacesBeforeClo)
		Process char 831 => e (buffer: ForLoopDeclaration requiredSpacesBeforeClos)
		Process char 832 =>   (buffer: ForLoopDeclaration requiredSpacesBeforeClose)
		Process char 833 => 1 (buffer: ForLoopDeclaration requiredSpacesBeforeClose )
		Process char 834 => \n (buffer: ForLoopDeclaration requiredSpacesBeforeClose 1)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration requiredSpacesBeforeClose 1\n)
	Process char 835 => f (buffer: )
	Process char 836 => o (buffer: f)
	Process char 837 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (v
		=> Looking ahead 4 chars => for (va
		=> Looking ahead 5 chars => for (var
		=> Looking ahead 6 chars => for (var 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 838 =>   (buffer: )
	Process char 839 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (v
		=> Looking ahead 2 chars => (va
		=> Looking ahead 3 chars => (var
		=> Looking ahead 4 chars => (var 
		=> Looking ahead 5 chars => (var i
		=> Looking ahead 6 chars => (var i 
		=> Looking ahead 7 chars => (var i =
		=> Looking ahead 8 chars => (var i = 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 840 => v (buffer: )
	Process char 841 => a (buffer: v)
	Process char 842 => r (buffer: va)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => var 
		=> Looking ahead 2 chars => var i
		=> Looking ahead 3 chars => var i 
		=> Looking ahead 4 chars => var i =
		=> Looking ahead 5 chars => var i = 
		=> Looking ahead 6 chars => var i = 0
		* look ahead found nothing *
	=> Added token T_VAR (var)
	Process char 843 =>   (buffer: )
	Process char 844 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 845 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 846 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0; i
		=> Looking ahead 6 chars => = 0; i 
		=> Looking ahead 7 chars => = 0; i <
		=> Looking ahead 8 chars => = 0; i < 
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 847 =>   (buffer: )
	Process char 848 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 849 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		=> Looking ahead 9 chars => ; i < 10; 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 850 =>   (buffer: )
	Process char 851 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 852 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 853 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; i
		=> Looking ahead 7 chars => < 10; i+
		=> Looking ahead 8 chars => < 10; i++
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 854 =>   (buffer: )
	Process char 855 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 856 => 0 (buffer: 1)
	Process char 857 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++)
		=> Looking ahead 6 chars => ; i++) 
		=> Looking ahead 7 chars => ; i++) {
		=> Looking ahead 8 chars => ; i++) {}
		=> Looking ahead 9 chars => ; i++) {}\n
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 858 =>   (buffer: )
	Process char 859 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 860 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 860 *
	Process char 861 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++)
		=> Looking ahead 2 chars => ++) 
		=> Looking ahead 3 chars => ++) {
		=> Looking ahead 4 chars => ++) {}
		=> Looking ahead 5 chars => ++) {}\n
		=> Looking ahead 6 chars => ++) {}\nf
		=> Looking ahead 7 chars => ++) {}\nfo
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 862 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\nf
		=> Looking ahead 6 chars => ) {}\nfo
		=> Looking ahead 7 chars => ) {}\nfor
		=> Looking ahead 8 chars => ) {}\nfor 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 863 =>   (buffer: )
	Process char 864 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\nf
		=> Looking ahead 4 chars => {}\nfo
		=> Looking ahead 5 chars => {}\nfor
		=> Looking ahead 6 chars => {}\nfor 
		=> Looking ahead 7 chars => {}\nfor (
		=> Looking ahead 8 chars => {}\nfor ( 
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 865 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\nf
		=> Looking ahead 3 chars => }\nfo
		=> Looking ahead 4 chars => }\nfor
		=> Looking ahead 5 chars => }\nfor 
		=> Looking ahead 6 chars => }\nfor (
		=> Looking ahead 7 chars => }\nfor ( 
		=> Looking ahead 8 chars => }\nfor ( v
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 866 => \n (buffer: )
	Process char 867 => f (buffer: \n)
	=> Added token T_WHITESPACE (\n)
	Process char 868 => o (buffer: f)
	Process char 869 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for ( 
		=> Looking ahead 4 chars => for ( v
		=> Looking ahead 5 chars => for ( va
		=> Looking ahead 6 chars => for ( var
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 870 =>   (buffer: )
	Process char 871 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ( 
		=> Looking ahead 2 chars => ( v
		=> Looking ahead 3 chars => ( va
		=> Looking ahead 4 chars => ( var
		=> Looking ahead 5 chars => ( var 
		=> Looking ahead 6 chars => ( var i
		=> Looking ahead 7 chars => ( var i 
		=> Looking ahead 8 chars => ( var i =
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 872 =>   (buffer: )
	Process char 873 => v (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 874 => a (buffer: v)
	Process char 875 => r (buffer: va)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => var 
		=> Looking ahead 2 chars => var i
		=> Looking ahead 3 chars => var i 
		=> Looking ahead 4 chars => var i =
		=> Looking ahead 5 chars => var i = 
		=> Looking ahead 6 chars => var i = 0
		* look ahead found nothing *
	=> Added token T_VAR (var)
	Process char 876 =>   (buffer: )
	Process char 877 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 878 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 879 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0; i
		=> Looking ahead 6 chars => = 0; i 
		=> Looking ahead 7 chars => = 0; i <
		=> Looking ahead 8 chars => = 0; i < 
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 880 =>   (buffer: )
	Process char 881 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 882 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		=> Looking ahead 9 chars => ; i < 10; 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 883 =>   (buffer: )
	Process char 884 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 885 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 886 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; i
		=> Looking ahead 7 chars => < 10; i+
		=> Looking ahead 8 chars => < 10; i++
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 887 =>   (buffer: )
	Process char 888 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 889 => 0 (buffer: 1)
	Process char 890 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++ 
		=> Looking ahead 6 chars => ; i++ )
		=> Looking ahead 7 chars => ; i++ ) 
		=> Looking ahead 8 chars => ; i++ ) {
		=> Looking ahead 9 chars => ; i++ ) {}
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 891 =>   (buffer: )
	Process char 892 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 893 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 893 *
	Process char 894 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++ 
		=> Looking ahead 2 chars => ++ )
		=> Looking ahead 3 chars => ++ ) 
		=> Looking ahead 4 chars => ++ ) {
		=> Looking ahead 5 chars => ++ ) {}
		=> Looking ahead 6 chars => ++ ) {}\n
		=> Looking ahead 7 chars => ++ ) {}\nf
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 895 =>   (buffer: )
	Process char 896 => ) (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\nf
		=> Looking ahead 6 chars => ) {}\nfo
		=> Looking ahead 7 chars => ) {}\nfor
		=> Looking ahead 8 chars => ) {}\nfor 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 897 =>   (buffer: )
	Process char 898 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\nf
		=> Looking ahead 4 chars => {}\nfo
		=> Looking ahead 5 chars => {}\nfor
		=> Looking ahead 6 chars => {}\nfor 
		=> Looking ahead 7 chars => {}\nfor (
		=> Looking ahead 8 chars => {}\nfor ( 
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 899 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\nf
		=> Looking ahead 3 chars => }\nfo
		=> Looking ahead 4 chars => }\nfor
		=> Looking ahead 5 chars => }\nfor 
		=> Looking ahead 6 chars => }\nfor (
		=> Looking ahead 7 chars => }\nfor ( 
		=> Looking ahead 8 chars => }\nfor (  
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 900 => \n (buffer: )
	Process char 901 => f (buffer: \n)
	=> Added token T_WHITESPACE (\n)
	Process char 902 => o (buffer: f)
	Process char 903 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for ( 
		=> Looking ahead 4 chars => for (  
		=> Looking ahead 5 chars => for (  v
		=> Looking ahead 6 chars => for (  va
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 904 =>   (buffer: )
	Process char 905 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ( 
		=> Looking ahead 2 chars => (  
		=> Looking ahead 3 chars => (  v
		=> Looking ahead 4 chars => (  va
		=> Looking ahead 5 chars => (  var
		=> Looking ahead 6 chars => (  var 
		=> Looking ahead 7 chars => (  var i
		=> Looking ahead 8 chars => (  var i 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 906 =>   (buffer: )
	Process char 907 =>   (buffer:  )
	Process char 908 => v (buffer:   )
	=> Added token T_WHITESPACE (  )
	Process char 909 => a (buffer: v)
	Process char 910 => r (buffer: va)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => var 
		=> Looking ahead 2 chars => var i
		=> Looking ahead 3 chars => var i 
		=> Looking ahead 4 chars => var i =
		=> Looking ahead 5 chars => var i = 
		=> Looking ahead 6 chars => var i = 0
		* look ahead found nothing *
	=> Added token T_VAR (var)
	Process char 911 =>   (buffer: )
	Process char 912 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 913 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 914 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0; i
		=> Looking ahead 6 chars => = 0; i 
		=> Looking ahead 7 chars => = 0; i <
		=> Looking ahead 8 chars => = 0; i < 
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 915 =>   (buffer: )
	Process char 916 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 917 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		=> Looking ahead 9 chars => ; i < 10; 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 918 =>   (buffer: )
	Process char 919 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 920 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 921 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; i
		=> Looking ahead 7 chars => < 10; i+
		=> Looking ahead 8 chars => < 10; i++
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 922 =>   (buffer: )
	Process char 923 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 924 => 0 (buffer: 1)
	Process char 925 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++ 
		=> Looking ahead 6 chars => ; i++  
		=> Looking ahead 7 chars => ; i++  )
		=> Looking ahead 8 chars => ; i++  ) 
		=> Looking ahead 9 chars => ; i++  ) {
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 926 =>   (buffer: )
	Process char 927 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 928 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 928 *
	Process char 929 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++ 
		=> Looking ahead 2 chars => ++  
		=> Looking ahead 3 chars => ++  )
		=> Looking ahead 4 chars => ++  ) 
		=> Looking ahead 5 chars => ++  ) {
		=> Looking ahead 6 chars => ++  ) {}
		=> Looking ahead 7 chars => ++  ) {}\n
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 930 =>   (buffer: )
	Process char 931 =>   (buffer:  )
	Process char 932 => ) (buffer:   )
	=> Added token T_WHITESPACE (  )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\n/
		=> Looking ahead 6 chars => ) {}\n//
		=> Looking ahead 7 chars => ) {}\n// 
		=> Looking ahead 8 chars => ) {}\n// p
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 933 =>   (buffer: )
	Process char 934 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\n/
		=> Looking ahead 4 chars => {}\n//
		=> Looking ahead 5 chars => {}\n// 
		=> Looking ahead 6 chars => {}\n// p
		=> Looking ahead 7 chars => {}\n// ph
		=> Looking ahead 8 chars => {}\n// php
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 935 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n/
		=> Looking ahead 3 chars => }\n//
		=> Looking ahead 4 chars => }\n// 
		=> Looking ahead 5 chars => }\n// p
		=> Looking ahead 6 chars => }\n// ph
		=> Looking ahead 7 chars => }\n// php
		=> Looking ahead 8 chars => }\n// phpc
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 936 => \n (buffer: )
	Process char 937 => / (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 937 *
	Process char 938 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 939 =>   (buffer: )
		Process char 940 => p (buffer:  )
		Process char 941 => h (buffer:  p)
		Process char 942 => p (buffer:  ph)
		Process char 943 => c (buffer:  php)
		Process char 944 => s (buffer:  phpc)
		Process char 945 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 946 => s (buffer: )
		Process char 947 => e (buffer: s)
		Process char 948 => t (buffer: se)
		Process char 949 =>   (buffer: set)
		Process char 950 => S (buffer: set )
		Process char 951 => q (buffer: set S)
		Process char 952 => u (buffer: set Sq)
		Process char 953 => i (buffer: set Squ)
		Process char 954 => z (buffer: set Squi)
		Process char 955 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 956 => C (buffer: )
		Process char 957 => o (buffer: C)
		Process char 958 => n (buffer: Co)
		Process char 959 => t (buffer: Con)
		Process char 960 => r (buffer: Cont)
		Process char 961 => o (buffer: Contr)
		Process char 962 => l (buffer: Contro)
		Process char 963 => S (buffer: Control)
		Process char 964 => t (buffer: ControlS)
		Process char 965 => r (buffer: ControlSt)
		Process char 966 => u (buffer: ControlStr)
		Process char 967 => c (buffer: ControlStru)
		Process char 968 => t (buffer: ControlStruc)
		Process char 969 => u (buffer: ControlStruct)
		Process char 970 => r (buffer: ControlStructu)
		Process char 971 => e (buffer: ControlStructur)
		Process char 972 => s (buffer: ControlStructure)
		Process char 973 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 974 => F (buffer: )
		Process char 975 => o (buffer: F)
		Process char 976 => r (buffer: Fo)
		Process char 977 => L (buffer: For)
		Process char 978 => o (buffer: ForL)
		Process char 979 => o (buffer: ForLo)
		Process char 980 => p (buffer: ForLoo)
		Process char 981 => D (buffer: ForLoop)
		Process char 982 => e (buffer: ForLoopD)
		Process char 983 => c (buffer: ForLoopDe)
		Process char 984 => l (buffer: ForLoopDec)
		Process char 985 => a (buffer: ForLoopDecl)
		Process char 986 => r (buffer: ForLoopDecla)
		Process char 987 => a (buffer: ForLoopDeclar)
		Process char 988 => t (buffer: ForLoopDeclara)
		Process char 989 => i (buffer: ForLoopDeclarat)
		Process char 990 => o (buffer: ForLoopDeclarati)
		Process char 991 => n (buffer: ForLoopDeclaratio)
		Process char 992 =>   (buffer: ForLoopDeclaration)
		Process char 993 => r (buffer: ForLoopDeclaration )
		Process char 994 => e (buffer: ForLoopDeclaration r)
		Process char 995 => q (buffer: ForLoopDeclaration re)
		Process char 996 => u (buffer: ForLoopDeclaration req)
		Process char 997 => i (buffer: ForLoopDeclaration requ)
		Process char 998 => r (buffer: ForLoopDeclaration requi)
		Process char 999 => e (buffer: ForLoopDeclaration requir)
		Process char 1000 => d (buffer: ForLoopDeclaration require)
		Process char 1001 => S (buffer: ForLoopDeclaration required)
		Process char 1002 => p (buffer: ForLoopDeclaration requiredS)
		Process char 1003 => a (buffer: ForLoopDeclaration requiredSp)
		Process char 1004 => c (buffer: ForLoopDeclaration requiredSpa)
		Process char 1005 => e (buffer: ForLoopDeclaration requiredSpac)
		Process char 1006 => s (buffer: ForLoopDeclaration requiredSpace)
		Process char 1007 => A (buffer: ForLoopDeclaration requiredSpaces)
		Process char 1008 => f (buffer: ForLoopDeclaration requiredSpacesA)
		Process char 1009 => t (buffer: ForLoopDeclaration requiredSpacesAf)
		Process char 1010 => e (buffer: ForLoopDeclaration requiredSpacesAft)
		Process char 1011 => r (buffer: ForLoopDeclaration requiredSpacesAfte)
		Process char 1012 => O (buffer: ForLoopDeclaration requiredSpacesAfter)
		Process char 1013 => p (buffer: ForLoopDeclaration requiredSpacesAfterO)
		Process char 1014 => e (buffer: ForLoopDeclaration requiredSpacesAfterOp)
		Process char 1015 => n (buffer: ForLoopDeclaration requiredSpacesAfterOpe)
		Process char 1016 =>   (buffer: ForLoopDeclaration requiredSpacesAfterOpen)
		Process char 1017 => 0 (buffer: ForLoopDeclaration requiredSpacesAfterOpen )
		Process char 1018 => \n (buffer: ForLoopDeclaration requiredSpacesAfterOpen 0)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration requiredSpacesAfterOpen 0\n)
	Process char 1019 => / (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 1019 *
	Process char 1020 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 1021 =>   (buffer: )
		Process char 1022 => p (buffer:  )
		Process char 1023 => h (buffer:  p)
		Process char 1024 => p (buffer:  ph)
		Process char 1025 => c (buffer:  php)
		Process char 1026 => s (buffer:  phpc)
		Process char 1027 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 1028 => s (buffer: )
		Process char 1029 => e (buffer: s)
		Process char 1030 => t (buffer: se)
		Process char 1031 =>   (buffer: set)
		Process char 1032 => S (buffer: set )
		Process char 1033 => q (buffer: set S)
		Process char 1034 => u (buffer: set Sq)
		Process char 1035 => i (buffer: set Squ)
		Process char 1036 => z (buffer: set Squi)
		Process char 1037 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1038 => C (buffer: )
		Process char 1039 => o (buffer: C)
		Process char 1040 => n (buffer: Co)
		Process char 1041 => t (buffer: Con)
		Process char 1042 => r (buffer: Cont)
		Process char 1043 => o (buffer: Contr)
		Process char 1044 => l (buffer: Contro)
		Process char 1045 => S (buffer: Control)
		Process char 1046 => t (buffer: ControlS)
		Process char 1047 => r (buffer: ControlSt)
		Process char 1048 => u (buffer: ControlStr)
		Process char 1049 => c (buffer: ControlStru)
		Process char 1050 => t (buffer: ControlStruc)
		Process char 1051 => u (buffer: ControlStruct)
		Process char 1052 => r (buffer: ControlStructu)
		Process char 1053 => e (buffer: ControlStructur)
		Process char 1054 => s (buffer: ControlStructure)
		Process char 1055 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1056 => F (buffer: )
		Process char 1057 => o (buffer: F)
		Process char 1058 => r (buffer: Fo)
		Process char 1059 => L (buffer: For)
		Process char 1060 => o (buffer: ForL)
		Process char 1061 => o (buffer: ForLo)
		Process char 1062 => p (buffer: ForLoo)
		Process char 1063 => D (buffer: ForLoop)
		Process char 1064 => e (buffer: ForLoopD)
		Process char 1065 => c (buffer: ForLoopDe)
		Process char 1066 => l (buffer: ForLoopDec)
		Process char 1067 => a (buffer: ForLoopDecl)
		Process char 1068 => r (buffer: ForLoopDecla)
		Process char 1069 => a (buffer: ForLoopDeclar)
		Process char 1070 => t (buffer: ForLoopDeclara)
		Process char 1071 => i (buffer: ForLoopDeclarat)
		Process char 1072 => o (buffer: ForLoopDeclarati)
		Process char 1073 => n (buffer: ForLoopDeclaratio)
		Process char 1074 =>   (buffer: ForLoopDeclaration)
		Process char 1075 => r (buffer: ForLoopDeclaration )
		Process char 1076 => e (buffer: ForLoopDeclaration r)
		Process char 1077 => q (buffer: ForLoopDeclaration re)
		Process char 1078 => u (buffer: ForLoopDeclaration req)
		Process char 1079 => i (buffer: ForLoopDeclaration requ)
		Process char 1080 => r (buffer: ForLoopDeclaration requi)
		Process char 1081 => e (buffer: ForLoopDeclaration requir)
		Process char 1082 => d (buffer: ForLoopDeclaration require)
		Process char 1083 => S (buffer: ForLoopDeclaration required)
		Process char 1084 => p (buffer: ForLoopDeclaration requiredS)
		Process char 1085 => a (buffer: ForLoopDeclaration requiredSp)
		Process char 1086 => c (buffer: ForLoopDeclaration requiredSpa)
		Process char 1087 => e (buffer: ForLoopDeclaration requiredSpac)
		Process char 1088 => s (buffer: ForLoopDeclaration requiredSpace)
		Process char 1089 => B (buffer: ForLoopDeclaration requiredSpaces)
		Process char 1090 => e (buffer: ForLoopDeclaration requiredSpacesB)
		Process char 1091 => f (buffer: ForLoopDeclaration requiredSpacesBe)
		Process char 1092 => o (buffer: ForLoopDeclaration requiredSpacesBef)
		Process char 1093 => r (buffer: ForLoopDeclaration requiredSpacesBefo)
		Process char 1094 => e (buffer: ForLoopDeclaration requiredSpacesBefor)
		Process char 1095 => C (buffer: ForLoopDeclaration requiredSpacesBefore)
		Process char 1096 => l (buffer: ForLoopDeclaration requiredSpacesBeforeC)
		Process char 1097 => o (buffer: ForLoopDeclaration requiredSpacesBeforeCl)
		Process char 1098 => s (buffer: ForLoopDeclaration requiredSpacesBeforeClo)
		Process char 1099 => e (buffer: ForLoopDeclaration requiredSpacesBeforeClos)
		Process char 1100 =>   (buffer: ForLoopDeclaration requiredSpacesBeforeClose)
		Process char 1101 => 0 (buffer: ForLoopDeclaration requiredSpacesBeforeClose )
		Process char 1102 => \n (buffer: ForLoopDeclaration requiredSpacesBeforeClose 0)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration requiredSpacesBeforeClose 0\n)
	Process char 1103 => \n (buffer: )
	Process char 1104 => f (buffer: \n)
	=> Added token T_WHITESPACE (\n)
	Process char 1105 => o (buffer: f)
	Process char 1106 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for ( 
		=> Looking ahead 4 chars => for (  
		=> Looking ahead 5 chars => for (   
		=> Looking ahead 6 chars => for (    
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 1107 =>   (buffer: )
	Process char 1108 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ( 
		=> Looking ahead 2 chars => (  
		=> Looking ahead 3 chars => (   
		=> Looking ahead 4 chars => (    
		=> Looking ahead 5 chars => (     
		=> Looking ahead 6 chars => (      
		=> Looking ahead 7 chars => (      ;
		=> Looking ahead 8 chars => (      ; 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 1109 =>   (buffer: )
	Process char 1110 =>   (buffer:  )
	Process char 1111 =>   (buffer:   )
	Process char 1112 =>   (buffer:    )
	Process char 1113 =>   (buffer:     )
	Process char 1114 =>   (buffer:      )
	Process char 1115 => ; (buffer:       )
	=> Added token T_WHITESPACE (      )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1116 =>   (buffer: )
	Process char 1117 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1118 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1119 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; i
		=> Looking ahead 7 chars => < 10; i+
		=> Looking ahead 8 chars => < 10; i++
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 1120 =>   (buffer: )
	Process char 1121 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1122 => 0 (buffer: 1)
	Process char 1123 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++)
		=> Looking ahead 6 chars => ; i++) 
		=> Looking ahead 7 chars => ; i++) {
		=> Looking ahead 8 chars => ; i++) {}
		=> Looking ahead 9 chars => ; i++) {}\n
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1124 =>   (buffer: )
	Process char 1125 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1126 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 1126 *
	Process char 1127 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++)
		=> Looking ahead 2 chars => ++) 
		=> Looking ahead 3 chars => ++) {
		=> Looking ahead 4 chars => ++) {}
		=> Looking ahead 5 chars => ++) {}\n
		=> Looking ahead 6 chars => ++) {}\nf
		=> Looking ahead 7 chars => ++) {}\nfo
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 1128 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\nf
		=> Looking ahead 6 chars => ) {}\nfo
		=> Looking ahead 7 chars => ) {}\nfor
		=> Looking ahead 8 chars => ) {}\nfor 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 1129 =>   (buffer: )
	Process char 1130 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\nf
		=> Looking ahead 4 chars => {}\nfo
		=> Looking ahead 5 chars => {}\nfor
		=> Looking ahead 6 chars => {}\nfor 
		=> Looking ahead 7 chars => {}\nfor (
		=> Looking ahead 8 chars => {}\nfor (;
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 1131 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\nf
		=> Looking ahead 3 chars => }\nfo
		=> Looking ahead 4 chars => }\nfor
		=> Looking ahead 5 chars => }\nfor 
		=> Looking ahead 6 chars => }\nfor (
		=> Looking ahead 7 chars => }\nfor (;
		=> Looking ahead 8 chars => }\nfor (; 
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 1132 => \n (buffer: )
	Process char 1133 => f (buffer: \n)
	=> Added token T_WHITESPACE (\n)
	Process char 1134 => o (buffer: f)
	Process char 1135 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (;
		=> Looking ahead 4 chars => for (; 
		=> Looking ahead 5 chars => for (; i
		=> Looking ahead 6 chars => for (; i 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 1136 =>   (buffer: )
	Process char 1137 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (;
		=> Looking ahead 2 chars => (; 
		=> Looking ahead 3 chars => (; i
		=> Looking ahead 4 chars => (; i 
		=> Looking ahead 5 chars => (; i <
		=> Looking ahead 6 chars => (; i < 
		=> Looking ahead 7 chars => (; i < 1
		=> Looking ahead 8 chars => (; i < 10
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 1138 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1139 =>   (buffer: )
	Process char 1140 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1141 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1142 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; i
		=> Looking ahead 7 chars => < 10; i+
		=> Looking ahead 8 chars => < 10; i++
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 1143 =>   (buffer: )
	Process char 1144 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1145 => 0 (buffer: 1)
	Process char 1146 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++)
		=> Looking ahead 6 chars => ; i++) 
		=> Looking ahead 7 chars => ; i++) {
		=> Looking ahead 8 chars => ; i++) {}
		=> Looking ahead 9 chars => ; i++) {}\n
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1147 =>   (buffer: )
	Process char 1148 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1149 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 1149 *
	Process char 1150 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++)
		=> Looking ahead 2 chars => ++) 
		=> Looking ahead 3 chars => ++) {
		=> Looking ahead 4 chars => ++) {}
		=> Looking ahead 5 chars => ++) {}\n
		=> Looking ahead 6 chars => ++) {}\n\n
		=> Looking ahead 7 chars => ++) {}\n\n/
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 1151 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\n\n
		=> Looking ahead 6 chars => ) {}\n\n/
		=> Looking ahead 7 chars => ) {}\n\n//
		=> Looking ahead 8 chars => ) {}\n\n// 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 1152 =>   (buffer: )
	Process char 1153 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\n\n
		=> Looking ahead 4 chars => {}\n\n/
		=> Looking ahead 5 chars => {}\n\n//
		=> Looking ahead 6 chars => {}\n\n// 
		=> Looking ahead 7 chars => {}\n\n// p
		=> Looking ahead 8 chars => {}\n\n// ph
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 1154 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\n/
		=> Looking ahead 4 chars => }\n\n//
		=> Looking ahead 5 chars => }\n\n// 
		=> Looking ahead 6 chars => }\n\n// p
		=> Looking ahead 7 chars => }\n\n// ph
		=> Looking ahead 8 chars => }\n\n// php
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 1155 => \n (buffer: )
	Process char 1156 => \n (buffer: \n)
	Process char 1157 => / (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 1157 *
	Process char 1158 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 1159 =>   (buffer: )
		Process char 1160 => p (buffer:  )
		Process char 1161 => h (buffer:  p)
		Process char 1162 => p (buffer:  ph)
		Process char 1163 => c (buffer:  php)
		Process char 1164 => s (buffer:  phpc)
		Process char 1165 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 1166 => s (buffer: )
		Process char 1167 => e (buffer: s)
		Process char 1168 => t (buffer: se)
		Process char 1169 =>   (buffer: set)
		Process char 1170 => S (buffer: set )
		Process char 1171 => q (buffer: set S)
		Process char 1172 => u (buffer: set Sq)
		Process char 1173 => i (buffer: set Squ)
		Process char 1174 => z (buffer: set Squi)
		Process char 1175 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1176 => C (buffer: )
		Process char 1177 => o (buffer: C)
		Process char 1178 => n (buffer: Co)
		Process char 1179 => t (buffer: Con)
		Process char 1180 => r (buffer: Cont)
		Process char 1181 => o (buffer: Contr)
		Process char 1182 => l (buffer: Contro)
		Process char 1183 => S (buffer: Control)
		Process char 1184 => t (buffer: ControlS)
		Process char 1185 => r (buffer: ControlSt)
		Process char 1186 => u (buffer: ControlStr)
		Process char 1187 => c (buffer: ControlStru)
		Process char 1188 => t (buffer: ControlStruc)
		Process char 1189 => u (buffer: ControlStruct)
		Process char 1190 => r (buffer: ControlStructu)
		Process char 1191 => e (buffer: ControlStructur)
		Process char 1192 => s (buffer: ControlStructure)
		Process char 1193 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1194 => F (buffer: )
		Process char 1195 => o (buffer: F)
		Process char 1196 => r (buffer: Fo)
		Process char 1197 => L (buffer: For)
		Process char 1198 => o (buffer: ForL)
		Process char 1199 => o (buffer: ForLo)
		Process char 1200 => p (buffer: ForLoo)
		Process char 1201 => D (buffer: ForLoop)
		Process char 1202 => e (buffer: ForLoopD)
		Process char 1203 => c (buffer: ForLoopDe)
		Process char 1204 => l (buffer: ForLoopDec)
		Process char 1205 => a (buffer: ForLoopDecl)
		Process char 1206 => r (buffer: ForLoopDecla)
		Process char 1207 => a (buffer: ForLoopDeclar)
		Process char 1208 => t (buffer: ForLoopDeclara)
		Process char 1209 => i (buffer: ForLoopDeclarat)
		Process char 1210 => o (buffer: ForLoopDeclarati)
		Process char 1211 => n (buffer: ForLoopDeclaratio)
		Process char 1212 =>   (buffer: ForLoopDeclaration)
		Process char 1213 => r (buffer: ForLoopDeclaration )
		Process char 1214 => e (buffer: ForLoopDeclaration r)
		Process char 1215 => q (buffer: ForLoopDeclaration re)
		Process char 1216 => u (buffer: ForLoopDeclaration req)
		Process char 1217 => i (buffer: ForLoopDeclaration requ)
		Process char 1218 => r (buffer: ForLoopDeclaration requi)
		Process char 1219 => e (buffer: ForLoopDeclaration requir)
		Process char 1220 => d (buffer: ForLoopDeclaration require)
		Process char 1221 => S (buffer: ForLoopDeclaration required)
		Process char 1222 => p (buffer: ForLoopDeclaration requiredS)
		Process char 1223 => a (buffer: ForLoopDeclaration requiredSp)
		Process char 1224 => c (buffer: ForLoopDeclaration requiredSpa)
		Process char 1225 => e (buffer: ForLoopDeclaration requiredSpac)
		Process char 1226 => s (buffer: ForLoopDeclaration requiredSpace)
		Process char 1227 => A (buffer: ForLoopDeclaration requiredSpaces)
		Process char 1228 => f (buffer: ForLoopDeclaration requiredSpacesA)
		Process char 1229 => t (buffer: ForLoopDeclaration requiredSpacesAf)
		Process char 1230 => e (buffer: ForLoopDeclaration requiredSpacesAft)
		Process char 1231 => r (buffer: ForLoopDeclaration requiredSpacesAfte)
		Process char 1232 => O (buffer: ForLoopDeclaration requiredSpacesAfter)
		Process char 1233 => p (buffer: ForLoopDeclaration requiredSpacesAfterO)
		Process char 1234 => e (buffer: ForLoopDeclaration requiredSpacesAfterOp)
		Process char 1235 => n (buffer: ForLoopDeclaration requiredSpacesAfterOpe)
		Process char 1236 =>   (buffer: ForLoopDeclaration requiredSpacesAfterOpen)
		Process char 1237 => 1 (buffer: ForLoopDeclaration requiredSpacesAfterOpen )
		Process char 1238 => \n (buffer: ForLoopDeclaration requiredSpacesAfterOpen 1)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration requiredSpacesAfterOpen 1\n)
	Process char 1239 => / (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 1239 *
	Process char 1240 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 1241 =>   (buffer: )
		Process char 1242 => p (buffer:  )
		Process char 1243 => h (buffer:  p)
		Process char 1244 => p (buffer:  ph)
		Process char 1245 => c (buffer:  php)
		Process char 1246 => s (buffer:  phpc)
		Process char 1247 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 1248 => s (buffer: )
		Process char 1249 => e (buffer: s)
		Process char 1250 => t (buffer: se)
		Process char 1251 =>   (buffer: set)
		Process char 1252 => S (buffer: set )
		Process char 1253 => q (buffer: set S)
		Process char 1254 => u (buffer: set Sq)
		Process char 1255 => i (buffer: set Squ)
		Process char 1256 => z (buffer: set Squi)
		Process char 1257 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1258 => C (buffer: )
		Process char 1259 => o (buffer: C)
		Process char 1260 => n (buffer: Co)
		Process char 1261 => t (buffer: Con)
		Process char 1262 => r (buffer: Cont)
		Process char 1263 => o (buffer: Contr)
		Process char 1264 => l (buffer: Contro)
		Process char 1265 => S (buffer: Control)
		Process char 1266 => t (buffer: ControlS)
		Process char 1267 => r (buffer: ControlSt)
		Process char 1268 => u (buffer: ControlStr)
		Process char 1269 => c (buffer: ControlStru)
		Process char 1270 => t (buffer: ControlStruc)
		Process char 1271 => u (buffer: ControlStruct)
		Process char 1272 => r (buffer: ControlStructu)
		Process char 1273 => e (buffer: ControlStructur)
		Process char 1274 => s (buffer: ControlStructure)
		Process char 1275 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1276 => F (buffer: )
		Process char 1277 => o (buffer: F)
		Process char 1278 => r (buffer: Fo)
		Process char 1279 => L (buffer: For)
		Process char 1280 => o (buffer: ForL)
		Process char 1281 => o (buffer: ForLo)
		Process char 1282 => p (buffer: ForLoo)
		Process char 1283 => D (buffer: ForLoop)
		Process char 1284 => e (buffer: ForLoopD)
		Process char 1285 => c (buffer: ForLoopDe)
		Process char 1286 => l (buffer: ForLoopDec)
		Process char 1287 => a (buffer: ForLoopDecl)
		Process char 1288 => r (buffer: ForLoopDecla)
		Process char 1289 => a (buffer: ForLoopDeclar)
		Process char 1290 => t (buffer: ForLoopDeclara)
		Process char 1291 => i (buffer: ForLoopDeclarat)
		Process char 1292 => o (buffer: ForLoopDeclarati)
		Process char 1293 => n (buffer: ForLoopDeclaratio)
		Process char 1294 =>   (buffer: ForLoopDeclaration)
		Process char 1295 => r (buffer: ForLoopDeclaration )
		Process char 1296 => e (buffer: ForLoopDeclaration r)
		Process char 1297 => q (buffer: ForLoopDeclaration re)
		Process char 1298 => u (buffer: ForLoopDeclaration req)
		Process char 1299 => i (buffer: ForLoopDeclaration requ)
		Process char 1300 => r (buffer: ForLoopDeclaration requi)
		Process char 1301 => e (buffer: ForLoopDeclaration requir)
		Process char 1302 => d (buffer: ForLoopDeclaration require)
		Process char 1303 => S (buffer: ForLoopDeclaration required)
		Process char 1304 => p (buffer: ForLoopDeclaration requiredS)
		Process char 1305 => a (buffer: ForLoopDeclaration requiredSp)
		Process char 1306 => c (buffer: ForLoopDeclaration requiredSpa)
		Process char 1307 => e (buffer: ForLoopDeclaration requiredSpac)
		Process char 1308 => s (buffer: ForLoopDeclaration requiredSpace)
		Process char 1309 => B (buffer: ForLoopDeclaration requiredSpaces)
		Process char 1310 => e (buffer: ForLoopDeclaration requiredSpacesB)
		Process char 1311 => f (buffer: ForLoopDeclaration requiredSpacesBe)
		Process char 1312 => o (buffer: ForLoopDeclaration requiredSpacesBef)
		Process char 1313 => r (buffer: ForLoopDeclaration requiredSpacesBefo)
		Process char 1314 => e (buffer: ForLoopDeclaration requiredSpacesBefor)
		Process char 1315 => C (buffer: ForLoopDeclaration requiredSpacesBefore)
		Process char 1316 => l (buffer: ForLoopDeclaration requiredSpacesBeforeC)
		Process char 1317 => o (buffer: ForLoopDeclaration requiredSpacesBeforeCl)
		Process char 1318 => s (buffer: ForLoopDeclaration requiredSpacesBeforeClo)
		Process char 1319 => e (buffer: ForLoopDeclaration requiredSpacesBeforeClos)
		Process char 1320 =>   (buffer: ForLoopDeclaration requiredSpacesBeforeClose)
		Process char 1321 => 1 (buffer: ForLoopDeclaration requiredSpacesBeforeClose )
		Process char 1322 => \n (buffer: ForLoopDeclaration requiredSpacesBeforeClose 1)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration requiredSpacesBeforeClose 1\n)
	Process char 1323 => f (buffer: )
	Process char 1324 => o (buffer: f)
	Process char 1325 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for ( 
		=> Looking ahead 4 chars => for ( ;
		=> Looking ahead 5 chars => for ( ; 
		=> Looking ahead 6 chars => for ( ; i
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 1326 =>   (buffer: )
	Process char 1327 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ( 
		=> Looking ahead 2 chars => ( ;
		=> Looking ahead 3 chars => ( ; 
		=> Looking ahead 4 chars => ( ; i
		=> Looking ahead 5 chars => ( ; i 
		=> Looking ahead 6 chars => ( ; i <
		=> Looking ahead 7 chars => ( ; i < 
		=> Looking ahead 8 chars => ( ; i < 1
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 1328 =>   (buffer: )
	Process char 1329 => ; (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1330 =>   (buffer: )
	Process char 1331 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1332 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1333 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; i
		=> Looking ahead 7 chars => < 10; i+
		=> Looking ahead 8 chars => < 10; i++
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 1334 =>   (buffer: )
	Process char 1335 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1336 => 0 (buffer: 1)
	Process char 1337 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++ 
		=> Looking ahead 6 chars => ; i++ )
		=> Looking ahead 7 chars => ; i++ ) 
		=> Looking ahead 8 chars => ; i++ ) {
		=> Looking ahead 9 chars => ; i++ ) {}
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1338 =>   (buffer: )
	Process char 1339 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1340 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 1340 *
	Process char 1341 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++ 
		=> Looking ahead 2 chars => ++ )
		=> Looking ahead 3 chars => ++ ) 
		=> Looking ahead 4 chars => ++ ) {
		=> Looking ahead 5 chars => ++ ) {}
		=> Looking ahead 6 chars => ++ ) {}\n
		=> Looking ahead 7 chars => ++ ) {}\nf
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 1342 =>   (buffer: )
	Process char 1343 => ) (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\nf
		=> Looking ahead 6 chars => ) {}\nfo
		=> Looking ahead 7 chars => ) {}\nfor
		=> Looking ahead 8 chars => ) {}\nfor 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 1344 =>   (buffer: )
	Process char 1345 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\nf
		=> Looking ahead 4 chars => {}\nfo
		=> Looking ahead 5 chars => {}\nfor
		=> Looking ahead 6 chars => {}\nfor 
		=> Looking ahead 7 chars => {}\nfor (
		=> Looking ahead 8 chars => {}\nfor ( 
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 1346 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\nf
		=> Looking ahead 3 chars => }\nfo
		=> Looking ahead 4 chars => }\nfor
		=> Looking ahead 5 chars => }\nfor 
		=> Looking ahead 6 chars => }\nfor (
		=> Looking ahead 7 chars => }\nfor ( 
		=> Looking ahead 8 chars => }\nfor (  
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 1347 => \n (buffer: )
	Process char 1348 => f (buffer: \n)
	=> Added token T_WHITESPACE (\n)
	Process char 1349 => o (buffer: f)
	Process char 1350 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for ( 
		=> Looking ahead 4 chars => for (  
		=> Looking ahead 5 chars => for (   
		=> Looking ahead 6 chars => for (    
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 1351 =>   (buffer: )
	Process char 1352 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ( 
		=> Looking ahead 2 chars => (  
		=> Looking ahead 3 chars => (   
		=> Looking ahead 4 chars => (    
		=> Looking ahead 5 chars => (     
		=> Looking ahead 6 chars => (      
		=> Looking ahead 7 chars => (       
		=> Looking ahead 8 chars => (        
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 1353 =>   (buffer: )
	Process char 1354 =>   (buffer:  )
	Process char 1355 =>   (buffer:   )
	Process char 1356 =>   (buffer:    )
	Process char 1357 =>   (buffer:     )
	Process char 1358 =>   (buffer:      )
	Process char 1359 =>   (buffer:       )
	Process char 1360 =>   (buffer:        )
	Process char 1361 =>   (buffer:         )
	Process char 1362 => ; (buffer:          )
	=> Added token T_WHITESPACE (         )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1363 =>   (buffer: )
	Process char 1364 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1365 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1366 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; i
		=> Looking ahead 7 chars => < 10; i+
		=> Looking ahead 8 chars => < 10; i++
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 1367 =>   (buffer: )
	Process char 1368 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1369 => 0 (buffer: 1)
	Process char 1370 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++ 
		=> Looking ahead 6 chars => ; i++ )
		=> Looking ahead 7 chars => ; i++ ) 
		=> Looking ahead 8 chars => ; i++ ) {
		=> Looking ahead 9 chars => ; i++ ) {}
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1371 =>   (buffer: )
	Process char 1372 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1373 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 1373 *
	Process char 1374 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++ 
		=> Looking ahead 2 chars => ++ )
		=> Looking ahead 3 chars => ++ ) 
		=> Looking ahead 4 chars => ++ ) {
		=> Looking ahead 5 chars => ++ ) {}
		=> Looking ahead 6 chars => ++ ) {}\n
		=> Looking ahead 7 chars => ++ ) {}\nf
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 1375 =>   (buffer: )
	Process char 1376 => ) (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\nf
		=> Looking ahead 6 chars => ) {}\nfo
		=> Looking ahead 7 chars => ) {}\nfor
		=> Looking ahead 8 chars => ) {}\nfor 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 1377 =>   (buffer: )
	Process char 1378 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\nf
		=> Looking ahead 4 chars => {}\nfo
		=> Looking ahead 5 chars => {}\nfor
		=> Looking ahead 6 chars => {}\nfor 
		=> Looking ahead 7 chars => {}\nfor (
		=> Looking ahead 8 chars => {}\nfor (;
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 1379 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\nf
		=> Looking ahead 3 chars => }\nfo
		=> Looking ahead 4 chars => }\nfor
		=> Looking ahead 5 chars => }\nfor 
		=> Looking ahead 6 chars => }\nfor (
		=> Looking ahead 7 chars => }\nfor (;
		=> Looking ahead 8 chars => }\nfor (; 
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 1380 => \n (buffer: )
	Process char 1381 => f (buffer: \n)
	=> Added token T_WHITESPACE (\n)
	Process char 1382 => o (buffer: f)
	Process char 1383 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (;
		=> Looking ahead 4 chars => for (; 
		=> Looking ahead 5 chars => for (; i
		=> Looking ahead 6 chars => for (; i 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 1384 =>   (buffer: )
	Process char 1385 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (;
		=> Looking ahead 2 chars => (; 
		=> Looking ahead 3 chars => (; i
		=> Looking ahead 4 chars => (; i 
		=> Looking ahead 5 chars => (; i <
		=> Looking ahead 6 chars => (; i < 
		=> Looking ahead 7 chars => (; i < 1
		=> Looking ahead 8 chars => (; i < 10
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 1386 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1387 =>   (buffer: )
	Process char 1388 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1389 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1390 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; i
		=> Looking ahead 7 chars => < 10; i+
		=> Looking ahead 8 chars => < 10; i++
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 1391 =>   (buffer: )
	Process char 1392 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1393 => 0 (buffer: 1)
	Process char 1394 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++ 
		=> Looking ahead 6 chars => ; i++ )
		=> Looking ahead 7 chars => ; i++ ) 
		=> Looking ahead 8 chars => ; i++ ) {
		=> Looking ahead 9 chars => ; i++ ) {}
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1395 =>   (buffer: )
	Process char 1396 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1397 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 1397 *
	Process char 1398 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++ 
		=> Looking ahead 2 chars => ++ )
		=> Looking ahead 3 chars => ++ ) 
		=> Looking ahead 4 chars => ++ ) {
		=> Looking ahead 5 chars => ++ ) {}
		=> Looking ahead 6 chars => ++ ) {}\n
		=> Looking ahead 7 chars => ++ ) {}\n\n
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 1399 =>   (buffer: )
	Process char 1400 => ) (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\n\n
		=> Looking ahead 6 chars => ) {}\n\nf
		=> Looking ahead 7 chars => ) {}\n\nfo
		=> Looking ahead 8 chars => ) {}\n\nfor
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 1401 =>   (buffer: )
	Process char 1402 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\n\n
		=> Looking ahead 4 chars => {}\n\nf
		=> Looking ahead 5 chars => {}\n\nfo
		=> Looking ahead 6 chars => {}\n\nfor
		=> Looking ahead 7 chars => {}\n\nfor 
		=> Looking ahead 8 chars => {}\n\nfor (
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 1403 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\nf
		=> Looking ahead 4 chars => }\n\nfo
		=> Looking ahead 5 chars => }\n\nfor
		=> Looking ahead 6 chars => }\n\nfor 
		=> Looking ahead 7 chars => }\n\nfor (
		=> Looking ahead 8 chars => }\n\nfor ( 
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 1404 => \n (buffer: )
	Process char 1405 => \n (buffer: \n)
	Process char 1406 => f (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
	Process char 1407 => o (buffer: f)
	Process char 1408 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for ( 
		=> Looking ahead 4 chars => for ( i
		=> Looking ahead 5 chars => for ( i 
		=> Looking ahead 6 chars => for ( i =
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 1409 =>   (buffer: )
	Process char 1410 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ( 
		=> Looking ahead 2 chars => ( i
		=> Looking ahead 3 chars => ( i 
		=> Looking ahead 4 chars => ( i =
		=> Looking ahead 5 chars => ( i = 
		=> Looking ahead 6 chars => ( i = 0
		=> Looking ahead 7 chars => ( i = 0;
		=> Looking ahead 8 chars => ( i = 0; 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 1411 =>   (buffer: )
	Process char 1412 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1413 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1414 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0; i
		=> Looking ahead 6 chars => = 0; i 
		=> Looking ahead 7 chars => = 0; i <
		=> Looking ahead 8 chars => = 0; i < 
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 1415 =>   (buffer: )
	Process char 1416 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1417 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		=> Looking ahead 9 chars => ; i < 10; 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1418 =>   (buffer: )
	Process char 1419 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1420 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1421 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; )
		=> Looking ahead 7 chars => < 10; ) 
		=> Looking ahead 8 chars => < 10; ) {
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 1422 =>   (buffer: )
	Process char 1423 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1424 => 0 (buffer: 1)
	Process char 1425 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; )
		=> Looking ahead 3 chars => ; ) 
		=> Looking ahead 4 chars => ; ) {
		=> Looking ahead 5 chars => ; ) {}
		=> Looking ahead 6 chars => ; ) {}\n
		=> Looking ahead 7 chars => ; ) {}\nf
		=> Looking ahead 8 chars => ; ) {}\nfo
		=> Looking ahead 9 chars => ; ) {}\nfor
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1426 =>   (buffer: )
	Process char 1427 => ) (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\nf
		=> Looking ahead 6 chars => ) {}\nfo
		=> Looking ahead 7 chars => ) {}\nfor
		=> Looking ahead 8 chars => ) {}\nfor 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 1428 =>   (buffer: )
	Process char 1429 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\nf
		=> Looking ahead 4 chars => {}\nfo
		=> Looking ahead 5 chars => {}\nfor
		=> Looking ahead 6 chars => {}\nfor 
		=> Looking ahead 7 chars => {}\nfor (
		=> Looking ahead 8 chars => {}\nfor ( 
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 1430 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\nf
		=> Looking ahead 3 chars => }\nfo
		=> Looking ahead 4 chars => }\nfor
		=> Looking ahead 5 chars => }\nfor 
		=> Looking ahead 6 chars => }\nfor (
		=> Looking ahead 7 chars => }\nfor ( 
		=> Looking ahead 8 chars => }\nfor ( i
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 1431 => \n (buffer: )
	Process char 1432 => f (buffer: \n)
	=> Added token T_WHITESPACE (\n)
	Process char 1433 => o (buffer: f)
	Process char 1434 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for ( 
		=> Looking ahead 4 chars => for ( i
		=> Looking ahead 5 chars => for ( i 
		=> Looking ahead 6 chars => for ( i =
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 1435 =>   (buffer: )
	Process char 1436 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ( 
		=> Looking ahead 2 chars => ( i
		=> Looking ahead 3 chars => ( i 
		=> Looking ahead 4 chars => ( i =
		=> Looking ahead 5 chars => ( i = 
		=> Looking ahead 6 chars => ( i = 0
		=> Looking ahead 7 chars => ( i = 0;
		=> Looking ahead 8 chars => ( i = 0; 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 1437 =>   (buffer: )
	Process char 1438 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1439 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1440 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0; i
		=> Looking ahead 6 chars => = 0; i 
		=> Looking ahead 7 chars => = 0; i <
		=> Looking ahead 8 chars => = 0; i < 
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 1441 =>   (buffer: )
	Process char 1442 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1443 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		=> Looking ahead 9 chars => ; i < 10;)
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1444 =>   (buffer: )
	Process char 1445 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1446 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1447 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10;)
		=> Looking ahead 6 chars => < 10;) 
		=> Looking ahead 7 chars => < 10;) {
		=> Looking ahead 8 chars => < 10;) {}
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 1448 =>   (buffer: )
	Process char 1449 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1450 => 0 (buffer: 1)
	Process char 1451 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;)
		=> Looking ahead 2 chars => ;) 
		=> Looking ahead 3 chars => ;) {
		=> Looking ahead 4 chars => ;) {}
		=> Looking ahead 5 chars => ;) {}\n
		=> Looking ahead 6 chars => ;) {}\nf
		=> Looking ahead 7 chars => ;) {}\nfo
		=> Looking ahead 8 chars => ;) {}\nfor
		=> Looking ahead 9 chars => ;) {}\nfor 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1452 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\nf
		=> Looking ahead 6 chars => ) {}\nfo
		=> Looking ahead 7 chars => ) {}\nfor
		=> Looking ahead 8 chars => ) {}\nfor 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 1453 =>   (buffer: )
	Process char 1454 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\nf
		=> Looking ahead 4 chars => {}\nfo
		=> Looking ahead 5 chars => {}\nfor
		=> Looking ahead 6 chars => {}\nfor 
		=> Looking ahead 7 chars => {}\nfor (
		=> Looking ahead 8 chars => {}\nfor ( 
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 1455 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\nf
		=> Looking ahead 3 chars => }\nfo
		=> Looking ahead 4 chars => }\nfor
		=> Looking ahead 5 chars => }\nfor 
		=> Looking ahead 6 chars => }\nfor (
		=> Looking ahead 7 chars => }\nfor ( 
		=> Looking ahead 8 chars => }\nfor ( i
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 1456 => \n (buffer: )
	Process char 1457 => f (buffer: \n)
	=> Added token T_WHITESPACE (\n)
	Process char 1458 => o (buffer: f)
	Process char 1459 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for ( 
		=> Looking ahead 4 chars => for ( i
		=> Looking ahead 5 chars => for ( i 
		=> Looking ahead 6 chars => for ( i =
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 1460 =>   (buffer: )
	Process char 1461 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ( 
		=> Looking ahead 2 chars => ( i
		=> Looking ahead 3 chars => ( i 
		=> Looking ahead 4 chars => ( i =
		=> Looking ahead 5 chars => ( i = 
		=> Looking ahead 6 chars => ( i = 0
		=> Looking ahead 7 chars => ( i = 0;
		=> Looking ahead 8 chars => ( i = 0; 
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 1462 =>   (buffer: )
	Process char 1463 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1464 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1465 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0; i
		=> Looking ahead 6 chars => = 0; i 
		=> Looking ahead 7 chars => = 0; i <
		=> Looking ahead 8 chars => = 0; i < 
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 1466 =>   (buffer: )
	Process char 1467 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1468 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < 1
		=> Looking ahead 7 chars => ; i < 10
		=> Looking ahead 8 chars => ; i < 10;
		=> Looking ahead 9 chars => ; i < 10; 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1469 =>   (buffer: )
	Process char 1470 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1471 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1472 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10;  
		=> Looking ahead 7 chars => < 10;   
		=> Looking ahead 8 chars => < 10;    
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 1473 =>   (buffer: )
	Process char 1474 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1475 => 0 (buffer: 1)
	Process char 1476 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ;  
		=> Looking ahead 3 chars => ;   
		=> Looking ahead 4 chars => ;    
		=> Looking ahead 5 chars => ;     
		=> Looking ahead 6 chars => ;     )
		=> Looking ahead 7 chars => ;     ) 
		=> Looking ahead 8 chars => ;     ) {
		=> Looking ahead 9 chars => ;     ) {}
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1477 =>   (buffer: )
	Process char 1478 =>   (buffer:  )
	Process char 1479 =>   (buffer:   )
	Process char 1480 =>   (buffer:    )
	Process char 1481 =>   (buffer:     )
	Process char 1482 => ) (buffer:      )
	=> Added token T_WHITESPACE (     )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\n/
		=> Looking ahead 6 chars => ) {}\n//
		=> Looking ahead 7 chars => ) {}\n// 
		=> Looking ahead 8 chars => ) {}\n// p
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 1483 =>   (buffer: )
	Process char 1484 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\n/
		=> Looking ahead 4 chars => {}\n//
		=> Looking ahead 5 chars => {}\n// 
		=> Looking ahead 6 chars => {}\n// p
		=> Looking ahead 7 chars => {}\n// ph
		=> Looking ahead 8 chars => {}\n// php
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 1485 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n/
		=> Looking ahead 3 chars => }\n//
		=> Looking ahead 4 chars => }\n// 
		=> Looking ahead 5 chars => }\n// p
		=> Looking ahead 6 chars => }\n// ph
		=> Looking ahead 7 chars => }\n// php
		=> Looking ahead 8 chars => }\n// phpc
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 1486 => \n (buffer: )
	Process char 1487 => / (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 1487 *
	Process char 1488 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 1489 =>   (buffer: )
		Process char 1490 => p (buffer:  )
		Process char 1491 => h (buffer:  p)
		Process char 1492 => p (buffer:  ph)
		Process char 1493 => c (buffer:  php)
		Process char 1494 => s (buffer:  phpc)
		Process char 1495 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 1496 => s (buffer: )
		Process char 1497 => e (buffer: s)
		Process char 1498 => t (buffer: se)
		Process char 1499 =>   (buffer: set)
		Process char 1500 => S (buffer: set )
		Process char 1501 => q (buffer: set S)
		Process char 1502 => u (buffer: set Sq)
		Process char 1503 => i (buffer: set Squ)
		Process char 1504 => z (buffer: set Squi)
		Process char 1505 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1506 => C (buffer: )
		Process char 1507 => o (buffer: C)
		Process char 1508 => n (buffer: Co)
		Process char 1509 => t (buffer: Con)
		Process char 1510 => r (buffer: Cont)
		Process char 1511 => o (buffer: Contr)
		Process char 1512 => l (buffer: Contro)
		Process char 1513 => S (buffer: Control)
		Process char 1514 => t (buffer: ControlS)
		Process char 1515 => r (buffer: ControlSt)
		Process char 1516 => u (buffer: ControlStr)
		Process char 1517 => c (buffer: ControlStru)
		Process char 1518 => t (buffer: ControlStruc)
		Process char 1519 => u (buffer: ControlStruct)
		Process char 1520 => r (buffer: ControlStructu)
		Process char 1521 => e (buffer: ControlStructur)
		Process char 1522 => s (buffer: ControlStructure)
		Process char 1523 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1524 => F (buffer: )
		Process char 1525 => o (buffer: F)
		Process char 1526 => r (buffer: Fo)
		Process char 1527 => L (buffer: For)
		Process char 1528 => o (buffer: ForL)
		Process char 1529 => o (buffer: ForLo)
		Process char 1530 => p (buffer: ForLoo)
		Process char 1531 => D (buffer: ForLoop)
		Process char 1532 => e (buffer: ForLoopD)
		Process char 1533 => c (buffer: ForLoopDe)
		Process char 1534 => l (buffer: ForLoopDec)
		Process char 1535 => a (buffer: ForLoopDecl)
		Process char 1536 => r (buffer: ForLoopDecla)
		Process char 1537 => a (buffer: ForLoopDeclar)
		Process char 1538 => t (buffer: ForLoopDeclara)
		Process char 1539 => i (buffer: ForLoopDeclarat)
		Process char 1540 => o (buffer: ForLoopDeclarati)
		Process char 1541 => n (buffer: ForLoopDeclaratio)
		Process char 1542 =>   (buffer: ForLoopDeclaration)
		Process char 1543 => r (buffer: ForLoopDeclaration )
		Process char 1544 => e (buffer: ForLoopDeclaration r)
		Process char 1545 => q (buffer: ForLoopDeclaration re)
		Process char 1546 => u (buffer: ForLoopDeclaration req)
		Process char 1547 => i (buffer: ForLoopDeclaration requ)
		Process char 1548 => r (buffer: ForLoopDeclaration requi)
		Process char 1549 => e (buffer: ForLoopDeclaration requir)
		Process char 1550 => d (buffer: ForLoopDeclaration require)
		Process char 1551 => S (buffer: ForLoopDeclaration required)
		Process char 1552 => p (buffer: ForLoopDeclaration requiredS)
		Process char 1553 => a (buffer: ForLoopDeclaration requiredSp)
		Process char 1554 => c (buffer: ForLoopDeclaration requiredSpa)
		Process char 1555 => e (buffer: ForLoopDeclaration requiredSpac)
		Process char 1556 => s (buffer: ForLoopDeclaration requiredSpace)
		Process char 1557 => A (buffer: ForLoopDeclaration requiredSpaces)
		Process char 1558 => f (buffer: ForLoopDeclaration requiredSpacesA)
		Process char 1559 => t (buffer: ForLoopDeclaration requiredSpacesAf)
		Process char 1560 => e (buffer: ForLoopDeclaration requiredSpacesAft)
		Process char 1561 => r (buffer: ForLoopDeclaration requiredSpacesAfte)
		Process char 1562 => O (buffer: ForLoopDeclaration requiredSpacesAfter)
		Process char 1563 => p (buffer: ForLoopDeclaration requiredSpacesAfterO)
		Process char 1564 => e (buffer: ForLoopDeclaration requiredSpacesAfterOp)
		Process char 1565 => n (buffer: ForLoopDeclaration requiredSpacesAfterOpe)
		Process char 1566 =>   (buffer: ForLoopDeclaration requiredSpacesAfterOpen)
		Process char 1567 => 0 (buffer: ForLoopDeclaration requiredSpacesAfterOpen )
		Process char 1568 => \n (buffer: ForLoopDeclaration requiredSpacesAfterOpen 0)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration requiredSpacesAfterOpen 0\n)
	Process char 1569 => / (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 1569 *
	Process char 1570 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 1571 =>   (buffer: )
		Process char 1572 => p (buffer:  )
		Process char 1573 => h (buffer:  p)
		Process char 1574 => p (buffer:  ph)
		Process char 1575 => c (buffer:  php)
		Process char 1576 => s (buffer:  phpc)
		Process char 1577 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 1578 => s (buffer: )
		Process char 1579 => e (buffer: s)
		Process char 1580 => t (buffer: se)
		Process char 1581 =>   (buffer: set)
		Process char 1582 => S (buffer: set )
		Process char 1583 => q (buffer: set S)
		Process char 1584 => u (buffer: set Sq)
		Process char 1585 => i (buffer: set Squ)
		Process char 1586 => z (buffer: set Squi)
		Process char 1587 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1588 => C (buffer: )
		Process char 1589 => o (buffer: C)
		Process char 1590 => n (buffer: Co)
		Process char 1591 => t (buffer: Con)
		Process char 1592 => r (buffer: Cont)
		Process char 1593 => o (buffer: Contr)
		Process char 1594 => l (buffer: Contro)
		Process char 1595 => S (buffer: Control)
		Process char 1596 => t (buffer: ControlS)
		Process char 1597 => r (buffer: ControlSt)
		Process char 1598 => u (buffer: ControlStr)
		Process char 1599 => c (buffer: ControlStru)
		Process char 1600 => t (buffer: ControlStruc)
		Process char 1601 => u (buffer: ControlStruct)
		Process char 1602 => r (buffer: ControlStructu)
		Process char 1603 => e (buffer: ControlStructur)
		Process char 1604 => s (buffer: ControlStructure)
		Process char 1605 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1606 => F (buffer: )
		Process char 1607 => o (buffer: F)
		Process char 1608 => r (buffer: Fo)
		Process char 1609 => L (buffer: For)
		Process char 1610 => o (buffer: ForL)
		Process char 1611 => o (buffer: ForLo)
		Process char 1612 => p (buffer: ForLoo)
		Process char 1613 => D (buffer: ForLoop)
		Process char 1614 => e (buffer: ForLoopD)
		Process char 1615 => c (buffer: ForLoopDe)
		Process char 1616 => l (buffer: ForLoopDec)
		Process char 1617 => a (buffer: ForLoopDecl)
		Process char 1618 => r (buffer: ForLoopDecla)
		Process char 1619 => a (buffer: ForLoopDeclar)
		Process char 1620 => t (buffer: ForLoopDeclara)
		Process char 1621 => i (buffer: ForLoopDeclarat)
		Process char 1622 => o (buffer: ForLoopDeclarati)
		Process char 1623 => n (buffer: ForLoopDeclaratio)
		Process char 1624 =>   (buffer: ForLoopDeclaration)
		Process char 1625 => r (buffer: ForLoopDeclaration )
		Process char 1626 => e (buffer: ForLoopDeclaration r)
		Process char 1627 => q (buffer: ForLoopDeclaration re)
		Process char 1628 => u (buffer: ForLoopDeclaration req)
		Process char 1629 => i (buffer: ForLoopDeclaration requ)
		Process char 1630 => r (buffer: ForLoopDeclaration requi)
		Process char 1631 => e (buffer: ForLoopDeclaration requir)
		Process char 1632 => d (buffer: ForLoopDeclaration require)
		Process char 1633 => S (buffer: ForLoopDeclaration required)
		Process char 1634 => p (buffer: ForLoopDeclaration requiredS)
		Process char 1635 => a (buffer: ForLoopDeclaration requiredSp)
		Process char 1636 => c (buffer: ForLoopDeclaration requiredSpa)
		Process char 1637 => e (buffer: ForLoopDeclaration requiredSpac)
		Process char 1638 => s (buffer: ForLoopDeclaration requiredSpace)
		Process char 1639 => B (buffer: ForLoopDeclaration requiredSpaces)
		Process char 1640 => e (buffer: ForLoopDeclaration requiredSpacesB)
		Process char 1641 => f (buffer: ForLoopDeclaration requiredSpacesBe)
		Process char 1642 => o (buffer: ForLoopDeclaration requiredSpacesBef)
		Process char 1643 => r (buffer: ForLoopDeclaration requiredSpacesBefo)
		Process char 1644 => e (buffer: ForLoopDeclaration requiredSpacesBefor)
		Process char 1645 => C (buffer: ForLoopDeclaration requiredSpacesBefore)
		Process char 1646 => l (buffer: ForLoopDeclaration requiredSpacesBeforeC)
		Process char 1647 => o (buffer: ForLoopDeclaration requiredSpacesBeforeCl)
		Process char 1648 => s (buffer: ForLoopDeclaration requiredSpacesBeforeClo)
		Process char 1649 => e (buffer: ForLoopDeclaration requiredSpacesBeforeClos)
		Process char 1650 =>   (buffer: ForLoopDeclaration requiredSpacesBeforeClose)
		Process char 1651 => 0 (buffer: ForLoopDeclaration requiredSpacesBeforeClose )
		Process char 1652 => \n (buffer: ForLoopDeclaration requiredSpacesBeforeClose 0)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration requiredSpacesBeforeClose 0\n)
	Process char 1653 => \n (buffer: )
	Process char 1654 => / (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 1654 *
	Process char 1655 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // T
		=> Looking ahead 3 chars => // Te
		=> Looking ahead 4 chars => // Tes
		=> Looking ahead 5 chars => // Test
		=> Looking ahead 6 chars => // Test 
		=> Looking ahead 7 chars => // Test h
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 1656 =>   (buffer: )
		Process char 1657 => T (buffer:  )
		Process char 1658 => e (buffer:  T)
		Process char 1659 => s (buffer:  Te)
		Process char 1660 => t (buffer:  Tes)
		Process char 1661 =>   (buffer:  Test)
		Process char 1662 => h (buffer:  Test )
		Process char 1663 => a (buffer:  Test h)
		Process char 1664 => n (buffer:  Test ha)
		Process char 1665 => d (buffer:  Test han)
		Process char 1666 => l (buffer:  Test hand)
		Process char 1667 => i (buffer:  Test handl)
		Process char 1668 => n (buffer:  Test handli)
		Process char 1669 => g (buffer:  Test handlin)
		Process char 1670 =>   (buffer:  Test handling)
		Process char 1671 => o (buffer:  Test handling )
		Process char 1672 => f (buffer:  Test handling o)
		Process char 1673 =>   (buffer:  Test handling of)
		Process char 1674 => c (buffer:  Test handling of )
		Process char 1675 => o (buffer:  Test handling of c)
		Process char 1676 => m (buffer:  Test handling of co)
		Process char 1677 => m (buffer:  Test handling of com)
		Process char 1678 => e (buffer:  Test handling of comm)
		Process char 1679 => n (buffer:  Test handling of comme)
		Process char 1680 => t (buffer:  Test handling of commen)
		Process char 1681 => s (buffer:  Test handling of comment)
		Process char 1682 =>   (buffer:  Test handling of comments)
		Process char 1683 => a (buffer:  Test handling of comments )
		Process char 1684 => n (buffer:  Test handling of comments a)
		Process char 1685 => d (buffer:  Test handling of comments an)
		Process char 1686 =>   (buffer:  Test handling of comments and)
		Process char 1687 => i (buffer:  Test handling of comments and )
		Process char 1688 => n (buffer:  Test handling of comments and i)
		Process char 1689 => l (buffer:  Test handling of comments and in)
		Process char 1690 => i (buffer:  Test handling of comments and inl)
		Process char 1691 => n (buffer:  Test handling of comments and inli)
		Process char 1692 => e (buffer:  Test handling of comments and inlin)
		Process char 1693 =>   (buffer:  Test handling of comments and inline)
		Process char 1694 => a (buffer:  Test handling of comments and inline )
		Process char 1695 => n (buffer:  Test handling of comments and inline a)
		Process char 1696 => n (buffer:  Test handling of comments and inline an)
		Process char 1697 => o (buffer:  Test handling of comments and inline ann)
		Process char 1698 => t (buffer:  Test handling of comments and inline anno)
		Process char 1699 => a (buffer:  Test handling of comments and inline annot)
		Process char 1700 => t (buffer:  Test handling of comments and inline annota)
		Process char 1701 => i (buffer:  Test handling of comments and inline annotat)
		Process char 1702 => o (buffer:  Test handling of comments and inline annotati)
		Process char 1703 => n (buffer:  Test handling of comments and inline annotatio)
		Process char 1704 => s (buffer:  Test handling of comments and inline annotation)
		Process char 1705 => . (buffer:  Test handling of comments and inline annotations)
	=> Added token T_STRING ( Test handling of comments and inline annotations)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .\n
		=> Looking ahead 2 chars => .\nf
		=> Looking ahead 3 chars => .\nfo
		=> Looking ahead 4 chars => .\nfor
		=> Looking ahead 5 chars => .\nfor 
		=> Looking ahead 6 chars => .\nfor (
		=> Looking ahead 7 chars => .\nfor ( 
		=> Looking ahead 8 chars => .\nfor ( /
		=> Looking ahead 9 chars => .\nfor ( /*
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1706 => \n (buffer: )
		* found end of comment *
	=> Added token T_STRING (\n)
	Process char 1707 => f (buffer: )
	Process char 1708 => o (buffer: f)
	Process char 1709 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for ( 
		=> Looking ahead 4 chars => for ( /
		=> Looking ahead 5 chars => for ( /*
		=> Looking ahead 6 chars => for ( /*p
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 1710 =>   (buffer: )
	Process char 1711 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ( 
		=> Looking ahead 2 chars => ( /
		=> Looking ahead 3 chars => ( /*
		=> Looking ahead 4 chars => ( /*p
		=> Looking ahead 5 chars => ( /*ph
		=> Looking ahead 6 chars => ( /*php
		=> Looking ahead 7 chars => ( /*phpc
		=> Looking ahead 8 chars => ( /*phpcs
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 1712 =>   (buffer: )
	Process char 1713 => / (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => /*
		* look ahead found more specific token (T_COMMENT), ignoring 1713 *
	Process char 1714 => * (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => /*p
		=> Looking ahead 2 chars => /*ph
		=> Looking ahead 3 chars => /*php
		=> Looking ahead 4 chars => /*phpc
		=> Looking ahead 5 chars => /*phpcs
		=> Looking ahead 6 chars => /*phpcs:
		=> Looking ahead 7 chars => /*phpcs:e
		* look ahead found nothing *
	=> Added token T_COMMENT (/*)
		* looking for end of comment *
		Process char 1715 => p (buffer: )
		Process char 1716 => h (buffer: p)
		Process char 1717 => p (buffer: ph)
		Process char 1718 => c (buffer: php)
		Process char 1719 => s (buffer: phpc)
		Process char 1720 => : (buffer: phpcs)
	=> Added token T_STRING (phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :e
		=> Looking ahead 2 chars => :en
		=> Looking ahead 3 chars => :ena
		=> Looking ahead 4 chars => :enab
		=> Looking ahead 5 chars => :enabl
		=> Looking ahead 6 chars => :enable
		=> Looking ahead 7 chars => :enable*
		=> Looking ahead 8 chars => :enable*/
		=> Looking ahead 9 chars => :enable*/ 
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 1721 => e (buffer: )
		Process char 1722 => n (buffer: e)
		Process char 1723 => a (buffer: en)
		Process char 1724 => b (buffer: ena)
		Process char 1725 => l (buffer: enab)
		Process char 1726 => e (buffer: enabl)
		Process char 1727 => * (buffer: enable)
	=> Added token T_STRING (enable)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => */
		* look ahead found more specific token (T_COMMENT), ignoring 1727 *
		Process char 1728 => / (buffer: *)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => */ 
		=> Looking ahead 2 chars => */ i
		=> Looking ahead 3 chars => */ i 
		=> Looking ahead 4 chars => */ i =
		=> Looking ahead 5 chars => */ i = 
		=> Looking ahead 6 chars => */ i = 0
		=> Looking ahead 7 chars => */ i = 0 
		* look ahead found nothing *
	=> Added token T_COMMENT (*/)
		* found end of comment *
	Process char 1729 =>   (buffer: )
	Process char 1730 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1731 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1732 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0 
		=> Looking ahead 4 chars => = 0 /
		=> Looking ahead 5 chars => = 0 /*
		=> Looking ahead 6 chars => = 0 /*s
		=> Looking ahead 7 chars => = 0 /*st
		=> Looking ahead 8 chars => = 0 /*sta
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 1733 =>   (buffer: )
	Process char 1734 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1735 =>   (buffer: 0)
	=> Added token T_STRING (0)
	Process char 1736 => / (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => /*
		* look ahead found more specific token (T_COMMENT), ignoring 1736 *
	Process char 1737 => * (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => /*s
		=> Looking ahead 2 chars => /*st
		=> Looking ahead 3 chars => /*sta
		=> Looking ahead 4 chars => /*star
		=> Looking ahead 5 chars => /*start
		=> Looking ahead 6 chars => /*start*
		=> Looking ahead 7 chars => /*start*/
		* look ahead found nothing *
	=> Added token T_COMMENT (/*)
		* looking for end of comment *
		Process char 1738 => s (buffer: )
		Process char 1739 => t (buffer: s)
		Process char 1740 => a (buffer: st)
		Process char 1741 => r (buffer: sta)
		Process char 1742 => t (buffer: star)
		Process char 1743 => * (buffer: start)
	=> Added token T_STRING (start)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => */
		* look ahead found more specific token (T_COMMENT), ignoring 1743 *
		Process char 1744 => / (buffer: *)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => */ 
		=> Looking ahead 2 chars => */ ;
		=> Looking ahead 3 chars => */ ; 
		=> Looking ahead 4 chars => */ ;  
		=> Looking ahead 5 chars => */ ;   
		=> Looking ahead 6 chars => */ ;    
		=> Looking ahead 7 chars => */ ;    /
		* look ahead found nothing *
	=> Added token T_COMMENT (*/)
		* found end of comment *
	Process char 1745 =>   (buffer: )
	Process char 1746 => ; (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ;  
		=> Looking ahead 3 chars => ;   
		=> Looking ahead 4 chars => ;    
		=> Looking ahead 5 chars => ;    /
		=> Looking ahead 6 chars => ;    /*
		=> Looking ahead 7 chars => ;    /*e
		=> Looking ahead 8 chars => ;    /*en
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1747 =>   (buffer: )
	Process char 1748 =>   (buffer:  )
	Process char 1749 =>   (buffer:   )
	Process char 1750 =>   (buffer:    )
	Process char 1751 => / (buffer:     )
	=> Added token T_WHITESPACE (    )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => /*
		* look ahead found more specific token (T_COMMENT), ignoring 1751 *
	Process char 1752 => * (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => /*e
		=> Looking ahead 2 chars => /*en
		=> Looking ahead 3 chars => /*end
		=> Looking ahead 4 chars => /*end*
		=> Looking ahead 5 chars => /*end*/
		=> Looking ahead 6 chars => /*end*/i
		=> Looking ahead 7 chars => /*end*/i 
		* look ahead found nothing *
	=> Added token T_COMMENT (/*)
		* looking for end of comment *
		Process char 1753 => e (buffer: )
		Process char 1754 => n (buffer: e)
		Process char 1755 => d (buffer: en)
		Process char 1756 => * (buffer: end)
	=> Added token T_STRING (end)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => */
		* look ahead found more specific token (T_COMMENT), ignoring 1756 *
		Process char 1757 => / (buffer: *)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => */i
		=> Looking ahead 2 chars => */i 
		=> Looking ahead 3 chars => */i <
		=> Looking ahead 4 chars => */i < 
		=> Looking ahead 5 chars => */i < 1
		=> Looking ahead 6 chars => */i < 10
		=> Looking ahead 7 chars => */i < 10/
		* look ahead found nothing *
	=> Added token T_COMMENT (*/)
		* found end of comment *
	Process char 1758 => i (buffer: )
	Process char 1759 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1760 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10/
		=> Looking ahead 5 chars => < 10/*
		=> Looking ahead 6 chars => < 10/*c
		=> Looking ahead 7 chars => < 10/*co
		=> Looking ahead 8 chars => < 10/*com
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 1761 =>   (buffer: )
	Process char 1762 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1763 => 0 (buffer: 1)
	Process char 1764 => / (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => /*
		* look ahead found more specific token (T_COMMENT), ignoring 1764 *
	Process char 1765 => * (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => /*c
		=> Looking ahead 2 chars => /*co
		=> Looking ahead 3 chars => /*com
		=> Looking ahead 4 chars => /*comm
		=> Looking ahead 5 chars => /*comme
		=> Looking ahead 6 chars => /*commen
		=> Looking ahead 7 chars => /*comment
		* look ahead found nothing *
	=> Added token T_COMMENT (/*)
		* looking for end of comment *
		Process char 1766 => c (buffer: )
		Process char 1767 => o (buffer: c)
		Process char 1768 => m (buffer: co)
		Process char 1769 => m (buffer: com)
		Process char 1770 => e (buffer: comm)
		Process char 1771 => n (buffer: comme)
		Process char 1772 => t (buffer: commen)
		Process char 1773 => * (buffer: comment)
	=> Added token T_STRING (comment)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => */
		* look ahead found more specific token (T_COMMENT), ignoring 1773 *
		Process char 1774 => / (buffer: *)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => */;
		=> Looking ahead 2 chars => */; 
		=> Looking ahead 3 chars => */; i
		=> Looking ahead 4 chars => */; i+
		=> Looking ahead 5 chars => */; i++
		=> Looking ahead 6 chars => */; i++ 
		=> Looking ahead 7 chars => */; i++ /
		* look ahead found nothing *
	=> Added token T_COMMENT (*/)
		* found end of comment *
	Process char 1775 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++ 
		=> Looking ahead 6 chars => ; i++ /
		=> Looking ahead 7 chars => ; i++ /*
		=> Looking ahead 8 chars => ; i++ /*c
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1776 =>   (buffer: )
	Process char 1777 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1778 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 1778 *
	Process char 1779 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++ 
		=> Looking ahead 2 chars => ++ /
		=> Looking ahead 3 chars => ++ /*
		=> Looking ahead 4 chars => ++ /*c
		=> Looking ahead 5 chars => ++ /*co
		=> Looking ahead 6 chars => ++ /*com
		=> Looking ahead 7 chars => ++ /*comm
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 1780 =>   (buffer: )
	Process char 1781 => / (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => /*
		* look ahead found more specific token (T_COMMENT), ignoring 1781 *
	Process char 1782 => * (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => /*c
		=> Looking ahead 2 chars => /*co
		=> Looking ahead 3 chars => /*com
		=> Looking ahead 4 chars => /*comm
		=> Looking ahead 5 chars => /*comme
		=> Looking ahead 6 chars => /*commen
		=> Looking ahead 7 chars => /*comment
		* look ahead found nothing *
	=> Added token T_COMMENT (/*)
		* looking for end of comment *
		Process char 1783 => c (buffer: )
		Process char 1784 => o (buffer: c)
		Process char 1785 => m (buffer: co)
		Process char 1786 => m (buffer: com)
		Process char 1787 => e (buffer: comm)
		Process char 1788 => n (buffer: comme)
		Process char 1789 => t (buffer: commen)
		Process char 1790 => * (buffer: comment)
	=> Added token T_STRING (comment)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => */
		* look ahead found more specific token (T_COMMENT), ignoring 1790 *
		Process char 1791 => / (buffer: *)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => */ 
		=> Looking ahead 2 chars => */  
		=> Looking ahead 3 chars => */   
		=> Looking ahead 4 chars => */   )
		=> Looking ahead 5 chars => */   ) 
		=> Looking ahead 6 chars => */   ) {
		=> Looking ahead 7 chars => */   ) {}
		* look ahead found nothing *
	=> Added token T_COMMENT (*/)
		* found end of comment *
	Process char 1792 =>   (buffer: )
	Process char 1793 =>   (buffer:  )
	Process char 1794 =>   (buffer:   )
	Process char 1795 => ) (buffer:    )
	=> Added token T_WHITESPACE (   )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\n\n
		=> Looking ahead 6 chars => ) {}\n\n/
		=> Looking ahead 7 chars => ) {}\n\n//
		=> Looking ahead 8 chars => ) {}\n\n// 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 1796 =>   (buffer: )
	Process char 1797 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\n\n
		=> Looking ahead 4 chars => {}\n\n/
		=> Looking ahead 5 chars => {}\n\n//
		=> Looking ahead 6 chars => {}\n\n// 
		=> Looking ahead 7 chars => {}\n\n// T
		=> Looking ahead 8 chars => {}\n\n// Te
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 1798 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\n/
		=> Looking ahead 4 chars => }\n\n//
		=> Looking ahead 5 chars => }\n\n// 
		=> Looking ahead 6 chars => }\n\n// T
		=> Looking ahead 7 chars => }\n\n// Te
		=> Looking ahead 8 chars => }\n\n// Tes
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 1799 => \n (buffer: )
	Process char 1800 => \n (buffer: \n)
	Process char 1801 => / (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 1801 *
	Process char 1802 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // T
		=> Looking ahead 3 chars => // Te
		=> Looking ahead 4 chars => // Tes
		=> Looking ahead 5 chars => // Test
		=> Looking ahead 6 chars => // Test 
		=> Looking ahead 7 chars => // Test m
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 1803 =>   (buffer: )
		Process char 1804 => T (buffer:  )
		Process char 1805 => e (buffer:  T)
		Process char 1806 => s (buffer:  Te)
		Process char 1807 => t (buffer:  Tes)
		Process char 1808 =>   (buffer:  Test)
		Process char 1809 => m (buffer:  Test )
		Process char 1810 => u (buffer:  Test m)
		Process char 1811 => l (buffer:  Test mu)
		Process char 1812 => t (buffer:  Test mul)
		Process char 1813 => i (buffer:  Test mult)
		Process char 1814 => - (buffer:  Test multi)
	=> Added token T_STRING ( Test multi)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => -l
		=> Looking ahead 2 chars => -li
		=> Looking ahead 3 chars => -lin
		=> Looking ahead 4 chars => -line
		=> Looking ahead 5 chars => -line 
		=> Looking ahead 6 chars => -line F
		=> Looking ahead 7 chars => -line FO
		=> Looking ahead 8 chars => -line FOR
		=> Looking ahead 9 chars => -line FOR 
		* look ahead found nothing *
	=> Added token T_MINUS (-)
		Process char 1815 => l (buffer: )
		Process char 1816 => i (buffer: l)
		Process char 1817 => n (buffer: li)
		Process char 1818 => e (buffer: lin)
		Process char 1819 =>   (buffer: line)
		Process char 1820 => F (buffer: line )
		Process char 1821 => O (buffer: line F)
		Process char 1822 => R (buffer: line FO)
		Process char 1823 =>   (buffer: line FOR)
		Process char 1824 => c (buffer: line FOR )
		Process char 1825 => o (buffer: line FOR c)
		Process char 1826 => n (buffer: line FOR co)
		Process char 1827 => t (buffer: line FOR con)
		Process char 1828 => r (buffer: line FOR cont)
		Process char 1829 => o (buffer: line FOR contr)
		Process char 1830 => l (buffer: line FOR contro)
		Process char 1831 =>   (buffer: line FOR control)
		Process char 1832 => s (buffer: line FOR control )
		Process char 1833 => t (buffer: line FOR control s)
		Process char 1834 => r (buffer: line FOR control st)
		Process char 1835 => u (buffer: line FOR control str)
		Process char 1836 => c (buffer: line FOR control stru)
		Process char 1837 => t (buffer: line FOR control struc)
		Process char 1838 => u (buffer: line FOR control struct)
		Process char 1839 => r (buffer: line FOR control structu)
		Process char 1840 => e (buffer: line FOR control structur)
		Process char 1841 => . (buffer: line FOR control structure)
	=> Added token T_STRING (line FOR control structure)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .\n
		=> Looking ahead 2 chars => .\nf
		=> Looking ahead 3 chars => .\nfo
		=> Looking ahead 4 chars => .\nfor
		=> Looking ahead 5 chars => .\nfor 
		=> Looking ahead 6 chars => .\nfor (
		=> Looking ahead 7 chars => .\nfor (\n
		=> Looking ahead 8 chars => .\nfor (\n 
		=> Looking ahead 9 chars => .\nfor (\n  
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1842 => \n (buffer: )
		* found end of comment *
	=> Added token T_STRING (\n)
	Process char 1843 => f (buffer: )
	Process char 1844 => o (buffer: f)
	Process char 1845 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (\n
		=> Looking ahead 4 chars => for (\n 
		=> Looking ahead 5 chars => for (\n  
		=> Looking ahead 6 chars => for (\n   
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 1846 =>   (buffer: )
	Process char 1847 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (\n
		=> Looking ahead 2 chars => (\n 
		=> Looking ahead 3 chars => (\n  
		=> Looking ahead 4 chars => (\n   
		=> Looking ahead 5 chars => (\n    
		=> Looking ahead 6 chars => (\n    i
		=> Looking ahead 7 chars => (\n    i 
		=> Looking ahead 8 chars => (\n    i =
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 1848 => \n (buffer: )
	Process char 1849 =>   (buffer: \n)
	Process char 1850 =>   (buffer: \n )
	Process char 1851 =>   (buffer: \n  )
	Process char 1852 =>   (buffer: \n   )
	Process char 1853 => i (buffer: \n    )
	=> Added token T_WHITESPACE (\n    )
	Process char 1854 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1855 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0;\n
		=> Looking ahead 5 chars => = 0;\n 
		=> Looking ahead 6 chars => = 0;\n  
		=> Looking ahead 7 chars => = 0;\n   
		=> Looking ahead 8 chars => = 0;\n    
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 1856 =>   (buffer: )
	Process char 1857 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1858 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;\n
		=> Looking ahead 2 chars => ;\n 
		=> Looking ahead 3 chars => ;\n  
		=> Looking ahead 4 chars => ;\n   
		=> Looking ahead 5 chars => ;\n    
		=> Looking ahead 6 chars => ;\n    i
		=> Looking ahead 7 chars => ;\n    i 
		=> Looking ahead 8 chars => ;\n    i <
		=> Looking ahead 9 chars => ;\n    i < 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1859 => \n (buffer: )
	Process char 1860 =>   (buffer: \n)
	Process char 1861 =>   (buffer: \n )
	Process char 1862 =>   (buffer: \n  )
	Process char 1863 =>   (buffer: \n   )
	Process char 1864 => i (buffer: \n    )
	=> Added token T_WHITESPACE (\n    )
	Process char 1865 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1866 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10;\n
		=> Looking ahead 6 chars => < 10;\n 
		=> Looking ahead 7 chars => < 10;\n  
		=> Looking ahead 8 chars => < 10;\n   
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 1867 =>   (buffer: )
	Process char 1868 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1869 => 0 (buffer: 1)
	Process char 1870 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;\n
		=> Looking ahead 2 chars => ;\n 
		=> Looking ahead 3 chars => ;\n  
		=> Looking ahead 4 chars => ;\n   
		=> Looking ahead 5 chars => ;\n    
		=> Looking ahead 6 chars => ;\n    i
		=> Looking ahead 7 chars => ;\n    i+
		=> Looking ahead 8 chars => ;\n    i++
		=> Looking ahead 9 chars => ;\n    i++\n
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1871 => \n (buffer: )
	Process char 1872 =>   (buffer: \n)
	Process char 1873 =>   (buffer: \n )
	Process char 1874 =>   (buffer: \n  )
	Process char 1875 =>   (buffer: \n   )
	Process char 1876 => i (buffer: \n    )
	=> Added token T_WHITESPACE (\n    )
	Process char 1877 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 1877 *
	Process char 1878 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++\n
		=> Looking ahead 2 chars => ++\n)
		=> Looking ahead 3 chars => ++\n) 
		=> Looking ahead 4 chars => ++\n) {
		=> Looking ahead 5 chars => ++\n) {}
		=> Looking ahead 6 chars => ++\n) {}\n
		=> Looking ahead 7 chars => ++\n) {}\n\n
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 1879 => \n (buffer: )
	Process char 1880 => ) (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\n\n
		=> Looking ahead 6 chars => ) {}\n\n/
		=> Looking ahead 7 chars => ) {}\n\n//
		=> Looking ahead 8 chars => ) {}\n\n// 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 1881 =>   (buffer: )
	Process char 1882 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\n\n
		=> Looking ahead 4 chars => {}\n\n/
		=> Looking ahead 5 chars => {}\n\n//
		=> Looking ahead 6 chars => {}\n\n// 
		=> Looking ahead 7 chars => {}\n\n// T
		=> Looking ahead 8 chars => {}\n\n// Te
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 1883 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\n/
		=> Looking ahead 4 chars => }\n\n//
		=> Looking ahead 5 chars => }\n\n// 
		=> Looking ahead 6 chars => }\n\n// T
		=> Looking ahead 7 chars => }\n\n// Te
		=> Looking ahead 8 chars => }\n\n// Tes
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 1884 => \n (buffer: )
	Process char 1885 => \n (buffer: \n)
	Process char 1886 => / (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 1886 *
	Process char 1887 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // T
		=> Looking ahead 3 chars => // Te
		=> Looking ahead 4 chars => // Tes
		=> Looking ahead 5 chars => // Test
		=> Looking ahead 6 chars => // Test 
		=> Looking ahead 7 chars => // Test m
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 1888 =>   (buffer: )
		Process char 1889 => T (buffer:  )
		Process char 1890 => e (buffer:  T)
		Process char 1891 => s (buffer:  Te)
		Process char 1892 => t (buffer:  Tes)
		Process char 1893 =>   (buffer:  Test)
		Process char 1894 => m (buffer:  Test )
		Process char 1895 => u (buffer:  Test m)
		Process char 1896 => l (buffer:  Test mu)
		Process char 1897 => t (buffer:  Test mul)
		Process char 1898 => i (buffer:  Test mult)
		Process char 1899 => - (buffer:  Test multi)
	=> Added token T_STRING ( Test multi)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => -l
		=> Looking ahead 2 chars => -li
		=> Looking ahead 3 chars => -lin
		=> Looking ahead 4 chars => -line
		=> Looking ahead 5 chars => -line 
		=> Looking ahead 6 chars => -line F
		=> Looking ahead 7 chars => -line FO
		=> Looking ahead 8 chars => -line FOR
		=> Looking ahead 9 chars => -line FOR 
		* look ahead found nothing *
	=> Added token T_MINUS (-)
		Process char 1900 => l (buffer: )
		Process char 1901 => i (buffer: l)
		Process char 1902 => n (buffer: li)
		Process char 1903 => e (buffer: lin)
		Process char 1904 =>   (buffer: line)
		Process char 1905 => F (buffer: line )
		Process char 1906 => O (buffer: line F)
		Process char 1907 => R (buffer: line FO)
		Process char 1908 =>   (buffer: line FOR)
		Process char 1909 => c (buffer: line FOR )
		Process char 1910 => o (buffer: line FOR c)
		Process char 1911 => n (buffer: line FOR co)
		Process char 1912 => t (buffer: line FOR con)
		Process char 1913 => r (buffer: line FOR cont)
		Process char 1914 => o (buffer: line FOR contr)
		Process char 1915 => l (buffer: line FOR contro)
		Process char 1916 =>   (buffer: line FOR control)
		Process char 1917 => s (buffer: line FOR control )
		Process char 1918 => t (buffer: line FOR control s)
		Process char 1919 => r (buffer: line FOR control st)
		Process char 1920 => u (buffer: line FOR control str)
		Process char 1921 => c (buffer: line FOR control stru)
		Process char 1922 => t (buffer: line FOR control struc)
		Process char 1923 => u (buffer: line FOR control struct)
		Process char 1924 => r (buffer: line FOR control structu)
		Process char 1925 => e (buffer: line FOR control structur)
		Process char 1926 =>   (buffer: line FOR control structure)
		Process char 1927 => w (buffer: line FOR control structure )
		Process char 1928 => i (buffer: line FOR control structure w)
		Process char 1929 => t (buffer: line FOR control structure wi)
		Process char 1930 => h (buffer: line FOR control structure wit)
		Process char 1931 =>   (buffer: line FOR control structure with)
		Process char 1932 => c (buffer: line FOR control structure with )
		Process char 1933 => o (buffer: line FOR control structure with c)
		Process char 1934 => m (buffer: line FOR control structure with co)
		Process char 1935 => m (buffer: line FOR control structure with com)
		Process char 1936 => e (buffer: line FOR control structure with comm)
		Process char 1937 => n (buffer: line FOR control structure with comme)
		Process char 1938 => t (buffer: line FOR control structure with commen)
		Process char 1939 => s (buffer: line FOR control structure with comment)
		Process char 1940 =>   (buffer: line FOR control structure with comments)
		Process char 1941 => a (buffer: line FOR control structure with comments )
		Process char 1942 => n (buffer: line FOR control structure with comments a)
		Process char 1943 => d (buffer: line FOR control structure with comments an)
		Process char 1944 =>   (buffer: line FOR control structure with comments and)
		Process char 1945 => a (buffer: line FOR control structure with comments and )
		Process char 1946 => n (buffer: line FOR control structure with comments and a)
		Process char 1947 => n (buffer: line FOR control structure with comments and an)
		Process char 1948 => o (buffer: line FOR control structure with comments and ann)
		Process char 1949 => t (buffer: line FOR control structure with comments and anno)
		Process char 1950 => a (buffer: line FOR control structure with comments and annot)
		Process char 1951 => t (buffer: line FOR control structure with comments and annota)
		Process char 1952 => i (buffer: line FOR control structure with comments and annotat)
		Process char 1953 => o (buffer: line FOR control structure with comments and annotati)
		Process char 1954 => n (buffer: line FOR control structure with comments and annotatio)
		Process char 1955 => s (buffer: line FOR control structure with comments and annotation)
		Process char 1956 => . (buffer: line FOR control structure with comments and annotations)
	=> Added token T_STRING (line FOR control structure with comments and annotations)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .\n
		=> Looking ahead 2 chars => .\nf
		=> Looking ahead 3 chars => .\nfo
		=> Looking ahead 4 chars => .\nfor
		=> Looking ahead 5 chars => .\nfor 
		=> Looking ahead 6 chars => .\nfor (
		=> Looking ahead 7 chars => .\nfor (\n
		=> Looking ahead 8 chars => .\nfor (\n 
		=> Looking ahead 9 chars => .\nfor (\n  
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 1957 => \n (buffer: )
		* found end of comment *
	=> Added token T_STRING (\n)
	Process char 1958 => f (buffer: )
	Process char 1959 => o (buffer: f)
	Process char 1960 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (\n
		=> Looking ahead 4 chars => for (\n 
		=> Looking ahead 5 chars => for (\n  
		=> Looking ahead 6 chars => for (\n   
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 1961 =>   (buffer: )
	Process char 1962 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (\n
		=> Looking ahead 2 chars => (\n 
		=> Looking ahead 3 chars => (\n  
		=> Looking ahead 4 chars => (\n   
		=> Looking ahead 5 chars => (\n    
		=> Looking ahead 6 chars => (\n    i
		=> Looking ahead 7 chars => (\n    i 
		=> Looking ahead 8 chars => (\n    i =
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 1963 => \n (buffer: )
	Process char 1964 =>   (buffer: \n)
	Process char 1965 =>   (buffer: \n )
	Process char 1966 =>   (buffer: \n  )
	Process char 1967 =>   (buffer: \n   )
	Process char 1968 => i (buffer: \n    )
	=> Added token T_WHITESPACE (\n    )
	Process char 1969 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1970 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0; 
		=> Looking ahead 5 chars => = 0; /
		=> Looking ahead 6 chars => = 0; /*
		=> Looking ahead 7 chars => = 0; /* 
		=> Looking ahead 8 chars => = 0; /* S
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 1971 =>   (buffer: )
	Process char 1972 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1973 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; /
		=> Looking ahead 3 chars => ; /*
		=> Looking ahead 4 chars => ; /* 
		=> Looking ahead 5 chars => ; /* S
		=> Looking ahead 6 chars => ; /* St
		=> Looking ahead 7 chars => ; /* Sta
		=> Looking ahead 8 chars => ; /* Star
		=> Looking ahead 9 chars => ; /* Start
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1974 =>   (buffer: )
	Process char 1975 => / (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => /*
		* look ahead found more specific token (T_COMMENT), ignoring 1975 *
	Process char 1976 => * (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => /* 
		=> Looking ahead 2 chars => /* S
		=> Looking ahead 3 chars => /* St
		=> Looking ahead 4 chars => /* Sta
		=> Looking ahead 5 chars => /* Star
		=> Looking ahead 6 chars => /* Start
		=> Looking ahead 7 chars => /* Start 
		* look ahead found nothing *
	=> Added token T_COMMENT (/*)
		* looking for end of comment *
		Process char 1977 =>   (buffer: )
		Process char 1978 => S (buffer:  )
		Process char 1979 => t (buffer:  S)
		Process char 1980 => a (buffer:  St)
		Process char 1981 => r (buffer:  Sta)
		Process char 1982 => t (buffer:  Star)
		Process char 1983 =>   (buffer:  Start)
		Process char 1984 => * (buffer:  Start )
	=> Added token T_STRING ( Start )
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => */
		* look ahead found more specific token (T_COMMENT), ignoring 1984 *
		Process char 1985 => / (buffer: *)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => */\n
		=> Looking ahead 2 chars => */\n 
		=> Looking ahead 3 chars => */\n  
		=> Looking ahead 4 chars => */\n   
		=> Looking ahead 5 chars => */\n    
		=> Looking ahead 6 chars => */\n    i
		=> Looking ahead 7 chars => */\n    i 
		* look ahead found nothing *
	=> Added token T_COMMENT (*/)
		* found end of comment *
	Process char 1986 => \n (buffer: )
	Process char 1987 =>   (buffer: \n)
	Process char 1988 =>   (buffer: \n )
	Process char 1989 =>   (buffer: \n  )
	Process char 1990 =>   (buffer: \n   )
	Process char 1991 => i (buffer: \n    )
	=> Added token T_WHITESPACE (\n    )
	Process char 1992 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 1993 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10; 
		=> Looking ahead 6 chars => < 10; /
		=> Looking ahead 7 chars => < 10; /*
		=> Looking ahead 8 chars => < 10; /* 
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 1994 =>   (buffer: )
	Process char 1995 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 1996 => 0 (buffer: 1)
	Process char 1997 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; /
		=> Looking ahead 3 chars => ; /*
		=> Looking ahead 4 chars => ; /* 
		=> Looking ahead 5 chars => ; /* p
		=> Looking ahead 6 chars => ; /* ph
		=> Looking ahead 7 chars => ; /* php
		=> Looking ahead 8 chars => ; /* phpc
		=> Looking ahead 9 chars => ; /* phpcs
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 1998 =>   (buffer: )
	Process char 1999 => / (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => /*
		* look ahead found more specific token (T_COMMENT), ignoring 1999 *
	Process char 2000 => * (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => /* 
		=> Looking ahead 2 chars => /* p
		=> Looking ahead 3 chars => /* ph
		=> Looking ahead 4 chars => /* php
		=> Looking ahead 5 chars => /* phpc
		=> Looking ahead 6 chars => /* phpcs
		=> Looking ahead 7 chars => /* phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (/*)
		* looking for end of comment *
		Process char 2001 =>   (buffer: )
		Process char 2002 => p (buffer:  )
		Process char 2003 => h (buffer:  p)
		Process char 2004 => p (buffer:  ph)
		Process char 2005 => c (buffer:  php)
		Process char 2006 => s (buffer:  phpc)
		Process char 2007 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :i
		=> Looking ahead 2 chars => :ig
		=> Looking ahead 3 chars => :ign
		=> Looking ahead 4 chars => :igno
		=> Looking ahead 5 chars => :ignor
		=> Looking ahead 6 chars => :ignore
		=> Looking ahead 7 chars => :ignore 
		=> Looking ahead 8 chars => :ignore S
		=> Looking ahead 9 chars => :ignore St
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 2008 => i (buffer: )
		Process char 2009 => g (buffer: i)
		Process char 2010 => n (buffer: ig)
		Process char 2011 => o (buffer: ign)
		Process char 2012 => r (buffer: igno)
		Process char 2013 => e (buffer: ignor)
		Process char 2014 =>   (buffer: ignore)
		Process char 2015 => S (buffer: ignore )
		Process char 2016 => t (buffer: ignore S)
		Process char 2017 => a (buffer: ignore St)
		Process char 2018 => n (buffer: ignore Sta)
		Process char 2019 => d (buffer: ignore Stan)
		Process char 2020 => a (buffer: ignore Stand)
		Process char 2021 => r (buffer: ignore Standa)
		Process char 2022 => d (buffer: ignore Standar)
		Process char 2023 => . (buffer: ignore Standard)
	=> Added token T_STRING (ignore Standard)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Ca
		=> Looking ahead 3 chars => .Cat
		=> Looking ahead 4 chars => .Cate
		=> Looking ahead 5 chars => .Categ
		=> Looking ahead 6 chars => .Catego
		=> Looking ahead 7 chars => .Categor
		=> Looking ahead 8 chars => .Category
		=> Looking ahead 9 chars => .Category.
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2024 => C (buffer: )
		Process char 2025 => a (buffer: C)
		Process char 2026 => t (buffer: Ca)
		Process char 2027 => e (buffer: Cat)
		Process char 2028 => g (buffer: Cate)
		Process char 2029 => o (buffer: Categ)
		Process char 2030 => r (buffer: Catego)
		Process char 2031 => y (buffer: Categor)
		Process char 2032 => . (buffer: Category)
	=> Added token T_STRING (Category)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .S
		=> Looking ahead 2 chars => .Sn
		=> Looking ahead 3 chars => .Sni
		=> Looking ahead 4 chars => .Snif
		=> Looking ahead 5 chars => .Sniff
		=> Looking ahead 6 chars => .SniffN
		=> Looking ahead 7 chars => .SniffNa
		=> Looking ahead 8 chars => .SniffNam
		=> Looking ahead 9 chars => .SniffName
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2033 => S (buffer: )
		Process char 2034 => n (buffer: S)
		Process char 2035 => i (buffer: Sn)
		Process char 2036 => f (buffer: Sni)
		Process char 2037 => f (buffer: Snif)
		Process char 2038 => N (buffer: Sniff)
		Process char 2039 => a (buffer: SniffN)
		Process char 2040 => m (buffer: SniffNa)
		Process char 2041 => e (buffer: SniffNam)
		Process char 2042 =>   (buffer: SniffName)
		Process char 2043 => - (buffer: SniffName )
	=> Added token T_STRING (SniffName )
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => --
		* look ahead found more specific token (T_DEC), ignoring 2043 *
		Process char 2044 => - (buffer: -)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => -- 
		=> Looking ahead 2 chars => -- f
		=> Looking ahead 3 chars => -- fo
		=> Looking ahead 4 chars => -- for
		=> Looking ahead 5 chars => -- for 
		=> Looking ahead 6 chars => -- for r
		=> Looking ahead 7 chars => -- for re
		* look ahead found nothing *
	=> Added token T_DEC (--)
		Process char 2045 =>   (buffer: )
		Process char 2046 => f (buffer:  )
		Process char 2047 => o (buffer:  f)
		Process char 2048 => r (buffer:  fo)
		Process char 2049 =>   (buffer:  for)
		Process char 2050 => r (buffer:  for )
		Process char 2051 => e (buffer:  for r)
		Process char 2052 => a (buffer:  for re)
		Process char 2053 => s (buffer:  for rea)
		Process char 2054 => o (buffer:  for reas)
		Process char 2055 => n (buffer:  for reaso)
		Process char 2056 => s (buffer:  for reason)
		Process char 2057 => . (buffer:  for reasons)
	=> Added token T_STRING ( for reasons)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => . 
		=> Looking ahead 2 chars => . *
		=> Looking ahead 3 chars => . */
		=> Looking ahead 4 chars => . */\n
		=> Looking ahead 5 chars => . */\n 
		=> Looking ahead 6 chars => . */\n  
		=> Looking ahead 7 chars => . */\n   
		=> Looking ahead 8 chars => . */\n    
		=> Looking ahead 9 chars => . */\n    i
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2058 =>   (buffer: )
		Process char 2059 => * (buffer:  )
	=> Added token T_STRING ( )
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => */
		* look ahead found more specific token (T_COMMENT), ignoring 2059 *
		Process char 2060 => / (buffer: *)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => */\n
		=> Looking ahead 2 chars => */\n 
		=> Looking ahead 3 chars => */\n  
		=> Looking ahead 4 chars => */\n   
		=> Looking ahead 5 chars => */\n    
		=> Looking ahead 6 chars => */\n    i
		=> Looking ahead 7 chars => */\n    i+
		* look ahead found nothing *
	=> Added token T_COMMENT (*/)
		* found end of comment *
	Process char 2061 => \n (buffer: )
	Process char 2062 =>   (buffer: \n)
	Process char 2063 =>   (buffer: \n )
	Process char 2064 =>   (buffer: \n  )
	Process char 2065 =>   (buffer: \n   )
	Process char 2066 => i (buffer: \n    )
	=> Added token T_WHITESPACE (\n    )
	Process char 2067 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 2067 *
	Process char 2068 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++ 
		=> Looking ahead 2 chars => ++ /
		=> Looking ahead 3 chars => ++ //
		=> Looking ahead 4 chars => ++ // 
		=> Looking ahead 5 chars => ++ // c
		=> Looking ahead 6 chars => ++ // co
		=> Looking ahead 7 chars => ++ // com
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 2069 =>   (buffer: )
	Process char 2070 => / (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 2070 *
	Process char 2071 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // c
		=> Looking ahead 3 chars => // co
		=> Looking ahead 4 chars => // com
		=> Looking ahead 5 chars => // comm
		=> Looking ahead 6 chars => // comme
		=> Looking ahead 7 chars => // commen
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 2072 =>   (buffer: )
		Process char 2073 => c (buffer:  )
		Process char 2074 => o (buffer:  c)
		Process char 2075 => m (buffer:  co)
		Process char 2076 => m (buffer:  com)
		Process char 2077 => e (buffer:  comm)
		Process char 2078 => n (buffer:  comme)
		Process char 2079 => t (buffer:  commen)
		Process char 2080 => \n (buffer:  comment)
		* found end of comment *
	=> Added token T_STRING ( comment\n)
	Process char 2081 => \n (buffer: )
	Process char 2082 => ) (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\n\n
		=> Looking ahead 6 chars => ) {}\n\n/
		=> Looking ahead 7 chars => ) {}\n\n//
		=> Looking ahead 8 chars => ) {}\n\n// 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2083 =>   (buffer: )
	Process char 2084 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\n\n
		=> Looking ahead 4 chars => {}\n\n/
		=> Looking ahead 5 chars => {}\n\n//
		=> Looking ahead 6 chars => {}\n\n// 
		=> Looking ahead 7 chars => {}\n\n// T
		=> Looking ahead 8 chars => {}\n\n// Te
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 2085 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\n/
		=> Looking ahead 4 chars => }\n\n//
		=> Looking ahead 5 chars => }\n\n// 
		=> Looking ahead 6 chars => }\n\n// T
		=> Looking ahead 7 chars => }\n\n// Te
		=> Looking ahead 8 chars => }\n\n// Tes
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 2086 => \n (buffer: )
	Process char 2087 => \n (buffer: \n)
	Process char 2088 => / (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 2088 *
	Process char 2089 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // T
		=> Looking ahead 3 chars => // Te
		=> Looking ahead 4 chars => // Tes
		=> Looking ahead 5 chars => // Test
		=> Looking ahead 6 chars => // Test 
		=> Looking ahead 7 chars => // Test f
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 2090 =>   (buffer: )
		Process char 2091 => T (buffer:  )
		Process char 2092 => e (buffer:  T)
		Process char 2093 => s (buffer:  Te)
		Process char 2094 => t (buffer:  Tes)
		Process char 2095 =>   (buffer:  Test)
		Process char 2096 => f (buffer:  Test )
		Process char 2097 => i (buffer:  Test f)
		Process char 2098 => x (buffer:  Test fi)
		Process char 2099 => i (buffer:  Test fix)
		Process char 2100 => n (buffer:  Test fixi)
		Process char 2101 => g (buffer:  Test fixin)
		Process char 2102 =>   (buffer:  Test fixing)
		Process char 2103 => e (buffer:  Test fixing )
		Process char 2104 => a (buffer:  Test fixing e)
		Process char 2105 => c (buffer:  Test fixing ea)
		Process char 2106 => h (buffer:  Test fixing eac)
		Process char 2107 =>   (buffer:  Test fixing each)
		Process char 2108 => e (buffer:  Test fixing each )
		Process char 2109 => r (buffer:  Test fixing each e)
		Process char 2110 => r (buffer:  Test fixing each er)
		Process char 2111 => o (buffer:  Test fixing each err)
		Process char 2112 => r (buffer:  Test fixing each erro)
		Process char 2113 =>   (buffer:  Test fixing each error)
		Process char 2114 => i (buffer:  Test fixing each error )
		Process char 2115 => n (buffer:  Test fixing each error i)
		Process char 2116 =>   (buffer:  Test fixing each error in)
		Process char 2117 => o (buffer:  Test fixing each error in )
		Process char 2118 => n (buffer:  Test fixing each error in o)
		Process char 2119 => e (buffer:  Test fixing each error in on)
		Process char 2120 =>   (buffer:  Test fixing each error in one)
		Process char 2121 => g (buffer:  Test fixing each error in one )
		Process char 2122 => o (buffer:  Test fixing each error in one g)
		Process char 2123 => . (buffer:  Test fixing each error in one go)
	=> Added token T_STRING ( Test fixing each error in one go)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => . 
		=> Looking ahead 2 chars => . N
		=> Looking ahead 3 chars => . No
		=> Looking ahead 4 chars => . Not
		=> Looking ahead 5 chars => . Note
		=> Looking ahead 6 chars => . Note:
		=> Looking ahead 7 chars => . Note: 
		=> Looking ahead 8 chars => . Note: l
		=> Looking ahead 9 chars => . Note: li
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2124 =>   (buffer: )
		Process char 2125 => N (buffer:  )
		Process char 2126 => o (buffer:  N)
		Process char 2127 => t (buffer:  No)
		Process char 2128 => e (buffer:  Not)
		Process char 2129 => : (buffer:  Note)
	=> Added token T_STRING ( Note)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => : 
		=> Looking ahead 2 chars => : l
		=> Looking ahead 3 chars => : li
		=> Looking ahead 4 chars => : lin
		=> Looking ahead 5 chars => : line
		=> Looking ahead 6 chars => : lines
		=> Looking ahead 7 chars => : lines 
		=> Looking ahead 8 chars => : lines 8
		=> Looking ahead 9 chars => : lines 84
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 2130 =>   (buffer: )
		Process char 2131 => l (buffer:  )
		Process char 2132 => i (buffer:  l)
		Process char 2133 => n (buffer:  li)
		Process char 2134 => e (buffer:  lin)
		Process char 2135 => s (buffer:  line)
		Process char 2136 =>   (buffer:  lines)
		Process char 2137 => 8 (buffer:  lines )
		Process char 2138 => 4 (buffer:  lines 8)
		Process char 2139 =>   (buffer:  lines 84)
		Process char 2140 => + (buffer:  lines 84 )
	=> Added token T_STRING ( lines 84 )
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => + 
		=> Looking ahead 2 chars => + 8
		=> Looking ahead 3 chars => + 88
		=> Looking ahead 4 chars => + 88 
		=> Looking ahead 5 chars => + 88 c
		=> Looking ahead 6 chars => + 88 co
		=> Looking ahead 7 chars => + 88 con
		=> Looking ahead 8 chars => + 88 cont
		=> Looking ahead 9 chars => + 88 conta
		* look ahead found nothing *
	=> Added token T_PLUS (+)
		Process char 2141 =>   (buffer: )
		Process char 2142 => 8 (buffer:  )
		Process char 2143 => 8 (buffer:  8)
		Process char 2144 =>   (buffer:  88)
		Process char 2145 => c (buffer:  88 )
		Process char 2146 => o (buffer:  88 c)
		Process char 2147 => n (buffer:  88 co)
		Process char 2148 => t (buffer:  88 con)
		Process char 2149 => a (buffer:  88 cont)
		Process char 2150 => i (buffer:  88 conta)
		Process char 2151 => n (buffer:  88 contai)
		Process char 2152 =>   (buffer:  88 contain)
		Process char 2153 => t (buffer:  88 contain )
		Process char 2154 => r (buffer:  88 contain t)
		Process char 2155 => a (buffer:  88 contain tr)
		Process char 2156 => i (buffer:  88 contain tra)
		Process char 2157 => l (buffer:  88 contain trai)
		Process char 2158 => i (buffer:  88 contain trail)
		Process char 2159 => n (buffer:  88 contain traili)
		Process char 2160 => g (buffer:  88 contain trailin)
		Process char 2161 =>   (buffer:  88 contain trailing)
		Process char 2162 => w (buffer:  88 contain trailing )
		Process char 2163 => h (buffer:  88 contain trailing w)
		Process char 2164 => i (buffer:  88 contain trailing wh)
		Process char 2165 => t (buffer:  88 contain trailing whi)
		Process char 2166 => e (buffer:  88 contain trailing whit)
		Process char 2167 => s (buffer:  88 contain trailing white)
		Process char 2168 => p (buffer:  88 contain trailing whites)
		Process char 2169 => a (buffer:  88 contain trailing whitesp)
		Process char 2170 => c (buffer:  88 contain trailing whitespa)
		Process char 2171 => e (buffer:  88 contain trailing whitespac)
		Process char 2172 =>   (buffer:  88 contain trailing whitespace)
		Process char 2173 => o (buffer:  88 contain trailing whitespace )
		Process char 2174 => n (buffer:  88 contain trailing whitespace o)
		Process char 2175 =>   (buffer:  88 contain trailing whitespace on)
		Process char 2176 => p (buffer:  88 contain trailing whitespace on )
		Process char 2177 => u (buffer:  88 contain trailing whitespace on p)
		Process char 2178 => r (buffer:  88 contain trailing whitespace on pu)
		Process char 2179 => p (buffer:  88 contain trailing whitespace on pur)
		Process char 2180 => o (buffer:  88 contain trailing whitespace on purp)
		Process char 2181 => s (buffer:  88 contain trailing whitespace on purpo)
		Process char 2182 => e (buffer:  88 contain trailing whitespace on purpos)
		Process char 2183 => . (buffer:  88 contain trailing whitespace on purpose)
	=> Added token T_STRING ( 88 contain trailing whitespace on purpose)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .\n
		=> Looking ahead 2 chars => .\nf
		=> Looking ahead 3 chars => .\nfo
		=> Looking ahead 4 chars => .\nfor
		=> Looking ahead 5 chars => .\nfor 
		=> Looking ahead 6 chars => .\nfor (
		=> Looking ahead 7 chars => .\nfor (\n
		=> Looking ahead 8 chars => .\nfor (\n 
		=> Looking ahead 9 chars => .\nfor (\n  
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2184 => \n (buffer: )
		* found end of comment *
	=> Added token T_STRING (\n)
	Process char 2185 => f (buffer: )
	Process char 2186 => o (buffer: f)
	Process char 2187 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (\n
		=> Looking ahead 4 chars => for (\n 
		=> Looking ahead 5 chars => for (\n  
		=> Looking ahead 6 chars => for (\n   
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 2188 =>   (buffer: )
	Process char 2189 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (\n
		=> Looking ahead 2 chars => (\n 
		=> Looking ahead 3 chars => (\n  
		=> Looking ahead 4 chars => (\n   
		=> Looking ahead 5 chars => (\n    
		=> Looking ahead 6 chars => (\n     
		=> Looking ahead 7 chars => (\n     \n
		=> Looking ahead 8 chars => (\n     \n\n
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 2190 => \n (buffer: )
	Process char 2191 =>   (buffer: \n)
	Process char 2192 =>   (buffer: \n )
	Process char 2193 =>   (buffer: \n  )
	Process char 2194 =>   (buffer: \n   )
	Process char 2195 =>   (buffer: \n    )
	Process char 2196 => \n (buffer: \n     )
	Process char 2197 => \n (buffer: \n     \n)
	Process char 2198 =>   (buffer: \n     \n\n)
	Process char 2199 =>   (buffer: \n     \n\n )
	Process char 2200 =>   (buffer: \n     \n\n  )
	Process char 2201 =>   (buffer: \n     \n\n   )
	Process char 2202 =>   (buffer: \n     \n\n    )
	Process char 2203 =>   (buffer: \n     \n\n     )
	Process char 2204 => i (buffer: \n     \n\n      )
	=> Added token T_WHITESPACE (\n     \n\n      )
	Process char 2205 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 2206 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0\n
		=> Looking ahead 4 chars => = 0\n\n
		=> Looking ahead 5 chars => = 0\n\n 
		=> Looking ahead 6 chars => = 0\n\n  
		=> Looking ahead 7 chars => = 0\n\n   
		=> Looking ahead 8 chars => = 0\n\n    
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 2207 =>   (buffer: )
	Process char 2208 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 2209 => \n (buffer: 0)
	=> Added token T_STRING (0)
	Process char 2210 => \n (buffer: \n)
	Process char 2211 =>   (buffer: \n\n)
	Process char 2212 =>   (buffer: \n\n )
	Process char 2213 =>   (buffer: \n\n  )
	Process char 2214 =>   (buffer: \n\n   )
	Process char 2215 =>   (buffer: \n\n    )
	Process char 2216 =>   (buffer: \n\n     )
	Process char 2217 => ; (buffer: \n\n      )
	=> Added token T_WHITESPACE (\n\n      )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; \n
		=> Looking ahead 3 chars => ; \n\n
		=> Looking ahead 4 chars => ; \n\n 
		=> Looking ahead 5 chars => ; \n\n  
		=> Looking ahead 6 chars => ; \n\n   
		=> Looking ahead 7 chars => ; \n\n    
		=> Looking ahead 8 chars => ; \n\n     
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 2218 =>   (buffer: )
	Process char 2219 => \n (buffer:  )
	Process char 2220 => \n (buffer:  \n)
	Process char 2221 =>   (buffer:  \n\n)
	Process char 2222 =>   (buffer:  \n\n )
	Process char 2223 =>   (buffer:  \n\n  )
	Process char 2224 =>   (buffer:  \n\n   )
	Process char 2225 =>   (buffer:  \n\n    )
	Process char 2226 =>   (buffer:  \n\n     )
	Process char 2227 => i (buffer:  \n\n      )
	=> Added token T_WHITESPACE ( \n\n      )
	Process char 2228 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 2229 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10\n
		=> Looking ahead 5 chars => < 10\n\n
		=> Looking ahead 6 chars => < 10\n\n 
		=> Looking ahead 7 chars => < 10\n\n  
		=> Looking ahead 8 chars => < 10\n\n   
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 2230 =>   (buffer: )
	Process char 2231 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 2232 => 0 (buffer: 1)
	Process char 2233 => \n (buffer: 10)
	=> Added token T_STRING (10)
	Process char 2234 => \n (buffer: \n)
	Process char 2235 =>   (buffer: \n\n)
	Process char 2236 =>   (buffer: \n\n )
	Process char 2237 =>   (buffer: \n\n  )
	Process char 2238 =>   (buffer: \n\n   )
	Process char 2239 =>   (buffer: \n\n    )
	Process char 2240 =>   (buffer: \n\n     )
	Process char 2241 => ; (buffer: \n\n      )
	=> Added token T_WHITESPACE (\n\n      )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;\n
		=> Looking ahead 2 chars => ;\n\n
		=> Looking ahead 3 chars => ;\n\n 
		=> Looking ahead 4 chars => ;\n\n  
		=> Looking ahead 5 chars => ;\n\n   
		=> Looking ahead 6 chars => ;\n\n    
		=> Looking ahead 7 chars => ;\n\n     
		=> Looking ahead 8 chars => ;\n\n      
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 2242 => \n (buffer: )
	Process char 2243 => \n (buffer: \n)
	Process char 2244 =>   (buffer: \n\n)
	Process char 2245 =>   (buffer: \n\n )
	Process char 2246 =>   (buffer: \n\n  )
	Process char 2247 =>   (buffer: \n\n   )
	Process char 2248 =>   (buffer: \n\n    )
	Process char 2249 =>   (buffer: \n\n     )
	Process char 2250 => i (buffer: \n\n      )
	=> Added token T_WHITESPACE (\n\n      )
	Process char 2251 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 2251 *
	Process char 2252 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++\n
		=> Looking ahead 2 chars => ++\n\n
		=> Looking ahead 3 chars => ++\n\n\n
		=> Looking ahead 4 chars => ++\n\n\n)
		=> Looking ahead 5 chars => ++\n\n\n) 
		=> Looking ahead 6 chars => ++\n\n\n) {
		=> Looking ahead 7 chars => ++\n\n\n) {}
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 2253 => \n (buffer: )
	Process char 2254 => \n (buffer: \n)
	Process char 2255 => \n (buffer: \n\n)
	Process char 2256 => ) (buffer: \n\n\n)
	=> Added token T_WHITESPACE (\n\n\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\n\n
		=> Looking ahead 6 chars => ) {}\n\n/
		=> Looking ahead 7 chars => ) {}\n\n//
		=> Looking ahead 8 chars => ) {}\n\n// 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2257 =>   (buffer: )
	Process char 2258 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\n\n
		=> Looking ahead 4 chars => {}\n\n/
		=> Looking ahead 5 chars => {}\n\n//
		=> Looking ahead 6 chars => {}\n\n// 
		=> Looking ahead 7 chars => {}\n\n// p
		=> Looking ahead 8 chars => {}\n\n// ph
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 2259 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\n/
		=> Looking ahead 4 chars => }\n\n//
		=> Looking ahead 5 chars => }\n\n// 
		=> Looking ahead 6 chars => }\n\n// p
		=> Looking ahead 7 chars => }\n\n// ph
		=> Looking ahead 8 chars => }\n\n// php
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 2260 => \n (buffer: )
	Process char 2261 => \n (buffer: \n)
	Process char 2262 => / (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 2262 *
	Process char 2263 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 2264 =>   (buffer: )
		Process char 2265 => p (buffer:  )
		Process char 2266 => h (buffer:  p)
		Process char 2267 => p (buffer:  ph)
		Process char 2268 => c (buffer:  php)
		Process char 2269 => s (buffer:  phpc)
		Process char 2270 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 2271 => s (buffer: )
		Process char 2272 => e (buffer: s)
		Process char 2273 => t (buffer: se)
		Process char 2274 =>   (buffer: set)
		Process char 2275 => S (buffer: set )
		Process char 2276 => q (buffer: set S)
		Process char 2277 => u (buffer: set Sq)
		Process char 2278 => i (buffer: set Squ)
		Process char 2279 => z (buffer: set Squi)
		Process char 2280 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2281 => C (buffer: )
		Process char 2282 => o (buffer: C)
		Process char 2283 => n (buffer: Co)
		Process char 2284 => t (buffer: Con)
		Process char 2285 => r (buffer: Cont)
		Process char 2286 => o (buffer: Contr)
		Process char 2287 => l (buffer: Contro)
		Process char 2288 => S (buffer: Control)
		Process char 2289 => t (buffer: ControlS)
		Process char 2290 => r (buffer: ControlSt)
		Process char 2291 => u (buffer: ControlStr)
		Process char 2292 => c (buffer: ControlStru)
		Process char 2293 => t (buffer: ControlStruc)
		Process char 2294 => u (buffer: ControlStruct)
		Process char 2295 => r (buffer: ControlStructu)
		Process char 2296 => e (buffer: ControlStructur)
		Process char 2297 => s (buffer: ControlStructure)
		Process char 2298 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2299 => F (buffer: )
		Process char 2300 => o (buffer: F)
		Process char 2301 => r (buffer: Fo)
		Process char 2302 => L (buffer: For)
		Process char 2303 => o (buffer: ForL)
		Process char 2304 => o (buffer: ForLo)
		Process char 2305 => p (buffer: ForLoo)
		Process char 2306 => D (buffer: ForLoop)
		Process char 2307 => e (buffer: ForLoopD)
		Process char 2308 => c (buffer: ForLoopDe)
		Process char 2309 => l (buffer: ForLoopDec)
		Process char 2310 => a (buffer: ForLoopDecl)
		Process char 2311 => r (buffer: ForLoopDecla)
		Process char 2312 => a (buffer: ForLoopDeclar)
		Process char 2313 => t (buffer: ForLoopDeclara)
		Process char 2314 => i (buffer: ForLoopDeclarat)
		Process char 2315 => o (buffer: ForLoopDeclarati)
		Process char 2316 => n (buffer: ForLoopDeclaratio)
		Process char 2317 =>   (buffer: ForLoopDeclaration)
		Process char 2318 => r (buffer: ForLoopDeclaration )
		Process char 2319 => e (buffer: ForLoopDeclaration r)
		Process char 2320 => q (buffer: ForLoopDeclaration re)
		Process char 2321 => u (buffer: ForLoopDeclaration req)
		Process char 2322 => i (buffer: ForLoopDeclaration requ)
		Process char 2323 => r (buffer: ForLoopDeclaration requi)
		Process char 2324 => e (buffer: ForLoopDeclaration requir)
		Process char 2325 => d (buffer: ForLoopDeclaration require)
		Process char 2326 => S (buffer: ForLoopDeclaration required)
		Process char 2327 => p (buffer: ForLoopDeclaration requiredS)
		Process char 2328 => a (buffer: ForLoopDeclaration requiredSp)
		Process char 2329 => c (buffer: ForLoopDeclaration requiredSpa)
		Process char 2330 => e (buffer: ForLoopDeclaration requiredSpac)
		Process char 2331 => s (buffer: ForLoopDeclaration requiredSpace)
		Process char 2332 => A (buffer: ForLoopDeclaration requiredSpaces)
		Process char 2333 => f (buffer: ForLoopDeclaration requiredSpacesA)
		Process char 2334 => t (buffer: ForLoopDeclaration requiredSpacesAf)
		Process char 2335 => e (buffer: ForLoopDeclaration requiredSpacesAft)
		Process char 2336 => r (buffer: ForLoopDeclaration requiredSpacesAfte)
		Process char 2337 => O (buffer: ForLoopDeclaration requiredSpacesAfter)
		Process char 2338 => p (buffer: ForLoopDeclaration requiredSpacesAfterO)
		Process char 2339 => e (buffer: ForLoopDeclaration requiredSpacesAfterOp)
		Process char 2340 => n (buffer: ForLoopDeclaration requiredSpacesAfterOpe)
		Process char 2341 =>   (buffer: ForLoopDeclaration requiredSpacesAfterOpen)
		Process char 2342 => 1 (buffer: ForLoopDeclaration requiredSpacesAfterOpen )
		Process char 2343 => \n (buffer: ForLoopDeclaration requiredSpacesAfterOpen 1)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration requiredSpacesAfterOpen 1\n)
	Process char 2344 => / (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 2344 *
	Process char 2345 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 2346 =>   (buffer: )
		Process char 2347 => p (buffer:  )
		Process char 2348 => h (buffer:  p)
		Process char 2349 => p (buffer:  ph)
		Process char 2350 => c (buffer:  php)
		Process char 2351 => s (buffer:  phpc)
		Process char 2352 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 2353 => s (buffer: )
		Process char 2354 => e (buffer: s)
		Process char 2355 => t (buffer: se)
		Process char 2356 =>   (buffer: set)
		Process char 2357 => S (buffer: set )
		Process char 2358 => q (buffer: set S)
		Process char 2359 => u (buffer: set Sq)
		Process char 2360 => i (buffer: set Squ)
		Process char 2361 => z (buffer: set Squi)
		Process char 2362 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2363 => C (buffer: )
		Process char 2364 => o (buffer: C)
		Process char 2365 => n (buffer: Co)
		Process char 2366 => t (buffer: Con)
		Process char 2367 => r (buffer: Cont)
		Process char 2368 => o (buffer: Contr)
		Process char 2369 => l (buffer: Contro)
		Process char 2370 => S (buffer: Control)
		Process char 2371 => t (buffer: ControlS)
		Process char 2372 => r (buffer: ControlSt)
		Process char 2373 => u (buffer: ControlStr)
		Process char 2374 => c (buffer: ControlStru)
		Process char 2375 => t (buffer: ControlStruc)
		Process char 2376 => u (buffer: ControlStruct)
		Process char 2377 => r (buffer: ControlStructu)
		Process char 2378 => e (buffer: ControlStructur)
		Process char 2379 => s (buffer: ControlStructure)
		Process char 2380 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2381 => F (buffer: )
		Process char 2382 => o (buffer: F)
		Process char 2383 => r (buffer: Fo)
		Process char 2384 => L (buffer: For)
		Process char 2385 => o (buffer: ForL)
		Process char 2386 => o (buffer: ForLo)
		Process char 2387 => p (buffer: ForLoo)
		Process char 2388 => D (buffer: ForLoop)
		Process char 2389 => e (buffer: ForLoopD)
		Process char 2390 => c (buffer: ForLoopDe)
		Process char 2391 => l (buffer: ForLoopDec)
		Process char 2392 => a (buffer: ForLoopDecl)
		Process char 2393 => r (buffer: ForLoopDecla)
		Process char 2394 => a (buffer: ForLoopDeclar)
		Process char 2395 => t (buffer: ForLoopDeclara)
		Process char 2396 => i (buffer: ForLoopDeclarat)
		Process char 2397 => o (buffer: ForLoopDeclarati)
		Process char 2398 => n (buffer: ForLoopDeclaratio)
		Process char 2399 =>   (buffer: ForLoopDeclaration)
		Process char 2400 => r (buffer: ForLoopDeclaration )
		Process char 2401 => e (buffer: ForLoopDeclaration r)
		Process char 2402 => q (buffer: ForLoopDeclaration re)
		Process char 2403 => u (buffer: ForLoopDeclaration req)
		Process char 2404 => i (buffer: ForLoopDeclaration requ)
		Process char 2405 => r (buffer: ForLoopDeclaration requi)
		Process char 2406 => e (buffer: ForLoopDeclaration requir)
		Process char 2407 => d (buffer: ForLoopDeclaration require)
		Process char 2408 => S (buffer: ForLoopDeclaration required)
		Process char 2409 => p (buffer: ForLoopDeclaration requiredS)
		Process char 2410 => a (buffer: ForLoopDeclaration requiredSp)
		Process char 2411 => c (buffer: ForLoopDeclaration requiredSpa)
		Process char 2412 => e (buffer: ForLoopDeclaration requiredSpac)
		Process char 2413 => s (buffer: ForLoopDeclaration requiredSpace)
		Process char 2414 => B (buffer: ForLoopDeclaration requiredSpaces)
		Process char 2415 => e (buffer: ForLoopDeclaration requiredSpacesB)
		Process char 2416 => f (buffer: ForLoopDeclaration requiredSpacesBe)
		Process char 2417 => o (buffer: ForLoopDeclaration requiredSpacesBef)
		Process char 2418 => r (buffer: ForLoopDeclaration requiredSpacesBefo)
		Process char 2419 => e (buffer: ForLoopDeclaration requiredSpacesBefor)
		Process char 2420 => C (buffer: ForLoopDeclaration requiredSpacesBefore)
		Process char 2421 => l (buffer: ForLoopDeclaration requiredSpacesBeforeC)
		Process char 2422 => o (buffer: ForLoopDeclaration requiredSpacesBeforeCl)
		Process char 2423 => s (buffer: ForLoopDeclaration requiredSpacesBeforeClo)
		Process char 2424 => e (buffer: ForLoopDeclaration requiredSpacesBeforeClos)
		Process char 2425 =>   (buffer: ForLoopDeclaration requiredSpacesBeforeClose)
		Process char 2426 => 1 (buffer: ForLoopDeclaration requiredSpacesBeforeClose )
		Process char 2427 => \n (buffer: ForLoopDeclaration requiredSpacesBeforeClose 1)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration requiredSpacesBeforeClose 1\n)
	Process char 2428 => f (buffer: )
	Process char 2429 => o (buffer: f)
	Process char 2430 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (\n
		=> Looking ahead 4 chars => for (\n\n
		=> Looking ahead 5 chars => for (\n\n\n
		=> Looking ahead 6 chars => for (\n\n\n\n
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 2431 =>   (buffer: )
	Process char 2432 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (\n
		=> Looking ahead 2 chars => (\n\n
		=> Looking ahead 3 chars => (\n\n\n
		=> Looking ahead 4 chars => (\n\n\n\n
		=> Looking ahead 5 chars => (\n\n\n\n 
		=> Looking ahead 6 chars => (\n\n\n\n  
		=> Looking ahead 7 chars => (\n\n\n\n   
		=> Looking ahead 8 chars => (\n\n\n\n    
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 2433 => \n (buffer: )
	Process char 2434 => \n (buffer: \n)
	Process char 2435 => \n (buffer: \n\n)
	Process char 2436 => \n (buffer: \n\n\n)
	Process char 2437 =>   (buffer: \n\n\n\n)
	Process char 2438 =>   (buffer: \n\n\n\n )
	Process char 2439 =>   (buffer: \n\n\n\n  )
	Process char 2440 =>   (buffer: \n\n\n\n   )
	Process char 2441 =>   (buffer: \n\n\n\n    )
	Process char 2442 =>   (buffer: \n\n\n\n     )
	Process char 2443 => i (buffer: \n\n\n\n      )
	=> Added token T_WHITESPACE (\n\n\n\n      )
	Process char 2444 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 2445 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0\n
		=> Looking ahead 4 chars => = 0\n\n
		=> Looking ahead 5 chars => = 0\n\n 
		=> Looking ahead 6 chars => = 0\n\n  
		=> Looking ahead 7 chars => = 0\n\n   
		=> Looking ahead 8 chars => = 0\n\n    
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 2446 =>   (buffer: )
	Process char 2447 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 2448 => \n (buffer: 0)
	=> Added token T_STRING (0)
	Process char 2449 => \n (buffer: \n)
	Process char 2450 =>   (buffer: \n\n)
	Process char 2451 =>   (buffer: \n\n )
	Process char 2452 =>   (buffer: \n\n  )
	Process char 2453 =>   (buffer: \n\n   )
	Process char 2454 =>   (buffer: \n\n    )
	Process char 2455 =>   (buffer: \n\n     )
	Process char 2456 => ; (buffer: \n\n      )
	=> Added token T_WHITESPACE (\n\n      )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;\n
		=> Looking ahead 2 chars => ;\n\n
		=> Looking ahead 3 chars => ;\n\n 
		=> Looking ahead 4 chars => ;\n\n  
		=> Looking ahead 5 chars => ;\n\n   
		=> Looking ahead 6 chars => ;\n\n    
		=> Looking ahead 7 chars => ;\n\n     
		=> Looking ahead 8 chars => ;\n\n      
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 2457 => \n (buffer: )
	Process char 2458 => \n (buffer: \n)
	Process char 2459 =>   (buffer: \n\n)
	Process char 2460 =>   (buffer: \n\n )
	Process char 2461 =>   (buffer: \n\n  )
	Process char 2462 =>   (buffer: \n\n   )
	Process char 2463 =>   (buffer: \n\n    )
	Process char 2464 =>   (buffer: \n\n     )
	Process char 2465 => i (buffer: \n\n      )
	=> Added token T_WHITESPACE (\n\n      )
	Process char 2466 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 2467 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10\n
		=> Looking ahead 5 chars => < 10\n\n
		=> Looking ahead 6 chars => < 10\n\n 
		=> Looking ahead 7 chars => < 10\n\n  
		=> Looking ahead 8 chars => < 10\n\n   
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 2468 =>   (buffer: )
	Process char 2469 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 2470 => 0 (buffer: 1)
	Process char 2471 => \n (buffer: 10)
	=> Added token T_STRING (10)
	Process char 2472 => \n (buffer: \n)
	Process char 2473 =>   (buffer: \n\n)
	Process char 2474 =>   (buffer: \n\n )
	Process char 2475 =>   (buffer: \n\n  )
	Process char 2476 =>   (buffer: \n\n   )
	Process char 2477 =>   (buffer: \n\n    )
	Process char 2478 =>   (buffer: \n\n     )
	Process char 2479 => ; (buffer: \n\n      )
	=> Added token T_WHITESPACE (\n\n      )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;\n
		=> Looking ahead 2 chars => ;\n\n
		=> Looking ahead 3 chars => ;\n\n 
		=> Looking ahead 4 chars => ;\n\n  
		=> Looking ahead 5 chars => ;\n\n   
		=> Looking ahead 6 chars => ;\n\n    
		=> Looking ahead 7 chars => ;\n\n     
		=> Looking ahead 8 chars => ;\n\n      
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 2480 => \n (buffer: )
	Process char 2481 => \n (buffer: \n)
	Process char 2482 =>   (buffer: \n\n)
	Process char 2483 =>   (buffer: \n\n )
	Process char 2484 =>   (buffer: \n\n  )
	Process char 2485 =>   (buffer: \n\n   )
	Process char 2486 =>   (buffer: \n\n    )
	Process char 2487 =>   (buffer: \n\n     )
	Process char 2488 => i (buffer: \n\n      )
	=> Added token T_WHITESPACE (\n\n      )
	Process char 2489 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 2489 *
	Process char 2490 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++\n
		=> Looking ahead 2 chars => ++\n\n
		=> Looking ahead 3 chars => ++\n\n\n
		=> Looking ahead 4 chars => ++\n\n\n)
		=> Looking ahead 5 chars => ++\n\n\n) 
		=> Looking ahead 6 chars => ++\n\n\n) {
		=> Looking ahead 7 chars => ++\n\n\n) {}
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 2491 => \n (buffer: )
	Process char 2492 => \n (buffer: \n)
	Process char 2493 => \n (buffer: \n\n)
	Process char 2494 => ) (buffer: \n\n\n)
	=> Added token T_WHITESPACE (\n\n\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\n/
		=> Looking ahead 6 chars => ) {}\n//
		=> Looking ahead 7 chars => ) {}\n// 
		=> Looking ahead 8 chars => ) {}\n// p
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2495 =>   (buffer: )
	Process char 2496 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\n/
		=> Looking ahead 4 chars => {}\n//
		=> Looking ahead 5 chars => {}\n// 
		=> Looking ahead 6 chars => {}\n// p
		=> Looking ahead 7 chars => {}\n// ph
		=> Looking ahead 8 chars => {}\n// php
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 2497 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n/
		=> Looking ahead 3 chars => }\n//
		=> Looking ahead 4 chars => }\n// 
		=> Looking ahead 5 chars => }\n// p
		=> Looking ahead 6 chars => }\n// ph
		=> Looking ahead 7 chars => }\n// php
		=> Looking ahead 8 chars => }\n// phpc
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 2498 => \n (buffer: )
	Process char 2499 => / (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 2499 *
	Process char 2500 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 2501 =>   (buffer: )
		Process char 2502 => p (buffer:  )
		Process char 2503 => h (buffer:  p)
		Process char 2504 => p (buffer:  ph)
		Process char 2505 => c (buffer:  php)
		Process char 2506 => s (buffer:  phpc)
		Process char 2507 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 2508 => s (buffer: )
		Process char 2509 => e (buffer: s)
		Process char 2510 => t (buffer: se)
		Process char 2511 =>   (buffer: set)
		Process char 2512 => S (buffer: set )
		Process char 2513 => q (buffer: set S)
		Process char 2514 => u (buffer: set Sq)
		Process char 2515 => i (buffer: set Squ)
		Process char 2516 => z (buffer: set Squi)
		Process char 2517 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2518 => C (buffer: )
		Process char 2519 => o (buffer: C)
		Process char 2520 => n (buffer: Co)
		Process char 2521 => t (buffer: Con)
		Process char 2522 => r (buffer: Cont)
		Process char 2523 => o (buffer: Contr)
		Process char 2524 => l (buffer: Contro)
		Process char 2525 => S (buffer: Control)
		Process char 2526 => t (buffer: ControlS)
		Process char 2527 => r (buffer: ControlSt)
		Process char 2528 => u (buffer: ControlStr)
		Process char 2529 => c (buffer: ControlStru)
		Process char 2530 => t (buffer: ControlStruc)
		Process char 2531 => u (buffer: ControlStruct)
		Process char 2532 => r (buffer: ControlStructu)
		Process char 2533 => e (buffer: ControlStructur)
		Process char 2534 => s (buffer: ControlStructure)
		Process char 2535 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2536 => F (buffer: )
		Process char 2537 => o (buffer: F)
		Process char 2538 => r (buffer: Fo)
		Process char 2539 => L (buffer: For)
		Process char 2540 => o (buffer: ForL)
		Process char 2541 => o (buffer: ForLo)
		Process char 2542 => p (buffer: ForLoo)
		Process char 2543 => D (buffer: ForLoop)
		Process char 2544 => e (buffer: ForLoopD)
		Process char 2545 => c (buffer: ForLoopDe)
		Process char 2546 => l (buffer: ForLoopDec)
		Process char 2547 => a (buffer: ForLoopDecl)
		Process char 2548 => r (buffer: ForLoopDecla)
		Process char 2549 => a (buffer: ForLoopDeclar)
		Process char 2550 => t (buffer: ForLoopDeclara)
		Process char 2551 => i (buffer: ForLoopDeclarat)
		Process char 2552 => o (buffer: ForLoopDeclarati)
		Process char 2553 => n (buffer: ForLoopDeclaratio)
		Process char 2554 =>   (buffer: ForLoopDeclaration)
		Process char 2555 => r (buffer: ForLoopDeclaration )
		Process char 2556 => e (buffer: ForLoopDeclaration r)
		Process char 2557 => q (buffer: ForLoopDeclaration re)
		Process char 2558 => u (buffer: ForLoopDeclaration req)
		Process char 2559 => i (buffer: ForLoopDeclaration requ)
		Process char 2560 => r (buffer: ForLoopDeclaration requi)
		Process char 2561 => e (buffer: ForLoopDeclaration requir)
		Process char 2562 => d (buffer: ForLoopDeclaration require)
		Process char 2563 => S (buffer: ForLoopDeclaration required)
		Process char 2564 => p (buffer: ForLoopDeclaration requiredS)
		Process char 2565 => a (buffer: ForLoopDeclaration requiredSp)
		Process char 2566 => c (buffer: ForLoopDeclaration requiredSpa)
		Process char 2567 => e (buffer: ForLoopDeclaration requiredSpac)
		Process char 2568 => s (buffer: ForLoopDeclaration requiredSpace)
		Process char 2569 => A (buffer: ForLoopDeclaration requiredSpaces)
		Process char 2570 => f (buffer: ForLoopDeclaration requiredSpacesA)
		Process char 2571 => t (buffer: ForLoopDeclaration requiredSpacesAf)
		Process char 2572 => e (buffer: ForLoopDeclaration requiredSpacesAft)
		Process char 2573 => r (buffer: ForLoopDeclaration requiredSpacesAfte)
		Process char 2574 => O (buffer: ForLoopDeclaration requiredSpacesAfter)
		Process char 2575 => p (buffer: ForLoopDeclaration requiredSpacesAfterO)
		Process char 2576 => e (buffer: ForLoopDeclaration requiredSpacesAfterOp)
		Process char 2577 => n (buffer: ForLoopDeclaration requiredSpacesAfterOpe)
		Process char 2578 =>   (buffer: ForLoopDeclaration requiredSpacesAfterOpen)
		Process char 2579 => 0 (buffer: ForLoopDeclaration requiredSpacesAfterOpen )
		Process char 2580 => \n (buffer: ForLoopDeclaration requiredSpacesAfterOpen 0)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration requiredSpacesAfterOpen 0\n)
	Process char 2581 => / (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 2581 *
	Process char 2582 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 2583 =>   (buffer: )
		Process char 2584 => p (buffer:  )
		Process char 2585 => h (buffer:  p)
		Process char 2586 => p (buffer:  ph)
		Process char 2587 => c (buffer:  php)
		Process char 2588 => s (buffer:  phpc)
		Process char 2589 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 2590 => s (buffer: )
		Process char 2591 => e (buffer: s)
		Process char 2592 => t (buffer: se)
		Process char 2593 =>   (buffer: set)
		Process char 2594 => S (buffer: set )
		Process char 2595 => q (buffer: set S)
		Process char 2596 => u (buffer: set Sq)
		Process char 2597 => i (buffer: set Squ)
		Process char 2598 => z (buffer: set Squi)
		Process char 2599 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2600 => C (buffer: )
		Process char 2601 => o (buffer: C)
		Process char 2602 => n (buffer: Co)
		Process char 2603 => t (buffer: Con)
		Process char 2604 => r (buffer: Cont)
		Process char 2605 => o (buffer: Contr)
		Process char 2606 => l (buffer: Contro)
		Process char 2607 => S (buffer: Control)
		Process char 2608 => t (buffer: ControlS)
		Process char 2609 => r (buffer: ControlSt)
		Process char 2610 => u (buffer: ControlStr)
		Process char 2611 => c (buffer: ControlStru)
		Process char 2612 => t (buffer: ControlStruc)
		Process char 2613 => u (buffer: ControlStruct)
		Process char 2614 => r (buffer: ControlStructu)
		Process char 2615 => e (buffer: ControlStructur)
		Process char 2616 => s (buffer: ControlStructure)
		Process char 2617 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2618 => F (buffer: )
		Process char 2619 => o (buffer: F)
		Process char 2620 => r (buffer: Fo)
		Process char 2621 => L (buffer: For)
		Process char 2622 => o (buffer: ForL)
		Process char 2623 => o (buffer: ForLo)
		Process char 2624 => p (buffer: ForLoo)
		Process char 2625 => D (buffer: ForLoop)
		Process char 2626 => e (buffer: ForLoopD)
		Process char 2627 => c (buffer: ForLoopDe)
		Process char 2628 => l (buffer: ForLoopDec)
		Process char 2629 => a (buffer: ForLoopDecl)
		Process char 2630 => r (buffer: ForLoopDecla)
		Process char 2631 => a (buffer: ForLoopDeclar)
		Process char 2632 => t (buffer: ForLoopDeclara)
		Process char 2633 => i (buffer: ForLoopDeclarat)
		Process char 2634 => o (buffer: ForLoopDeclarati)
		Process char 2635 => n (buffer: ForLoopDeclaratio)
		Process char 2636 =>   (buffer: ForLoopDeclaration)
		Process char 2637 => r (buffer: ForLoopDeclaration )
		Process char 2638 => e (buffer: ForLoopDeclaration r)
		Process char 2639 => q (buffer: ForLoopDeclaration re)
		Process char 2640 => u (buffer: ForLoopDeclaration req)
		Process char 2641 => i (buffer: ForLoopDeclaration requ)
		Process char 2642 => r (buffer: ForLoopDeclaration requi)
		Process char 2643 => e (buffer: ForLoopDeclaration requir)
		Process char 2644 => d (buffer: ForLoopDeclaration require)
		Process char 2645 => S (buffer: ForLoopDeclaration required)
		Process char 2646 => p (buffer: ForLoopDeclaration requiredS)
		Process char 2647 => a (buffer: ForLoopDeclaration requiredSp)
		Process char 2648 => c (buffer: ForLoopDeclaration requiredSpa)
		Process char 2649 => e (buffer: ForLoopDeclaration requiredSpac)
		Process char 2650 => s (buffer: ForLoopDeclaration requiredSpace)
		Process char 2651 => B (buffer: ForLoopDeclaration requiredSpaces)
		Process char 2652 => e (buffer: ForLoopDeclaration requiredSpacesB)
		Process char 2653 => f (buffer: ForLoopDeclaration requiredSpacesBe)
		Process char 2654 => o (buffer: ForLoopDeclaration requiredSpacesBef)
		Process char 2655 => r (buffer: ForLoopDeclaration requiredSpacesBefo)
		Process char 2656 => e (buffer: ForLoopDeclaration requiredSpacesBefor)
		Process char 2657 => C (buffer: ForLoopDeclaration requiredSpacesBefore)
		Process char 2658 => l (buffer: ForLoopDeclaration requiredSpacesBeforeC)
		Process char 2659 => o (buffer: ForLoopDeclaration requiredSpacesBeforeCl)
		Process char 2660 => s (buffer: ForLoopDeclaration requiredSpacesBeforeClo)
		Process char 2661 => e (buffer: ForLoopDeclaration requiredSpacesBeforeClos)
		Process char 2662 =>   (buffer: ForLoopDeclaration requiredSpacesBeforeClose)
		Process char 2663 => 0 (buffer: ForLoopDeclaration requiredSpacesBeforeClose )
		Process char 2664 => \n (buffer: ForLoopDeclaration requiredSpacesBeforeClose 0)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration requiredSpacesBeforeClose 0\n)
	Process char 2665 => \n (buffer: )
	Process char 2666 => / (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 2666 *
	Process char 2667 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // T
		=> Looking ahead 3 chars => // Te
		=> Looking ahead 4 chars => // Tes
		=> Looking ahead 5 chars => // Test
		=> Looking ahead 6 chars => // Test 
		=> Looking ahead 7 chars => // Test w
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 2668 =>   (buffer: )
		Process char 2669 => T (buffer:  )
		Process char 2670 => e (buffer:  T)
		Process char 2671 => s (buffer:  Te)
		Process char 2672 => t (buffer:  Tes)
		Process char 2673 =>   (buffer:  Test)
		Process char 2674 => w (buffer:  Test )
		Process char 2675 => i (buffer:  Test w)
		Process char 2676 => t (buffer:  Test wi)
		Process char 2677 => h (buffer:  Test wit)
		Process char 2678 =>   (buffer:  Test with)
		Process char 2679 => s (buffer:  Test with )
		Process char 2680 => e (buffer:  Test with s)
		Process char 2681 => m (buffer:  Test with se)
		Process char 2682 => i (buffer:  Test with sem)
		Process char 2683 => - (buffer:  Test with semi)
	=> Added token T_STRING ( Test with semi)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => -c
		=> Looking ahead 2 chars => -co
		=> Looking ahead 3 chars => -col
		=> Looking ahead 4 chars => -colo
		=> Looking ahead 5 chars => -colon
		=> Looking ahead 6 chars => -colon 
		=> Looking ahead 7 chars => -colon n
		=> Looking ahead 8 chars => -colon no
		=> Looking ahead 9 chars => -colon not
		* look ahead found nothing *
	=> Added token T_MINUS (-)
		Process char 2684 => c (buffer: )
		Process char 2685 => o (buffer: c)
		Process char 2686 => l (buffer: co)
		Process char 2687 => o (buffer: col)
		Process char 2688 => n (buffer: colo)
		Process char 2689 =>   (buffer: colon)
		Process char 2690 => n (buffer: colon )
		Process char 2691 => o (buffer: colon n)
		Process char 2692 => t (buffer: colon no)
		Process char 2693 =>   (buffer: colon not)
		Process char 2694 => b (buffer: colon not )
		Process char 2695 => e (buffer: colon not b)
		Process char 2696 => l (buffer: colon not be)
		Process char 2697 => o (buffer: colon not bel)
		Process char 2698 => n (buffer: colon not belo)
		Process char 2699 => g (buffer: colon not belon)
		Process char 2700 => i (buffer: colon not belong)
		Process char 2701 => n (buffer: colon not belongi)
		Process char 2702 => g (buffer: colon not belongin)
		Process char 2703 =>   (buffer: colon not belonging)
		Process char 2704 => t (buffer: colon not belonging )
		Process char 2705 => o (buffer: colon not belonging t)
		Process char 2706 =>   (buffer: colon not belonging to)
		Process char 2707 => f (buffer: colon not belonging to )
		Process char 2708 => o (buffer: colon not belonging to f)
		Process char 2709 => r (buffer: colon not belonging to fo)
		Process char 2710 => . (buffer: colon not belonging to for)
	=> Added token T_STRING (colon not belonging to for)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .\n
		=> Looking ahead 2 chars => .\nf
		=> Looking ahead 3 chars => .\nfo
		=> Looking ahead 4 chars => .\nfor
		=> Looking ahead 5 chars => .\nfor 
		=> Looking ahead 6 chars => .\nfor (
		=> Looking ahead 7 chars => .\nfor (i
		=> Looking ahead 8 chars => .\nfor (i 
		=> Looking ahead 9 chars => .\nfor (i =
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2711 => \n (buffer: )
		* found end of comment *
	=> Added token T_STRING (\n)
	Process char 2712 => f (buffer: )
	Process char 2713 => o (buffer: f)
	Process char 2714 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (i
		=> Looking ahead 4 chars => for (i 
		=> Looking ahead 5 chars => for (i =
		=> Looking ahead 6 chars => for (i = 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 2715 =>   (buffer: )
	Process char 2716 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (i
		=> Looking ahead 2 chars => (i 
		=> Looking ahead 3 chars => (i =
		=> Looking ahead 4 chars => (i = 
		=> Looking ahead 5 chars => (i = f
		=> Looking ahead 6 chars => (i = fu
		=> Looking ahead 7 chars => (i = fun
		=> Looking ahead 8 chars => (i = func
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 2717 => i (buffer: )
	Process char 2718 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 2719 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = f
		=> Looking ahead 3 chars => = fu
		=> Looking ahead 4 chars => = fun
		=> Looking ahead 5 chars => = func
		=> Looking ahead 6 chars => = funct
		=> Looking ahead 7 chars => = functi
		=> Looking ahead 8 chars => = functio
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 2720 =>   (buffer: )
	Process char 2721 => f (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 2722 => u (buffer: f)
	Process char 2723 => n (buffer: fu)
	Process char 2724 => c (buffer: fun)
	Process char 2725 => t (buffer: func)
	Process char 2726 => i (buffer: funct)
	Process char 2727 => o (buffer: functi)
	Process char 2728 => n (buffer: functio)
		* buffer possibly contains token, looking ahead 1 chars *
		=> Looking ahead 1 chars => function(
		* look ahead found nothing *
	=> Added token T_FUNCTION (function)
	Process char 2729 => ( (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ()
		=> Looking ahead 2 chars => () 
		=> Looking ahead 3 chars => () {
		=> Looking ahead 4 chars => () {s
		=> Looking ahead 5 chars => () {se
		=> Looking ahead 6 chars => () {sel
		=> Looking ahead 7 chars => () {self
		=> Looking ahead 8 chars => () {self.
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 2730 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {s
		=> Looking ahead 4 chars => ) {se
		=> Looking ahead 5 chars => ) {sel
		=> Looking ahead 6 chars => ) {self
		=> Looking ahead 7 chars => ) {self.
		=> Looking ahead 8 chars => ) {self.w
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2731 =>   (buffer: )
	Process char 2732 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {s
		=> Looking ahead 2 chars => {se
		=> Looking ahead 3 chars => {sel
		=> Looking ahead 4 chars => {self
		=> Looking ahead 5 chars => {self.
		=> Looking ahead 6 chars => {self.w
		=> Looking ahead 7 chars => {self.wi
		=> Looking ahead 8 chars => {self.wid
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 2733 => s (buffer: )
	Process char 2734 => e (buffer: s)
	Process char 2735 => l (buffer: se)
	Process char 2736 => f (buffer: sel)
	Process char 2737 => . (buffer: self)
	=> Added token T_STRING (self)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .w
		=> Looking ahead 2 chars => .wi
		=> Looking ahead 3 chars => .wid
		=> Looking ahead 4 chars => .widg
		=> Looking ahead 5 chars => .widge
		=> Looking ahead 6 chars => .widget
		=> Looking ahead 7 chars => .widgetL
		=> Looking ahead 8 chars => .widgetLo
		=> Looking ahead 9 chars => .widgetLoa
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 2738 => w (buffer: )
	Process char 2739 => i (buffer: w)
	Process char 2740 => d (buffer: wi)
	Process char 2741 => g (buffer: wid)
	Process char 2742 => e (buffer: widg)
	Process char 2743 => t (buffer: widge)
	Process char 2744 => L (buffer: widget)
	Process char 2745 => o (buffer: widgetL)
	Process char 2746 => a (buffer: widgetLo)
	Process char 2747 => d (buffer: widgetLoa)
	Process char 2748 => e (buffer: widgetLoad)
	Process char 2749 => d (buffer: widgetLoade)
	Process char 2750 => ( (buffer: widgetLoaded)
	=> Added token T_STRING (widgetLoaded)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (w
		=> Looking ahead 2 chars => (wi
		=> Looking ahead 3 chars => (wid
		=> Looking ahead 4 chars => (widg
		=> Looking ahead 5 chars => (widge
		=> Looking ahead 6 chars => (widget
		=> Looking ahead 7 chars => (widget.
		=> Looking ahead 8 chars => (widget.i
		=> Looking ahead 9 chars => (widget.id
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 2751 => w (buffer: )
	Process char 2752 => i (buffer: w)
	Process char 2753 => d (buffer: wi)
	Process char 2754 => g (buffer: wid)
	Process char 2755 => e (buffer: widg)
	Process char 2756 => t (buffer: widge)
	Process char 2757 => . (buffer: widget)
	=> Added token T_STRING (widget)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .i
		=> Looking ahead 2 chars => .id
		=> Looking ahead 3 chars => .id)
		=> Looking ahead 4 chars => .id) 
		=> Looking ahead 5 chars => .id)  
		=> Looking ahead 6 chars => .id)  ;
		=> Looking ahead 7 chars => .id)  ; 
		=> Looking ahead 8 chars => .id)  ;  
		=> Looking ahead 9 chars => .id)  ;  }
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 2758 => i (buffer: )
	Process char 2759 => d (buffer: i)
	Process char 2760 => ) (buffer: id)
	=> Added token T_STRING (id)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => )  
		=> Looking ahead 3 chars => )  ;
		=> Looking ahead 4 chars => )  ; 
		=> Looking ahead 5 chars => )  ;  
		=> Looking ahead 6 chars => )  ;  }
		=> Looking ahead 7 chars => )  ;  };
		=> Looking ahead 8 chars => )  ;  }; 
		=> Looking ahead 9 chars => )  ;  }; i
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2761 =>   (buffer: )
	Process char 2762 =>   (buffer:  )
	Process char 2763 => ; (buffer:   )
	=> Added token T_WHITESPACE (  )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ;  
		=> Looking ahead 3 chars => ;  }
		=> Looking ahead 4 chars => ;  };
		=> Looking ahead 5 chars => ;  }; 
		=> Looking ahead 6 chars => ;  }; i
		=> Looking ahead 7 chars => ;  }; i 
		=> Looking ahead 8 chars => ;  }; i <
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 2764 =>   (buffer: )
	Process char 2765 =>   (buffer:  )
	Process char 2766 => } (buffer:   )
	=> Added token T_WHITESPACE (  )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => };
		=> Looking ahead 2 chars => }; 
		=> Looking ahead 3 chars => }; i
		=> Looking ahead 4 chars => }; i 
		=> Looking ahead 5 chars => }; i <
		=> Looking ahead 6 chars => }; i < 
		=> Looking ahead 7 chars => }; i < f
		=> Looking ahead 8 chars => }; i < fu
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 2767 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < f
		=> Looking ahead 7 chars => ; i < fu
		=> Looking ahead 8 chars => ; i < fun
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 2768 =>   (buffer: )
	Process char 2769 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 2770 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 2771 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < f
		=> Looking ahead 3 chars => < fu
		=> Looking ahead 4 chars => < fun
		=> Looking ahead 5 chars => < func
		=> Looking ahead 6 chars => < funct
		=> Looking ahead 7 chars => < functi
		=> Looking ahead 8 chars => < functio
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 2772 =>   (buffer: )
	Process char 2773 => f (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 2774 => u (buffer: f)
	Process char 2775 => n (buffer: fu)
	Process char 2776 => c (buffer: fun)
	Process char 2777 => t (buffer: func)
	Process char 2778 => i (buffer: funct)
	Process char 2779 => o (buffer: functi)
	Process char 2780 => n (buffer: functio)
		* buffer possibly contains token, looking ahead 1 chars *
		=> Looking ahead 1 chars => function(
		* look ahead found nothing *
	=> Added token T_FUNCTION (function)
	Process char 2781 => ( (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ()
		=> Looking ahead 2 chars => () 
		=> Looking ahead 3 chars => () {
		=> Looking ahead 4 chars => () {s
		=> Looking ahead 5 chars => () {se
		=> Looking ahead 6 chars => () {sel
		=> Looking ahead 7 chars => () {self
		=> Looking ahead 8 chars => () {self.
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 2782 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {s
		=> Looking ahead 4 chars => ) {se
		=> Looking ahead 5 chars => ) {sel
		=> Looking ahead 6 chars => ) {self
		=> Looking ahead 7 chars => ) {self.
		=> Looking ahead 8 chars => ) {self.w
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2783 =>   (buffer: )
	Process char 2784 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {s
		=> Looking ahead 2 chars => {se
		=> Looking ahead 3 chars => {sel
		=> Looking ahead 4 chars => {self
		=> Looking ahead 5 chars => {self.
		=> Looking ahead 6 chars => {self.w
		=> Looking ahead 7 chars => {self.wi
		=> Looking ahead 8 chars => {self.wid
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 2785 => s (buffer: )
	Process char 2786 => e (buffer: s)
	Process char 2787 => l (buffer: se)
	Process char 2788 => f (buffer: sel)
	Process char 2789 => . (buffer: self)
	=> Added token T_STRING (self)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .w
		=> Looking ahead 2 chars => .wi
		=> Looking ahead 3 chars => .wid
		=> Looking ahead 4 chars => .widg
		=> Looking ahead 5 chars => .widge
		=> Looking ahead 6 chars => .widget
		=> Looking ahead 7 chars => .widgetL
		=> Looking ahead 8 chars => .widgetLo
		=> Looking ahead 9 chars => .widgetLoa
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 2790 => w (buffer: )
	Process char 2791 => i (buffer: w)
	Process char 2792 => d (buffer: wi)
	Process char 2793 => g (buffer: wid)
	Process char 2794 => e (buffer: widg)
	Process char 2795 => t (buffer: widge)
	Process char 2796 => L (buffer: widget)
	Process char 2797 => o (buffer: widgetL)
	Process char 2798 => a (buffer: widgetLo)
	Process char 2799 => d (buffer: widgetLoa)
	Process char 2800 => e (buffer: widgetLoad)
	Process char 2801 => d (buffer: widgetLoade)
	Process char 2802 => ( (buffer: widgetLoaded)
	=> Added token T_STRING (widgetLoaded)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (w
		=> Looking ahead 2 chars => (wi
		=> Looking ahead 3 chars => (wid
		=> Looking ahead 4 chars => (widg
		=> Looking ahead 5 chars => (widge
		=> Looking ahead 6 chars => (widget
		=> Looking ahead 7 chars => (widget.
		=> Looking ahead 8 chars => (widget.i
		=> Looking ahead 9 chars => (widget.id
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 2803 => w (buffer: )
	Process char 2804 => i (buffer: w)
	Process char 2805 => d (buffer: wi)
	Process char 2806 => g (buffer: wid)
	Process char 2807 => e (buffer: widg)
	Process char 2808 => t (buffer: widge)
	Process char 2809 => . (buffer: widget)
	=> Added token T_STRING (widget)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .i
		=> Looking ahead 2 chars => .id
		=> Looking ahead 3 chars => .id)
		=> Looking ahead 4 chars => .id);
		=> Looking ahead 5 chars => .id);}
		=> Looking ahead 6 chars => .id);};
		=> Looking ahead 7 chars => .id);}; 
		=> Looking ahead 8 chars => .id);}; i
		=> Looking ahead 9 chars => .id);}; i+
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 2810 => i (buffer: )
	Process char 2811 => d (buffer: i)
	Process char 2812 => ) (buffer: id)
	=> Added token T_STRING (id)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => );
		=> Looking ahead 2 chars => );}
		=> Looking ahead 3 chars => );};
		=> Looking ahead 4 chars => );}; 
		=> Looking ahead 5 chars => );}; i
		=> Looking ahead 6 chars => );}; i+
		=> Looking ahead 7 chars => );}; i++
		=> Looking ahead 8 chars => );}; i++)
		=> Looking ahead 9 chars => );}; i++) 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2813 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;}
		=> Looking ahead 2 chars => ;};
		=> Looking ahead 3 chars => ;}; 
		=> Looking ahead 4 chars => ;}; i
		=> Looking ahead 5 chars => ;}; i+
		=> Looking ahead 6 chars => ;}; i++
		=> Looking ahead 7 chars => ;}; i++)
		=> Looking ahead 8 chars => ;}; i++) 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 2814 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => };
		=> Looking ahead 2 chars => }; 
		=> Looking ahead 3 chars => }; i
		=> Looking ahead 4 chars => }; i+
		=> Looking ahead 5 chars => }; i++
		=> Looking ahead 6 chars => }; i++)
		=> Looking ahead 7 chars => }; i++) 
		=> Looking ahead 8 chars => }; i++) {
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 2815 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i+
		=> Looking ahead 4 chars => ; i++
		=> Looking ahead 5 chars => ; i++)
		=> Looking ahead 6 chars => ; i++) 
		=> Looking ahead 7 chars => ; i++) {
		=> Looking ahead 8 chars => ; i++) {}
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 2816 =>   (buffer: )
	Process char 2817 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 2818 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 2818 *
	Process char 2819 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++)
		=> Looking ahead 2 chars => ++) 
		=> Looking ahead 3 chars => ++) {
		=> Looking ahead 4 chars => ++) {}
		=> Looking ahead 5 chars => ++) {}\n
		=> Looking ahead 6 chars => ++) {}\nf
		=> Looking ahead 7 chars => ++) {}\nfo
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 2820 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\nf
		=> Looking ahead 6 chars => ) {}\nfo
		=> Looking ahead 7 chars => ) {}\nfor
		=> Looking ahead 8 chars => ) {}\nfor 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2821 =>   (buffer: )
	Process char 2822 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\nf
		=> Looking ahead 4 chars => {}\nfo
		=> Looking ahead 5 chars => {}\nfor
		=> Looking ahead 6 chars => {}\nfor 
		=> Looking ahead 7 chars => {}\nfor (
		=> Looking ahead 8 chars => {}\nfor (i
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 2823 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\nf
		=> Looking ahead 3 chars => }\nfo
		=> Looking ahead 4 chars => }\nfor
		=> Looking ahead 5 chars => }\nfor 
		=> Looking ahead 6 chars => }\nfor (
		=> Looking ahead 7 chars => }\nfor (i
		=> Looking ahead 8 chars => }\nfor (i 
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 2824 => \n (buffer: )
	Process char 2825 => f (buffer: \n)
	=> Added token T_WHITESPACE (\n)
	Process char 2826 => o (buffer: f)
	Process char 2827 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (i
		=> Looking ahead 4 chars => for (i 
		=> Looking ahead 5 chars => for (i =
		=> Looking ahead 6 chars => for (i = 
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 2828 =>   (buffer: )
	Process char 2829 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (i
		=> Looking ahead 2 chars => (i 
		=> Looking ahead 3 chars => (i =
		=> Looking ahead 4 chars => (i = 
		=> Looking ahead 5 chars => (i = f
		=> Looking ahead 6 chars => (i = fu
		=> Looking ahead 7 chars => (i = fun
		=> Looking ahead 8 chars => (i = func
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 2830 => i (buffer: )
	Process char 2831 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 2832 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = f
		=> Looking ahead 3 chars => = fu
		=> Looking ahead 4 chars => = fun
		=> Looking ahead 5 chars => = func
		=> Looking ahead 6 chars => = funct
		=> Looking ahead 7 chars => = functi
		=> Looking ahead 8 chars => = functio
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 2833 =>   (buffer: )
	Process char 2834 => f (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 2835 => u (buffer: f)
	Process char 2836 => n (buffer: fu)
	Process char 2837 => c (buffer: fun)
	Process char 2838 => t (buffer: func)
	Process char 2839 => i (buffer: funct)
	Process char 2840 => o (buffer: functi)
	Process char 2841 => n (buffer: functio)
		* buffer possibly contains token, looking ahead 1 chars *
		=> Looking ahead 1 chars => function(
		* look ahead found nothing *
	=> Added token T_FUNCTION (function)
	Process char 2842 => ( (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ()
		=> Looking ahead 2 chars => () 
		=> Looking ahead 3 chars => () {
		=> Looking ahead 4 chars => () {s
		=> Looking ahead 5 chars => () {se
		=> Looking ahead 6 chars => () {sel
		=> Looking ahead 7 chars => () {self
		=> Looking ahead 8 chars => () {self.
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 2843 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {s
		=> Looking ahead 4 chars => ) {se
		=> Looking ahead 5 chars => ) {sel
		=> Looking ahead 6 chars => ) {self
		=> Looking ahead 7 chars => ) {self.
		=> Looking ahead 8 chars => ) {self.w
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2844 =>   (buffer: )
	Process char 2845 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {s
		=> Looking ahead 2 chars => {se
		=> Looking ahead 3 chars => {sel
		=> Looking ahead 4 chars => {self
		=> Looking ahead 5 chars => {self.
		=> Looking ahead 6 chars => {self.w
		=> Looking ahead 7 chars => {self.wi
		=> Looking ahead 8 chars => {self.wid
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 2846 => s (buffer: )
	Process char 2847 => e (buffer: s)
	Process char 2848 => l (buffer: se)
	Process char 2849 => f (buffer: sel)
	Process char 2850 => . (buffer: self)
	=> Added token T_STRING (self)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .w
		=> Looking ahead 2 chars => .wi
		=> Looking ahead 3 chars => .wid
		=> Looking ahead 4 chars => .widg
		=> Looking ahead 5 chars => .widge
		=> Looking ahead 6 chars => .widget
		=> Looking ahead 7 chars => .widgetL
		=> Looking ahead 8 chars => .widgetLo
		=> Looking ahead 9 chars => .widgetLoa
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 2851 => w (buffer: )
	Process char 2852 => i (buffer: w)
	Process char 2853 => d (buffer: wi)
	Process char 2854 => g (buffer: wid)
	Process char 2855 => e (buffer: widg)
	Process char 2856 => t (buffer: widge)
	Process char 2857 => L (buffer: widget)
	Process char 2858 => o (buffer: widgetL)
	Process char 2859 => a (buffer: widgetLo)
	Process char 2860 => d (buffer: widgetLoa)
	Process char 2861 => e (buffer: widgetLoad)
	Process char 2862 => d (buffer: widgetLoade)
	Process char 2863 => ( (buffer: widgetLoaded)
	=> Added token T_STRING (widgetLoaded)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (w
		=> Looking ahead 2 chars => (wi
		=> Looking ahead 3 chars => (wid
		=> Looking ahead 4 chars => (widg
		=> Looking ahead 5 chars => (widge
		=> Looking ahead 6 chars => (widget
		=> Looking ahead 7 chars => (widget.
		=> Looking ahead 8 chars => (widget.i
		=> Looking ahead 9 chars => (widget.id
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 2864 => w (buffer: )
	Process char 2865 => i (buffer: w)
	Process char 2866 => d (buffer: wi)
	Process char 2867 => g (buffer: wid)
	Process char 2868 => e (buffer: widg)
	Process char 2869 => t (buffer: widge)
	Process char 2870 => . (buffer: widget)
	=> Added token T_STRING (widget)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .i
		=> Looking ahead 2 chars => .id
		=> Looking ahead 3 chars => .id)
		=> Looking ahead 4 chars => .id);
		=> Looking ahead 5 chars => .id);}
		=> Looking ahead 6 chars => .id);};
		=> Looking ahead 7 chars => .id);}; 
		=> Looking ahead 8 chars => .id);}; i
		=> Looking ahead 9 chars => .id);}; i 
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 2871 => i (buffer: )
	Process char 2872 => d (buffer: i)
	Process char 2873 => ) (buffer: id)
	=> Added token T_STRING (id)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => );
		=> Looking ahead 2 chars => );}
		=> Looking ahead 3 chars => );};
		=> Looking ahead 4 chars => );}; 
		=> Looking ahead 5 chars => );}; i
		=> Looking ahead 6 chars => );}; i 
		=> Looking ahead 7 chars => );}; i <
		=> Looking ahead 8 chars => );}; i < 
		=> Looking ahead 9 chars => );}; i < f
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2874 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;}
		=> Looking ahead 2 chars => ;};
		=> Looking ahead 3 chars => ;}; 
		=> Looking ahead 4 chars => ;}; i
		=> Looking ahead 5 chars => ;}; i 
		=> Looking ahead 6 chars => ;}; i <
		=> Looking ahead 7 chars => ;}; i < 
		=> Looking ahead 8 chars => ;}; i < f
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 2875 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => };
		=> Looking ahead 2 chars => }; 
		=> Looking ahead 3 chars => }; i
		=> Looking ahead 4 chars => }; i 
		=> Looking ahead 5 chars => }; i <
		=> Looking ahead 6 chars => }; i < 
		=> Looking ahead 7 chars => }; i < f
		=> Looking ahead 8 chars => }; i < fu
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 2876 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ; i
		=> Looking ahead 3 chars => ; i 
		=> Looking ahead 4 chars => ; i <
		=> Looking ahead 5 chars => ; i < 
		=> Looking ahead 6 chars => ; i < f
		=> Looking ahead 7 chars => ; i < fu
		=> Looking ahead 8 chars => ; i < fun
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 2877 =>   (buffer: )
	Process char 2878 => i (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 2879 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 2880 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < f
		=> Looking ahead 3 chars => < fu
		=> Looking ahead 4 chars => < fun
		=> Looking ahead 5 chars => < func
		=> Looking ahead 6 chars => < funct
		=> Looking ahead 7 chars => < functi
		=> Looking ahead 8 chars => < functio
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 2881 =>   (buffer: )
	Process char 2882 => f (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 2883 => u (buffer: f)
	Process char 2884 => n (buffer: fu)
	Process char 2885 => c (buffer: fun)
	Process char 2886 => t (buffer: func)
	Process char 2887 => i (buffer: funct)
	Process char 2888 => o (buffer: functi)
	Process char 2889 => n (buffer: functio)
		* buffer possibly contains token, looking ahead 1 chars *
		=> Looking ahead 1 chars => function(
		* look ahead found nothing *
	=> Added token T_FUNCTION (function)
	Process char 2890 => ( (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ()
		=> Looking ahead 2 chars => () 
		=> Looking ahead 3 chars => () {
		=> Looking ahead 4 chars => () {s
		=> Looking ahead 5 chars => () {se
		=> Looking ahead 6 chars => () {sel
		=> Looking ahead 7 chars => () {self
		=> Looking ahead 8 chars => () {self.
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 2891 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {s
		=> Looking ahead 4 chars => ) {se
		=> Looking ahead 5 chars => ) {sel
		=> Looking ahead 6 chars => ) {self
		=> Looking ahead 7 chars => ) {self.
		=> Looking ahead 8 chars => ) {self.w
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2892 =>   (buffer: )
	Process char 2893 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {s
		=> Looking ahead 2 chars => {se
		=> Looking ahead 3 chars => {sel
		=> Looking ahead 4 chars => {self
		=> Looking ahead 5 chars => {self.
		=> Looking ahead 6 chars => {self.w
		=> Looking ahead 7 chars => {self.wi
		=> Looking ahead 8 chars => {self.wid
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 2894 => s (buffer: )
	Process char 2895 => e (buffer: s)
	Process char 2896 => l (buffer: se)
	Process char 2897 => f (buffer: sel)
	Process char 2898 => . (buffer: self)
	=> Added token T_STRING (self)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .w
		=> Looking ahead 2 chars => .wi
		=> Looking ahead 3 chars => .wid
		=> Looking ahead 4 chars => .widg
		=> Looking ahead 5 chars => .widge
		=> Looking ahead 6 chars => .widget
		=> Looking ahead 7 chars => .widgetL
		=> Looking ahead 8 chars => .widgetLo
		=> Looking ahead 9 chars => .widgetLoa
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 2899 => w (buffer: )
	Process char 2900 => i (buffer: w)
	Process char 2901 => d (buffer: wi)
	Process char 2902 => g (buffer: wid)
	Process char 2903 => e (buffer: widg)
	Process char 2904 => t (buffer: widge)
	Process char 2905 => L (buffer: widget)
	Process char 2906 => o (buffer: widgetL)
	Process char 2907 => a (buffer: widgetLo)
	Process char 2908 => d (buffer: widgetLoa)
	Process char 2909 => e (buffer: widgetLoad)
	Process char 2910 => d (buffer: widgetLoade)
	Process char 2911 => ( (buffer: widgetLoaded)
	=> Added token T_STRING (widgetLoaded)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (w
		=> Looking ahead 2 chars => (wi
		=> Looking ahead 3 chars => (wid
		=> Looking ahead 4 chars => (widg
		=> Looking ahead 5 chars => (widge
		=> Looking ahead 6 chars => (widget
		=> Looking ahead 7 chars => (widget.
		=> Looking ahead 8 chars => (widget.i
		=> Looking ahead 9 chars => (widget.id
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 2912 => w (buffer: )
	Process char 2913 => i (buffer: w)
	Process char 2914 => d (buffer: wi)
	Process char 2915 => g (buffer: wid)
	Process char 2916 => e (buffer: widg)
	Process char 2917 => t (buffer: widge)
	Process char 2918 => . (buffer: widget)
	=> Added token T_STRING (widget)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .i
		=> Looking ahead 2 chars => .id
		=> Looking ahead 3 chars => .id)
		=> Looking ahead 4 chars => .id);
		=> Looking ahead 5 chars => .id);}
		=> Looking ahead 6 chars => .id);} 
		=> Looking ahead 7 chars => .id);}  
		=> Looking ahead 8 chars => .id);}  ;
		=> Looking ahead 9 chars => .id);}  ; 
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
	Process char 2919 => i (buffer: )
	Process char 2920 => d (buffer: i)
	Process char 2921 => ) (buffer: id)
	=> Added token T_STRING (id)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => );
		=> Looking ahead 2 chars => );}
		=> Looking ahead 3 chars => );} 
		=> Looking ahead 4 chars => );}  
		=> Looking ahead 5 chars => );}  ;
		=> Looking ahead 6 chars => );}  ; 
		=> Looking ahead 7 chars => );}  ;  
		=> Looking ahead 8 chars => );}  ;   
		=> Looking ahead 9 chars => );}  ;   i
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2922 => ; (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;}
		=> Looking ahead 2 chars => ;} 
		=> Looking ahead 3 chars => ;}  
		=> Looking ahead 4 chars => ;}  ;
		=> Looking ahead 5 chars => ;}  ; 
		=> Looking ahead 6 chars => ;}  ;  
		=> Looking ahead 7 chars => ;}  ;   
		=> Looking ahead 8 chars => ;}  ;   i
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 2923 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => } 
		=> Looking ahead 2 chars => }  
		=> Looking ahead 3 chars => }  ;
		=> Looking ahead 4 chars => }  ; 
		=> Looking ahead 5 chars => }  ;  
		=> Looking ahead 6 chars => }  ;   
		=> Looking ahead 7 chars => }  ;   i
		=> Looking ahead 8 chars => }  ;   i+
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 2924 =>   (buffer: )
	Process char 2925 =>   (buffer:  )
	Process char 2926 => ; (buffer:   )
	=> Added token T_WHITESPACE (  )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ; 
		=> Looking ahead 2 chars => ;  
		=> Looking ahead 3 chars => ;   
		=> Looking ahead 4 chars => ;   i
		=> Looking ahead 5 chars => ;   i+
		=> Looking ahead 6 chars => ;   i++
		=> Looking ahead 7 chars => ;   i++)
		=> Looking ahead 8 chars => ;   i++) 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 2927 =>   (buffer: )
	Process char 2928 =>   (buffer:  )
	Process char 2929 =>   (buffer:   )
	Process char 2930 => i (buffer:    )
	=> Added token T_WHITESPACE (   )
	Process char 2931 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 2931 *
	Process char 2932 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++)
		=> Looking ahead 2 chars => ++) 
		=> Looking ahead 3 chars => ++) {
		=> Looking ahead 4 chars => ++) {}
		=> Looking ahead 5 chars => ++) {}\n
		=> Looking ahead 6 chars => ++) {}\n\n
		=> Looking ahead 7 chars => ++) {}\n\n/
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 2933 => ) (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\n\n
		=> Looking ahead 6 chars => ) {}\n\n/
		=> Looking ahead 7 chars => ) {}\n\n//
		=> Looking ahead 8 chars => ) {}\n\n// 
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 2934 =>   (buffer: )
	Process char 2935 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\n\n
		=> Looking ahead 4 chars => {}\n\n/
		=> Looking ahead 5 chars => {}\n\n//
		=> Looking ahead 6 chars => {}\n\n// 
		=> Looking ahead 7 chars => {}\n\n// p
		=> Looking ahead 8 chars => {}\n\n// ph
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 2936 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n\n
		=> Looking ahead 3 chars => }\n\n/
		=> Looking ahead 4 chars => }\n\n//
		=> Looking ahead 5 chars => }\n\n// 
		=> Looking ahead 6 chars => }\n\n// p
		=> Looking ahead 7 chars => }\n\n// ph
		=> Looking ahead 8 chars => }\n\n// php
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 2937 => \n (buffer: )
	Process char 2938 => \n (buffer: \n)
	Process char 2939 => / (buffer: \n\n)
	=> Added token T_WHITESPACE (\n\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 2939 *
	Process char 2940 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 2941 =>   (buffer: )
		Process char 2942 => p (buffer:  )
		Process char 2943 => h (buffer:  p)
		Process char 2944 => p (buffer:  ph)
		Process char 2945 => c (buffer:  php)
		Process char 2946 => s (buffer:  phpc)
		Process char 2947 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 2948 => s (buffer: )
		Process char 2949 => e (buffer: s)
		Process char 2950 => t (buffer: se)
		Process char 2951 =>   (buffer: set)
		Process char 2952 => S (buffer: set )
		Process char 2953 => q (buffer: set S)
		Process char 2954 => u (buffer: set Sq)
		Process char 2955 => i (buffer: set Squ)
		Process char 2956 => z (buffer: set Squi)
		Process char 2957 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2958 => C (buffer: )
		Process char 2959 => o (buffer: C)
		Process char 2960 => n (buffer: Co)
		Process char 2961 => t (buffer: Con)
		Process char 2962 => r (buffer: Cont)
		Process char 2963 => o (buffer: Contr)
		Process char 2964 => l (buffer: Contro)
		Process char 2965 => S (buffer: Control)
		Process char 2966 => t (buffer: ControlS)
		Process char 2967 => r (buffer: ControlSt)
		Process char 2968 => u (buffer: ControlStr)
		Process char 2969 => c (buffer: ControlStru)
		Process char 2970 => t (buffer: ControlStruc)
		Process char 2971 => u (buffer: ControlStruct)
		Process char 2972 => r (buffer: ControlStructu)
		Process char 2973 => e (buffer: ControlStructur)
		Process char 2974 => s (buffer: ControlStructure)
		Process char 2975 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 2976 => F (buffer: )
		Process char 2977 => o (buffer: F)
		Process char 2978 => r (buffer: Fo)
		Process char 2979 => L (buffer: For)
		Process char 2980 => o (buffer: ForL)
		Process char 2981 => o (buffer: ForLo)
		Process char 2982 => p (buffer: ForLoo)
		Process char 2983 => D (buffer: ForLoop)
		Process char 2984 => e (buffer: ForLoopD)
		Process char 2985 => c (buffer: ForLoopDe)
		Process char 2986 => l (buffer: ForLoopDec)
		Process char 2987 => a (buffer: ForLoopDecl)
		Process char 2988 => r (buffer: ForLoopDecla)
		Process char 2989 => a (buffer: ForLoopDeclar)
		Process char 2990 => t (buffer: ForLoopDeclara)
		Process char 2991 => i (buffer: ForLoopDeclarat)
		Process char 2992 => o (buffer: ForLoopDeclarati)
		Process char 2993 => n (buffer: ForLoopDeclaratio)
		Process char 2994 =>   (buffer: ForLoopDeclaration)
		Process char 2995 => i (buffer: ForLoopDeclaration )
		Process char 2996 => g (buffer: ForLoopDeclaration i)
		Process char 2997 => n (buffer: ForLoopDeclaration ig)
		Process char 2998 => o (buffer: ForLoopDeclaration ign)
		Process char 2999 => r (buffer: ForLoopDeclaration igno)
		Process char 3000 => e (buffer: ForLoopDeclaration ignor)
		Process char 3001 => M (buffer: ForLoopDeclaration ignore)
		Process char 3002 => u (buffer: ForLoopDeclaration ignoreM)
		Process char 3003 => l (buffer: ForLoopDeclaration ignoreMu)
		Process char 3004 => t (buffer: ForLoopDeclaration ignoreMul)
		Process char 3005 => i (buffer: ForLoopDeclaration ignoreMult)
		Process char 3006 => l (buffer: ForLoopDeclaration ignoreMulti)
		Process char 3007 => i (buffer: ForLoopDeclaration ignoreMultil)
		Process char 3008 => n (buffer: ForLoopDeclaration ignoreMultili)
		Process char 3009 => e (buffer: ForLoopDeclaration ignoreMultilin)
		Process char 3010 =>   (buffer: ForLoopDeclaration ignoreMultiline)
		Process char 3011 => t (buffer: ForLoopDeclaration ignoreMultiline )
		Process char 3012 => r (buffer: ForLoopDeclaration ignoreMultiline t)
		Process char 3013 => u (buffer: ForLoopDeclaration ignoreMultiline tr)
		Process char 3014 => e (buffer: ForLoopDeclaration ignoreMultiline tru)
		Process char 3015 => \n (buffer: ForLoopDeclaration ignoreMultiline true)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration ignoreMultiline true\n)
	Process char 3016 => f (buffer: )
	Process char 3017 => o (buffer: f)
	Process char 3018 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for 
		=> Looking ahead 2 chars => for (
		=> Looking ahead 3 chars => for (\n
		=> Looking ahead 4 chars => for (\n 
		=> Looking ahead 5 chars => for (\n  
		=> Looking ahead 6 chars => for (\n   
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 3019 =>   (buffer: )
	Process char 3020 => ( (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => (\n
		=> Looking ahead 2 chars => (\n 
		=> Looking ahead 3 chars => (\n  
		=> Looking ahead 4 chars => (\n   
		=> Looking ahead 5 chars => (\n    
		=> Looking ahead 6 chars => (\n    i
		=> Looking ahead 7 chars => (\n    i 
		=> Looking ahead 8 chars => (\n    i =
		* look ahead found nothing *
	=> Added token T_OPEN_PARENTHESIS (()
	Process char 3021 => \n (buffer: )
	Process char 3022 =>   (buffer: \n)
	Process char 3023 =>   (buffer: \n )
	Process char 3024 =>   (buffer: \n  )
	Process char 3025 =>   (buffer: \n   )
	Process char 3026 => i (buffer: \n    )
	=> Added token T_WHITESPACE (\n    )
	Process char 3027 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 3028 => = (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => = 
		=> Looking ahead 2 chars => = 0
		=> Looking ahead 3 chars => = 0;
		=> Looking ahead 4 chars => = 0;\n
		=> Looking ahead 5 chars => = 0;\n 
		=> Looking ahead 6 chars => = 0;\n  
		=> Looking ahead 7 chars => = 0;\n   
		=> Looking ahead 8 chars => = 0;\n    
		* look ahead found nothing *
	=> Added token T_EQUAL (=)
	Process char 3029 =>   (buffer: )
	Process char 3030 => 0 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 3031 => ; (buffer: 0)
	=> Added token T_STRING (0)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;\n
		=> Looking ahead 2 chars => ;\n 
		=> Looking ahead 3 chars => ;\n  
		=> Looking ahead 4 chars => ;\n   
		=> Looking ahead 5 chars => ;\n    
		=> Looking ahead 6 chars => ;\n    i
		=> Looking ahead 7 chars => ;\n    i 
		=> Looking ahead 8 chars => ;\n    i <
		=> Looking ahead 9 chars => ;\n    i < 
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 3032 => \n (buffer: )
	Process char 3033 =>   (buffer: \n)
	Process char 3034 =>   (buffer: \n )
	Process char 3035 =>   (buffer: \n  )
	Process char 3036 =>   (buffer: \n   )
	Process char 3037 => i (buffer: \n    )
	=> Added token T_WHITESPACE (\n    )
	Process char 3038 =>   (buffer: i)
	=> Added token T_STRING (i)
	Process char 3039 => < (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => < 
		=> Looking ahead 2 chars => < 1
		=> Looking ahead 3 chars => < 10
		=> Looking ahead 4 chars => < 10;
		=> Looking ahead 5 chars => < 10;\n
		=> Looking ahead 6 chars => < 10;\n 
		=> Looking ahead 7 chars => < 10;\n  
		=> Looking ahead 8 chars => < 10;\n   
		* look ahead found nothing *
	=> Added token T_LESS_THAN (<)
	Process char 3040 =>   (buffer: )
	Process char 3041 => 1 (buffer:  )
	=> Added token T_WHITESPACE ( )
	Process char 3042 => 0 (buffer: 1)
	Process char 3043 => ; (buffer: 10)
	=> Added token T_STRING (10)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ;\n
		=> Looking ahead 2 chars => ;\n 
		=> Looking ahead 3 chars => ;\n  
		=> Looking ahead 4 chars => ;\n   
		=> Looking ahead 5 chars => ;\n    
		=> Looking ahead 6 chars => ;\n    i
		=> Looking ahead 7 chars => ;\n    i+
		=> Looking ahead 8 chars => ;\n    i++
		=> Looking ahead 9 chars => ;\n    i++\n
		* look ahead found nothing *
	=> Added token T_SEMICOLON (;)
	Process char 3044 => \n (buffer: )
	Process char 3045 =>   (buffer: \n)
	Process char 3046 =>   (buffer: \n )
	Process char 3047 =>   (buffer: \n  )
	Process char 3048 =>   (buffer: \n   )
	Process char 3049 => i (buffer: \n    )
	=> Added token T_WHITESPACE (\n    )
	Process char 3050 => + (buffer: i)
	=> Added token T_STRING (i)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ++
		* look ahead found more specific token (T_INC), ignoring 3050 *
	Process char 3051 => + (buffer: +)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => ++\n
		=> Looking ahead 2 chars => ++\n)
		=> Looking ahead 3 chars => ++\n) 
		=> Looking ahead 4 chars => ++\n) {
		=> Looking ahead 5 chars => ++\n) {}
		=> Looking ahead 6 chars => ++\n) {}\n
		=> Looking ahead 7 chars => ++\n) {}\n/
		* look ahead found nothing *
	=> Added token T_INC (++)
	Process char 3052 => \n (buffer: )
	Process char 3053 => ) (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ) 
		=> Looking ahead 2 chars => ) {
		=> Looking ahead 3 chars => ) {}
		=> Looking ahead 4 chars => ) {}\n
		=> Looking ahead 5 chars => ) {}\n/
		=> Looking ahead 6 chars => ) {}\n//
		=> Looking ahead 7 chars => ) {}\n// 
		=> Looking ahead 8 chars => ) {}\n// p
		* look ahead found nothing *
	=> Added token T_CLOSE_PARENTHESIS ())
	Process char 3054 =>   (buffer: )
	Process char 3055 => { (buffer:  )
	=> Added token T_WHITESPACE ( )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => {}
		=> Looking ahead 2 chars => {}\n
		=> Looking ahead 3 chars => {}\n/
		=> Looking ahead 4 chars => {}\n//
		=> Looking ahead 5 chars => {}\n// 
		=> Looking ahead 6 chars => {}\n// p
		=> Looking ahead 7 chars => {}\n// ph
		=> Looking ahead 8 chars => {}\n// php
		* look ahead found nothing *
	=> Added token T_OPEN_CURLY_BRACKET ({)
	Process char 3056 => } (buffer: )
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => }\n
		=> Looking ahead 2 chars => }\n/
		=> Looking ahead 3 chars => }\n//
		=> Looking ahead 4 chars => }\n// 
		=> Looking ahead 5 chars => }\n// p
		=> Looking ahead 6 chars => }\n// ph
		=> Looking ahead 7 chars => }\n// php
		=> Looking ahead 8 chars => }\n// phpc
		* look ahead found nothing *
	=> Added token T_CLOSE_CURLY_BRACKET (})
	Process char 3057 => \n (buffer: )
	Process char 3058 => / (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 3058 *
	Process char 3059 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // p
		=> Looking ahead 3 chars => // ph
		=> Looking ahead 4 chars => // php
		=> Looking ahead 5 chars => // phpc
		=> Looking ahead 6 chars => // phpcs
		=> Looking ahead 7 chars => // phpcs:
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 3060 =>   (buffer: )
		Process char 3061 => p (buffer:  )
		Process char 3062 => h (buffer:  p)
		Process char 3063 => p (buffer:  ph)
		Process char 3064 => c (buffer:  php)
		Process char 3065 => s (buffer:  phpc)
		Process char 3066 => : (buffer:  phpcs)
	=> Added token T_STRING ( phpcs)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => :s
		=> Looking ahead 2 chars => :se
		=> Looking ahead 3 chars => :set
		=> Looking ahead 4 chars => :set 
		=> Looking ahead 5 chars => :set S
		=> Looking ahead 6 chars => :set Sq
		=> Looking ahead 7 chars => :set Squ
		=> Looking ahead 8 chars => :set Squi
		=> Looking ahead 9 chars => :set Squiz
		* look ahead found nothing *
	=> Added token T_COLON (:)
		Process char 3067 => s (buffer: )
		Process char 3068 => e (buffer: s)
		Process char 3069 => t (buffer: se)
		Process char 3070 =>   (buffer: set)
		Process char 3071 => S (buffer: set )
		Process char 3072 => q (buffer: set S)
		Process char 3073 => u (buffer: set Sq)
		Process char 3074 => i (buffer: set Squ)
		Process char 3075 => z (buffer: set Squi)
		Process char 3076 => . (buffer: set Squiz)
	=> Added token T_STRING (set Squiz)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .C
		=> Looking ahead 2 chars => .Co
		=> Looking ahead 3 chars => .Con
		=> Looking ahead 4 chars => .Cont
		=> Looking ahead 5 chars => .Contr
		=> Looking ahead 6 chars => .Contro
		=> Looking ahead 7 chars => .Control
		=> Looking ahead 8 chars => .ControlS
		=> Looking ahead 9 chars => .ControlSt
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 3077 => C (buffer: )
		Process char 3078 => o (buffer: C)
		Process char 3079 => n (buffer: Co)
		Process char 3080 => t (buffer: Con)
		Process char 3081 => r (buffer: Cont)
		Process char 3082 => o (buffer: Contr)
		Process char 3083 => l (buffer: Contro)
		Process char 3084 => S (buffer: Control)
		Process char 3085 => t (buffer: ControlS)
		Process char 3086 => r (buffer: ControlSt)
		Process char 3087 => u (buffer: ControlStr)
		Process char 3088 => c (buffer: ControlStru)
		Process char 3089 => t (buffer: ControlStruc)
		Process char 3090 => u (buffer: ControlStruct)
		Process char 3091 => r (buffer: ControlStructu)
		Process char 3092 => e (buffer: ControlStructur)
		Process char 3093 => s (buffer: ControlStructure)
		Process char 3094 => . (buffer: ControlStructures)
	=> Added token T_STRING (ControlStructures)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .F
		=> Looking ahead 2 chars => .Fo
		=> Looking ahead 3 chars => .For
		=> Looking ahead 4 chars => .ForL
		=> Looking ahead 5 chars => .ForLo
		=> Looking ahead 6 chars => .ForLoo
		=> Looking ahead 7 chars => .ForLoop
		=> Looking ahead 8 chars => .ForLoopD
		=> Looking ahead 9 chars => .ForLoopDe
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 3095 => F (buffer: )
		Process char 3096 => o (buffer: F)
		Process char 3097 => r (buffer: Fo)
		Process char 3098 => L (buffer: For)
		Process char 3099 => o (buffer: ForL)
		Process char 3100 => o (buffer: ForLo)
		Process char 3101 => p (buffer: ForLoo)
		Process char 3102 => D (buffer: ForLoop)
		Process char 3103 => e (buffer: ForLoopD)
		Process char 3104 => c (buffer: ForLoopDe)
		Process char 3105 => l (buffer: ForLoopDec)
		Process char 3106 => a (buffer: ForLoopDecl)
		Process char 3107 => r (buffer: ForLoopDecla)
		Process char 3108 => a (buffer: ForLoopDeclar)
		Process char 3109 => t (buffer: ForLoopDeclara)
		Process char 3110 => i (buffer: ForLoopDeclarat)
		Process char 3111 => o (buffer: ForLoopDeclarati)
		Process char 3112 => n (buffer: ForLoopDeclaratio)
		Process char 3113 =>   (buffer: ForLoopDeclaration)
		Process char 3114 => i (buffer: ForLoopDeclaration )
		Process char 3115 => g (buffer: ForLoopDeclaration i)
		Process char 3116 => n (buffer: ForLoopDeclaration ig)
		Process char 3117 => o (buffer: ForLoopDeclaration ign)
		Process char 3118 => r (buffer: ForLoopDeclaration igno)
		Process char 3119 => e (buffer: ForLoopDeclaration ignor)
		Process char 3120 => M (buffer: ForLoopDeclaration ignore)
		Process char 3121 => u (buffer: ForLoopDeclaration ignoreM)
		Process char 3122 => l (buffer: ForLoopDeclaration ignoreMu)
		Process char 3123 => t (buffer: ForLoopDeclaration ignoreMul)
		Process char 3124 => i (buffer: ForLoopDeclaration ignoreMult)
		Process char 3125 => l (buffer: ForLoopDeclaration ignoreMulti)
		Process char 3126 => i (buffer: ForLoopDeclaration ignoreMultil)
		Process char 3127 => n (buffer: ForLoopDeclaration ignoreMultili)
		Process char 3128 => e (buffer: ForLoopDeclaration ignoreMultilin)
		Process char 3129 =>   (buffer: ForLoopDeclaration ignoreMultiline)
		Process char 3130 => f (buffer: ForLoopDeclaration ignoreMultiline )
		Process char 3131 => a (buffer: ForLoopDeclaration ignoreMultiline f)
		Process char 3132 => l (buffer: ForLoopDeclaration ignoreMultiline fa)
		Process char 3133 => s (buffer: ForLoopDeclaration ignoreMultiline fal)
		Process char 3134 => e (buffer: ForLoopDeclaration ignoreMultiline fals)
		Process char 3135 => \n (buffer: ForLoopDeclaration ignoreMultiline false)
		* found end of comment *
	=> Added token T_STRING (ForLoopDeclaration ignoreMultiline false\n)
	Process char 3136 => \n (buffer: )
	Process char 3137 => / (buffer: \n)
	=> Added token T_WHITESPACE (\n)
		* buffer possibly contains token, looking ahead 8 chars *
		=> Looking ahead 1 chars => //
		* look ahead found more specific token (T_COMMENT), ignoring 3137 *
	Process char 3138 => / (buffer: /)
		* buffer possibly contains token, looking ahead 7 chars *
		=> Looking ahead 1 chars => // 
		=> Looking ahead 2 chars => // T
		=> Looking ahead 3 chars => // Th
		=> Looking ahead 4 chars => // Thi
		=> Looking ahead 5 chars => // This
		=> Looking ahead 6 chars => // This 
		=> Looking ahead 7 chars => // This t
		* look ahead found nothing *
	=> Added token T_COMMENT (//)
		* looking for end of comment *
		Process char 3139 =>   (buffer: )
		Process char 3140 => T (buffer:  )
		Process char 3141 => h (buffer:  T)
		Process char 3142 => i (buffer:  Th)
		Process char 3143 => s (buffer:  Thi)
		Process char 3144 =>   (buffer:  This)
		Process char 3145 => t (buffer:  This )
		Process char 3146 => e (buffer:  This t)
		Process char 3147 => s (buffer:  This te)
		Process char 3148 => t (buffer:  This tes)
		Process char 3149 =>   (buffer:  This test)
		Process char 3150 => h (buffer:  This test )
		Process char 3151 => a (buffer:  This test h)
		Process char 3152 => s (buffer:  This test ha)
		Process char 3153 =>   (buffer:  This test has)
		Process char 3154 => t (buffer:  This test has )
		Process char 3155 => o (buffer:  This test has t)
		Process char 3156 =>   (buffer:  This test has to)
		Process char 3157 => b (buffer:  This test has to )
		Process char 3158 => e (buffer:  This test has to b)
		Process char 3159 =>   (buffer:  This test has to be)
		Process char 3160 => t (buffer:  This test has to be )
		Process char 3161 => h (buffer:  This test has to be t)
		Process char 3162 => e (buffer:  This test has to be th)
		Process char 3163 =>   (buffer:  This test has to be the)
		Process char 3164 => l (buffer:  This test has to be the )
		Process char 3165 => a (buffer:  This test has to be the l)
		Process char 3166 => s (buffer:  This test has to be the la)
		Process char 3167 => t (buffer:  This test has to be the las)
		Process char 3168 =>   (buffer:  This test has to be the last)
		Process char 3169 => o (buffer:  This test has to be the last )
		Process char 3170 => n (buffer:  This test has to be the last o)
		Process char 3171 => e (buffer:  This test has to be the last on)
		Process char 3172 =>   (buffer:  This test has to be the last one)
		Process char 3173 => i (buffer:  This test has to be the last one )
		Process char 3174 => n (buffer:  This test has to be the last one i)
		Process char 3175 =>   (buffer:  This test has to be the last one in)
		Process char 3176 => t (buffer:  This test has to be the last one in )
		Process char 3177 => h (buffer:  This test has to be the last one in t)
		Process char 3178 => e (buffer:  This test has to be the last one in th)
		Process char 3179 =>   (buffer:  This test has to be the last one in the)
		Process char 3180 => f (buffer:  This test has to be the last one in the )
		Process char 3181 => i (buffer:  This test has to be the last one in the f)
		Process char 3182 => l (buffer:  This test has to be the last one in the fi)
		Process char 3183 => e (buffer:  This test has to be the last one in the fil)
		Process char 3184 => ! (buffer:  This test has to be the last one in the file)
	=> Added token T_STRING ( This test has to be the last one in the file)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => ! 
		=> Looking ahead 2 chars => ! I
		=> Looking ahead 3 chars => ! In
		=> Looking ahead 4 chars => ! Int
		=> Looking ahead 5 chars => ! Inte
		=> Looking ahead 6 chars => ! Inten
		=> Looking ahead 7 chars => ! Intent
		=> Looking ahead 8 chars => ! Intenti
		=> Looking ahead 9 chars => ! Intentio
		* look ahead found nothing *
	=> Added token T_BOOLEAN_NOT (!)
		Process char 3185 =>   (buffer: )
		Process char 3186 => I (buffer:  )
		Process char 3187 => n (buffer:  I)
		Process char 3188 => t (buffer:  In)
		Process char 3189 => e (buffer:  Int)
		Process char 3190 => n (buffer:  Inte)
		Process char 3191 => t (buffer:  Inten)
		Process char 3192 => i (buffer:  Intent)
		Process char 3193 => o (buffer:  Intenti)
		Process char 3194 => n (buffer:  Intentio)
		Process char 3195 => a (buffer:  Intention)
		Process char 3196 => l (buffer:  Intentiona)
		Process char 3197 =>   (buffer:  Intentional)
		Process char 3198 => p (buffer:  Intentional )
		Process char 3199 => a (buffer:  Intentional p)
		Process char 3200 => r (buffer:  Intentional pa)
		Process char 3201 => s (buffer:  Intentional par)
		Process char 3202 => e (buffer:  Intentional pars)
		Process char 3203 =>   (buffer:  Intentional parse)
		Process char 3204 => e (buffer:  Intentional parse )
		Process char 3205 => r (buffer:  Intentional parse e)
		Process char 3206 => r (buffer:  Intentional parse er)
		Process char 3207 => o (buffer:  Intentional parse err)
		Process char 3208 => r (buffer:  Intentional parse erro)
		Process char 3209 =>   (buffer:  Intentional parse error)
		Process char 3210 => c (buffer:  Intentional parse error )
		Process char 3211 => h (buffer:  Intentional parse error c)
		Process char 3212 => e (buffer:  Intentional parse error ch)
		Process char 3213 => c (buffer:  Intentional parse error che)
		Process char 3214 => k (buffer:  Intentional parse error chec)
		Process char 3215 => . (buffer:  Intentional parse error check)
	=> Added token T_STRING ( Intentional parse error check)
		* char is token, looking ahead 8 chars *
		=> Looking ahead 1 chars => .\n
		=> Looking ahead 2 chars => .\nf
		=> Looking ahead 3 chars => .\nfo
		=> Looking ahead 4 chars => .\nfor
		=> Looking ahead 5 chars => .\nfor\n
		* look ahead found nothing *
	=> Added token T_OBJECT_OPERATOR (.)
		Process char 3216 => \n (buffer: )
		* found end of comment *
	=> Added token T_STRING (\n)
	Process char 3217 => f (buffer: )
	Process char 3218 => o (buffer: f)
	Process char 3219 => r (buffer: fo)
		* buffer possibly contains token, looking ahead 6 chars *
		=> Looking ahead 1 chars => for\n
		* look ahead found nothing *
	=> Added token T_FOR (for)
	Process char 3220 => \n (buffer: )
	=> Added token T_WHITESPACE (\n)
	*** END TOKENIZING ***
	*** START TOKEN MAP ***
	=> Found curly bracket opener at 25
	=> Found curly bracket closer at 27 for 25
	=> Found curly bracket opener at 54
	=> Found curly bracket closer at 56 for 54
	=> Found curly bracket opener at 80
	=> Found curly bracket closer at 82 for 80
	=> Found curly bracket opener at 110
	=> Found curly bracket closer at 112 for 110
	=> Found curly bracket opener at 134
	=> Found curly bracket closer at 136 for 134
	=> Found curly bracket opener at 167
	=> Found curly bracket closer at 169 for 167
	=> Found curly bracket opener at 178
	=> Found curly bracket closer at 179 for 178
	=> Found curly bracket opener at 208
		=> Found curly bracket opener at 226
			=> Found square bracket opener at 248
			=> Found square bracket closer at 250 for 248
			=> Found curly bracket opener at 257
			=> Found curly bracket closer at 267 for 257
		=> Found curly bracket closer at 272 for 226
	=> Found curly bracket closer at 274 for 208
	=> Found curly bracket opener at 297
	=> Found curly bracket closer at 299 for 297
	=> Found curly bracket opener at 322
	=> Found curly bracket closer at 324 for 322
	=> Found curly bracket opener at 345
	=> Found curly bracket closer at 347 for 345
	=> Found curly bracket opener at 366
	=> Found curly bracket closer at 368 for 366
	=> Found curly bracket opener at 396
	=> Found curly bracket closer at 397 for 396
	=> Found curly bracket opener at 424
	=> Found curly bracket closer at 425 for 424
	=> Found curly bracket opener at 452
	=> Found curly bracket closer at 453 for 452
	=> Found curly bracket opener at 475
	=> Found curly bracket closer at 476 for 475
	=> Found curly bracket opener at 494
	=> Found curly bracket closer at 495 for 494
	=> Found curly bracket opener at 518
	=> Found curly bracket closer at 519 for 518
	=> Found curly bracket opener at 539
	=> Found curly bracket closer at 540 for 539
	=> Found curly bracket opener at 559
	=> Found curly bracket closer at 560 for 559
	=> Found curly bracket opener at 583
	=> Found curly bracket closer at 584 for 583
	=> Found curly bracket opener at 605
	=> Found curly bracket closer at 606 for 605
	=> Found curly bracket opener at 628
	=> Found curly bracket closer at 629 for 628
	=> Found curly bracket opener at 667
	=> Found curly bracket closer at 668 for 667
	=> Found curly bracket opener at 698
	=> Found curly bracket closer at 699 for 698
	=> Found curly bracket opener at 735
	=> Found curly bracket closer at 736 for 735
	=> Found curly bracket opener at 778
	=> Found curly bracket closer at 779 for 778
	=> Found curly bracket opener at 823
	=> Found curly bracket closer at 824 for 823
	=> Found curly bracket opener at 841
	=> Found curly bracket closer at 853 for 841
	=> Found curly bracket opener at 864
	=> Found curly bracket closer at 874 for 864
	=> Found curly bracket opener at 881
	=> Found curly bracket closer at 882 for 881
	=> Found curly bracket opener at 895
	=> Found curly bracket closer at 905 for 895
	=> Found curly bracket opener at 916
	=> Found curly bracket closer at 926 for 916
	=> Found curly bracket opener at 934
	=> Found curly bracket closer at 935 for 934
	=> Found curly bracket opener at 965
	=> Found curly bracket closer at 966 for 965
	*** END TOKEN MAP ***
	*** START SCOPE MAP ***
	Start scope map at 2:T_FOR => for
	=> Begin scope map recursion at token 2 with depth 1
	Process token 3 on line 2 []: T_WHITESPACE =>  
	Process token 4 on line 2 []: T_OPEN_PARENTHESIS => (
	Process token 5 on line 2 []: T_VAR => var
	Process token 6 on line 2 []: T_WHITESPACE =>  
	Process token 7 on line 2 []: T_STRING => i
	Process token 8 on line 2 []: T_WHITESPACE =>  
	Process token 9 on line 2 []: T_EQUAL => =
	Process token 10 on line 2 []: T_WHITESPACE =>  
	Process token 11 on line 2 []: T_LNUMBER => 0
	Process token 12 on line 2 []: T_SEMICOLON => ;
	Process token 13 on line 2 []: T_WHITESPACE =>  
	Process token 14 on line 2 []: T_STRING => i
	Process token 15 on line 2 []: T_WHITESPACE =>  
	Process token 16 on line 2 []: T_LESS_THAN => <
	Process token 17 on line 2 []: T_WHITESPACE =>  
	Process token 18 on line 2 []: T_LNUMBER => 10
	Process token 19 on line 2 []: T_SEMICOLON => ;
	Process token 20 on line 2 []: T_WHITESPACE =>  
	Process token 21 on line 2 []: T_STRING => i
	Process token 22 on line 2 []: T_INC => ++
	Process token 23 on line 2 []: T_CLOSE_PARENTHESIS => )
	Process token 24 on line 2 []: T_WHITESPACE =>  
	Process token 25 on line 2 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 2:T_FOR
	Process token 26 on line 2 [opener:25;]: T_WHITESPACE => \n
	Process token 27 on line 3 [opener:25;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (27:T_CLOSE_CURLY_BRACKET) for 2:T_FOR
	Start scope map at 31:T_FOR => for
	=> Begin scope map recursion at token 31 with depth 1
	Process token 32 on line 6 []: T_WHITESPACE =>  
	Process token 33 on line 6 []: T_OPEN_PARENTHESIS => (
	Process token 34 on line 6 []: T_WHITESPACE =>  
	Process token 35 on line 6 []: T_STRING => i
	Process token 36 on line 6 []: T_WHITESPACE =>  
	Process token 37 on line 6 []: T_EQUAL => =
	Process token 38 on line 6 []: T_WHITESPACE =>  
	Process token 39 on line 6 []: T_LNUMBER => 0
	Process token 40 on line 6 []: T_SEMICOLON => ;
	Process token 41 on line 6 []: T_WHITESPACE =>  
	Process token 42 on line 6 []: T_STRING => i
	Process token 43 on line 6 []: T_WHITESPACE =>  
	Process token 44 on line 6 []: T_LESS_THAN => <
	Process token 45 on line 6 []: T_WHITESPACE =>  
	Process token 46 on line 6 []: T_LNUMBER => 10
	Process token 47 on line 6 []: T_SEMICOLON => ;
	Process token 48 on line 6 []: T_WHITESPACE =>  
	Process token 49 on line 6 []: T_STRING => i
	Process token 50 on line 6 []: T_INC => ++
	Process token 51 on line 6 []: T_WHITESPACE =>  
	Process token 52 on line 6 []: T_CLOSE_PARENTHESIS => )
	Process token 53 on line 6 []: T_WHITESPACE =>  
	Process token 54 on line 6 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 31:T_FOR
	Process token 55 on line 6 [opener:54;]: T_WHITESPACE => \n
	Process token 56 on line 7 [opener:54;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (56:T_CLOSE_CURLY_BRACKET) for 31:T_FOR
	Start scope map at 59:T_FOR => for
	=> Begin scope map recursion at token 59 with depth 1
	Process token 60 on line 9 []: T_WHITESPACE =>  
	Process token 61 on line 9 []: T_OPEN_PARENTHESIS => (
	Process token 62 on line 9 []: T_STRING => i
	Process token 63 on line 9 []: T_WHITESPACE =>  
	Process token 64 on line 9 []: T_EQUAL => =
	Process token 65 on line 9 []: T_WHITESPACE =>  
	Process token 66 on line 9 []: T_LNUMBER => 0
	Process token 67 on line 9 []: T_SEMICOLON => ;
	Process token 68 on line 9 []: T_WHITESPACE =>   
	Process token 69 on line 9 []: T_STRING => i
	Process token 70 on line 9 []: T_WHITESPACE =>  
	Process token 71 on line 9 []: T_LESS_THAN => <
	Process token 72 on line 9 []: T_WHITESPACE =>  
	Process token 73 on line 9 []: T_LNUMBER => 10
	Process token 74 on line 9 []: T_SEMICOLON => ;
	Process token 75 on line 9 []: T_WHITESPACE =>   
	Process token 76 on line 9 []: T_STRING => i
	Process token 77 on line 9 []: T_INC => ++
	Process token 78 on line 9 []: T_CLOSE_PARENTHESIS => )
	Process token 79 on line 9 []: T_WHITESPACE =>  
	Process token 80 on line 9 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 59:T_FOR
	Process token 81 on line 9 [opener:80;]: T_WHITESPACE => \n
	Process token 82 on line 10 [opener:80;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (82:T_CLOSE_CURLY_BRACKET) for 59:T_FOR
	Start scope map at 85:T_FOR => for
	=> Begin scope map recursion at token 85 with depth 1
	Process token 86 on line 12 []: T_WHITESPACE =>  
	Process token 87 on line 12 []: T_OPEN_PARENTHESIS => (
	Process token 88 on line 12 []: T_VAR => var
	Process token 89 on line 12 []: T_WHITESPACE =>  
	Process token 90 on line 12 []: T_STRING => i
	Process token 91 on line 12 []: T_WHITESPACE =>  
	Process token 92 on line 12 []: T_EQUAL => =
	Process token 93 on line 12 []: T_WHITESPACE =>  
	Process token 94 on line 12 []: T_LNUMBER => 0
	Process token 95 on line 12 []: T_WHITESPACE =>  
	Process token 96 on line 12 []: T_SEMICOLON => ;
	Process token 97 on line 12 []: T_WHITESPACE =>  
	Process token 98 on line 12 []: T_STRING => i
	Process token 99 on line 12 []: T_WHITESPACE =>  
	Process token 100 on line 12 []: T_LESS_THAN => <
	Process token 101 on line 12 []: T_WHITESPACE =>  
	Process token 102 on line 12 []: T_LNUMBER => 10
	Process token 103 on line 12 []: T_WHITESPACE =>  
	Process token 104 on line 12 []: T_SEMICOLON => ;
	Process token 105 on line 12 []: T_WHITESPACE =>  
	Process token 106 on line 12 []: T_STRING => i
	Process token 107 on line 12 []: T_INC => ++
	Process token 108 on line 12 []: T_CLOSE_PARENTHESIS => )
	Process token 109 on line 12 []: T_WHITESPACE =>  
	Process token 110 on line 12 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 85:T_FOR
	Process token 111 on line 12 [opener:110;]: T_WHITESPACE => \n
	Process token 112 on line 13 [opener:110;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (112:T_CLOSE_CURLY_BRACKET) for 85:T_FOR
	Start scope map at 115:T_FOR => for
	=> Begin scope map recursion at token 115 with depth 1
	Process token 116 on line 15 []: T_WHITESPACE =>  
	Process token 117 on line 15 []: T_OPEN_PARENTHESIS => (
	Process token 118 on line 15 []: T_STRING => i
	Process token 119 on line 15 []: T_WHITESPACE =>  
	Process token 120 on line 15 []: T_EQUAL => =
	Process token 121 on line 15 []: T_WHITESPACE =>  
	Process token 122 on line 15 []: T_LNUMBER => 0
	Process token 123 on line 15 []: T_SEMICOLON => ;
	Process token 124 on line 15 []: T_STRING => i
	Process token 125 on line 15 []: T_WHITESPACE =>  
	Process token 126 on line 15 []: T_LESS_THAN => <
	Process token 127 on line 15 []: T_WHITESPACE =>  
	Process token 128 on line 15 []: T_LNUMBER => 10
	Process token 129 on line 15 []: T_SEMICOLON => ;
	Process token 130 on line 15 []: T_STRING => i
	Process token 131 on line 15 []: T_INC => ++
	Process token 132 on line 15 []: T_CLOSE_PARENTHESIS => )
	Process token 133 on line 15 []: T_WHITESPACE =>  
	Process token 134 on line 15 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 115:T_FOR
	Process token 135 on line 15 [opener:134;]: T_WHITESPACE => \n
	Process token 136 on line 16 [opener:134;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (136:T_CLOSE_CURLY_BRACKET) for 115:T_FOR
	Start scope map at 140:T_FOR => for
	=> Begin scope map recursion at token 140 with depth 1
	Process token 141 on line 19 []: T_WHITESPACE =>  
	Process token 142 on line 19 []: T_OPEN_PARENTHESIS => (
	Process token 143 on line 19 []: T_WHITESPACE =>  
	Process token 144 on line 19 []: T_VAR => var
	Process token 145 on line 19 []: T_WHITESPACE =>  
	Process token 146 on line 19 []: T_STRING => i
	Process token 147 on line 19 []: T_WHITESPACE =>  
	Process token 148 on line 19 []: T_EQUAL => =
	Process token 149 on line 19 []: T_WHITESPACE =>  
	Process token 150 on line 19 []: T_LNUMBER => 0
	Process token 151 on line 19 []: T_WHITESPACE =>  
	Process token 152 on line 19 []: T_SEMICOLON => ;
	Process token 153 on line 19 []: T_WHITESPACE =>   
	Process token 154 on line 19 []: T_STRING => i
	Process token 155 on line 19 []: T_WHITESPACE =>  
	Process token 156 on line 19 []: T_LESS_THAN => <
	Process token 157 on line 19 []: T_WHITESPACE =>  
	Process token 158 on line 19 []: T_LNUMBER => 10
	Process token 159 on line 19 []: T_WHITESPACE =>  
	Process token 160 on line 19 []: T_SEMICOLON => ;
	Process token 161 on line 19 []: T_WHITESPACE =>   
	Process token 162 on line 19 []: T_STRING => i
	Process token 163 on line 19 []: T_INC => ++
	Process token 164 on line 19 []: T_WHITESPACE =>  
	Process token 165 on line 19 []: T_CLOSE_PARENTHESIS => )
	Process token 166 on line 19 []: T_WHITESPACE =>  
	Process token 167 on line 19 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 140:T_FOR
	Process token 168 on line 19 [opener:167;]: T_WHITESPACE => \n
	Process token 169 on line 20 [opener:167;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (169:T_CLOSE_CURLY_BRACKET) for 140:T_FOR
	Start scope map at 194:T_FOR => for
	=> Begin scope map recursion at token 194 with depth 1
	Process token 195 on line 25 []: T_WHITESPACE =>  
	Process token 196 on line 25 []: T_OPEN_PARENTHESIS => (
	Process token 197 on line 25 []: T_VAR => var
	Process token 198 on line 25 []: T_WHITESPACE =>  
	Process token 199 on line 25 []: T_STRING => widgetid
	Process token 200 on line 25 []: T_WHITESPACE =>  
	Process token 201 on line 25 []: T_STRING => in
	Process token 202 on line 25 []: T_WHITESPACE =>  
	Process token 203 on line 25 []: T_THIS => this
	Process token 204 on line 25 []: T_OBJECT_OPERATOR => .
	Process token 205 on line 25 []: T_STRING => loadedContents
	Process token 206 on line 25 []: T_CLOSE_PARENTHESIS => )
	Process token 207 on line 25 []: T_WHITESPACE =>  
	Process token 208 on line 25 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 194:T_FOR
	Process token 209 on line 25 [opener:208;]: T_WHITESPACE => \n
	Process token 210 on line 26 [opener:208;]: T_WHITESPACE =>     
	Process token 211 on line 26 [opener:208;]: T_IF => if
	* token is an opening condition *
	* searching for opener *
		=> Begin scope map recursion at token 211 with depth 2
		Process token 212 on line 26 []: T_WHITESPACE =>  
		Process token 213 on line 26 []: T_OPEN_PARENTHESIS => (
		Process token 214 on line 26 []: T_STRING => dfx
		Process token 215 on line 26 []: T_OBJECT_OPERATOR => .
		Process token 216 on line 26 []: T_STRING => isset
		Process token 217 on line 26 []: T_OPEN_PARENTHESIS => (
		Process token 218 on line 26 []: T_STRING => widget
		Process token 219 on line 26 []: T_CLOSE_PARENTHESIS => )
		Process token 220 on line 26 []: T_WHITESPACE =>  
		Process token 221 on line 26 []: T_IS_IDENTICAL => ===
		Process token 222 on line 26 []: T_WHITESPACE =>  
		Process token 223 on line 26 []: T_TRUE => true
		Process token 224 on line 26 []: T_CLOSE_PARENTHESIS => )
		Process token 225 on line 26 []: T_WHITESPACE =>  
		Process token 226 on line 26 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 211:T_IF
		Process token 227 on line 26 [opener:226;]: T_WHITESPACE => \n
		Process token 228 on line 27 [opener:226;]: T_WHITESPACE =>         
		Process token 229 on line 27 [opener:226;]: T_STRING => widget
		Process token 230 on line 27 [opener:226;]: T_OBJECT_OPERATOR => .
		Process token 231 on line 27 [opener:226;]: T_STRING => loadAutoSaveCWidgetStore
		Process token 232 on line 27 [opener:226;]: T_OBJECT_OPERATOR => .
		Process token 233 on line 27 [opener:226;]: T_STRING => setData
		Process token 234 on line 27 [opener:226;]: T_OPEN_PARENTHESIS => (
		Process token 235 on line 27 [opener:226;]: T_CONSTANT_ENCAPSED_STRING => 'activeScreen'
		Process token 236 on line 27 [opener:226;]: T_COMMA => ,
		Process token 237 on line 27 [opener:226;]: T_WHITESPACE =>  
		Process token 238 on line 27 [opener:226;]: T_NULL => null
		Process token 239 on line 27 [opener:226;]: T_CLOSE_PARENTHESIS => )
		Process token 240 on line 27 [opener:226;]: T_SEMICOLON => ;
		Process token 241 on line 27 [opener:226;]: T_STRING => widget
		Process token 242 on line 27 [opener:226;]: T_OBJECT_OPERATOR => .
		Process token 243 on line 27 [opener:226;]: T_STRING => getContents
		Process token 244 on line 27 [opener:226;]: T_OPEN_PARENTHESIS => (
		Process token 245 on line 27 [opener:226;]: T_THIS => this
		Process token 246 on line 27 [opener:226;]: T_OBJECT_OPERATOR => .
		Process token 247 on line 27 [opener:226;]: T_STRING => loadedContents
		Process token 248 on line 27 [opener:226;]: T_OPEN_SQUARE_BRACKET => [
		Process token 249 on line 27 [opener:226;]: T_STRING => widgetid
		Process token 250 on line 27 [opener:226;]: T_CLOSE_SQUARE_BRACKET => ]
		Process token 251 on line 27 [opener:226;]: T_COMMA => ,
		Process token 252 on line 27 [opener:226;]: T_WHITESPACE =>  
		Process token 253 on line 27 [opener:226;]: T_FUNCTION => function
		* token is an opening condition *
		* searching for opener *
			=> Begin scope map recursion at token 253 with depth 3
			Process token 254 on line 27 []: T_OPEN_PARENTHESIS => (
			Process token 255 on line 27 []: T_CLOSE_PARENTHESIS => )
			Process token 256 on line 27 []: T_WHITESPACE =>  
			Process token 257 on line 27 []: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 253:T_FUNCTION
			Process token 258 on line 27 [opener:257;]: T_STRING => self
			Process token 259 on line 27 [opener:257;]: T_OBJECT_OPERATOR => .
			Process token 260 on line 27 [opener:257;]: T_STRING => widgetLoaded
			Process token 261 on line 27 [opener:257;]: T_OPEN_PARENTHESIS => (
			Process token 262 on line 27 [opener:257;]: T_STRING => widget
			Process token 263 on line 27 [opener:257;]: T_OBJECT_OPERATOR => .
			Process token 264 on line 27 [opener:257;]: T_STRING => id
			Process token 265 on line 27 [opener:257;]: T_CLOSE_PARENTHESIS => )
			Process token 266 on line 27 [opener:257;]: T_SEMICOLON => ;
			Process token 267 on line 27 [opener:257;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer (267:T_CLOSE_CURLY_BRACKET) for 253:T_FUNCTION
		Process token 268 on line 27 [opener:226;]: T_CLOSE_PARENTHESIS => )
		Process token 269 on line 27 [opener:226;]: T_SEMICOLON => ;
		Process token 270 on line 27 [opener:226;]: T_WHITESPACE => \n
		Process token 271 on line 28 [opener:226;]: T_WHITESPACE =>     
		Process token 272 on line 28 [opener:226;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (272:T_CLOSE_CURLY_BRACKET) for 211:T_IF
	Process token 273 on line 28 [opener:208;]: T_WHITESPACE => \n
	Process token 274 on line 29 [opener:208;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (274:T_CLOSE_CURLY_BRACKET) for 194:T_FOR
	Start scope map at 277:T_FOR => for
	=> Begin scope map recursion at token 277 with depth 1
	Process token 278 on line 31 []: T_WHITESPACE =>  
	Process token 279 on line 31 []: T_OPEN_PARENTHESIS => (
	Process token 280 on line 31 []: T_VAR => var
	Process token 281 on line 31 []: T_WHITESPACE =>  
	Process token 282 on line 31 []: T_STRING => i
	Process token 283 on line 31 []: T_WHITESPACE =>  
	Process token 284 on line 31 []: T_EQUAL => =
	Process token 285 on line 31 []: T_WHITESPACE =>  
	Process token 286 on line 31 []: T_LNUMBER => 0
	Process token 287 on line 31 []: T_SEMICOLON => ;
	Process token 288 on line 31 []: T_WHITESPACE =>  
	Process token 289 on line 31 []: T_STRING => i
	Process token 290 on line 31 []: T_WHITESPACE =>  
	Process token 291 on line 31 []: T_LESS_THAN => <
	Process token 292 on line 31 []: T_WHITESPACE =>  
	Process token 293 on line 31 []: T_LNUMBER => 10
	Process token 294 on line 31 []: T_SEMICOLON => ;
	Process token 295 on line 31 []: T_CLOSE_PARENTHESIS => )
	Process token 296 on line 31 []: T_WHITESPACE =>  
	Process token 297 on line 31 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 277:T_FOR
	Process token 298 on line 31 [opener:297;]: T_WHITESPACE => \n
	Process token 299 on line 32 [opener:297;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (299:T_CLOSE_CURLY_BRACKET) for 277:T_FOR
	Start scope map at 301:T_FOR => for
	=> Begin scope map recursion at token 301 with depth 1
	Process token 302 on line 33 []: T_WHITESPACE =>  
	Process token 303 on line 33 []: T_OPEN_PARENTHESIS => (
	Process token 304 on line 33 []: T_VAR => var
	Process token 305 on line 33 []: T_WHITESPACE =>  
	Process token 306 on line 33 []: T_STRING => i
	Process token 307 on line 33 []: T_WHITESPACE =>  
	Process token 308 on line 33 []: T_EQUAL => =
	Process token 309 on line 33 []: T_WHITESPACE =>  
	Process token 310 on line 33 []: T_LNUMBER => 0
	Process token 311 on line 33 []: T_SEMICOLON => ;
	Process token 312 on line 33 []: T_WHITESPACE =>  
	Process token 313 on line 33 []: T_STRING => i
	Process token 314 on line 33 []: T_WHITESPACE =>  
	Process token 315 on line 33 []: T_LESS_THAN => <
	Process token 316 on line 33 []: T_WHITESPACE =>  
	Process token 317 on line 33 []: T_LNUMBER => 10
	Process token 318 on line 33 []: T_SEMICOLON => ;
	Process token 319 on line 33 []: T_WHITESPACE =>  
	Process token 320 on line 33 []: T_CLOSE_PARENTHESIS => )
	Process token 321 on line 33 []: T_WHITESPACE =>  
	Process token 322 on line 33 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 301:T_FOR
	Process token 323 on line 33 [opener:322;]: T_WHITESPACE => \n
	Process token 324 on line 34 [opener:322;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (324:T_CLOSE_CURLY_BRACKET) for 301:T_FOR
	Start scope map at 327:T_FOR => for
	=> Begin scope map recursion at token 327 with depth 1
	Process token 328 on line 36 []: T_WHITESPACE =>  
	Process token 329 on line 36 []: T_OPEN_PARENTHESIS => (
	Process token 330 on line 36 []: T_VAR => var
	Process token 331 on line 36 []: T_WHITESPACE =>  
	Process token 332 on line 36 []: T_STRING => i
	Process token 333 on line 36 []: T_WHITESPACE =>  
	Process token 334 on line 36 []: T_EQUAL => =
	Process token 335 on line 36 []: T_WHITESPACE =>  
	Process token 336 on line 36 []: T_LNUMBER => 0
	Process token 337 on line 36 []: T_SEMICOLON => ;
	Process token 338 on line 36 []: T_WHITESPACE =>  
	Process token 339 on line 36 []: T_SEMICOLON => ;
	Process token 340 on line 36 []: T_WHITESPACE =>  
	Process token 341 on line 36 []: T_STRING => i
	Process token 342 on line 36 []: T_INC => ++
	Process token 343 on line 36 []: T_CLOSE_PARENTHESIS => )
	Process token 344 on line 36 []: T_WHITESPACE =>  
	Process token 345 on line 36 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 327:T_FOR
	Process token 346 on line 36 [opener:345;]: T_WHITESPACE => \n
	Process token 347 on line 37 [opener:345;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (347:T_CLOSE_CURLY_BRACKET) for 327:T_FOR
	Start scope map at 349:T_FOR => for
	=> Begin scope map recursion at token 349 with depth 1
	Process token 350 on line 38 []: T_WHITESPACE =>  
	Process token 351 on line 38 []: T_OPEN_PARENTHESIS => (
	Process token 352 on line 38 []: T_VAR => var
	Process token 353 on line 38 []: T_WHITESPACE =>  
	Process token 354 on line 38 []: T_STRING => i
	Process token 355 on line 38 []: T_WHITESPACE =>  
	Process token 356 on line 38 []: T_EQUAL => =
	Process token 357 on line 38 []: T_WHITESPACE =>  
	Process token 358 on line 38 []: T_LNUMBER => 0
	Process token 359 on line 38 []: T_SEMICOLON => ;
	Process token 360 on line 38 []: T_SEMICOLON => ;
	Process token 361 on line 38 []: T_WHITESPACE =>  
	Process token 362 on line 38 []: T_STRING => i
	Process token 363 on line 38 []: T_INC => ++
	Process token 364 on line 38 []: T_CLOSE_PARENTHESIS => )
	Process token 365 on line 38 []: T_WHITESPACE =>  
	Process token 366 on line 38 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 349:T_FOR
	Process token 367 on line 38 [opener:366;]: T_WHITESPACE => \n
	Process token 368 on line 39 [opener:366;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (368:T_CLOSE_CURLY_BRACKET) for 349:T_FOR
	Start scope map at 373:T_FOR => for
	=> Begin scope map recursion at token 373 with depth 1
	Process token 374 on line 43 []: T_WHITESPACE =>  
	Process token 375 on line 43 []: T_OPEN_PARENTHESIS => (
	Process token 376 on line 43 []: T_VAR => var
	Process token 377 on line 43 []: T_WHITESPACE =>  
	Process token 378 on line 43 []: T_STRING => i
	Process token 379 on line 43 []: T_WHITESPACE =>  
	Process token 380 on line 43 []: T_EQUAL => =
	Process token 381 on line 43 []: T_WHITESPACE =>  
	Process token 382 on line 43 []: T_LNUMBER => 0
	Process token 383 on line 43 []: T_SEMICOLON => ;
	Process token 384 on line 43 []: T_WHITESPACE =>  
	Process token 385 on line 43 []: T_STRING => i
	Process token 386 on line 43 []: T_WHITESPACE =>  
	Process token 387 on line 43 []: T_LESS_THAN => <
	Process token 388 on line 43 []: T_WHITESPACE =>  
	Process token 389 on line 43 []: T_LNUMBER => 10
	Process token 390 on line 43 []: T_SEMICOLON => ;
	Process token 391 on line 43 []: T_WHITESPACE =>  
	Process token 392 on line 43 []: T_STRING => i
	Process token 393 on line 43 []: T_INC => ++
	Process token 394 on line 43 []: T_CLOSE_PARENTHESIS => )
	Process token 395 on line 43 []: T_WHITESPACE =>  
	Process token 396 on line 43 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 373:T_FOR
	Process token 397 on line 43 [opener:396;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (397:T_CLOSE_CURLY_BRACKET) for 373:T_FOR
	Start scope map at 399:T_FOR => for
	=> Begin scope map recursion at token 399 with depth 1
	Process token 400 on line 44 []: T_WHITESPACE =>  
	Process token 401 on line 44 []: T_OPEN_PARENTHESIS => (
	Process token 402 on line 44 []: T_WHITESPACE =>  
	Process token 403 on line 44 []: T_VAR => var
	Process token 404 on line 44 []: T_WHITESPACE =>  
	Process token 405 on line 44 []: T_STRING => i
	Process token 406 on line 44 []: T_WHITESPACE =>  
	Process token 407 on line 44 []: T_EQUAL => =
	Process token 408 on line 44 []: T_WHITESPACE =>  
	Process token 409 on line 44 []: T_LNUMBER => 0
	Process token 410 on line 44 []: T_SEMICOLON => ;
	Process token 411 on line 44 []: T_WHITESPACE =>  
	Process token 412 on line 44 []: T_STRING => i
	Process token 413 on line 44 []: T_WHITESPACE =>  
	Process token 414 on line 44 []: T_LESS_THAN => <
	Process token 415 on line 44 []: T_WHITESPACE =>  
	Process token 416 on line 44 []: T_LNUMBER => 10
	Process token 417 on line 44 []: T_SEMICOLON => ;
	Process token 418 on line 44 []: T_WHITESPACE =>  
	Process token 419 on line 44 []: T_STRING => i
	Process token 420 on line 44 []: T_INC => ++
	Process token 421 on line 44 []: T_WHITESPACE =>  
	Process token 422 on line 44 []: T_CLOSE_PARENTHESIS => )
	Process token 423 on line 44 []: T_WHITESPACE =>  
	Process token 424 on line 44 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 399:T_FOR
	Process token 425 on line 44 [opener:424;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (425:T_CLOSE_CURLY_BRACKET) for 399:T_FOR
	Start scope map at 427:T_FOR => for
	=> Begin scope map recursion at token 427 with depth 1
	Process token 428 on line 45 []: T_WHITESPACE =>  
	Process token 429 on line 45 []: T_OPEN_PARENTHESIS => (
	Process token 430 on line 45 []: T_WHITESPACE =>   
	Process token 431 on line 45 []: T_VAR => var
	Process token 432 on line 45 []: T_WHITESPACE =>  
	Process token 433 on line 45 []: T_STRING => i
	Process token 434 on line 45 []: T_WHITESPACE =>  
	Process token 435 on line 45 []: T_EQUAL => =
	Process token 436 on line 45 []: T_WHITESPACE =>  
	Process token 437 on line 45 []: T_LNUMBER => 0
	Process token 438 on line 45 []: T_SEMICOLON => ;
	Process token 439 on line 45 []: T_WHITESPACE =>  
	Process token 440 on line 45 []: T_STRING => i
	Process token 441 on line 45 []: T_WHITESPACE =>  
	Process token 442 on line 45 []: T_LESS_THAN => <
	Process token 443 on line 45 []: T_WHITESPACE =>  
	Process token 444 on line 45 []: T_LNUMBER => 10
	Process token 445 on line 45 []: T_SEMICOLON => ;
	Process token 446 on line 45 []: T_WHITESPACE =>  
	Process token 447 on line 45 []: T_STRING => i
	Process token 448 on line 45 []: T_INC => ++
	Process token 449 on line 45 []: T_WHITESPACE =>   
	Process token 450 on line 45 []: T_CLOSE_PARENTHESIS => )
	Process token 451 on line 45 []: T_WHITESPACE =>  
	Process token 452 on line 45 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 427:T_FOR
	Process token 453 on line 45 [opener:452;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (453:T_CLOSE_CURLY_BRACKET) for 427:T_FOR
	Start scope map at 458:T_FOR => for
	=> Begin scope map recursion at token 458 with depth 1
	Process token 459 on line 49 []: T_WHITESPACE =>  
	Process token 460 on line 49 []: T_OPEN_PARENTHESIS => (
	Process token 461 on line 49 []: T_WHITESPACE =>       
	Process token 462 on line 49 []: T_SEMICOLON => ;
	Process token 463 on line 49 []: T_WHITESPACE =>  
	Process token 464 on line 49 []: T_STRING => i
	Process token 465 on line 49 []: T_WHITESPACE =>  
	Process token 466 on line 49 []: T_LESS_THAN => <
	Process token 467 on line 49 []: T_WHITESPACE =>  
	Process token 468 on line 49 []: T_LNUMBER => 10
	Process token 469 on line 49 []: T_SEMICOLON => ;
	Process token 470 on line 49 []: T_WHITESPACE =>  
	Process token 471 on line 49 []: T_STRING => i
	Process token 472 on line 49 []: T_INC => ++
	Process token 473 on line 49 []: T_CLOSE_PARENTHESIS => )
	Process token 474 on line 49 []: T_WHITESPACE =>  
	Process token 475 on line 49 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 458:T_FOR
	Process token 476 on line 49 [opener:475;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (476:T_CLOSE_CURLY_BRACKET) for 458:T_FOR
	Start scope map at 478:T_FOR => for
	=> Begin scope map recursion at token 478 with depth 1
	Process token 479 on line 50 []: T_WHITESPACE =>  
	Process token 480 on line 50 []: T_OPEN_PARENTHESIS => (
	Process token 481 on line 50 []: T_SEMICOLON => ;
	Process token 482 on line 50 []: T_WHITESPACE =>  
	Process token 483 on line 50 []: T_STRING => i
	Process token 484 on line 50 []: T_WHITESPACE =>  
	Process token 485 on line 50 []: T_LESS_THAN => <
	Process token 486 on line 50 []: T_WHITESPACE =>  
	Process token 487 on line 50 []: T_LNUMBER => 10
	Process token 488 on line 50 []: T_SEMICOLON => ;
	Process token 489 on line 50 []: T_WHITESPACE =>  
	Process token 490 on line 50 []: T_STRING => i
	Process token 491 on line 50 []: T_INC => ++
	Process token 492 on line 50 []: T_CLOSE_PARENTHESIS => )
	Process token 493 on line 50 []: T_WHITESPACE =>  
	Process token 494 on line 50 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 478:T_FOR
	Process token 495 on line 50 [opener:494;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (495:T_CLOSE_CURLY_BRACKET) for 478:T_FOR
	Start scope map at 500:T_FOR => for
	=> Begin scope map recursion at token 500 with depth 1
	Process token 501 on line 54 []: T_WHITESPACE =>  
	Process token 502 on line 54 []: T_OPEN_PARENTHESIS => (
	Process token 503 on line 54 []: T_WHITESPACE =>  
	Process token 504 on line 54 []: T_SEMICOLON => ;
	Process token 505 on line 54 []: T_WHITESPACE =>  
	Process token 506 on line 54 []: T_STRING => i
	Process token 507 on line 54 []: T_WHITESPACE =>  
	Process token 508 on line 54 []: T_LESS_THAN => <
	Process token 509 on line 54 []: T_WHITESPACE =>  
	Process token 510 on line 54 []: T_LNUMBER => 10
	Process token 511 on line 54 []: T_SEMICOLON => ;
	Process token 512 on line 54 []: T_WHITESPACE =>  
	Process token 513 on line 54 []: T_STRING => i
	Process token 514 on line 54 []: T_INC => ++
	Process token 515 on line 54 []: T_WHITESPACE =>  
	Process token 516 on line 54 []: T_CLOSE_PARENTHESIS => )
	Process token 517 on line 54 []: T_WHITESPACE =>  
	Process token 518 on line 54 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 500:T_FOR
	Process token 519 on line 54 [opener:518;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (519:T_CLOSE_CURLY_BRACKET) for 500:T_FOR
	Start scope map at 521:T_FOR => for
	=> Begin scope map recursion at token 521 with depth 1
	Process token 522 on line 55 []: T_WHITESPACE =>  
	Process token 523 on line 55 []: T_OPEN_PARENTHESIS => (
	Process token 524 on line 55 []: T_WHITESPACE =>          
	Process token 525 on line 55 []: T_SEMICOLON => ;
	Process token 526 on line 55 []: T_WHITESPACE =>  
	Process token 527 on line 55 []: T_STRING => i
	Process token 528 on line 55 []: T_WHITESPACE =>  
	Process token 529 on line 55 []: T_LESS_THAN => <
	Process token 530 on line 55 []: T_WHITESPACE =>  
	Process token 531 on line 55 []: T_LNUMBER => 10
	Process token 532 on line 55 []: T_SEMICOLON => ;
	Process token 533 on line 55 []: T_WHITESPACE =>  
	Process token 534 on line 55 []: T_STRING => i
	Process token 535 on line 55 []: T_INC => ++
	Process token 536 on line 55 []: T_WHITESPACE =>  
	Process token 537 on line 55 []: T_CLOSE_PARENTHESIS => )
	Process token 538 on line 55 []: T_WHITESPACE =>  
	Process token 539 on line 55 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 521:T_FOR
	Process token 540 on line 55 [opener:539;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (540:T_CLOSE_CURLY_BRACKET) for 521:T_FOR
	Start scope map at 542:T_FOR => for
	=> Begin scope map recursion at token 542 with depth 1
	Process token 543 on line 56 []: T_WHITESPACE =>  
	Process token 544 on line 56 []: T_OPEN_PARENTHESIS => (
	Process token 545 on line 56 []: T_SEMICOLON => ;
	Process token 546 on line 56 []: T_WHITESPACE =>  
	Process token 547 on line 56 []: T_STRING => i
	Process token 548 on line 56 []: T_WHITESPACE =>  
	Process token 549 on line 56 []: T_LESS_THAN => <
	Process token 550 on line 56 []: T_WHITESPACE =>  
	Process token 551 on line 56 []: T_LNUMBER => 10
	Process token 552 on line 56 []: T_SEMICOLON => ;
	Process token 553 on line 56 []: T_WHITESPACE =>  
	Process token 554 on line 56 []: T_STRING => i
	Process token 555 on line 56 []: T_INC => ++
	Process token 556 on line 56 []: T_WHITESPACE =>  
	Process token 557 on line 56 []: T_CLOSE_PARENTHESIS => )
	Process token 558 on line 56 []: T_WHITESPACE =>  
	Process token 559 on line 56 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 542:T_FOR
	Process token 560 on line 56 [opener:559;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (560:T_CLOSE_CURLY_BRACKET) for 542:T_FOR
	Start scope map at 563:T_FOR => for
	=> Begin scope map recursion at token 563 with depth 1
	Process token 564 on line 58 []: T_WHITESPACE =>  
	Process token 565 on line 58 []: T_OPEN_PARENTHESIS => (
	Process token 566 on line 58 []: T_WHITESPACE =>  
	Process token 567 on line 58 []: T_STRING => i
	Process token 568 on line 58 []: T_WHITESPACE =>  
	Process token 569 on line 58 []: T_EQUAL => =
	Process token 570 on line 58 []: T_WHITESPACE =>  
	Process token 571 on line 58 []: T_LNUMBER => 0
	Process token 572 on line 58 []: T_SEMICOLON => ;
	Process token 573 on line 58 []: T_WHITESPACE =>  
	Process token 574 on line 58 []: T_STRING => i
	Process token 575 on line 58 []: T_WHITESPACE =>  
	Process token 576 on line 58 []: T_LESS_THAN => <
	Process token 577 on line 58 []: T_WHITESPACE =>  
	Process token 578 on line 58 []: T_LNUMBER => 10
	Process token 579 on line 58 []: T_SEMICOLON => ;
	Process token 580 on line 58 []: T_WHITESPACE =>  
	Process token 581 on line 58 []: T_CLOSE_PARENTHESIS => )
	Process token 582 on line 58 []: T_WHITESPACE =>  
	Process token 583 on line 58 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 563:T_FOR
	Process token 584 on line 58 [opener:583;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (584:T_CLOSE_CURLY_BRACKET) for 563:T_FOR
	Start scope map at 586:T_FOR => for
	=> Begin scope map recursion at token 586 with depth 1
	Process token 587 on line 59 []: T_WHITESPACE =>  
	Process token 588 on line 59 []: T_OPEN_PARENTHESIS => (
	Process token 589 on line 59 []: T_WHITESPACE =>  
	Process token 590 on line 59 []: T_STRING => i
	Process token 591 on line 59 []: T_WHITESPACE =>  
	Process token 592 on line 59 []: T_EQUAL => =
	Process token 593 on line 59 []: T_WHITESPACE =>  
	Process token 594 on line 59 []: T_LNUMBER => 0
	Process token 595 on line 59 []: T_SEMICOLON => ;
	Process token 596 on line 59 []: T_WHITESPACE =>  
	Process token 597 on line 59 []: T_STRING => i
	Process token 598 on line 59 []: T_WHITESPACE =>  
	Process token 599 on line 59 []: T_LESS_THAN => <
	Process token 600 on line 59 []: T_WHITESPACE =>  
	Process token 601 on line 59 []: T_LNUMBER => 10
	Process token 602 on line 59 []: T_SEMICOLON => ;
	Process token 603 on line 59 []: T_CLOSE_PARENTHESIS => )
	Process token 604 on line 59 []: T_WHITESPACE =>  
	Process token 605 on line 59 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 586:T_FOR
	Process token 606 on line 59 [opener:605;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (606:T_CLOSE_CURLY_BRACKET) for 586:T_FOR
	Start scope map at 608:T_FOR => for
	=> Begin scope map recursion at token 608 with depth 1
	Process token 609 on line 60 []: T_WHITESPACE =>  
	Process token 610 on line 60 []: T_OPEN_PARENTHESIS => (
	Process token 611 on line 60 []: T_WHITESPACE =>  
	Process token 612 on line 60 []: T_STRING => i
	Process token 613 on line 60 []: T_WHITESPACE =>  
	Process token 614 on line 60 []: T_EQUAL => =
	Process token 615 on line 60 []: T_WHITESPACE =>  
	Process token 616 on line 60 []: T_LNUMBER => 0
	Process token 617 on line 60 []: T_SEMICOLON => ;
	Process token 618 on line 60 []: T_WHITESPACE =>  
	Process token 619 on line 60 []: T_STRING => i
	Process token 620 on line 60 []: T_WHITESPACE =>  
	Process token 621 on line 60 []: T_LESS_THAN => <
	Process token 622 on line 60 []: T_WHITESPACE =>  
	Process token 623 on line 60 []: T_LNUMBER => 10
	Process token 624 on line 60 []: T_SEMICOLON => ;
	Process token 625 on line 60 []: T_WHITESPACE =>      
	Process token 626 on line 60 []: T_CLOSE_PARENTHESIS => )
	Process token 627 on line 60 []: T_WHITESPACE =>  
	Process token 628 on line 60 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 608:T_FOR
	Process token 629 on line 60 [opener:628;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (629:T_CLOSE_CURLY_BRACKET) for 608:T_FOR
	Start scope map at 635:T_FOR => for
	=> Begin scope map recursion at token 635 with depth 1
	Process token 636 on line 65 []: T_WHITESPACE =>  
	Process token 637 on line 65 []: T_OPEN_PARENTHESIS => (
	Process token 638 on line 65 []: T_WHITESPACE =>  
	Process token 639 on line 65 []: T_PHPCS_ENABLE => /*phpcs:enable*/
	Process token 640 on line 65 []: T_WHITESPACE =>  
	Process token 641 on line 65 []: T_STRING => i
	Process token 642 on line 65 []: T_WHITESPACE =>  
	Process token 643 on line 65 []: T_EQUAL => =
	Process token 644 on line 65 []: T_WHITESPACE =>  
	Process token 645 on line 65 []: T_LNUMBER => 0
	Process token 646 on line 65 []: T_WHITESPACE =>  
	Process token 647 on line 65 []: T_COMMENT => /*start*/
	Process token 648 on line 65 []: T_WHITESPACE =>  
	Process token 649 on line 65 []: T_SEMICOLON => ;
	Process token 650 on line 65 []: T_WHITESPACE =>     
	Process token 651 on line 65 []: T_COMMENT => /*end*/
	Process token 652 on line 65 []: T_STRING => i
	Process token 653 on line 65 []: T_WHITESPACE =>  
	Process token 654 on line 65 []: T_LESS_THAN => <
	Process token 655 on line 65 []: T_WHITESPACE =>  
	Process token 656 on line 65 []: T_LNUMBER => 10
	Process token 657 on line 65 []: T_COMMENT => /*comment*/
	Process token 658 on line 65 []: T_SEMICOLON => ;
	Process token 659 on line 65 []: T_WHITESPACE =>  
	Process token 660 on line 65 []: T_STRING => i
	Process token 661 on line 65 []: T_INC => ++
	Process token 662 on line 65 []: T_WHITESPACE =>  
	Process token 663 on line 65 []: T_COMMENT => /*comment*/
	Process token 664 on line 65 []: T_WHITESPACE =>    
	Process token 665 on line 65 []: T_CLOSE_PARENTHESIS => )
	Process token 666 on line 65 []: T_WHITESPACE =>  
	Process token 667 on line 65 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 635:T_FOR
	Process token 668 on line 65 [opener:667;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (668:T_CLOSE_CURLY_BRACKET) for 635:T_FOR
	Start scope map at 672:T_FOR => for
	=> Begin scope map recursion at token 672 with depth 1
	Process token 673 on line 68 []: T_WHITESPACE =>  
	Process token 674 on line 68 []: T_OPEN_PARENTHESIS => (
	Process token 675 on line 68 []: T_WHITESPACE => \n
	Process token 676 on line 69 []: T_WHITESPACE =>     
	Process token 677 on line 69 []: T_STRING => i
	Process token 678 on line 69 []: T_WHITESPACE =>  
	Process token 679 on line 69 []: T_EQUAL => =
	Process token 680 on line 69 []: T_WHITESPACE =>  
	Process token 681 on line 69 []: T_LNUMBER => 0
	Process token 682 on line 69 []: T_SEMICOLON => ;
	Process token 683 on line 69 []: T_WHITESPACE => \n
	Process token 684 on line 70 []: T_WHITESPACE =>     
	Process token 685 on line 70 []: T_STRING => i
	Process token 686 on line 70 []: T_WHITESPACE =>  
	Process token 687 on line 70 []: T_LESS_THAN => <
	Process token 688 on line 70 []: T_WHITESPACE =>  
	Process token 689 on line 70 []: T_LNUMBER => 10
	Process token 690 on line 70 []: T_SEMICOLON => ;
	Process token 691 on line 70 []: T_WHITESPACE => \n
	Process token 692 on line 71 []: T_WHITESPACE =>     
	Process token 693 on line 71 []: T_STRING => i
	Process token 694 on line 71 []: T_INC => ++
	Process token 695 on line 71 []: T_WHITESPACE => \n
	Process token 696 on line 72 []: T_CLOSE_PARENTHESIS => )
	Process token 697 on line 72 []: T_WHITESPACE =>  
	Process token 698 on line 72 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 672:T_FOR
	Process token 699 on line 72 [opener:698;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (699:T_CLOSE_CURLY_BRACKET) for 672:T_FOR
	Start scope map at 703:T_FOR => for
	=> Begin scope map recursion at token 703 with depth 1
	Process token 704 on line 75 []: T_WHITESPACE =>  
	Process token 705 on line 75 []: T_OPEN_PARENTHESIS => (
	Process token 706 on line 75 []: T_WHITESPACE => \n
	Process token 707 on line 76 []: T_WHITESPACE =>     
	Process token 708 on line 76 []: T_STRING => i
	Process token 709 on line 76 []: T_WHITESPACE =>  
	Process token 710 on line 76 []: T_EQUAL => =
	Process token 711 on line 76 []: T_WHITESPACE =>  
	Process token 712 on line 76 []: T_LNUMBER => 0
	Process token 713 on line 76 []: T_SEMICOLON => ;
	Process token 714 on line 76 []: T_WHITESPACE =>  
	Process token 715 on line 76 []: T_COMMENT => /* Start */
	Process token 716 on line 76 []: T_WHITESPACE => \n
	Process token 717 on line 77 []: T_WHITESPACE =>     
	Process token 718 on line 77 []: T_STRING => i
	Process token 719 on line 77 []: T_WHITESPACE =>  
	Process token 720 on line 77 []: T_LESS_THAN => <
	Process token 721 on line 77 []: T_WHITESPACE =>  
	Process token 722 on line 77 []: T_LNUMBER => 10
	Process token 723 on line 77 []: T_SEMICOLON => ;
	Process token 724 on line 77 []: T_WHITESPACE =>  
	Process token 725 on line 77 []: T_PHPCS_IGNORE => /* phpcs:ignore Standard.Category.SniffName -- for reasons. */
	Process token 726 on line 77 []: T_WHITESPACE => \n
	Process token 727 on line 78 []: T_WHITESPACE =>     
	Process token 728 on line 78 []: T_STRING => i
	Process token 729 on line 78 []: T_INC => ++
	Process token 730 on line 78 []: T_WHITESPACE =>  
	Process token 731 on line 78 []: T_COMMENT => // comment\n
	Process token 732 on line 79 []: T_WHITESPACE => \n
	Process token 733 on line 80 []: T_CLOSE_PARENTHESIS => )
	Process token 734 on line 80 []: T_WHITESPACE =>  
	Process token 735 on line 80 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 703:T_FOR
	Process token 736 on line 80 [opener:735;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (736:T_CLOSE_CURLY_BRACKET) for 703:T_FOR
	Start scope map at 740:T_FOR => for
	=> Begin scope map recursion at token 740 with depth 1
	Process token 741 on line 83 []: T_WHITESPACE =>  
	Process token 742 on line 83 []: T_OPEN_PARENTHESIS => (
	Process token 743 on line 83 []: T_WHITESPACE => \n
	Process token 744 on line 84 []: T_WHITESPACE =>      \n
	Process token 745 on line 85 []: T_WHITESPACE => \n
	Process token 746 on line 86 []: T_WHITESPACE =>       
	Process token 747 on line 86 []: T_STRING => i
	Process token 748 on line 86 []: T_WHITESPACE =>  
	Process token 749 on line 86 []: T_EQUAL => =
	Process token 750 on line 86 []: T_WHITESPACE =>  
	Process token 751 on line 86 []: T_LNUMBER => 0
	Process token 752 on line 86 []: T_WHITESPACE => \n
	Process token 753 on line 87 []: T_WHITESPACE => \n
	Process token 754 on line 88 []: T_WHITESPACE =>       
	Process token 755 on line 88 []: T_SEMICOLON => ;
	Process token 756 on line 88 []: T_WHITESPACE =>  \n
	Process token 757 on line 89 []: T_WHITESPACE => \n
	Process token 758 on line 90 []: T_WHITESPACE =>       
	Process token 759 on line 90 []: T_STRING => i
	Process token 760 on line 90 []: T_WHITESPACE =>  
	Process token 761 on line 90 []: T_LESS_THAN => <
	Process token 762 on line 90 []: T_WHITESPACE =>  
	Process token 763 on line 90 []: T_LNUMBER => 10
	Process token 764 on line 90 []: T_WHITESPACE => \n
	Process token 765 on line 91 []: T_WHITESPACE => \n
	Process token 766 on line 92 []: T_WHITESPACE =>       
	Process token 767 on line 92 []: T_SEMICOLON => ;
	Process token 768 on line 92 []: T_WHITESPACE => \n
	Process token 769 on line 93 []: T_WHITESPACE => \n
	Process token 770 on line 94 []: T_WHITESPACE =>       
	Process token 771 on line 94 []: T_STRING => i
	Process token 772 on line 94 []: T_INC => ++
	Process token 773 on line 94 []: T_WHITESPACE => \n
	Process token 774 on line 95 []: T_WHITESPACE => \n
	Process token 775 on line 96 []: T_WHITESPACE => \n
	Process token 776 on line 97 []: T_CLOSE_PARENTHESIS => )
	Process token 777 on line 97 []: T_WHITESPACE =>  
	Process token 778 on line 97 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 740:T_FOR
	Process token 779 on line 97 [opener:778;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (779:T_CLOSE_CURLY_BRACKET) for 740:T_FOR
	Start scope map at 784:T_FOR => for
	=> Begin scope map recursion at token 784 with depth 1
	Process token 785 on line 101 []: T_WHITESPACE =>  
	Process token 786 on line 101 []: T_OPEN_PARENTHESIS => (
	Process token 787 on line 101 []: T_WHITESPACE => \n
	Process token 788 on line 102 []: T_WHITESPACE => \n
	Process token 789 on line 103 []: T_WHITESPACE => \n
	Process token 790 on line 104 []: T_WHITESPACE => \n
	Process token 791 on line 105 []: T_WHITESPACE =>       
	Process token 792 on line 105 []: T_STRING => i
	Process token 793 on line 105 []: T_WHITESPACE =>  
	Process token 794 on line 105 []: T_EQUAL => =
	Process token 795 on line 105 []: T_WHITESPACE =>  
	Process token 796 on line 105 []: T_LNUMBER => 0
	Process token 797 on line 105 []: T_WHITESPACE => \n
	Process token 798 on line 106 []: T_WHITESPACE => \n
	Process token 799 on line 107 []: T_WHITESPACE =>       
	Process token 800 on line 107 []: T_SEMICOLON => ;
	Process token 801 on line 107 []: T_WHITESPACE => \n
	Process token 802 on line 108 []: T_WHITESPACE => \n
	Process token 803 on line 109 []: T_WHITESPACE =>       
	Process token 804 on line 109 []: T_STRING => i
	Process token 805 on line 109 []: T_WHITESPACE =>  
	Process token 806 on line 109 []: T_LESS_THAN => <
	Process token 807 on line 109 []: T_WHITESPACE =>  
	Process token 808 on line 109 []: T_LNUMBER => 10
	Process token 809 on line 109 []: T_WHITESPACE => \n
	Process token 810 on line 110 []: T_WHITESPACE => \n
	Process token 811 on line 111 []: T_WHITESPACE =>       
	Process token 812 on line 111 []: T_SEMICOLON => ;
	Process token 813 on line 111 []: T_WHITESPACE => \n
	Process token 814 on line 112 []: T_WHITESPACE => \n
	Process token 815 on line 113 []: T_WHITESPACE =>       
	Process token 816 on line 113 []: T_STRING => i
	Process token 817 on line 113 []: T_INC => ++
	Process token 818 on line 113 []: T_WHITESPACE => \n
	Process token 819 on line 114 []: T_WHITESPACE => \n
	Process token 820 on line 115 []: T_WHITESPACE => \n
	Process token 821 on line 116 []: T_CLOSE_PARENTHESIS => )
	Process token 822 on line 116 []: T_WHITESPACE =>  
	Process token 823 on line 116 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 784:T_FOR
	Process token 824 on line 116 [opener:823;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (824:T_CLOSE_CURLY_BRACKET) for 784:T_FOR
	Start scope map at 830:T_FOR => for
	=> Begin scope map recursion at token 830 with depth 1
	Process token 831 on line 121 []: T_WHITESPACE =>  
	Process token 832 on line 121 []: T_OPEN_PARENTHESIS => (
	Process token 833 on line 121 []: T_STRING => i
	Process token 834 on line 121 []: T_WHITESPACE =>  
	Process token 835 on line 121 []: T_EQUAL => =
	Process token 836 on line 121 []: T_WHITESPACE =>  
	Process token 837 on line 121 []: T_FUNCTION => function
	=> Found function before scope opener for 830:T_FOR, processing manually
		=> Begin scope map recursion at token 837 with depth 2
		Process token 838 on line 121 []: T_OPEN_PARENTHESIS => (
		Process token 839 on line 121 []: T_CLOSE_PARENTHESIS => )
		Process token 840 on line 121 []: T_WHITESPACE =>  
		Process token 841 on line 121 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 837:T_FUNCTION
		Process token 842 on line 121 [opener:841;]: T_STRING => self
		Process token 843 on line 121 [opener:841;]: T_OBJECT_OPERATOR => .
		Process token 844 on line 121 [opener:841;]: T_STRING => widgetLoaded
		Process token 845 on line 121 [opener:841;]: T_OPEN_PARENTHESIS => (
		Process token 846 on line 121 [opener:841;]: T_STRING => widget
		Process token 847 on line 121 [opener:841;]: T_OBJECT_OPERATOR => .
		Process token 848 on line 121 [opener:841;]: T_STRING => id
		Process token 849 on line 121 [opener:841;]: T_CLOSE_PARENTHESIS => )
		Process token 850 on line 121 [opener:841;]: T_WHITESPACE =>   
		Process token 851 on line 121 [opener:841;]: T_SEMICOLON => ;
		Process token 852 on line 121 [opener:841;]: T_WHITESPACE =>   
		Process token 853 on line 121 [opener:841;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (853:T_CLOSE_CURLY_BRACKET) for 837:T_FUNCTION
	Process token 854 on line 121 []: T_SEMICOLON => ;
	Process token 855 on line 121 []: T_WHITESPACE =>  
	Process token 856 on line 121 []: T_STRING => i
	Process token 857 on line 121 []: T_WHITESPACE =>  
	Process token 858 on line 121 []: T_LESS_THAN => <
	Process token 859 on line 121 []: T_WHITESPACE =>  
	Process token 860 on line 121 []: T_FUNCTION => function
	=> Found function before scope opener for 830:T_FOR, processing manually
		=> Begin scope map recursion at token 860 with depth 2
		Process token 861 on line 121 []: T_OPEN_PARENTHESIS => (
		Process token 862 on line 121 []: T_CLOSE_PARENTHESIS => )
		Process token 863 on line 121 []: T_WHITESPACE =>  
		Process token 864 on line 121 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 860:T_FUNCTION
		Process token 865 on line 121 [opener:864;]: T_STRING => self
		Process token 866 on line 121 [opener:864;]: T_OBJECT_OPERATOR => .
		Process token 867 on line 121 [opener:864;]: T_STRING => widgetLoaded
		Process token 868 on line 121 [opener:864;]: T_OPEN_PARENTHESIS => (
		Process token 869 on line 121 [opener:864;]: T_STRING => widget
		Process token 870 on line 121 [opener:864;]: T_OBJECT_OPERATOR => .
		Process token 871 on line 121 [opener:864;]: T_STRING => id
		Process token 872 on line 121 [opener:864;]: T_CLOSE_PARENTHESIS => )
		Process token 873 on line 121 [opener:864;]: T_SEMICOLON => ;
		Process token 874 on line 121 [opener:864;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (874:T_CLOSE_CURLY_BRACKET) for 860:T_FUNCTION
	Process token 875 on line 121 []: T_SEMICOLON => ;
	Process token 876 on line 121 []: T_WHITESPACE =>  
	Process token 877 on line 121 []: T_STRING => i
	Process token 878 on line 121 []: T_INC => ++
	Process token 879 on line 121 []: T_CLOSE_PARENTHESIS => )
	Process token 880 on line 121 []: T_WHITESPACE =>  
	Process token 881 on line 121 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 830:T_FOR
	Process token 882 on line 121 [opener:881;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (882:T_CLOSE_CURLY_BRACKET) for 830:T_FOR
	Start scope map at 884:T_FOR => for
	=> Begin scope map recursion at token 884 with depth 1
	Process token 885 on line 122 []: T_WHITESPACE =>  
	Process token 886 on line 122 []: T_OPEN_PARENTHESIS => (
	Process token 887 on line 122 []: T_STRING => i
	Process token 888 on line 122 []: T_WHITESPACE =>  
	Process token 889 on line 122 []: T_EQUAL => =
	Process token 890 on line 122 []: T_WHITESPACE =>  
	Process token 891 on line 122 []: T_FUNCTION => function
	=> Found function before scope opener for 884:T_FOR, processing manually
		=> Begin scope map recursion at token 891 with depth 2
		Process token 892 on line 122 []: T_OPEN_PARENTHESIS => (
		Process token 893 on line 122 []: T_CLOSE_PARENTHESIS => )
		Process token 894 on line 122 []: T_WHITESPACE =>  
		Process token 895 on line 122 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 891:T_FUNCTION
		Process token 896 on line 122 [opener:895;]: T_STRING => self
		Process token 897 on line 122 [opener:895;]: T_OBJECT_OPERATOR => .
		Process token 898 on line 122 [opener:895;]: T_STRING => widgetLoaded
		Process token 899 on line 122 [opener:895;]: T_OPEN_PARENTHESIS => (
		Process token 900 on line 122 [opener:895;]: T_STRING => widget
		Process token 901 on line 122 [opener:895;]: T_OBJECT_OPERATOR => .
		Process token 902 on line 122 [opener:895;]: T_STRING => id
		Process token 903 on line 122 [opener:895;]: T_CLOSE_PARENTHESIS => )
		Process token 904 on line 122 [opener:895;]: T_SEMICOLON => ;
		Process token 905 on line 122 [opener:895;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (905:T_CLOSE_CURLY_BRACKET) for 891:T_FUNCTION
	Process token 906 on line 122 []: T_SEMICOLON => ;
	Process token 907 on line 122 []: T_WHITESPACE =>  
	Process token 908 on line 122 []: T_STRING => i
	Process token 909 on line 122 []: T_WHITESPACE =>  
	Process token 910 on line 122 []: T_LESS_THAN => <
	Process token 911 on line 122 []: T_WHITESPACE =>  
	Process token 912 on line 122 []: T_FUNCTION => function
	=> Found function before scope opener for 884:T_FOR, processing manually
		=> Begin scope map recursion at token 912 with depth 2
		Process token 913 on line 122 []: T_OPEN_PARENTHESIS => (
		Process token 914 on line 122 []: T_CLOSE_PARENTHESIS => )
		Process token 915 on line 122 []: T_WHITESPACE =>  
		Process token 916 on line 122 []: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 912:T_FUNCTION
		Process token 917 on line 122 [opener:916;]: T_STRING => self
		Process token 918 on line 122 [opener:916;]: T_OBJECT_OPERATOR => .
		Process token 919 on line 122 [opener:916;]: T_STRING => widgetLoaded
		Process token 920 on line 122 [opener:916;]: T_OPEN_PARENTHESIS => (
		Process token 921 on line 122 [opener:916;]: T_STRING => widget
		Process token 922 on line 122 [opener:916;]: T_OBJECT_OPERATOR => .
		Process token 923 on line 122 [opener:916;]: T_STRING => id
		Process token 924 on line 122 [opener:916;]: T_CLOSE_PARENTHESIS => )
		Process token 925 on line 122 [opener:916;]: T_SEMICOLON => ;
		Process token 926 on line 122 [opener:916;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer (926:T_CLOSE_CURLY_BRACKET) for 912:T_FUNCTION
	Process token 927 on line 122 []: T_WHITESPACE =>   
	Process token 928 on line 122 []: T_SEMICOLON => ;
	Process token 929 on line 122 []: T_WHITESPACE =>    
	Process token 930 on line 122 []: T_STRING => i
	Process token 931 on line 122 []: T_INC => ++
	Process token 932 on line 122 []: T_CLOSE_PARENTHESIS => )
	Process token 933 on line 122 []: T_WHITESPACE =>  
	Process token 934 on line 122 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 884:T_FOR
	Process token 935 on line 122 [opener:934;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (935:T_CLOSE_CURLY_BRACKET) for 884:T_FOR
	Start scope map at 939:T_FOR => for
	=> Begin scope map recursion at token 939 with depth 1
	Process token 940 on line 125 []: T_WHITESPACE =>  
	Process token 941 on line 125 []: T_OPEN_PARENTHESIS => (
	Process token 942 on line 125 []: T_WHITESPACE => \n
	Process token 943 on line 126 []: T_WHITESPACE =>     
	Process token 944 on line 126 []: T_STRING => i
	Process token 945 on line 126 []: T_WHITESPACE =>  
	Process token 946 on line 126 []: T_EQUAL => =
	Process token 947 on line 126 []: T_WHITESPACE =>  
	Process token 948 on line 126 []: T_LNUMBER => 0
	Process token 949 on line 126 []: T_SEMICOLON => ;
	Process token 950 on line 126 []: T_WHITESPACE => \n
	Process token 951 on line 127 []: T_WHITESPACE =>     
	Process token 952 on line 127 []: T_STRING => i
	Process token 953 on line 127 []: T_WHITESPACE =>  
	Process token 954 on line 127 []: T_LESS_THAN => <
	Process token 955 on line 127 []: T_WHITESPACE =>  
	Process token 956 on line 127 []: T_LNUMBER => 10
	Process token 957 on line 127 []: T_SEMICOLON => ;
	Process token 958 on line 127 []: T_WHITESPACE => \n
	Process token 959 on line 128 []: T_WHITESPACE =>     
	Process token 960 on line 128 []: T_STRING => i
	Process token 961 on line 128 []: T_INC => ++
	Process token 962 on line 128 []: T_WHITESPACE => \n
	Process token 963 on line 129 []: T_CLOSE_PARENTHESIS => )
	Process token 964 on line 129 []: T_WHITESPACE =>  
	Process token 965 on line 129 []: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 939:T_FOR
	Process token 966 on line 129 [opener:965;]: T_CLOSE_CURLY_BRACKET => }
	=> Found scope closer (966:T_CLOSE_CURLY_BRACKET) for 939:T_FOR
	Start scope map at 971:T_FOR => for
	=> Begin scope map recursion at token 971 with depth 1
	Process token 972 on line 133 []: T_WHITESPACE => \n
	Process token 973 on line 134 []: T_CLOSE_TAG => 
	*** END SCOPE MAP ***
	*** START LEVEL MAP ***
	Process token 0 on line 1 [col:1;len:0;lvl:0;]: T_OPEN_TAG => 
	Process token 1 on line 1 [col:1;len:9;lvl:0;]: T_COMMENT => // Valid.\n
	Process token 2 on line 2 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 3 on line 2 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 4 on line 2 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 5 on line 2 [col:6;len:3;lvl:0;]: T_VAR => var
	Process token 6 on line 2 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 7 on line 2 [col:10;len:1;lvl:0;]: T_STRING => i
	Process token 8 on line 2 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 9 on line 2 [col:12;len:1;lvl:0;]: T_EQUAL => =
	Process token 10 on line 2 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 11 on line 2 [col:14;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 12 on line 2 [col:15;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 13 on line 2 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 14 on line 2 [col:17;len:1;lvl:0;]: T_STRING => i
	Process token 15 on line 2 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 16 on line 2 [col:19;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 17 on line 2 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 18 on line 2 [col:21;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 19 on line 2 [col:23;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 20 on line 2 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 21 on line 2 [col:25;len:1;lvl:0;]: T_STRING => i
	Process token 22 on line 2 [col:26;len:2;lvl:0;]: T_INC => ++
	Process token 23 on line 2 [col:28;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 24 on line 2 [col:29;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 25 on line 2 [col:30;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 2:T_FOR
		* level increased *
		* token 2:T_FOR added to conditions array *
		Process token 26 on line 2 [col:31;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 27 on line 3 [col:1;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 25:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 28 on line 3 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 29 on line 4 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 30 on line 5 [col:1;len:11;lvl:0;]: T_COMMENT => // Invalid.\n
	Process token 31 on line 6 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 32 on line 6 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 33 on line 6 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 34 on line 6 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 35 on line 6 [col:7;len:1;lvl:0;]: T_STRING => i
	Process token 36 on line 6 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 37 on line 6 [col:9;len:1;lvl:0;]: T_EQUAL => =
	Process token 38 on line 6 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 39 on line 6 [col:11;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 40 on line 6 [col:12;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 41 on line 6 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 42 on line 6 [col:14;len:1;lvl:0;]: T_STRING => i
	Process token 43 on line 6 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 44 on line 6 [col:16;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 45 on line 6 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 46 on line 6 [col:18;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 47 on line 6 [col:20;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 48 on line 6 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 49 on line 6 [col:22;len:1;lvl:0;]: T_STRING => i
	Process token 50 on line 6 [col:23;len:2;lvl:0;]: T_INC => ++
	Process token 51 on line 6 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 52 on line 6 [col:26;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 53 on line 6 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 54 on line 6 [col:28;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 31:T_FOR
		* level increased *
		* token 31:T_FOR added to conditions array *
		Process token 55 on line 6 [col:29;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 56 on line 7 [col:1;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 54:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 57 on line 7 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 58 on line 8 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 59 on line 9 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 60 on line 9 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 61 on line 9 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 62 on line 9 [col:6;len:1;lvl:0;]: T_STRING => i
	Process token 63 on line 9 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 64 on line 9 [col:8;len:1;lvl:0;]: T_EQUAL => =
	Process token 65 on line 9 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 66 on line 9 [col:10;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 67 on line 9 [col:11;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 68 on line 9 [col:12;len:2;lvl:0;]: T_WHITESPACE =>   
	Process token 69 on line 9 [col:14;len:1;lvl:0;]: T_STRING => i
	Process token 70 on line 9 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 71 on line 9 [col:16;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 72 on line 9 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 73 on line 9 [col:18;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 74 on line 9 [col:20;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 75 on line 9 [col:21;len:2;lvl:0;]: T_WHITESPACE =>   
	Process token 76 on line 9 [col:23;len:1;lvl:0;]: T_STRING => i
	Process token 77 on line 9 [col:24;len:2;lvl:0;]: T_INC => ++
	Process token 78 on line 9 [col:26;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 79 on line 9 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 80 on line 9 [col:28;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 59:T_FOR
		* level increased *
		* token 59:T_FOR added to conditions array *
		Process token 81 on line 9 [col:29;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 82 on line 10 [col:1;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 80:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 83 on line 10 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 84 on line 11 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 85 on line 12 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 86 on line 12 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 87 on line 12 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 88 on line 12 [col:6;len:3;lvl:0;]: T_VAR => var
	Process token 89 on line 12 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 90 on line 12 [col:10;len:1;lvl:0;]: T_STRING => i
	Process token 91 on line 12 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 92 on line 12 [col:12;len:1;lvl:0;]: T_EQUAL => =
	Process token 93 on line 12 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 94 on line 12 [col:14;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 95 on line 12 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 96 on line 12 [col:16;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 97 on line 12 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 98 on line 12 [col:18;len:1;lvl:0;]: T_STRING => i
	Process token 99 on line 12 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 100 on line 12 [col:20;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 101 on line 12 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 102 on line 12 [col:22;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 103 on line 12 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 104 on line 12 [col:25;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 105 on line 12 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 106 on line 12 [col:27;len:1;lvl:0;]: T_STRING => i
	Process token 107 on line 12 [col:28;len:2;lvl:0;]: T_INC => ++
	Process token 108 on line 12 [col:30;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 109 on line 12 [col:31;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 110 on line 12 [col:32;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 85:T_FOR
		* level increased *
		* token 85:T_FOR added to conditions array *
		Process token 111 on line 12 [col:33;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 112 on line 13 [col:1;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 110:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 113 on line 13 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 114 on line 14 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 115 on line 15 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 116 on line 15 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 117 on line 15 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 118 on line 15 [col:6;len:1;lvl:0;]: T_STRING => i
	Process token 119 on line 15 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 120 on line 15 [col:8;len:1;lvl:0;]: T_EQUAL => =
	Process token 121 on line 15 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 122 on line 15 [col:10;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 123 on line 15 [col:11;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 124 on line 15 [col:12;len:1;lvl:0;]: T_STRING => i
	Process token 125 on line 15 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 126 on line 15 [col:14;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 127 on line 15 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 128 on line 15 [col:16;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 129 on line 15 [col:18;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 130 on line 15 [col:19;len:1;lvl:0;]: T_STRING => i
	Process token 131 on line 15 [col:20;len:2;lvl:0;]: T_INC => ++
	Process token 132 on line 15 [col:22;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 133 on line 15 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 134 on line 15 [col:24;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 115:T_FOR
		* level increased *
		* token 115:T_FOR added to conditions array *
		Process token 135 on line 15 [col:25;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 136 on line 16 [col:1;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 134:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 137 on line 16 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 138 on line 17 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 139 on line 18 [col:1;len:13;lvl:0;]: T_COMMENT => // The works.\n
	Process token 140 on line 19 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 141 on line 19 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 142 on line 19 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 143 on line 19 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 144 on line 19 [col:7;len:3;lvl:0;]: T_VAR => var
	Process token 145 on line 19 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 146 on line 19 [col:11;len:1;lvl:0;]: T_STRING => i
	Process token 147 on line 19 [col:12;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 148 on line 19 [col:13;len:1;lvl:0;]: T_EQUAL => =
	Process token 149 on line 19 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 150 on line 19 [col:15;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 151 on line 19 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 152 on line 19 [col:17;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 153 on line 19 [col:18;len:2;lvl:0;]: T_WHITESPACE =>   
	Process token 154 on line 19 [col:20;len:1;lvl:0;]: T_STRING => i
	Process token 155 on line 19 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 156 on line 19 [col:22;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 157 on line 19 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 158 on line 19 [col:24;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 159 on line 19 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 160 on line 19 [col:27;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 161 on line 19 [col:28;len:2;lvl:0;]: T_WHITESPACE =>   
	Process token 162 on line 19 [col:30;len:1;lvl:0;]: T_STRING => i
	Process token 163 on line 19 [col:31;len:2;lvl:0;]: T_INC => ++
	Process token 164 on line 19 [col:33;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 165 on line 19 [col:34;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 166 on line 19 [col:35;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 167 on line 19 [col:36;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 140:T_FOR
		* level increased *
		* token 140:T_FOR added to conditions array *
		Process token 168 on line 19 [col:37;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 169 on line 20 [col:1;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 167:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 170 on line 20 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 171 on line 21 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 172 on line 22 [col:1;len:4;lvl:0;]: T_THIS => this
	Process token 173 on line 22 [col:5;len:1;lvl:0;]: T_OBJECT_OPERATOR => .
	Process token 174 on line 22 [col:6;len:7;lvl:0;]: T_STRING => formats
	Process token 175 on line 22 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 176 on line 22 [col:14;len:1;lvl:0;]: T_EQUAL => =
	Process token 177 on line 22 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 178 on line 22 [col:16;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	Process token 179 on line 22 [col:17;len:1;lvl:0;]: T_CLOSE_CURLY_BRACKET => }
	Process token 180 on line 22 [col:18;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 181 on line 22 [col:19;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 182 on line 23 [col:1;len:3;lvl:0;]: T_STRING => dfx
	Process token 183 on line 23 [col:4;len:1;lvl:0;]: T_OBJECT_OPERATOR => .
	Process token 184 on line 23 [col:5;len:8;lvl:0;]: T_STRING => inherits
	Process token 185 on line 23 [col:13;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 186 on line 23 [col:14;len:15;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'ContentFormat'
	Process token 187 on line 23 [col:29;len:1;lvl:0;]: T_COMMA => ,
	Process token 188 on line 23 [col:30;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 189 on line 23 [col:31;len:8;lvl:0;]: T_CONSTANT_ENCAPSED_STRING => 'Widget'
	Process token 190 on line 23 [col:39;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 191 on line 23 [col:40;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 192 on line 23 [col:41;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 193 on line 24 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 194 on line 25 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 195 on line 25 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 196 on line 25 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 197 on line 25 [col:6;len:3;lvl:0;]: T_VAR => var
	Process token 198 on line 25 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 199 on line 25 [col:10;len:8;lvl:0;]: T_STRING => widgetid
	Process token 200 on line 25 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 201 on line 25 [col:19;len:2;lvl:0;]: T_STRING => in
	Process token 202 on line 25 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 203 on line 25 [col:22;len:4;lvl:0;]: T_THIS => this
	Process token 204 on line 25 [col:26;len:1;lvl:0;]: T_OBJECT_OPERATOR => .
	Process token 205 on line 25 [col:27;len:14;lvl:0;]: T_STRING => loadedContents
	Process token 206 on line 25 [col:41;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 207 on line 25 [col:42;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 208 on line 25 [col:43;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 194:T_FOR
		* level increased *
		* token 194:T_FOR added to conditions array *
		Process token 209 on line 25 [col:44;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 210 on line 26 [col:1;len:4;lvl:1;conds;T_FOR;]: T_WHITESPACE =>     
		Process token 211 on line 26 [col:5;len:2;lvl:1;conds;T_FOR;]: T_IF => if
		Process token 212 on line 26 [col:7;len:1;lvl:1;conds;T_FOR;]: T_WHITESPACE =>  
		Process token 213 on line 26 [col:8;len:1;lvl:1;conds;T_FOR;]: T_OPEN_PARENTHESIS => (
		Process token 214 on line 26 [col:9;len:3;lvl:1;conds;T_FOR;]: T_STRING => dfx
		Process token 215 on line 26 [col:12;len:1;lvl:1;conds;T_FOR;]: T_OBJECT_OPERATOR => .
		Process token 216 on line 26 [col:13;len:5;lvl:1;conds;T_FOR;]: T_STRING => isset
		Process token 217 on line 26 [col:18;len:1;lvl:1;conds;T_FOR;]: T_OPEN_PARENTHESIS => (
		Process token 218 on line 26 [col:19;len:6;lvl:1;conds;T_FOR;]: T_STRING => widget
		Process token 219 on line 26 [col:25;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_PARENTHESIS => )
		Process token 220 on line 26 [col:26;len:1;lvl:1;conds;T_FOR;]: T_WHITESPACE =>  
		Process token 221 on line 26 [col:27;len:3;lvl:1;conds;T_FOR;]: T_IS_IDENTICAL => ===
		Process token 222 on line 26 [col:30;len:1;lvl:1;conds;T_FOR;]: T_WHITESPACE =>  
		Process token 223 on line 26 [col:31;len:4;lvl:1;conds;T_FOR;]: T_TRUE => true
		Process token 224 on line 26 [col:35;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_PARENTHESIS => )
		Process token 225 on line 26 [col:36;len:1;lvl:1;conds;T_FOR;]: T_WHITESPACE =>  
		Process token 226 on line 26 [col:37;len:1;lvl:1;conds;T_FOR;]: T_OPEN_CURLY_BRACKET => {
		=> Found scope opener for 211:T_IF
			* level increased *
			* token 211:T_IF added to conditions array *
			Process token 227 on line 26 [col:38;len:0;lvl:2;conds;T_FOR,T_IF;]: T_WHITESPACE => \n
			Process token 228 on line 27 [col:1;len:8;lvl:2;conds;T_FOR,T_IF;]: T_WHITESPACE =>         
			Process token 229 on line 27 [col:9;len:6;lvl:2;conds;T_FOR,T_IF;]: T_STRING => widget
			Process token 230 on line 27 [col:15;len:1;lvl:2;conds;T_FOR,T_IF;]: T_OBJECT_OPERATOR => .
			Process token 231 on line 27 [col:16;len:24;lvl:2;conds;T_FOR,T_IF;]: T_STRING => loadAutoSaveCWidgetStore
			Process token 232 on line 27 [col:40;len:1;lvl:2;conds;T_FOR,T_IF;]: T_OBJECT_OPERATOR => .
			Process token 233 on line 27 [col:41;len:7;lvl:2;conds;T_FOR,T_IF;]: T_STRING => setData
			Process token 234 on line 27 [col:48;len:1;lvl:2;conds;T_FOR,T_IF;]: T_OPEN_PARENTHESIS => (
			Process token 235 on line 27 [col:49;len:14;lvl:2;conds;T_FOR,T_IF;]: T_CONSTANT_ENCAPSED_STRING => 'activeScreen'
			Process token 236 on line 27 [col:63;len:1;lvl:2;conds;T_FOR,T_IF;]: T_COMMA => ,
			Process token 237 on line 27 [col:64;len:1;lvl:2;conds;T_FOR,T_IF;]: T_WHITESPACE =>  
			Process token 238 on line 27 [col:65;len:4;lvl:2;conds;T_FOR,T_IF;]: T_NULL => null
			Process token 239 on line 27 [col:69;len:1;lvl:2;conds;T_FOR,T_IF;]: T_CLOSE_PARENTHESIS => )
			Process token 240 on line 27 [col:70;len:1;lvl:2;conds;T_FOR,T_IF;]: T_SEMICOLON => ;
			Process token 241 on line 27 [col:71;len:6;lvl:2;conds;T_FOR,T_IF;]: T_STRING => widget
			Process token 242 on line 27 [col:77;len:1;lvl:2;conds;T_FOR,T_IF;]: T_OBJECT_OPERATOR => .
			Process token 243 on line 27 [col:78;len:11;lvl:2;conds;T_FOR,T_IF;]: T_STRING => getContents
			Process token 244 on line 27 [col:89;len:1;lvl:2;conds;T_FOR,T_IF;]: T_OPEN_PARENTHESIS => (
			Process token 245 on line 27 [col:90;len:4;lvl:2;conds;T_FOR,T_IF;]: T_THIS => this
			Process token 246 on line 27 [col:94;len:1;lvl:2;conds;T_FOR,T_IF;]: T_OBJECT_OPERATOR => .
			Process token 247 on line 27 [col:95;len:14;lvl:2;conds;T_FOR,T_IF;]: T_STRING => loadedContents
			Process token 248 on line 27 [col:109;len:1;lvl:2;conds;T_FOR,T_IF;]: T_OPEN_SQUARE_BRACKET => [
			Process token 249 on line 27 [col:110;len:8;lvl:2;conds;T_FOR,T_IF;]: T_STRING => widgetid
			Process token 250 on line 27 [col:118;len:1;lvl:2;conds;T_FOR,T_IF;]: T_CLOSE_SQUARE_BRACKET => ]
			Process token 251 on line 27 [col:119;len:1;lvl:2;conds;T_FOR,T_IF;]: T_COMMA => ,
			Process token 252 on line 27 [col:120;len:1;lvl:2;conds;T_FOR,T_IF;]: T_WHITESPACE =>  
			Process token 253 on line 27 [col:121;len:8;lvl:2;conds;T_FOR,T_IF;]: T_FUNCTION => function
			Process token 254 on line 27 [col:129;len:1;lvl:2;conds;T_FOR,T_IF;]: T_OPEN_PARENTHESIS => (
			Process token 255 on line 27 [col:130;len:1;lvl:2;conds;T_FOR,T_IF;]: T_CLOSE_PARENTHESIS => )
			Process token 256 on line 27 [col:131;len:1;lvl:2;conds;T_FOR,T_IF;]: T_WHITESPACE =>  
			Process token 257 on line 27 [col:132;len:1;lvl:2;conds;T_FOR,T_IF;]: T_OPEN_CURLY_BRACKET => {
			=> Found scope opener for 253:T_FUNCTION
				* level increased *
				* token 253:T_FUNCTION added to conditions array *
				Process token 258 on line 27 [col:133;len:4;lvl:3;conds;T_FOR,T_IF,T_FUNCTION;]: T_STRING => self
				Process token 259 on line 27 [col:137;len:1;lvl:3;conds;T_FOR,T_IF,T_FUNCTION;]: T_OBJECT_OPERATOR => .
				Process token 260 on line 27 [col:138;len:12;lvl:3;conds;T_FOR,T_IF,T_FUNCTION;]: T_STRING => widgetLoaded
				Process token 261 on line 27 [col:150;len:1;lvl:3;conds;T_FOR,T_IF,T_FUNCTION;]: T_OPEN_PARENTHESIS => (
				Process token 262 on line 27 [col:151;len:6;lvl:3;conds;T_FOR,T_IF,T_FUNCTION;]: T_STRING => widget
				Process token 263 on line 27 [col:157;len:1;lvl:3;conds;T_FOR,T_IF,T_FUNCTION;]: T_OBJECT_OPERATOR => .
				Process token 264 on line 27 [col:158;len:2;lvl:3;conds;T_FOR,T_IF,T_FUNCTION;]: T_STRING => id
				Process token 265 on line 27 [col:160;len:1;lvl:3;conds;T_FOR,T_IF,T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
				Process token 266 on line 27 [col:161;len:1;lvl:3;conds;T_FOR,T_IF,T_FUNCTION;]: T_SEMICOLON => ;
				Process token 267 on line 27 [col:162;len:1;lvl:3;conds;T_FOR,T_IF,T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
				=> Found scope closer for 257:T_OPEN_CURLY_BRACKET
				* token T_FUNCTION removed from conditions array *
				* level decreased *
			Process token 268 on line 27 [col:163;len:1;lvl:2;conds;T_FOR,T_IF;]: T_CLOSE_PARENTHESIS => )
			Process token 269 on line 27 [col:164;len:1;lvl:2;conds;T_FOR,T_IF;]: T_SEMICOLON => ;
			Process token 270 on line 27 [col:165;len:0;lvl:2;conds;T_FOR,T_IF;]: T_WHITESPACE => \n
			Process token 271 on line 28 [col:1;len:4;lvl:2;conds;T_FOR,T_IF;]: T_WHITESPACE =>     
			Process token 272 on line 28 [col:5;len:1;lvl:2;conds;T_FOR,T_IF;]: T_CLOSE_CURLY_BRACKET => }
			=> Found scope closer for 226:T_OPEN_CURLY_BRACKET
			* token T_IF removed from conditions array *
			* level decreased *
		Process token 273 on line 28 [col:6;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 274 on line 29 [col:1;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 208:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 275 on line 29 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 276 on line 30 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 277 on line 31 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 278 on line 31 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 279 on line 31 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 280 on line 31 [col:6;len:3;lvl:0;]: T_VAR => var
	Process token 281 on line 31 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 282 on line 31 [col:10;len:1;lvl:0;]: T_STRING => i
	Process token 283 on line 31 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 284 on line 31 [col:12;len:1;lvl:0;]: T_EQUAL => =
	Process token 285 on line 31 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 286 on line 31 [col:14;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 287 on line 31 [col:15;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 288 on line 31 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 289 on line 31 [col:17;len:1;lvl:0;]: T_STRING => i
	Process token 290 on line 31 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 291 on line 31 [col:19;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 292 on line 31 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 293 on line 31 [col:21;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 294 on line 31 [col:23;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 295 on line 31 [col:24;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 296 on line 31 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 297 on line 31 [col:26;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 277:T_FOR
		* level increased *
		* token 277:T_FOR added to conditions array *
		Process token 298 on line 31 [col:27;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 299 on line 32 [col:1;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 297:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 300 on line 32 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 301 on line 33 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 302 on line 33 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 303 on line 33 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 304 on line 33 [col:6;len:3;lvl:0;]: T_VAR => var
	Process token 305 on line 33 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 306 on line 33 [col:10;len:1;lvl:0;]: T_STRING => i
	Process token 307 on line 33 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 308 on line 33 [col:12;len:1;lvl:0;]: T_EQUAL => =
	Process token 309 on line 33 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 310 on line 33 [col:14;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 311 on line 33 [col:15;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 312 on line 33 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 313 on line 33 [col:17;len:1;lvl:0;]: T_STRING => i
	Process token 314 on line 33 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 315 on line 33 [col:19;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 316 on line 33 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 317 on line 33 [col:21;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 318 on line 33 [col:23;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 319 on line 33 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 320 on line 33 [col:25;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 321 on line 33 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 322 on line 33 [col:27;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 301:T_FOR
		* level increased *
		* token 301:T_FOR added to conditions array *
		Process token 323 on line 33 [col:28;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 324 on line 34 [col:1;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 322:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 325 on line 34 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 326 on line 35 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 327 on line 36 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 328 on line 36 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 329 on line 36 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 330 on line 36 [col:6;len:3;lvl:0;]: T_VAR => var
	Process token 331 on line 36 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 332 on line 36 [col:10;len:1;lvl:0;]: T_STRING => i
	Process token 333 on line 36 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 334 on line 36 [col:12;len:1;lvl:0;]: T_EQUAL => =
	Process token 335 on line 36 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 336 on line 36 [col:14;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 337 on line 36 [col:15;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 338 on line 36 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 339 on line 36 [col:17;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 340 on line 36 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 341 on line 36 [col:19;len:1;lvl:0;]: T_STRING => i
	Process token 342 on line 36 [col:20;len:2;lvl:0;]: T_INC => ++
	Process token 343 on line 36 [col:22;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 344 on line 36 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 345 on line 36 [col:24;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 327:T_FOR
		* level increased *
		* token 327:T_FOR added to conditions array *
		Process token 346 on line 36 [col:25;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 347 on line 37 [col:1;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 345:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 348 on line 37 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 349 on line 38 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 350 on line 38 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 351 on line 38 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 352 on line 38 [col:6;len:3;lvl:0;]: T_VAR => var
	Process token 353 on line 38 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 354 on line 38 [col:10;len:1;lvl:0;]: T_STRING => i
	Process token 355 on line 38 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 356 on line 38 [col:12;len:1;lvl:0;]: T_EQUAL => =
	Process token 357 on line 38 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 358 on line 38 [col:14;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 359 on line 38 [col:15;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 360 on line 38 [col:16;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 361 on line 38 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 362 on line 38 [col:18;len:1;lvl:0;]: T_STRING => i
	Process token 363 on line 38 [col:19;len:2;lvl:0;]: T_INC => ++
	Process token 364 on line 38 [col:21;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 365 on line 38 [col:22;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 366 on line 38 [col:23;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 349:T_FOR
		* level increased *
		* token 349:T_FOR added to conditions array *
		Process token 367 on line 38 [col:24;len:0;lvl:1;conds;T_FOR;]: T_WHITESPACE => \n
		Process token 368 on line 39 [col:1;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 366:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 369 on line 39 [col:2;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 370 on line 40 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 371 on line 41 [col:1;len:81;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesAfterOpen 1\n
	Process token 372 on line 42 [col:1;len:83;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesBeforeClose 1\n
	Process token 373 on line 43 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 374 on line 43 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 375 on line 43 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 376 on line 43 [col:6;len:3;lvl:0;]: T_VAR => var
	Process token 377 on line 43 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 378 on line 43 [col:10;len:1;lvl:0;]: T_STRING => i
	Process token 379 on line 43 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 380 on line 43 [col:12;len:1;lvl:0;]: T_EQUAL => =
	Process token 381 on line 43 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 382 on line 43 [col:14;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 383 on line 43 [col:15;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 384 on line 43 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 385 on line 43 [col:17;len:1;lvl:0;]: T_STRING => i
	Process token 386 on line 43 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 387 on line 43 [col:19;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 388 on line 43 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 389 on line 43 [col:21;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 390 on line 43 [col:23;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 391 on line 43 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 392 on line 43 [col:25;len:1;lvl:0;]: T_STRING => i
	Process token 393 on line 43 [col:26;len:2;lvl:0;]: T_INC => ++
	Process token 394 on line 43 [col:28;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 395 on line 43 [col:29;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 396 on line 43 [col:30;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 373:T_FOR
		* level increased *
		* token 373:T_FOR added to conditions array *
		Process token 397 on line 43 [col:31;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 396:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 398 on line 43 [col:32;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 399 on line 44 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 400 on line 44 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 401 on line 44 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 402 on line 44 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 403 on line 44 [col:7;len:3;lvl:0;]: T_VAR => var
	Process token 404 on line 44 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 405 on line 44 [col:11;len:1;lvl:0;]: T_STRING => i
	Process token 406 on line 44 [col:12;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 407 on line 44 [col:13;len:1;lvl:0;]: T_EQUAL => =
	Process token 408 on line 44 [col:14;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 409 on line 44 [col:15;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 410 on line 44 [col:16;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 411 on line 44 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 412 on line 44 [col:18;len:1;lvl:0;]: T_STRING => i
	Process token 413 on line 44 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 414 on line 44 [col:20;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 415 on line 44 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 416 on line 44 [col:22;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 417 on line 44 [col:24;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 418 on line 44 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 419 on line 44 [col:26;len:1;lvl:0;]: T_STRING => i
	Process token 420 on line 44 [col:27;len:2;lvl:0;]: T_INC => ++
	Process token 421 on line 44 [col:29;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 422 on line 44 [col:30;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 423 on line 44 [col:31;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 424 on line 44 [col:32;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 399:T_FOR
		* level increased *
		* token 399:T_FOR added to conditions array *
		Process token 425 on line 44 [col:33;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 424:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 426 on line 44 [col:34;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 427 on line 45 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 428 on line 45 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 429 on line 45 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 430 on line 45 [col:6;len:2;lvl:0;]: T_WHITESPACE =>   
	Process token 431 on line 45 [col:8;len:3;lvl:0;]: T_VAR => var
	Process token 432 on line 45 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 433 on line 45 [col:12;len:1;lvl:0;]: T_STRING => i
	Process token 434 on line 45 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 435 on line 45 [col:14;len:1;lvl:0;]: T_EQUAL => =
	Process token 436 on line 45 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 437 on line 45 [col:16;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 438 on line 45 [col:17;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 439 on line 45 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 440 on line 45 [col:19;len:1;lvl:0;]: T_STRING => i
	Process token 441 on line 45 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 442 on line 45 [col:21;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 443 on line 45 [col:22;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 444 on line 45 [col:23;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 445 on line 45 [col:25;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 446 on line 45 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 447 on line 45 [col:27;len:1;lvl:0;]: T_STRING => i
	Process token 448 on line 45 [col:28;len:2;lvl:0;]: T_INC => ++
	Process token 449 on line 45 [col:30;len:2;lvl:0;]: T_WHITESPACE =>   
	Process token 450 on line 45 [col:32;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 451 on line 45 [col:33;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 452 on line 45 [col:34;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 427:T_FOR
		* level increased *
		* token 427:T_FOR added to conditions array *
		Process token 453 on line 45 [col:35;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 452:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 454 on line 45 [col:36;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 455 on line 46 [col:1;len:81;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesAfterOpen 0\n
	Process token 456 on line 47 [col:1;len:83;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesBeforeClose 0\n
	Process token 457 on line 48 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 458 on line 49 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 459 on line 49 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 460 on line 49 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 461 on line 49 [col:6;len:6;lvl:0;]: T_WHITESPACE =>       
	Process token 462 on line 49 [col:12;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 463 on line 49 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 464 on line 49 [col:14;len:1;lvl:0;]: T_STRING => i
	Process token 465 on line 49 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 466 on line 49 [col:16;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 467 on line 49 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 468 on line 49 [col:18;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 469 on line 49 [col:20;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 470 on line 49 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 471 on line 49 [col:22;len:1;lvl:0;]: T_STRING => i
	Process token 472 on line 49 [col:23;len:2;lvl:0;]: T_INC => ++
	Process token 473 on line 49 [col:25;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 474 on line 49 [col:26;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 475 on line 49 [col:27;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 458:T_FOR
		* level increased *
		* token 458:T_FOR added to conditions array *
		Process token 476 on line 49 [col:28;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 475:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 477 on line 49 [col:29;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 478 on line 50 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 479 on line 50 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 480 on line 50 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 481 on line 50 [col:6;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 482 on line 50 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 483 on line 50 [col:8;len:1;lvl:0;]: T_STRING => i
	Process token 484 on line 50 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 485 on line 50 [col:10;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 486 on line 50 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 487 on line 50 [col:12;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 488 on line 50 [col:14;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 489 on line 50 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 490 on line 50 [col:16;len:1;lvl:0;]: T_STRING => i
	Process token 491 on line 50 [col:17;len:2;lvl:0;]: T_INC => ++
	Process token 492 on line 50 [col:19;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 493 on line 50 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 494 on line 50 [col:21;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 478:T_FOR
		* level increased *
		* token 478:T_FOR added to conditions array *
		Process token 495 on line 50 [col:22;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 494:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 496 on line 50 [col:23;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 497 on line 51 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 498 on line 52 [col:1;len:81;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesAfterOpen 1\n
	Process token 499 on line 53 [col:1;len:83;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesBeforeClose 1\n
	Process token 500 on line 54 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 501 on line 54 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 502 on line 54 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 503 on line 54 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 504 on line 54 [col:7;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 505 on line 54 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 506 on line 54 [col:9;len:1;lvl:0;]: T_STRING => i
	Process token 507 on line 54 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 508 on line 54 [col:11;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 509 on line 54 [col:12;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 510 on line 54 [col:13;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 511 on line 54 [col:15;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 512 on line 54 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 513 on line 54 [col:17;len:1;lvl:0;]: T_STRING => i
	Process token 514 on line 54 [col:18;len:2;lvl:0;]: T_INC => ++
	Process token 515 on line 54 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 516 on line 54 [col:21;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 517 on line 54 [col:22;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 518 on line 54 [col:23;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 500:T_FOR
		* level increased *
		* token 500:T_FOR added to conditions array *
		Process token 519 on line 54 [col:24;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 518:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 520 on line 54 [col:25;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 521 on line 55 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 522 on line 55 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 523 on line 55 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 524 on line 55 [col:6;len:9;lvl:0;]: T_WHITESPACE =>          
	Process token 525 on line 55 [col:15;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 526 on line 55 [col:16;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 527 on line 55 [col:17;len:1;lvl:0;]: T_STRING => i
	Process token 528 on line 55 [col:18;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 529 on line 55 [col:19;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 530 on line 55 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 531 on line 55 [col:21;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 532 on line 55 [col:23;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 533 on line 55 [col:24;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 534 on line 55 [col:25;len:1;lvl:0;]: T_STRING => i
	Process token 535 on line 55 [col:26;len:2;lvl:0;]: T_INC => ++
	Process token 536 on line 55 [col:28;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 537 on line 55 [col:29;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 538 on line 55 [col:30;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 539 on line 55 [col:31;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 521:T_FOR
		* level increased *
		* token 521:T_FOR added to conditions array *
		Process token 540 on line 55 [col:32;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 539:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 541 on line 55 [col:33;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 542 on line 56 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 543 on line 56 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 544 on line 56 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 545 on line 56 [col:6;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 546 on line 56 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 547 on line 56 [col:8;len:1;lvl:0;]: T_STRING => i
	Process token 548 on line 56 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 549 on line 56 [col:10;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 550 on line 56 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 551 on line 56 [col:12;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 552 on line 56 [col:14;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 553 on line 56 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 554 on line 56 [col:16;len:1;lvl:0;]: T_STRING => i
	Process token 555 on line 56 [col:17;len:2;lvl:0;]: T_INC => ++
	Process token 556 on line 56 [col:19;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 557 on line 56 [col:20;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 558 on line 56 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 559 on line 56 [col:22;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 542:T_FOR
		* level increased *
		* token 542:T_FOR added to conditions array *
		Process token 560 on line 56 [col:23;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 559:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 561 on line 56 [col:24;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 562 on line 57 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 563 on line 58 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 564 on line 58 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 565 on line 58 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 566 on line 58 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 567 on line 58 [col:7;len:1;lvl:0;]: T_STRING => i
	Process token 568 on line 58 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 569 on line 58 [col:9;len:1;lvl:0;]: T_EQUAL => =
	Process token 570 on line 58 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 571 on line 58 [col:11;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 572 on line 58 [col:12;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 573 on line 58 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 574 on line 58 [col:14;len:1;lvl:0;]: T_STRING => i
	Process token 575 on line 58 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 576 on line 58 [col:16;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 577 on line 58 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 578 on line 58 [col:18;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 579 on line 58 [col:20;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 580 on line 58 [col:21;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 581 on line 58 [col:22;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 582 on line 58 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 583 on line 58 [col:24;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 563:T_FOR
		* level increased *
		* token 563:T_FOR added to conditions array *
		Process token 584 on line 58 [col:25;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 583:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 585 on line 58 [col:26;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 586 on line 59 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 587 on line 59 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 588 on line 59 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 589 on line 59 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 590 on line 59 [col:7;len:1;lvl:0;]: T_STRING => i
	Process token 591 on line 59 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 592 on line 59 [col:9;len:1;lvl:0;]: T_EQUAL => =
	Process token 593 on line 59 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 594 on line 59 [col:11;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 595 on line 59 [col:12;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 596 on line 59 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 597 on line 59 [col:14;len:1;lvl:0;]: T_STRING => i
	Process token 598 on line 59 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 599 on line 59 [col:16;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 600 on line 59 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 601 on line 59 [col:18;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 602 on line 59 [col:20;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 603 on line 59 [col:21;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 604 on line 59 [col:22;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 605 on line 59 [col:23;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 586:T_FOR
		* level increased *
		* token 586:T_FOR added to conditions array *
		Process token 606 on line 59 [col:24;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 605:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 607 on line 59 [col:25;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 608 on line 60 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 609 on line 60 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 610 on line 60 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 611 on line 60 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 612 on line 60 [col:7;len:1;lvl:0;]: T_STRING => i
	Process token 613 on line 60 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 614 on line 60 [col:9;len:1;lvl:0;]: T_EQUAL => =
	Process token 615 on line 60 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 616 on line 60 [col:11;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 617 on line 60 [col:12;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 618 on line 60 [col:13;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 619 on line 60 [col:14;len:1;lvl:0;]: T_STRING => i
	Process token 620 on line 60 [col:15;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 621 on line 60 [col:16;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 622 on line 60 [col:17;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 623 on line 60 [col:18;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 624 on line 60 [col:20;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 625 on line 60 [col:21;len:5;lvl:0;]: T_WHITESPACE =>      
	Process token 626 on line 60 [col:26;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 627 on line 60 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 628 on line 60 [col:28;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 608:T_FOR
		* level increased *
		* token 608:T_FOR added to conditions array *
		Process token 629 on line 60 [col:29;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 628:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 630 on line 60 [col:30;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 631 on line 61 [col:1;len:81;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesAfterOpen 0\n
	Process token 632 on line 62 [col:1;len:83;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesBeforeClose 0\n
	Process token 633 on line 63 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 634 on line 64 [col:1;len:52;lvl:0;]: T_COMMENT => // Test handling of comments and inline annotations.\n
	Process token 635 on line 65 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 636 on line 65 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 637 on line 65 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 638 on line 65 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 639 on line 65 [col:7;len:16;lvl:0;]: T_PHPCS_ENABLE => /*phpcs:enable*/
	Process token 640 on line 65 [col:23;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 641 on line 65 [col:24;len:1;lvl:0;]: T_STRING => i
	Process token 642 on line 65 [col:25;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 643 on line 65 [col:26;len:1;lvl:0;]: T_EQUAL => =
	Process token 644 on line 65 [col:27;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 645 on line 65 [col:28;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 646 on line 65 [col:29;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 647 on line 65 [col:30;len:9;lvl:0;]: T_COMMENT => /*start*/
	Process token 648 on line 65 [col:39;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 649 on line 65 [col:40;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 650 on line 65 [col:41;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 651 on line 65 [col:45;len:7;lvl:0;]: T_COMMENT => /*end*/
	Process token 652 on line 65 [col:52;len:1;lvl:0;]: T_STRING => i
	Process token 653 on line 65 [col:53;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 654 on line 65 [col:54;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 655 on line 65 [col:55;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 656 on line 65 [col:56;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 657 on line 65 [col:58;len:11;lvl:0;]: T_COMMENT => /*comment*/
	Process token 658 on line 65 [col:69;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 659 on line 65 [col:70;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 660 on line 65 [col:71;len:1;lvl:0;]: T_STRING => i
	Process token 661 on line 65 [col:72;len:2;lvl:0;]: T_INC => ++
	Process token 662 on line 65 [col:74;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 663 on line 65 [col:75;len:11;lvl:0;]: T_COMMENT => /*comment*/
	Process token 664 on line 65 [col:86;len:3;lvl:0;]: T_WHITESPACE =>    
	Process token 665 on line 65 [col:89;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 666 on line 65 [col:90;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 667 on line 65 [col:91;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 635:T_FOR
		* level increased *
		* token 635:T_FOR added to conditions array *
		Process token 668 on line 65 [col:92;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 667:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 669 on line 65 [col:93;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 670 on line 66 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 671 on line 67 [col:1;len:41;lvl:0;]: T_COMMENT => // Test multi-line FOR control structure.\n
	Process token 672 on line 68 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 673 on line 68 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 674 on line 68 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 675 on line 68 [col:6;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 676 on line 69 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 677 on line 69 [col:5;len:1;lvl:0;]: T_STRING => i
	Process token 678 on line 69 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 679 on line 69 [col:7;len:1;lvl:0;]: T_EQUAL => =
	Process token 680 on line 69 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 681 on line 69 [col:9;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 682 on line 69 [col:10;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 683 on line 69 [col:11;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 684 on line 70 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 685 on line 70 [col:5;len:1;lvl:0;]: T_STRING => i
	Process token 686 on line 70 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 687 on line 70 [col:7;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 688 on line 70 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 689 on line 70 [col:9;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 690 on line 70 [col:11;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 691 on line 70 [col:12;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 692 on line 71 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 693 on line 71 [col:5;len:1;lvl:0;]: T_STRING => i
	Process token 694 on line 71 [col:6;len:2;lvl:0;]: T_INC => ++
	Process token 695 on line 71 [col:8;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 696 on line 72 [col:1;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 697 on line 72 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 698 on line 72 [col:3;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 672:T_FOR
		* level increased *
		* token 672:T_FOR added to conditions array *
		Process token 699 on line 72 [col:4;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 698:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 700 on line 72 [col:5;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 701 on line 73 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 702 on line 74 [col:1;len:71;lvl:0;]: T_COMMENT => // Test multi-line FOR control structure with comments and annotations.\n
	Process token 703 on line 75 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 704 on line 75 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 705 on line 75 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 706 on line 75 [col:6;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 707 on line 76 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 708 on line 76 [col:5;len:1;lvl:0;]: T_STRING => i
	Process token 709 on line 76 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 710 on line 76 [col:7;len:1;lvl:0;]: T_EQUAL => =
	Process token 711 on line 76 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 712 on line 76 [col:9;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 713 on line 76 [col:10;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 714 on line 76 [col:11;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 715 on line 76 [col:12;len:11;lvl:0;]: T_COMMENT => /* Start */
	Process token 716 on line 76 [col:23;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 717 on line 77 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 718 on line 77 [col:5;len:1;lvl:0;]: T_STRING => i
	Process token 719 on line 77 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 720 on line 77 [col:7;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 721 on line 77 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 722 on line 77 [col:9;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 723 on line 77 [col:11;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 724 on line 77 [col:12;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 725 on line 77 [col:13;len:62;lvl:0;]: T_PHPCS_IGNORE => /* phpcs:ignore Standard.Category.SniffName -- for reasons. */
	Process token 726 on line 77 [col:75;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 727 on line 78 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 728 on line 78 [col:5;len:1;lvl:0;]: T_STRING => i
	Process token 729 on line 78 [col:6;len:2;lvl:0;]: T_INC => ++
	Process token 730 on line 78 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 731 on line 78 [col:9;len:10;lvl:0;]: T_COMMENT => // comment\n
	Process token 732 on line 79 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 733 on line 80 [col:1;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 734 on line 80 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 735 on line 80 [col:3;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 703:T_FOR
		* level increased *
		* token 703:T_FOR added to conditions array *
		Process token 736 on line 80 [col:4;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 735:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 737 on line 80 [col:5;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 738 on line 81 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 739 on line 82 [col:1;len:96;lvl:0;]: T_COMMENT => // Test fixing each error in one go. Note: lines 84 + 88 contain trailing whitespace on purpose.\n
	Process token 740 on line 83 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 741 on line 83 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 742 on line 83 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 743 on line 83 [col:6;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 744 on line 84 [col:1;len:5;lvl:0;]: T_WHITESPACE =>      \n
	Process token 745 on line 85 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 746 on line 86 [col:1;len:6;lvl:0;]: T_WHITESPACE =>       
	Process token 747 on line 86 [col:7;len:1;lvl:0;]: T_STRING => i
	Process token 748 on line 86 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 749 on line 86 [col:9;len:1;lvl:0;]: T_EQUAL => =
	Process token 750 on line 86 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 751 on line 86 [col:11;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 752 on line 86 [col:12;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 753 on line 87 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 754 on line 88 [col:1;len:6;lvl:0;]: T_WHITESPACE =>       
	Process token 755 on line 88 [col:7;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 756 on line 88 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  \n
	Process token 757 on line 89 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 758 on line 90 [col:1;len:6;lvl:0;]: T_WHITESPACE =>       
	Process token 759 on line 90 [col:7;len:1;lvl:0;]: T_STRING => i
	Process token 760 on line 90 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 761 on line 90 [col:9;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 762 on line 90 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 763 on line 90 [col:11;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 764 on line 90 [col:13;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 765 on line 91 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 766 on line 92 [col:1;len:6;lvl:0;]: T_WHITESPACE =>       
	Process token 767 on line 92 [col:7;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 768 on line 92 [col:8;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 769 on line 93 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 770 on line 94 [col:1;len:6;lvl:0;]: T_WHITESPACE =>       
	Process token 771 on line 94 [col:7;len:1;lvl:0;]: T_STRING => i
	Process token 772 on line 94 [col:8;len:2;lvl:0;]: T_INC => ++
	Process token 773 on line 94 [col:10;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 774 on line 95 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 775 on line 96 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 776 on line 97 [col:1;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 777 on line 97 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 778 on line 97 [col:3;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 740:T_FOR
		* level increased *
		* token 740:T_FOR added to conditions array *
		Process token 779 on line 97 [col:4;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 778:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 780 on line 97 [col:5;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 781 on line 98 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 782 on line 99 [col:1;len:81;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesAfterOpen 1\n
	Process token 783 on line 100 [col:1;len:83;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesBeforeClose 1\n
	Process token 784 on line 101 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 785 on line 101 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 786 on line 101 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 787 on line 101 [col:6;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 788 on line 102 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 789 on line 103 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 790 on line 104 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 791 on line 105 [col:1;len:6;lvl:0;]: T_WHITESPACE =>       
	Process token 792 on line 105 [col:7;len:1;lvl:0;]: T_STRING => i
	Process token 793 on line 105 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 794 on line 105 [col:9;len:1;lvl:0;]: T_EQUAL => =
	Process token 795 on line 105 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 796 on line 105 [col:11;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 797 on line 105 [col:12;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 798 on line 106 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 799 on line 107 [col:1;len:6;lvl:0;]: T_WHITESPACE =>       
	Process token 800 on line 107 [col:7;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 801 on line 107 [col:8;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 802 on line 108 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 803 on line 109 [col:1;len:6;lvl:0;]: T_WHITESPACE =>       
	Process token 804 on line 109 [col:7;len:1;lvl:0;]: T_STRING => i
	Process token 805 on line 109 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 806 on line 109 [col:9;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 807 on line 109 [col:10;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 808 on line 109 [col:11;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 809 on line 109 [col:13;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 810 on line 110 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 811 on line 111 [col:1;len:6;lvl:0;]: T_WHITESPACE =>       
	Process token 812 on line 111 [col:7;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 813 on line 111 [col:8;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 814 on line 112 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 815 on line 113 [col:1;len:6;lvl:0;]: T_WHITESPACE =>       
	Process token 816 on line 113 [col:7;len:1;lvl:0;]: T_STRING => i
	Process token 817 on line 113 [col:8;len:2;lvl:0;]: T_INC => ++
	Process token 818 on line 113 [col:10;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 819 on line 114 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 820 on line 115 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 821 on line 116 [col:1;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 822 on line 116 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 823 on line 116 [col:3;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 784:T_FOR
		* level increased *
		* token 784:T_FOR added to conditions array *
		Process token 824 on line 116 [col:4;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 823:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 825 on line 116 [col:5;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 826 on line 117 [col:1;len:81;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesAfterOpen 0\n
	Process token 827 on line 118 [col:1;len:83;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesBeforeClose 0\n
	Process token 828 on line 119 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 829 on line 120 [col:1;len:45;lvl:0;]: T_COMMENT => // Test with semi-colon not belonging to for.\n
	Process token 830 on line 121 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 831 on line 121 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 832 on line 121 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 833 on line 121 [col:6;len:1;lvl:0;]: T_STRING => i
	Process token 834 on line 121 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 835 on line 121 [col:8;len:1;lvl:0;]: T_EQUAL => =
	Process token 836 on line 121 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 837 on line 121 [col:10;len:8;lvl:0;]: T_FUNCTION => function
	Process token 838 on line 121 [col:18;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 839 on line 121 [col:19;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 840 on line 121 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 841 on line 121 [col:21;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 837:T_FUNCTION
		* level increased *
		* token 837:T_FUNCTION added to conditions array *
		Process token 842 on line 121 [col:22;len:4;lvl:1;conds;T_FUNCTION;]: T_STRING => self
		Process token 843 on line 121 [col:26;len:1;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => .
		Process token 844 on line 121 [col:27;len:12;lvl:1;conds;T_FUNCTION;]: T_STRING => widgetLoaded
		Process token 845 on line 121 [col:39;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 846 on line 121 [col:40;len:6;lvl:1;conds;T_FUNCTION;]: T_STRING => widget
		Process token 847 on line 121 [col:46;len:1;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => .
		Process token 848 on line 121 [col:47;len:2;lvl:1;conds;T_FUNCTION;]: T_STRING => id
		Process token 849 on line 121 [col:49;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 850 on line 121 [col:50;len:2;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>   
		Process token 851 on line 121 [col:52;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 852 on line 121 [col:53;len:2;lvl:1;conds;T_FUNCTION;]: T_WHITESPACE =>   
		Process token 853 on line 121 [col:55;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 841:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 854 on line 121 [col:56;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 855 on line 121 [col:57;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 856 on line 121 [col:58;len:1;lvl:0;]: T_STRING => i
	Process token 857 on line 121 [col:59;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 858 on line 121 [col:60;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 859 on line 121 [col:61;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 860 on line 121 [col:62;len:8;lvl:0;]: T_FUNCTION => function
	Process token 861 on line 121 [col:70;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 862 on line 121 [col:71;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 863 on line 121 [col:72;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 864 on line 121 [col:73;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 860:T_FUNCTION
		* level increased *
		* token 860:T_FUNCTION added to conditions array *
		Process token 865 on line 121 [col:74;len:4;lvl:1;conds;T_FUNCTION;]: T_STRING => self
		Process token 866 on line 121 [col:78;len:1;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => .
		Process token 867 on line 121 [col:79;len:12;lvl:1;conds;T_FUNCTION;]: T_STRING => widgetLoaded
		Process token 868 on line 121 [col:91;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 869 on line 121 [col:92;len:6;lvl:1;conds;T_FUNCTION;]: T_STRING => widget
		Process token 870 on line 121 [col:98;len:1;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => .
		Process token 871 on line 121 [col:99;len:2;lvl:1;conds;T_FUNCTION;]: T_STRING => id
		Process token 872 on line 121 [col:101;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 873 on line 121 [col:102;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 874 on line 121 [col:103;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 864:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 875 on line 121 [col:104;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 876 on line 121 [col:105;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 877 on line 121 [col:106;len:1;lvl:0;]: T_STRING => i
	Process token 878 on line 121 [col:107;len:2;lvl:0;]: T_INC => ++
	Process token 879 on line 121 [col:109;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 880 on line 121 [col:110;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 881 on line 121 [col:111;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 830:T_FOR
		* level increased *
		* token 830:T_FOR added to conditions array *
		Process token 882 on line 121 [col:112;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 881:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 883 on line 121 [col:113;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 884 on line 122 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 885 on line 122 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 886 on line 122 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 887 on line 122 [col:6;len:1;lvl:0;]: T_STRING => i
	Process token 888 on line 122 [col:7;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 889 on line 122 [col:8;len:1;lvl:0;]: T_EQUAL => =
	Process token 890 on line 122 [col:9;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 891 on line 122 [col:10;len:8;lvl:0;]: T_FUNCTION => function
	Process token 892 on line 122 [col:18;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 893 on line 122 [col:19;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 894 on line 122 [col:20;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 895 on line 122 [col:21;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 891:T_FUNCTION
		* level increased *
		* token 891:T_FUNCTION added to conditions array *
		Process token 896 on line 122 [col:22;len:4;lvl:1;conds;T_FUNCTION;]: T_STRING => self
		Process token 897 on line 122 [col:26;len:1;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => .
		Process token 898 on line 122 [col:27;len:12;lvl:1;conds;T_FUNCTION;]: T_STRING => widgetLoaded
		Process token 899 on line 122 [col:39;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 900 on line 122 [col:40;len:6;lvl:1;conds;T_FUNCTION;]: T_STRING => widget
		Process token 901 on line 122 [col:46;len:1;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => .
		Process token 902 on line 122 [col:47;len:2;lvl:1;conds;T_FUNCTION;]: T_STRING => id
		Process token 903 on line 122 [col:49;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 904 on line 122 [col:50;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 905 on line 122 [col:51;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 895:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 906 on line 122 [col:52;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 907 on line 122 [col:53;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 908 on line 122 [col:54;len:1;lvl:0;]: T_STRING => i
	Process token 909 on line 122 [col:55;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 910 on line 122 [col:56;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 911 on line 122 [col:57;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 912 on line 122 [col:58;len:8;lvl:0;]: T_FUNCTION => function
	Process token 913 on line 122 [col:66;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 914 on line 122 [col:67;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 915 on line 122 [col:68;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 916 on line 122 [col:69;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 912:T_FUNCTION
		* level increased *
		* token 912:T_FUNCTION added to conditions array *
		Process token 917 on line 122 [col:70;len:4;lvl:1;conds;T_FUNCTION;]: T_STRING => self
		Process token 918 on line 122 [col:74;len:1;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => .
		Process token 919 on line 122 [col:75;len:12;lvl:1;conds;T_FUNCTION;]: T_STRING => widgetLoaded
		Process token 920 on line 122 [col:87;len:1;lvl:1;conds;T_FUNCTION;]: T_OPEN_PARENTHESIS => (
		Process token 921 on line 122 [col:88;len:6;lvl:1;conds;T_FUNCTION;]: T_STRING => widget
		Process token 922 on line 122 [col:94;len:1;lvl:1;conds;T_FUNCTION;]: T_OBJECT_OPERATOR => .
		Process token 923 on line 122 [col:95;len:2;lvl:1;conds;T_FUNCTION;]: T_STRING => id
		Process token 924 on line 122 [col:97;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_PARENTHESIS => )
		Process token 925 on line 122 [col:98;len:1;lvl:1;conds;T_FUNCTION;]: T_SEMICOLON => ;
		Process token 926 on line 122 [col:99;len:1;lvl:1;conds;T_FUNCTION;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 916:T_OPEN_CURLY_BRACKET
		* token T_FUNCTION removed from conditions array *
		* level decreased *
	Process token 927 on line 122 [col:100;len:2;lvl:0;]: T_WHITESPACE =>   
	Process token 928 on line 122 [col:102;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 929 on line 122 [col:103;len:3;lvl:0;]: T_WHITESPACE =>    
	Process token 930 on line 122 [col:106;len:1;lvl:0;]: T_STRING => i
	Process token 931 on line 122 [col:107;len:2;lvl:0;]: T_INC => ++
	Process token 932 on line 122 [col:109;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 933 on line 122 [col:110;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 934 on line 122 [col:111;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 884:T_FOR
		* level increased *
		* token 884:T_FOR added to conditions array *
		Process token 935 on line 122 [col:112;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 934:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 936 on line 122 [col:113;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 937 on line 123 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 938 on line 124 [col:1;len:76;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration ignoreMultiline true\n
	Process token 939 on line 125 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 940 on line 125 [col:4;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 941 on line 125 [col:5;len:1;lvl:0;]: T_OPEN_PARENTHESIS => (
	Process token 942 on line 125 [col:6;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 943 on line 126 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 944 on line 126 [col:5;len:1;lvl:0;]: T_STRING => i
	Process token 945 on line 126 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 946 on line 126 [col:7;len:1;lvl:0;]: T_EQUAL => =
	Process token 947 on line 126 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 948 on line 126 [col:9;len:1;lvl:0;]: T_LNUMBER => 0
	Process token 949 on line 126 [col:10;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 950 on line 126 [col:11;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 951 on line 127 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 952 on line 127 [col:5;len:1;lvl:0;]: T_STRING => i
	Process token 953 on line 127 [col:6;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 954 on line 127 [col:7;len:1;lvl:0;]: T_LESS_THAN => <
	Process token 955 on line 127 [col:8;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 956 on line 127 [col:9;len:2;lvl:0;]: T_LNUMBER => 10
	Process token 957 on line 127 [col:11;len:1;lvl:0;]: T_SEMICOLON => ;
	Process token 958 on line 127 [col:12;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 959 on line 128 [col:1;len:4;lvl:0;]: T_WHITESPACE =>     
	Process token 960 on line 128 [col:5;len:1;lvl:0;]: T_STRING => i
	Process token 961 on line 128 [col:6;len:2;lvl:0;]: T_INC => ++
	Process token 962 on line 128 [col:8;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 963 on line 129 [col:1;len:1;lvl:0;]: T_CLOSE_PARENTHESIS => )
	Process token 964 on line 129 [col:2;len:1;lvl:0;]: T_WHITESPACE =>  
	Process token 965 on line 129 [col:3;len:1;lvl:0;]: T_OPEN_CURLY_BRACKET => {
	=> Found scope opener for 939:T_FOR
		* level increased *
		* token 939:T_FOR added to conditions array *
		Process token 966 on line 129 [col:4;len:1;lvl:1;conds;T_FOR;]: T_CLOSE_CURLY_BRACKET => }
		=> Found scope closer for 965:T_OPEN_CURLY_BRACKET
		* token T_FOR removed from conditions array *
		* level decreased *
	Process token 967 on line 129 [col:5;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 968 on line 130 [col:1;len:77;lvl:0;]: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration ignoreMultiline false\n
	Process token 969 on line 131 [col:1;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 970 on line 132 [col:1;len:79;lvl:0;]: T_COMMENT => // This test has to be the last one in the file! Intentional parse error check.\n
	Process token 971 on line 133 [col:1;len:3;lvl:0;]: T_FOR => for
	Process token 972 on line 133 [col:4;len:0;lvl:0;]: T_WHITESPACE => \n
	Process token 973 on line 134 [col:1;len:0;lvl:0;]: T_CLOSE_TAG => 
	*** END LEVEL MAP ***
	*** START ADDITIONAL JS PROCESSING ***
	Process token 0: T_OPEN_TAG => 
	Process token 1: T_COMMENT => // Valid.\n
	Process token 2: T_FOR => for
	Process token 3: T_WHITESPACE =>  
	Process token 4: T_OPEN_PARENTHESIS => (
	Process token 5: T_VAR => var
	Process token 6: T_WHITESPACE =>  
	Process token 7: T_STRING => i
	Process token 8: T_WHITESPACE =>  
	Process token 9: T_EQUAL => =
	Process token 10: T_WHITESPACE =>  
	Process token 11: T_LNUMBER => 0
	Process token 12: T_SEMICOLON => ;
	Process token 13: T_WHITESPACE =>  
	Process token 14: T_STRING => i
	Process token 15: T_WHITESPACE =>  
	Process token 16: T_LESS_THAN => <
	Process token 17: T_WHITESPACE =>  
	Process token 18: T_LNUMBER => 10
	Process token 19: T_SEMICOLON => ;
	Process token 20: T_WHITESPACE =>  
	Process token 21: T_STRING => i
	Process token 22: T_INC => ++
	Process token 23: T_CLOSE_PARENTHESIS => )
	Process token 24: T_WHITESPACE =>  
	Process token 25: T_OPEN_CURLY_BRACKET => {
	Process token 26: T_WHITESPACE => \n
	Process token 27: T_CLOSE_CURLY_BRACKET => }
	Process token 28: T_WHITESPACE => \n
	Process token 29: T_WHITESPACE => \n
	Process token 30: T_COMMENT => // Invalid.\n
	Process token 31: T_FOR => for
	Process token 32: T_WHITESPACE =>  
	Process token 33: T_OPEN_PARENTHESIS => (
	Process token 34: T_WHITESPACE =>  
	Process token 35: T_STRING => i
	Process token 36: T_WHITESPACE =>  
	Process token 37: T_EQUAL => =
	Process token 38: T_WHITESPACE =>  
	Process token 39: T_LNUMBER => 0
	Process token 40: T_SEMICOLON => ;
	Process token 41: T_WHITESPACE =>  
	Process token 42: T_STRING => i
	Process token 43: T_WHITESPACE =>  
	Process token 44: T_LESS_THAN => <
	Process token 45: T_WHITESPACE =>  
	Process token 46: T_LNUMBER => 10
	Process token 47: T_SEMICOLON => ;
	Process token 48: T_WHITESPACE =>  
	Process token 49: T_STRING => i
	Process token 50: T_INC => ++
	Process token 51: T_WHITESPACE =>  
	Process token 52: T_CLOSE_PARENTHESIS => )
	Process token 53: T_WHITESPACE =>  
	Process token 54: T_OPEN_CURLY_BRACKET => {
	Process token 55: T_WHITESPACE => \n
	Process token 56: T_CLOSE_CURLY_BRACKET => }
	Process token 57: T_WHITESPACE => \n
	Process token 58: T_WHITESPACE => \n
	Process token 59: T_FOR => for
	Process token 60: T_WHITESPACE =>  
	Process token 61: T_OPEN_PARENTHESIS => (
	Process token 62: T_STRING => i
	Process token 63: T_WHITESPACE =>  
	Process token 64: T_EQUAL => =
	Process token 65: T_WHITESPACE =>  
	Process token 66: T_LNUMBER => 0
	Process token 67: T_SEMICOLON => ;
	Process token 68: T_WHITESPACE =>   
	Process token 69: T_STRING => i
	Process token 70: T_WHITESPACE =>  
	Process token 71: T_LESS_THAN => <
	Process token 72: T_WHITESPACE =>  
	Process token 73: T_LNUMBER => 10
	Process token 74: T_SEMICOLON => ;
	Process token 75: T_WHITESPACE =>   
	Process token 76: T_STRING => i
	Process token 77: T_INC => ++
	Process token 78: T_CLOSE_PARENTHESIS => )
	Process token 79: T_WHITESPACE =>  
	Process token 80: T_OPEN_CURLY_BRACKET => {
	Process token 81: T_WHITESPACE => \n
	Process token 82: T_CLOSE_CURLY_BRACKET => }
	Process token 83: T_WHITESPACE => \n
	Process token 84: T_WHITESPACE => \n
	Process token 85: T_FOR => for
	Process token 86: T_WHITESPACE =>  
	Process token 87: T_OPEN_PARENTHESIS => (
	Process token 88: T_VAR => var
	Process token 89: T_WHITESPACE =>  
	Process token 90: T_STRING => i
	Process token 91: T_WHITESPACE =>  
	Process token 92: T_EQUAL => =
	Process token 93: T_WHITESPACE =>  
	Process token 94: T_LNUMBER => 0
	Process token 95: T_WHITESPACE =>  
	Process token 96: T_SEMICOLON => ;
	Process token 97: T_WHITESPACE =>  
	Process token 98: T_STRING => i
	Process token 99: T_WHITESPACE =>  
	Process token 100: T_LESS_THAN => <
	Process token 101: T_WHITESPACE =>  
	Process token 102: T_LNUMBER => 10
	Process token 103: T_WHITESPACE =>  
	Process token 104: T_SEMICOLON => ;
	Process token 105: T_WHITESPACE =>  
	Process token 106: T_STRING => i
	Process token 107: T_INC => ++
	Process token 108: T_CLOSE_PARENTHESIS => )
	Process token 109: T_WHITESPACE =>  
	Process token 110: T_OPEN_CURLY_BRACKET => {
	Process token 111: T_WHITESPACE => \n
	Process token 112: T_CLOSE_CURLY_BRACKET => }
	Process token 113: T_WHITESPACE => \n
	Process token 114: T_WHITESPACE => \n
	Process token 115: T_FOR => for
	Process token 116: T_WHITESPACE =>  
	Process token 117: T_OPEN_PARENTHESIS => (
	Process token 118: T_STRING => i
	Process token 119: T_WHITESPACE =>  
	Process token 120: T_EQUAL => =
	Process token 121: T_WHITESPACE =>  
	Process token 122: T_LNUMBER => 0
	Process token 123: T_SEMICOLON => ;
	Process token 124: T_STRING => i
	Process token 125: T_WHITESPACE =>  
	Process token 126: T_LESS_THAN => <
	Process token 127: T_WHITESPACE =>  
	Process token 128: T_LNUMBER => 10
	Process token 129: T_SEMICOLON => ;
	Process token 130: T_STRING => i
	Process token 131: T_INC => ++
	Process token 132: T_CLOSE_PARENTHESIS => )
	Process token 133: T_WHITESPACE =>  
	Process token 134: T_OPEN_CURLY_BRACKET => {
	Process token 135: T_WHITESPACE => \n
	Process token 136: T_CLOSE_CURLY_BRACKET => }
	Process token 137: T_WHITESPACE => \n
	Process token 138: T_WHITESPACE => \n
	Process token 139: T_COMMENT => // The works.\n
	Process token 140: T_FOR => for
	Process token 141: T_WHITESPACE =>  
	Process token 142: T_OPEN_PARENTHESIS => (
	Process token 143: T_WHITESPACE =>  
	Process token 144: T_VAR => var
	Process token 145: T_WHITESPACE =>  
	Process token 146: T_STRING => i
	Process token 147: T_WHITESPACE =>  
	Process token 148: T_EQUAL => =
	Process token 149: T_WHITESPACE =>  
	Process token 150: T_LNUMBER => 0
	Process token 151: T_WHITESPACE =>  
	Process token 152: T_SEMICOLON => ;
	Process token 153: T_WHITESPACE =>   
	Process token 154: T_STRING => i
	Process token 155: T_WHITESPACE =>  
	Process token 156: T_LESS_THAN => <
	Process token 157: T_WHITESPACE =>  
	Process token 158: T_LNUMBER => 10
	Process token 159: T_WHITESPACE =>  
	Process token 160: T_SEMICOLON => ;
	Process token 161: T_WHITESPACE =>   
	Process token 162: T_STRING => i
	Process token 163: T_INC => ++
	Process token 164: T_WHITESPACE =>  
	Process token 165: T_CLOSE_PARENTHESIS => )
	Process token 166: T_WHITESPACE =>  
	Process token 167: T_OPEN_CURLY_BRACKET => {
	Process token 168: T_WHITESPACE => \n
	Process token 169: T_CLOSE_CURLY_BRACKET => }
	Process token 170: T_WHITESPACE => \n
	Process token 171: T_WHITESPACE => \n
	Process token 172: T_THIS => this
	Process token 173: T_OBJECT_OPERATOR => .
	Process token 174: T_STRING => formats
	Process token 175: T_WHITESPACE =>  
	Process token 176: T_EQUAL => =
	Process token 177: T_WHITESPACE =>  
	Process token 178: T_OPEN_CURLY_BRACKET => {
		* token 178 converted from T_OPEN_CURLY_BRACKET to T_OBJECT *
		* token 179 converted from T_CLOSE_CURLY_BRACKET to T_CLOSE_OBJECT *
		Process token 179: T_CLOSE_OBJECT => }
	Process token 180: T_SEMICOLON => ;
	Process token 181: T_WHITESPACE => \n
	Process token 182: T_STRING => dfx
	Process token 183: T_OBJECT_OPERATOR => .
	Process token 184: T_STRING => inherits
	Process token 185: T_OPEN_PARENTHESIS => (
	Process token 186: T_CONSTANT_ENCAPSED_STRING => 'ContentFormat'
	Process token 187: T_COMMA => ,
	Process token 188: T_WHITESPACE =>  
	Process token 189: T_CONSTANT_ENCAPSED_STRING => 'Widget'
	Process token 190: T_CLOSE_PARENTHESIS => )
	Process token 191: T_SEMICOLON => ;
	Process token 192: T_WHITESPACE => \n
	Process token 193: T_WHITESPACE => \n
	Process token 194: T_FOR => for
	Process token 195: T_WHITESPACE =>  
	Process token 196: T_OPEN_PARENTHESIS => (
	Process token 197: T_VAR => var
	Process token 198: T_WHITESPACE =>  
	Process token 199: T_STRING => widgetid
	Process token 200: T_WHITESPACE =>  
	Process token 201: T_STRING => in
	Process token 202: T_WHITESPACE =>  
	Process token 203: T_THIS => this
	Process token 204: T_OBJECT_OPERATOR => .
	Process token 205: T_STRING => loadedContents
	Process token 206: T_CLOSE_PARENTHESIS => )
	Process token 207: T_WHITESPACE =>  
	Process token 208: T_OPEN_CURLY_BRACKET => {
	Process token 209: T_WHITESPACE => \n
	Process token 210: T_WHITESPACE =>     
	Process token 211: T_IF => if
	Process token 212: T_WHITESPACE =>  
	Process token 213: T_OPEN_PARENTHESIS => (
	Process token 214: T_STRING => dfx
	Process token 215: T_OBJECT_OPERATOR => .
	Process token 216: T_STRING => isset
	Process token 217: T_OPEN_PARENTHESIS => (
	Process token 218: T_STRING => widget
	Process token 219: T_CLOSE_PARENTHESIS => )
	Process token 220: T_WHITESPACE =>  
	Process token 221: T_IS_IDENTICAL => ===
	Process token 222: T_WHITESPACE =>  
	Process token 223: T_TRUE => true
	Process token 224: T_CLOSE_PARENTHESIS => )
	Process token 225: T_WHITESPACE =>  
	Process token 226: T_OPEN_CURLY_BRACKET => {
	Process token 227: T_WHITESPACE => \n
	Process token 228: T_WHITESPACE =>         
	Process token 229: T_STRING => widget
	Process token 230: T_OBJECT_OPERATOR => .
	Process token 231: T_STRING => loadAutoSaveCWidgetStore
	Process token 232: T_OBJECT_OPERATOR => .
	Process token 233: T_STRING => setData
	Process token 234: T_OPEN_PARENTHESIS => (
	Process token 235: T_CONSTANT_ENCAPSED_STRING => 'activeScreen'
	Process token 236: T_COMMA => ,
	Process token 237: T_WHITESPACE =>  
	Process token 238: T_NULL => null
	Process token 239: T_CLOSE_PARENTHESIS => )
	Process token 240: T_SEMICOLON => ;
	Process token 241: T_STRING => widget
	Process token 242: T_OBJECT_OPERATOR => .
	Process token 243: T_STRING => getContents
	Process token 244: T_OPEN_PARENTHESIS => (
	Process token 245: T_THIS => this
	Process token 246: T_OBJECT_OPERATOR => .
	Process token 247: T_STRING => loadedContents
	Process token 248: T_OPEN_SQUARE_BRACKET => [
	Process token 249: T_STRING => widgetid
	Process token 250: T_CLOSE_SQUARE_BRACKET => ]
	Process token 251: T_COMMA => ,
	Process token 252: T_WHITESPACE =>  
	Process token 253: T_FUNCTION => function
	* token 253 on line 27 changed from T_FUNCTION to T_CLOSURE *
		* cleaned 258 (T_STRING) *
		* cleaned 259 (T_OBJECT_OPERATOR) *
		* cleaned 260 (T_STRING) *
		* cleaned 261 (T_OPEN_PARENTHESIS) *
		* cleaned 262 (T_STRING) *
		* cleaned 263 (T_OBJECT_OPERATOR) *
		* cleaned 264 (T_STRING) *
		* cleaned 265 (T_CLOSE_PARENTHESIS) *
		* cleaned 266 (T_SEMICOLON) *
	Process token 254: T_OPEN_PARENTHESIS => (
	Process token 255: T_CLOSE_PARENTHESIS => )
	Process token 256: T_WHITESPACE =>  
	Process token 257: T_OPEN_CURLY_BRACKET => {
	Process token 258: T_STRING => self
	Process token 259: T_OBJECT_OPERATOR => .
	Process token 260: T_STRING => widgetLoaded
	Process token 261: T_OPEN_PARENTHESIS => (
	Process token 262: T_STRING => widget
	Process token 263: T_OBJECT_OPERATOR => .
	Process token 264: T_STRING => id
	Process token 265: T_CLOSE_PARENTHESIS => )
	Process token 266: T_SEMICOLON => ;
	Process token 267: T_CLOSE_CURLY_BRACKET => }
	Process token 268: T_CLOSE_PARENTHESIS => )
	Process token 269: T_SEMICOLON => ;
	Process token 270: T_WHITESPACE => \n
	Process token 271: T_WHITESPACE =>     
	Process token 272: T_CLOSE_CURLY_BRACKET => }
	Process token 273: T_WHITESPACE => \n
	Process token 274: T_CLOSE_CURLY_BRACKET => }
	Process token 275: T_WHITESPACE => \n
	Process token 276: T_WHITESPACE => \n
	Process token 277: T_FOR => for
	Process token 278: T_WHITESPACE =>  
	Process token 279: T_OPEN_PARENTHESIS => (
	Process token 280: T_VAR => var
	Process token 281: T_WHITESPACE =>  
	Process token 282: T_STRING => i
	Process token 283: T_WHITESPACE =>  
	Process token 284: T_EQUAL => =
	Process token 285: T_WHITESPACE =>  
	Process token 286: T_LNUMBER => 0
	Process token 287: T_SEMICOLON => ;
	Process token 288: T_WHITESPACE =>  
	Process token 289: T_STRING => i
	Process token 290: T_WHITESPACE =>  
	Process token 291: T_LESS_THAN => <
	Process token 292: T_WHITESPACE =>  
	Process token 293: T_LNUMBER => 10
	Process token 294: T_SEMICOLON => ;
	Process token 295: T_CLOSE_PARENTHESIS => )
	Process token 296: T_WHITESPACE =>  
	Process token 297: T_OPEN_CURLY_BRACKET => {
	Process token 298: T_WHITESPACE => \n
	Process token 299: T_CLOSE_CURLY_BRACKET => }
	Process token 300: T_WHITESPACE => \n
	Process token 301: T_FOR => for
	Process token 302: T_WHITESPACE =>  
	Process token 303: T_OPEN_PARENTHESIS => (
	Process token 304: T_VAR => var
	Process token 305: T_WHITESPACE =>  
	Process token 306: T_STRING => i
	Process token 307: T_WHITESPACE =>  
	Process token 308: T_EQUAL => =
	Process token 309: T_WHITESPACE =>  
	Process token 310: T_LNUMBER => 0
	Process token 311: T_SEMICOLON => ;
	Process token 312: T_WHITESPACE =>  
	Process token 313: T_STRING => i
	Process token 314: T_WHITESPACE =>  
	Process token 315: T_LESS_THAN => <
	Process token 316: T_WHITESPACE =>  
	Process token 317: T_LNUMBER => 10
	Process token 318: T_SEMICOLON => ;
	Process token 319: T_WHITESPACE =>  
	Process token 320: T_CLOSE_PARENTHESIS => )
	Process token 321: T_WHITESPACE =>  
	Process token 322: T_OPEN_CURLY_BRACKET => {
	Process token 323: T_WHITESPACE => \n
	Process token 324: T_CLOSE_CURLY_BRACKET => }
	Process token 325: T_WHITESPACE => \n
	Process token 326: T_WHITESPACE => \n
	Process token 327: T_FOR => for
	Process token 328: T_WHITESPACE =>  
	Process token 329: T_OPEN_PARENTHESIS => (
	Process token 330: T_VAR => var
	Process token 331: T_WHITESPACE =>  
	Process token 332: T_STRING => i
	Process token 333: T_WHITESPACE =>  
	Process token 334: T_EQUAL => =
	Process token 335: T_WHITESPACE =>  
	Process token 336: T_LNUMBER => 0
	Process token 337: T_SEMICOLON => ;
	Process token 338: T_WHITESPACE =>  
	Process token 339: T_SEMICOLON => ;
	Process token 340: T_WHITESPACE =>  
	Process token 341: T_STRING => i
	Process token 342: T_INC => ++
	Process token 343: T_CLOSE_PARENTHESIS => )
	Process token 344: T_WHITESPACE =>  
	Process token 345: T_OPEN_CURLY_BRACKET => {
	Process token 346: T_WHITESPACE => \n
	Process token 347: T_CLOSE_CURLY_BRACKET => }
	Process token 348: T_WHITESPACE => \n
	Process token 349: T_FOR => for
	Process token 350: T_WHITESPACE =>  
	Process token 351: T_OPEN_PARENTHESIS => (
	Process token 352: T_VAR => var
	Process token 353: T_WHITESPACE =>  
	Process token 354: T_STRING => i
	Process token 355: T_WHITESPACE =>  
	Process token 356: T_EQUAL => =
	Process token 357: T_WHITESPACE =>  
	Process token 358: T_LNUMBER => 0
	Process token 359: T_SEMICOLON => ;
	Process token 360: T_SEMICOLON => ;
	Process token 361: T_WHITESPACE =>  
	Process token 362: T_STRING => i
	Process token 363: T_INC => ++
	Process token 364: T_CLOSE_PARENTHESIS => )
	Process token 365: T_WHITESPACE =>  
	Process token 366: T_OPEN_CURLY_BRACKET => {
	Process token 367: T_WHITESPACE => \n
	Process token 368: T_CLOSE_CURLY_BRACKET => }
	Process token 369: T_WHITESPACE => \n
	Process token 370: T_WHITESPACE => \n
	Process token 371: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesAfterOpen 1\n
	Process token 372: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesBeforeClose 1\n
	Process token 373: T_FOR => for
	Process token 374: T_WHITESPACE =>  
	Process token 375: T_OPEN_PARENTHESIS => (
	Process token 376: T_VAR => var
	Process token 377: T_WHITESPACE =>  
	Process token 378: T_STRING => i
	Process token 379: T_WHITESPACE =>  
	Process token 380: T_EQUAL => =
	Process token 381: T_WHITESPACE =>  
	Process token 382: T_LNUMBER => 0
	Process token 383: T_SEMICOLON => ;
	Process token 384: T_WHITESPACE =>  
	Process token 385: T_STRING => i
	Process token 386: T_WHITESPACE =>  
	Process token 387: T_LESS_THAN => <
	Process token 388: T_WHITESPACE =>  
	Process token 389: T_LNUMBER => 10
	Process token 390: T_SEMICOLON => ;
	Process token 391: T_WHITESPACE =>  
	Process token 392: T_STRING => i
	Process token 393: T_INC => ++
	Process token 394: T_CLOSE_PARENTHESIS => )
	Process token 395: T_WHITESPACE =>  
	Process token 396: T_OPEN_CURLY_BRACKET => {
	Process token 397: T_CLOSE_CURLY_BRACKET => }
	Process token 398: T_WHITESPACE => \n
	Process token 399: T_FOR => for
	Process token 400: T_WHITESPACE =>  
	Process token 401: T_OPEN_PARENTHESIS => (
	Process token 402: T_WHITESPACE =>  
	Process token 403: T_VAR => var
	Process token 404: T_WHITESPACE =>  
	Process token 405: T_STRING => i
	Process token 406: T_WHITESPACE =>  
	Process token 407: T_EQUAL => =
	Process token 408: T_WHITESPACE =>  
	Process token 409: T_LNUMBER => 0
	Process token 410: T_SEMICOLON => ;
	Process token 411: T_WHITESPACE =>  
	Process token 412: T_STRING => i
	Process token 413: T_WHITESPACE =>  
	Process token 414: T_LESS_THAN => <
	Process token 415: T_WHITESPACE =>  
	Process token 416: T_LNUMBER => 10
	Process token 417: T_SEMICOLON => ;
	Process token 418: T_WHITESPACE =>  
	Process token 419: T_STRING => i
	Process token 420: T_INC => ++
	Process token 421: T_WHITESPACE =>  
	Process token 422: T_CLOSE_PARENTHESIS => )
	Process token 423: T_WHITESPACE =>  
	Process token 424: T_OPEN_CURLY_BRACKET => {
	Process token 425: T_CLOSE_CURLY_BRACKET => }
	Process token 426: T_WHITESPACE => \n
	Process token 427: T_FOR => for
	Process token 428: T_WHITESPACE =>  
	Process token 429: T_OPEN_PARENTHESIS => (
	Process token 430: T_WHITESPACE =>   
	Process token 431: T_VAR => var
	Process token 432: T_WHITESPACE =>  
	Process token 433: T_STRING => i
	Process token 434: T_WHITESPACE =>  
	Process token 435: T_EQUAL => =
	Process token 436: T_WHITESPACE =>  
	Process token 437: T_LNUMBER => 0
	Process token 438: T_SEMICOLON => ;
	Process token 439: T_WHITESPACE =>  
	Process token 440: T_STRING => i
	Process token 441: T_WHITESPACE =>  
	Process token 442: T_LESS_THAN => <
	Process token 443: T_WHITESPACE =>  
	Process token 444: T_LNUMBER => 10
	Process token 445: T_SEMICOLON => ;
	Process token 446: T_WHITESPACE =>  
	Process token 447: T_STRING => i
	Process token 448: T_INC => ++
	Process token 449: T_WHITESPACE =>   
	Process token 450: T_CLOSE_PARENTHESIS => )
	Process token 451: T_WHITESPACE =>  
	Process token 452: T_OPEN_CURLY_BRACKET => {
	Process token 453: T_CLOSE_CURLY_BRACKET => }
	Process token 454: T_WHITESPACE => \n
	Process token 455: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesAfterOpen 0\n
	Process token 456: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesBeforeClose 0\n
	Process token 457: T_WHITESPACE => \n
	Process token 458: T_FOR => for
	Process token 459: T_WHITESPACE =>  
	Process token 460: T_OPEN_PARENTHESIS => (
	Process token 461: T_WHITESPACE =>       
	Process token 462: T_SEMICOLON => ;
	Process token 463: T_WHITESPACE =>  
	Process token 464: T_STRING => i
	Process token 465: T_WHITESPACE =>  
	Process token 466: T_LESS_THAN => <
	Process token 467: T_WHITESPACE =>  
	Process token 468: T_LNUMBER => 10
	Process token 469: T_SEMICOLON => ;
	Process token 470: T_WHITESPACE =>  
	Process token 471: T_STRING => i
	Process token 472: T_INC => ++
	Process token 473: T_CLOSE_PARENTHESIS => )
	Process token 474: T_WHITESPACE =>  
	Process token 475: T_OPEN_CURLY_BRACKET => {
	Process token 476: T_CLOSE_CURLY_BRACKET => }
	Process token 477: T_WHITESPACE => \n
	Process token 478: T_FOR => for
	Process token 479: T_WHITESPACE =>  
	Process token 480: T_OPEN_PARENTHESIS => (
	Process token 481: T_SEMICOLON => ;
	Process token 482: T_WHITESPACE =>  
	Process token 483: T_STRING => i
	Process token 484: T_WHITESPACE =>  
	Process token 485: T_LESS_THAN => <
	Process token 486: T_WHITESPACE =>  
	Process token 487: T_LNUMBER => 10
	Process token 488: T_SEMICOLON => ;
	Process token 489: T_WHITESPACE =>  
	Process token 490: T_STRING => i
	Process token 491: T_INC => ++
	Process token 492: T_CLOSE_PARENTHESIS => )
	Process token 493: T_WHITESPACE =>  
	Process token 494: T_OPEN_CURLY_BRACKET => {
	Process token 495: T_CLOSE_CURLY_BRACKET => }
	Process token 496: T_WHITESPACE => \n
	Process token 497: T_WHITESPACE => \n
	Process token 498: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesAfterOpen 1\n
	Process token 499: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesBeforeClose 1\n
	Process token 500: T_FOR => for
	Process token 501: T_WHITESPACE =>  
	Process token 502: T_OPEN_PARENTHESIS => (
	Process token 503: T_WHITESPACE =>  
	Process token 504: T_SEMICOLON => ;
	Process token 505: T_WHITESPACE =>  
	Process token 506: T_STRING => i
	Process token 507: T_WHITESPACE =>  
	Process token 508: T_LESS_THAN => <
	Process token 509: T_WHITESPACE =>  
	Process token 510: T_LNUMBER => 10
	Process token 511: T_SEMICOLON => ;
	Process token 512: T_WHITESPACE =>  
	Process token 513: T_STRING => i
	Process token 514: T_INC => ++
	Process token 515: T_WHITESPACE =>  
	Process token 516: T_CLOSE_PARENTHESIS => )
	Process token 517: T_WHITESPACE =>  
	Process token 518: T_OPEN_CURLY_BRACKET => {
	Process token 519: T_CLOSE_CURLY_BRACKET => }
	Process token 520: T_WHITESPACE => \n
	Process token 521: T_FOR => for
	Process token 522: T_WHITESPACE =>  
	Process token 523: T_OPEN_PARENTHESIS => (
	Process token 524: T_WHITESPACE =>          
	Process token 525: T_SEMICOLON => ;
	Process token 526: T_WHITESPACE =>  
	Process token 527: T_STRING => i
	Process token 528: T_WHITESPACE =>  
	Process token 529: T_LESS_THAN => <
	Process token 530: T_WHITESPACE =>  
	Process token 531: T_LNUMBER => 10
	Process token 532: T_SEMICOLON => ;
	Process token 533: T_WHITESPACE =>  
	Process token 534: T_STRING => i
	Process token 535: T_INC => ++
	Process token 536: T_WHITESPACE =>  
	Process token 537: T_CLOSE_PARENTHESIS => )
	Process token 538: T_WHITESPACE =>  
	Process token 539: T_OPEN_CURLY_BRACKET => {
	Process token 540: T_CLOSE_CURLY_BRACKET => }
	Process token 541: T_WHITESPACE => \n
	Process token 542: T_FOR => for
	Process token 543: T_WHITESPACE =>  
	Process token 544: T_OPEN_PARENTHESIS => (
	Process token 545: T_SEMICOLON => ;
	Process token 546: T_WHITESPACE =>  
	Process token 547: T_STRING => i
	Process token 548: T_WHITESPACE =>  
	Process token 549: T_LESS_THAN => <
	Process token 550: T_WHITESPACE =>  
	Process token 551: T_LNUMBER => 10
	Process token 552: T_SEMICOLON => ;
	Process token 553: T_WHITESPACE =>  
	Process token 554: T_STRING => i
	Process token 555: T_INC => ++
	Process token 556: T_WHITESPACE =>  
	Process token 557: T_CLOSE_PARENTHESIS => )
	Process token 558: T_WHITESPACE =>  
	Process token 559: T_OPEN_CURLY_BRACKET => {
	Process token 560: T_CLOSE_CURLY_BRACKET => }
	Process token 561: T_WHITESPACE => \n
	Process token 562: T_WHITESPACE => \n
	Process token 563: T_FOR => for
	Process token 564: T_WHITESPACE =>  
	Process token 565: T_OPEN_PARENTHESIS => (
	Process token 566: T_WHITESPACE =>  
	Process token 567: T_STRING => i
	Process token 568: T_WHITESPACE =>  
	Process token 569: T_EQUAL => =
	Process token 570: T_WHITESPACE =>  
	Process token 571: T_LNUMBER => 0
	Process token 572: T_SEMICOLON => ;
	Process token 573: T_WHITESPACE =>  
	Process token 574: T_STRING => i
	Process token 575: T_WHITESPACE =>  
	Process token 576: T_LESS_THAN => <
	Process token 577: T_WHITESPACE =>  
	Process token 578: T_LNUMBER => 10
	Process token 579: T_SEMICOLON => ;
	Process token 580: T_WHITESPACE =>  
	Process token 581: T_CLOSE_PARENTHESIS => )
	Process token 582: T_WHITESPACE =>  
	Process token 583: T_OPEN_CURLY_BRACKET => {
	Process token 584: T_CLOSE_CURLY_BRACKET => }
	Process token 585: T_WHITESPACE => \n
	Process token 586: T_FOR => for
	Process token 587: T_WHITESPACE =>  
	Process token 588: T_OPEN_PARENTHESIS => (
	Process token 589: T_WHITESPACE =>  
	Process token 590: T_STRING => i
	Process token 591: T_WHITESPACE =>  
	Process token 592: T_EQUAL => =
	Process token 593: T_WHITESPACE =>  
	Process token 594: T_LNUMBER => 0
	Process token 595: T_SEMICOLON => ;
	Process token 596: T_WHITESPACE =>  
	Process token 597: T_STRING => i
	Process token 598: T_WHITESPACE =>  
	Process token 599: T_LESS_THAN => <
	Process token 600: T_WHITESPACE =>  
	Process token 601: T_LNUMBER => 10
	Process token 602: T_SEMICOLON => ;
	Process token 603: T_CLOSE_PARENTHESIS => )
	Process token 604: T_WHITESPACE =>  
	Process token 605: T_OPEN_CURLY_BRACKET => {
	Process token 606: T_CLOSE_CURLY_BRACKET => }
	Process token 607: T_WHITESPACE => \n
	Process token 608: T_FOR => for
	Process token 609: T_WHITESPACE =>  
	Process token 610: T_OPEN_PARENTHESIS => (
	Process token 611: T_WHITESPACE =>  
	Process token 612: T_STRING => i
	Process token 613: T_WHITESPACE =>  
	Process token 614: T_EQUAL => =
	Process token 615: T_WHITESPACE =>  
	Process token 616: T_LNUMBER => 0
	Process token 617: T_SEMICOLON => ;
	Process token 618: T_WHITESPACE =>  
	Process token 619: T_STRING => i
	Process token 620: T_WHITESPACE =>  
	Process token 621: T_LESS_THAN => <
	Process token 622: T_WHITESPACE =>  
	Process token 623: T_LNUMBER => 10
	Process token 624: T_SEMICOLON => ;
	Process token 625: T_WHITESPACE =>      
	Process token 626: T_CLOSE_PARENTHESIS => )
	Process token 627: T_WHITESPACE =>  
	Process token 628: T_OPEN_CURLY_BRACKET => {
	Process token 629: T_CLOSE_CURLY_BRACKET => }
	Process token 630: T_WHITESPACE => \n
	Process token 631: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesAfterOpen 0\n
	Process token 632: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesBeforeClose 0\n
	Process token 633: T_WHITESPACE => \n
	Process token 634: T_COMMENT => // Test handling of comments and inline annotations.\n
	Process token 635: T_FOR => for
	Process token 636: T_WHITESPACE =>  
	Process token 637: T_OPEN_PARENTHESIS => (
	Process token 638: T_WHITESPACE =>  
	Process token 639: T_PHPCS_ENABLE => /*phpcs:enable*/
	Process token 640: T_WHITESPACE =>  
	Process token 641: T_STRING => i
	Process token 642: T_WHITESPACE =>  
	Process token 643: T_EQUAL => =
	Process token 644: T_WHITESPACE =>  
	Process token 645: T_LNUMBER => 0
	Process token 646: T_WHITESPACE =>  
	Process token 647: T_COMMENT => /*start*/
	Process token 648: T_WHITESPACE =>  
	Process token 649: T_SEMICOLON => ;
	Process token 650: T_WHITESPACE =>     
	Process token 651: T_COMMENT => /*end*/
	Process token 652: T_STRING => i
	Process token 653: T_WHITESPACE =>  
	Process token 654: T_LESS_THAN => <
	Process token 655: T_WHITESPACE =>  
	Process token 656: T_LNUMBER => 10
	Process token 657: T_COMMENT => /*comment*/
	Process token 658: T_SEMICOLON => ;
	Process token 659: T_WHITESPACE =>  
	Process token 660: T_STRING => i
	Process token 661: T_INC => ++
	Process token 662: T_WHITESPACE =>  
	Process token 663: T_COMMENT => /*comment*/
	Process token 664: T_WHITESPACE =>    
	Process token 665: T_CLOSE_PARENTHESIS => )
	Process token 666: T_WHITESPACE =>  
	Process token 667: T_OPEN_CURLY_BRACKET => {
	Process token 668: T_CLOSE_CURLY_BRACKET => }
	Process token 669: T_WHITESPACE => \n
	Process token 670: T_WHITESPACE => \n
	Process token 671: T_COMMENT => // Test multi-line FOR control structure.\n
	Process token 672: T_FOR => for
	Process token 673: T_WHITESPACE =>  
	Process token 674: T_OPEN_PARENTHESIS => (
	Process token 675: T_WHITESPACE => \n
	Process token 676: T_WHITESPACE =>     
	Process token 677: T_STRING => i
	Process token 678: T_WHITESPACE =>  
	Process token 679: T_EQUAL => =
	Process token 680: T_WHITESPACE =>  
	Process token 681: T_LNUMBER => 0
	Process token 682: T_SEMICOLON => ;
	Process token 683: T_WHITESPACE => \n
	Process token 684: T_WHITESPACE =>     
	Process token 685: T_STRING => i
	Process token 686: T_WHITESPACE =>  
	Process token 687: T_LESS_THAN => <
	Process token 688: T_WHITESPACE =>  
	Process token 689: T_LNUMBER => 10
	Process token 690: T_SEMICOLON => ;
	Process token 691: T_WHITESPACE => \n
	Process token 692: T_WHITESPACE =>     
	Process token 693: T_STRING => i
	Process token 694: T_INC => ++
	Process token 695: T_WHITESPACE => \n
	Process token 696: T_CLOSE_PARENTHESIS => )
	Process token 697: T_WHITESPACE =>  
	Process token 698: T_OPEN_CURLY_BRACKET => {
	Process token 699: T_CLOSE_CURLY_BRACKET => }
	Process token 700: T_WHITESPACE => \n
	Process token 701: T_WHITESPACE => \n
	Process token 702: T_COMMENT => // Test multi-line FOR control structure with comments and annotations.\n
	Process token 703: T_FOR => for
	Process token 704: T_WHITESPACE =>  
	Process token 705: T_OPEN_PARENTHESIS => (
	Process token 706: T_WHITESPACE => \n
	Process token 707: T_WHITESPACE =>     
	Process token 708: T_STRING => i
	Process token 709: T_WHITESPACE =>  
	Process token 710: T_EQUAL => =
	Process token 711: T_WHITESPACE =>  
	Process token 712: T_LNUMBER => 0
	Process token 713: T_SEMICOLON => ;
	Process token 714: T_WHITESPACE =>  
	Process token 715: T_COMMENT => /* Start */
	Process token 716: T_WHITESPACE => \n
	Process token 717: T_WHITESPACE =>     
	Process token 718: T_STRING => i
	Process token 719: T_WHITESPACE =>  
	Process token 720: T_LESS_THAN => <
	Process token 721: T_WHITESPACE =>  
	Process token 722: T_LNUMBER => 10
	Process token 723: T_SEMICOLON => ;
	Process token 724: T_WHITESPACE =>  
	Process token 725: T_PHPCS_IGNORE => /* phpcs:ignore Standard.Category.SniffName -- for reasons. */
	Process token 726: T_WHITESPACE => \n
	Process token 727: T_WHITESPACE =>     
	Process token 728: T_STRING => i
	Process token 729: T_INC => ++
	Process token 730: T_WHITESPACE =>  
	Process token 731: T_COMMENT => // comment\n
	Process token 732: T_WHITESPACE => \n
	Process token 733: T_CLOSE_PARENTHESIS => )
	Process token 734: T_WHITESPACE =>  
	Process token 735: T_OPEN_CURLY_BRACKET => {
	Process token 736: T_CLOSE_CURLY_BRACKET => }
	Process token 737: T_WHITESPACE => \n
	Process token 738: T_WHITESPACE => \n
	Process token 739: T_COMMENT => // Test fixing each error in one go. Note: lines 84 + 88 contain trailing whitespace on purpose.\n
	Process token 740: T_FOR => for
	Process token 741: T_WHITESPACE =>  
	Process token 742: T_OPEN_PARENTHESIS => (
	Process token 743: T_WHITESPACE => \n
	Process token 744: T_WHITESPACE =>      \n
	Process token 745: T_WHITESPACE => \n
	Process token 746: T_WHITESPACE =>       
	Process token 747: T_STRING => i
	Process token 748: T_WHITESPACE =>  
	Process token 749: T_EQUAL => =
	Process token 750: T_WHITESPACE =>  
	Process token 751: T_LNUMBER => 0
	Process token 752: T_WHITESPACE => \n
	Process token 753: T_WHITESPACE => \n
	Process token 754: T_WHITESPACE =>       
	Process token 755: T_SEMICOLON => ;
	Process token 756: T_WHITESPACE =>  \n
	Process token 757: T_WHITESPACE => \n
	Process token 758: T_WHITESPACE =>       
	Process token 759: T_STRING => i
	Process token 760: T_WHITESPACE =>  
	Process token 761: T_LESS_THAN => <
	Process token 762: T_WHITESPACE =>  
	Process token 763: T_LNUMBER => 10
	Process token 764: T_WHITESPACE => \n
	Process token 765: T_WHITESPACE => \n
	Process token 766: T_WHITESPACE =>       
	Process token 767: T_SEMICOLON => ;
	Process token 768: T_WHITESPACE => \n
	Process token 769: T_WHITESPACE => \n
	Process token 770: T_WHITESPACE =>       
	Process token 771: T_STRING => i
	Process token 772: T_INC => ++
	Process token 773: T_WHITESPACE => \n
	Process token 774: T_WHITESPACE => \n
	Process token 775: T_WHITESPACE => \n
	Process token 776: T_CLOSE_PARENTHESIS => )
	Process token 777: T_WHITESPACE =>  
	Process token 778: T_OPEN_CURLY_BRACKET => {
	Process token 779: T_CLOSE_CURLY_BRACKET => }
	Process token 780: T_WHITESPACE => \n
	Process token 781: T_WHITESPACE => \n
	Process token 782: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesAfterOpen 1\n
	Process token 783: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesBeforeClose 1\n
	Process token 784: T_FOR => for
	Process token 785: T_WHITESPACE =>  
	Process token 786: T_OPEN_PARENTHESIS => (
	Process token 787: T_WHITESPACE => \n
	Process token 788: T_WHITESPACE => \n
	Process token 789: T_WHITESPACE => \n
	Process token 790: T_WHITESPACE => \n
	Process token 791: T_WHITESPACE =>       
	Process token 792: T_STRING => i
	Process token 793: T_WHITESPACE =>  
	Process token 794: T_EQUAL => =
	Process token 795: T_WHITESPACE =>  
	Process token 796: T_LNUMBER => 0
	Process token 797: T_WHITESPACE => \n
	Process token 798: T_WHITESPACE => \n
	Process token 799: T_WHITESPACE =>       
	Process token 800: T_SEMICOLON => ;
	Process token 801: T_WHITESPACE => \n
	Process token 802: T_WHITESPACE => \n
	Process token 803: T_WHITESPACE =>       
	Process token 804: T_STRING => i
	Process token 805: T_WHITESPACE =>  
	Process token 806: T_LESS_THAN => <
	Process token 807: T_WHITESPACE =>  
	Process token 808: T_LNUMBER => 10
	Process token 809: T_WHITESPACE => \n
	Process token 810: T_WHITESPACE => \n
	Process token 811: T_WHITESPACE =>       
	Process token 812: T_SEMICOLON => ;
	Process token 813: T_WHITESPACE => \n
	Process token 814: T_WHITESPACE => \n
	Process token 815: T_WHITESPACE =>       
	Process token 816: T_STRING => i
	Process token 817: T_INC => ++
	Process token 818: T_WHITESPACE => \n
	Process token 819: T_WHITESPACE => \n
	Process token 820: T_WHITESPACE => \n
	Process token 821: T_CLOSE_PARENTHESIS => )
	Process token 822: T_WHITESPACE =>  
	Process token 823: T_OPEN_CURLY_BRACKET => {
	Process token 824: T_CLOSE_CURLY_BRACKET => }
	Process token 825: T_WHITESPACE => \n
	Process token 826: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesAfterOpen 0\n
	Process token 827: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration requiredSpacesBeforeClose 0\n
	Process token 828: T_WHITESPACE => \n
	Process token 829: T_COMMENT => // Test with semi-colon not belonging to for.\n
	Process token 830: T_FOR => for
	Process token 831: T_WHITESPACE =>  
	Process token 832: T_OPEN_PARENTHESIS => (
	Process token 833: T_STRING => i
	Process token 834: T_WHITESPACE =>  
	Process token 835: T_EQUAL => =
	Process token 836: T_WHITESPACE =>  
	Process token 837: T_FUNCTION => function
	* token 837 on line 121 changed from T_FUNCTION to T_CLOSURE *
		* cleaned 842 (T_STRING) *
		* cleaned 843 (T_OBJECT_OPERATOR) *
		* cleaned 844 (T_STRING) *
		* cleaned 845 (T_OPEN_PARENTHESIS) *
		* cleaned 846 (T_STRING) *
		* cleaned 847 (T_OBJECT_OPERATOR) *
		* cleaned 848 (T_STRING) *
		* cleaned 849 (T_CLOSE_PARENTHESIS) *
		* cleaned 850 (T_WHITESPACE) *
		* cleaned 851 (T_SEMICOLON) *
		* cleaned 852 (T_WHITESPACE) *
	Process token 838: T_OPEN_PARENTHESIS => (
	Process token 839: T_CLOSE_PARENTHESIS => )
	Process token 840: T_WHITESPACE =>  
	Process token 841: T_OPEN_CURLY_BRACKET => {
	Process token 842: T_STRING => self
	Process token 843: T_OBJECT_OPERATOR => .
	Process token 844: T_STRING => widgetLoaded
	Process token 845: T_OPEN_PARENTHESIS => (
	Process token 846: T_STRING => widget
	Process token 847: T_OBJECT_OPERATOR => .
	Process token 848: T_STRING => id
	Process token 849: T_CLOSE_PARENTHESIS => )
	Process token 850: T_WHITESPACE =>   
	Process token 851: T_SEMICOLON => ;
	Process token 852: T_WHITESPACE =>   
	Process token 853: T_CLOSE_CURLY_BRACKET => }
	Process token 854: T_SEMICOLON => ;
	Process token 855: T_WHITESPACE =>  
	Process token 856: T_STRING => i
	Process token 857: T_WHITESPACE =>  
	Process token 858: T_LESS_THAN => <
	Process token 859: T_WHITESPACE =>  
	Process token 860: T_FUNCTION => function
	* token 860 on line 121 changed from T_FUNCTION to T_CLOSURE *
		* cleaned 865 (T_STRING) *
		* cleaned 866 (T_OBJECT_OPERATOR) *
		* cleaned 867 (T_STRING) *
		* cleaned 868 (T_OPEN_PARENTHESIS) *
		* cleaned 869 (T_STRING) *
		* cleaned 870 (T_OBJECT_OPERATOR) *
		* cleaned 871 (T_STRING) *
		* cleaned 872 (T_CLOSE_PARENTHESIS) *
		* cleaned 873 (T_SEMICOLON) *
	Process token 861: T_OPEN_PARENTHESIS => (
	Process token 862: T_CLOSE_PARENTHESIS => )
	Process token 863: T_WHITESPACE =>  
	Process token 864: T_OPEN_CURLY_BRACKET => {
	Process token 865: T_STRING => self
	Process token 866: T_OBJECT_OPERATOR => .
	Process token 867: T_STRING => widgetLoaded
	Process token 868: T_OPEN_PARENTHESIS => (
	Process token 869: T_STRING => widget
	Process token 870: T_OBJECT_OPERATOR => .
	Process token 871: T_STRING => id
	Process token 872: T_CLOSE_PARENTHESIS => )
	Process token 873: T_SEMICOLON => ;
	Process token 874: T_CLOSE_CURLY_BRACKET => }
	Process token 875: T_SEMICOLON => ;
	Process token 876: T_WHITESPACE =>  
	Process token 877: T_STRING => i
	Process token 878: T_INC => ++
	Process token 879: T_CLOSE_PARENTHESIS => )
	Process token 880: T_WHITESPACE =>  
	Process token 881: T_OPEN_CURLY_BRACKET => {
	Process token 882: T_CLOSE_CURLY_BRACKET => }
	Process token 883: T_WHITESPACE => \n
	Process token 884: T_FOR => for
	Process token 885: T_WHITESPACE =>  
	Process token 886: T_OPEN_PARENTHESIS => (
	Process token 887: T_STRING => i
	Process token 888: T_WHITESPACE =>  
	Process token 889: T_EQUAL => =
	Process token 890: T_WHITESPACE =>  
	Process token 891: T_FUNCTION => function
	* token 891 on line 122 changed from T_FUNCTION to T_CLOSURE *
		* cleaned 896 (T_STRING) *
		* cleaned 897 (T_OBJECT_OPERATOR) *
		* cleaned 898 (T_STRING) *
		* cleaned 899 (T_OPEN_PARENTHESIS) *
		* cleaned 900 (T_STRING) *
		* cleaned 901 (T_OBJECT_OPERATOR) *
		* cleaned 902 (T_STRING) *
		* cleaned 903 (T_CLOSE_PARENTHESIS) *
		* cleaned 904 (T_SEMICOLON) *
	Process token 892: T_OPEN_PARENTHESIS => (
	Process token 893: T_CLOSE_PARENTHESIS => )
	Process token 894: T_WHITESPACE =>  
	Process token 895: T_OPEN_CURLY_BRACKET => {
	Process token 896: T_STRING => self
	Process token 897: T_OBJECT_OPERATOR => .
	Process token 898: T_STRING => widgetLoaded
	Process token 899: T_OPEN_PARENTHESIS => (
	Process token 900: T_STRING => widget
	Process token 901: T_OBJECT_OPERATOR => .
	Process token 902: T_STRING => id
	Process token 903: T_CLOSE_PARENTHESIS => )
	Process token 904: T_SEMICOLON => ;
	Process token 905: T_CLOSE_CURLY_BRACKET => }
	Process token 906: T_SEMICOLON => ;
	Process token 907: T_WHITESPACE =>  
	Process token 908: T_STRING => i
	Process token 909: T_WHITESPACE =>  
	Process token 910: T_LESS_THAN => <
	Process token 911: T_WHITESPACE =>  
	Process token 912: T_FUNCTION => function
	* token 912 on line 122 changed from T_FUNCTION to T_CLOSURE *
		* cleaned 917 (T_STRING) *
		* cleaned 918 (T_OBJECT_OPERATOR) *
		* cleaned 919 (T_STRING) *
		* cleaned 920 (T_OPEN_PARENTHESIS) *
		* cleaned 921 (T_STRING) *
		* cleaned 922 (T_OBJECT_OPERATOR) *
		* cleaned 923 (T_STRING) *
		* cleaned 924 (T_CLOSE_PARENTHESIS) *
		* cleaned 925 (T_SEMICOLON) *
	Process token 913: T_OPEN_PARENTHESIS => (
	Process token 914: T_CLOSE_PARENTHESIS => )
	Process token 915: T_WHITESPACE =>  
	Process token 916: T_OPEN_CURLY_BRACKET => {
	Process token 917: T_STRING => self
	Process token 918: T_OBJECT_OPERATOR => .
	Process token 919: T_STRING => widgetLoaded
	Process token 920: T_OPEN_PARENTHESIS => (
	Process token 921: T_STRING => widget
	Process token 922: T_OBJECT_OPERATOR => .
	Process token 923: T_STRING => id
	Process token 924: T_CLOSE_PARENTHESIS => )
	Process token 925: T_SEMICOLON => ;
	Process token 926: T_CLOSE_CURLY_BRACKET => }
	Process token 927: T_WHITESPACE =>   
	Process token 928: T_SEMICOLON => ;
	Process token 929: T_WHITESPACE =>    
	Process token 930: T_STRING => i
	Process token 931: T_INC => ++
	Process token 932: T_CLOSE_PARENTHESIS => )
	Process token 933: T_WHITESPACE =>  
	Process token 934: T_OPEN_CURLY_BRACKET => {
	Process token 935: T_CLOSE_CURLY_BRACKET => }
	Process token 936: T_WHITESPACE => \n
	Process token 937: T_WHITESPACE => \n
	Process token 938: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration ignoreMultiline true\n
	Process token 939: T_FOR => for
	Process token 940: T_WHITESPACE =>  
	Process token 941: T_OPEN_PARENTHESIS => (
	Process token 942: T_WHITESPACE => \n
	Process token 943: T_WHITESPACE =>     
	Process token 944: T_STRING => i
	Process token 945: T_WHITESPACE =>  
	Process token 946: T_EQUAL => =
	Process token 947: T_WHITESPACE =>  
	Process token 948: T_LNUMBER => 0
	Process token 949: T_SEMICOLON => ;
	Process token 950: T_WHITESPACE => \n
	Process token 951: T_WHITESPACE =>     
	Process token 952: T_STRING => i
	Process token 953: T_WHITESPACE =>  
	Process token 954: T_LESS_THAN => <
	Process token 955: T_WHITESPACE =>  
	Process token 956: T_LNUMBER => 10
	Process token 957: T_SEMICOLON => ;
	Process token 958: T_WHITESPACE => \n
	Process token 959: T_WHITESPACE =>     
	Process token 960: T_STRING => i
	Process token 961: T_INC => ++
	Process token 962: T_WHITESPACE => \n
	Process token 963: T_CLOSE_PARENTHESIS => )
	Process token 964: T_WHITESPACE =>  
	Process token 965: T_OPEN_CURLY_BRACKET => {
	Process token 966: T_CLOSE_CURLY_BRACKET => }
	Process token 967: T_WHITESPACE => \n
	Process token 968: T_PHPCS_SET => // phpcs:set Squiz.ControlStructures.ForLoopDeclaration ignoreMultiline false\n
	Process token 969: T_WHITESPACE => \n
	Process token 970: T_COMMENT => // This test has to be the last one in the file! Intentional parse error check.\n
	Process token 971: T_FOR => for
	Process token 972: T_WHITESPACE => \n
	Process token 973: T_CLOSE_TAG => 
	*** END ADDITIONAL JS PROCESSING ***
[JS => 974 tokens in 134 lines]... 
DONE in 2.19 secs (151 fixable violations)
	=> Fixing file: 151/151 violations remaining	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 34 (T_WHITESPACE) " i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 34 (T_WHITESPACE) " i" => "i"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 51 (T_WHITESPACE) " )" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 51 (T_WHITESPACE) " )" => ")"
	=> Changeset ended: 1 changes applied
	* token 34 has already been modified, skipping *
	* token 51 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 68 (T_WHITESPACE) "  i" => " i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 68 (T_WHITESPACE) "  i" => " i"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 75 (T_WHITESPACE) "  i" => " i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 75 (T_WHITESPACE) "  i" => " i"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 250)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 95 (T_WHITESPACE) " ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 95 (T_WHITESPACE) " ;" => ";"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 250)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 103 (T_WHITESPACE) " ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 103 (T_WHITESPACE) " ;" => ";"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 95 (T_WHITESPACE) ";" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 94 (T_LNUMBER) "0" => "0;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 96 (T_SEMICOLON) ";" => ""
		* token 95 has already been modified, skipping *
	=> Changeset failed to apply
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 103 (T_WHITESPACE) ";" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 102 (T_LNUMBER) "10" => "10;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 104 (T_SEMICOLON) ";" => ""
		* token 103 has already been modified, skipping *
	=> Changeset failed to apply
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 271) replaced token 123 (T_SEMICOLON) ";" => "; "
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 271) replaced token 129 (T_SEMICOLON) ";" => "; "
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 143 (T_WHITESPACE) " var" => "var"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 143 (T_WHITESPACE) " var" => "var"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 164 (T_WHITESPACE) " )" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 164 (T_WHITESPACE) " )" => ")"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 250)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 151 (T_WHITESPACE) " ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 151 (T_WHITESPACE) " ;" => ";"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 153 (T_WHITESPACE) "  i" => " i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 153 (T_WHITESPACE) "  i" => " i"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 250)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 159 (T_WHITESPACE) " ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 159 (T_WHITESPACE) " ;" => ";"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 161 (T_WHITESPACE) "  i" => " i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 161 (T_WHITESPACE) "  i" => " i"
	=> Changeset ended: 1 changes applied
	* token 143 has already been modified, skipping *
	* token 164 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 151 (T_WHITESPACE) ";" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 150 (T_LNUMBER) "0" => "0;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 152 (T_SEMICOLON) ";" => ""
		* token 151 has already been modified, skipping *
	=> Changeset failed to apply
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 159 (T_WHITESPACE) ";" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 158 (T_LNUMBER) "10" => "10;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 160 (T_SEMICOLON) ";" => ""
		* token 159 has already been modified, skipping *
	=> Changeset failed to apply
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionDeclarationSniff (line 94) replaced token 253 (T_CLOSURE) "function" => "function "
	PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceKernighanRitchieSniff (line 144) replaced token 257 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 101) replaced token 267 (T_CLOSE_CURLY_BRACKET) "}" => "\n}"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 299 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 319 (T_WHITESPACE) " )" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 319 (T_WHITESPACE) " )" => ")"
	=> Changeset ended: 1 changes applied
	* token 319 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 250)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 338 (T_WHITESPACE) " ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 338 (T_WHITESPACE) " ;" => ";"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 347 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 396 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 396 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 397 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 424 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 424 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 402 (T_WHITESPACE) " var" => "var"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 402 (T_WHITESPACE) " var" => "var"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 421 (T_WHITESPACE) " )" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 421 (T_WHITESPACE) " )" => ")"
	=> Changeset ended: 1 changes applied
	* token 402 has already been modified, skipping *
	* token 421 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 425 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 452 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 452 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 430 (T_WHITESPACE) "  var" => "var"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 430 (T_WHITESPACE) "  var" => "var"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 449 (T_WHITESPACE) "  )" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 449 (T_WHITESPACE) "  )" => ")"
	=> Changeset ended: 1 changes applied
	* token 430 has already been modified, skipping *
	* token 449 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 453 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 475 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 475 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 461 (T_WHITESPACE) "      ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 461 (T_WHITESPACE) "      ;" => ";"
	=> Changeset ended: 1 changes applied
	* token 461 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 476 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 494 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 494 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 518 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 518 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 503 (T_WHITESPACE) " ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 503 (T_WHITESPACE) " ;" => ";"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 515 (T_WHITESPACE) " )" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 515 (T_WHITESPACE) " )" => ")"
	=> Changeset ended: 1 changes applied
	* token 503 has already been modified, skipping *
	* token 515 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 519 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 539 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 539 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 524 (T_WHITESPACE) "         ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 524 (T_WHITESPACE) "         ;" => ";"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 536 (T_WHITESPACE) " )" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 536 (T_WHITESPACE) " )" => ")"
	=> Changeset ended: 1 changes applied
	* token 524 has already been modified, skipping *
	* token 536 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 540 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 559 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 559 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 556 (T_WHITESPACE) " )" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 556 (T_WHITESPACE) " )" => ")"
	=> Changeset ended: 1 changes applied
	* token 556 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 583 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 583 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 566 (T_WHITESPACE) " i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 566 (T_WHITESPACE) " i" => "i"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 580 (T_WHITESPACE) " )" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 580 (T_WHITESPACE) " )" => ")"
	=> Changeset ended: 1 changes applied
	* token 566 has already been modified, skipping *
	* token 580 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 584 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 605 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 605 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 589 (T_WHITESPACE) " i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 589 (T_WHITESPACE) " i" => "i"
	=> Changeset ended: 1 changes applied
	* token 589 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 606 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 628 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 628 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 611 (T_WHITESPACE) " i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 611 (T_WHITESPACE) " i" => "i"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 625 (T_WHITESPACE) "     )" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 625 (T_WHITESPACE) "     )" => ")"
	=> Changeset ended: 1 changes applied
	* token 611 has already been modified, skipping *
	* token 625 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 629 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 667 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 667 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 638 (T_WHITESPACE) " /*phpcs:enable*/" => "/*phpcs:enable*/"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 638 (T_WHITESPACE) " /*phpcs:enable*/" => "/*phpcs:enable*/"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 664 (T_WHITESPACE) "   )" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 664 (T_WHITESPACE) "   )" => ")"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 250)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 648 (T_WHITESPACE) " ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 648 (T_WHITESPACE) " ;" => ";"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 650 (T_WHITESPACE) "    /*end*/" => " /*end*/"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 650 (T_WHITESPACE) "    /*end*/" => " /*end*/"
	=> Changeset ended: 1 changes applied
	* token 638 has already been modified, skipping *
	* token 664 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 648 (T_WHITESPACE) ";" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 647 (T_COMMENT) "/*start*/" => "/*start*/;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 649 (T_SEMICOLON) ";" => ""
		* token 648 has already been modified, skipping *
	=> Changeset failed to apply
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 656 (T_LNUMBER) "10" => "10;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 658 (T_SEMICOLON) ";" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 656 (T_LNUMBER) "10" => "10;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 658 (T_SEMICOLON) ";" => ""
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 698 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 698 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 675 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 676 (T_WHITESPACE) "    i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 675 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 676 (T_WHITESPACE) "    i" => "i"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 695 (T_WHITESPACE) "\n)" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 695 (T_WHITESPACE) "\n)" => ")"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 683 (T_WHITESPACE) "\n    " => "     "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 290) replaced token 684 (T_WHITESPACE) "    i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 683 (T_WHITESPACE) "\n    " => "     "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 684 (T_WHITESPACE) "    i" => "i"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 691 (T_WHITESPACE) "\n    " => "     "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 290) replaced token 692 (T_WHITESPACE) "    i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 691 (T_WHITESPACE) "\n    " => "     "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 692 (T_WHITESPACE) "    i" => "i"
	=> Changeset ended: 2 changes applied
	* token 675 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 735 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 735 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 706 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 707 (T_WHITESPACE) "    i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 706 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 707 (T_WHITESPACE) "    i" => "i"
	=> Changeset ended: 2 changes applied
	* token 706 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\PostStatementCommentSniff (line 85) replaced token 731 (T_COMMENT) "// comment\n" => "\n// comment\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 778 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 778 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 743 (T_WHITESPACE) "\n     \n" => "     \n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 744 (T_WHITESPACE) "     \n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 745 (T_WHITESPACE) "\n      " => "      "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 746 (T_WHITESPACE) "      i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 743 (T_WHITESPACE) "\n     \n" => "     \n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 744 (T_WHITESPACE) "     \n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 745 (T_WHITESPACE) "\n      " => "      "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 746 (T_WHITESPACE) "      i" => "i"
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 775 (T_WHITESPACE) "\n)" => ")"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 774 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 773 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 775 (T_WHITESPACE) "\n)" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 774 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 773 (T_WHITESPACE) "\n" => ""
	=> Changeset ended: 3 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 250)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 754 (T_WHITESPACE) "      ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 753 (T_WHITESPACE) "\n      " => "      "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 752 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 754 (T_WHITESPACE) "      ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 753 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 752 (T_WHITESPACE) "\n" => ""
	=> Changeset ended: 3 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 756 (T_WHITESPACE) " \n\n" => " \n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 290) replaced token 757 (T_WHITESPACE) "\n      " => "      "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 290) replaced token 758 (T_WHITESPACE) "      i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 756 (T_WHITESPACE) " \n\n" => " \n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 757 (T_WHITESPACE) "\n      " => "      "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 758 (T_WHITESPACE) "      i" => "i"
	=> Changeset ended: 3 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 250)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 766 (T_WHITESPACE) "      ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 765 (T_WHITESPACE) "\n      " => "      "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 764 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 766 (T_WHITESPACE) "      ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 765 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 764 (T_WHITESPACE) "\n" => ""
	=> Changeset ended: 3 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 768 (T_WHITESPACE) "\n\n" => " \n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 290) replaced token 769 (T_WHITESPACE) "\n      " => "      "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 290) replaced token 770 (T_WHITESPACE) "      i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 768 (T_WHITESPACE) "\n\n" => " \n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 769 (T_WHITESPACE) "\n      " => "      "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 770 (T_WHITESPACE) "      i" => "i"
	=> Changeset ended: 3 changes applied
	* token 743 has already been modified, skipping *
	* token 744 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 754 (T_WHITESPACE) ";" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 753 (T_WHITESPACE) "" => ""
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 752 (T_WHITESPACE) "" => ""
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 751 (T_LNUMBER) "0" => "0;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 755 (T_SEMICOLON) ";" => ""
		* token 754 has already been modified, skipping *
	=> Changeset failed to apply
	* token 756 has already been modified, skipping *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 766 (T_WHITESPACE) ";" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 765 (T_WHITESPACE) "" => ""
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 764 (T_WHITESPACE) "" => ""
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 763 (T_LNUMBER) "10" => "10;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 767 (T_SEMICOLON) ";" => ""
		* token 766 has already been modified, skipping *
	=> Changeset failed to apply
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 823 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 823 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 787 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 788 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 789 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 790 (T_WHITESPACE) "\n      " => "      "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 791 (T_WHITESPACE) "      i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 787 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 788 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 789 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 790 (T_WHITESPACE) "\n      " => "      "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 791 (T_WHITESPACE) "      i" => "i"
	=> Changeset ended: 5 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 820 (T_WHITESPACE) "\n)" => ")"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 819 (T_WHITESPACE) "\n\n" => "\n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 818 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 820 (T_WHITESPACE) "\n)" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 819 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 818 (T_WHITESPACE) "\n" => ""
	=> Changeset ended: 3 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 250)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 799 (T_WHITESPACE) "      ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 798 (T_WHITESPACE) "\n      " => "      "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 797 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 799 (T_WHITESPACE) "      ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 798 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 797 (T_WHITESPACE) "\n" => ""
	=> Changeset ended: 3 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 801 (T_WHITESPACE) "\n\n" => " \n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 290) replaced token 802 (T_WHITESPACE) "\n      " => "      "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 290) replaced token 803 (T_WHITESPACE) "      i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 801 (T_WHITESPACE) "\n\n" => " \n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 802 (T_WHITESPACE) "\n      " => "      "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 803 (T_WHITESPACE) "      i" => "i"
	=> Changeset ended: 3 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 250)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 811 (T_WHITESPACE) "      ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 810 (T_WHITESPACE) "\n      " => "      "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 809 (T_WHITESPACE) "\n\n" => "\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 811 (T_WHITESPACE) "      ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 810 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 809 (T_WHITESPACE) "\n" => ""
	=> Changeset ended: 3 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 813 (T_WHITESPACE) "\n\n" => " \n"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 290) replaced token 814 (T_WHITESPACE) "\n      " => "      "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 290) replaced token 815 (T_WHITESPACE) "      i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 813 (T_WHITESPACE) "\n\n" => " \n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 814 (T_WHITESPACE) "\n      " => "      "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 815 (T_WHITESPACE) "      i" => "i"
	=> Changeset ended: 3 changes applied
	* token 787 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 824 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 799 (T_WHITESPACE) ";" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 798 (T_WHITESPACE) "" => ""
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 797 (T_WHITESPACE) "" => ""
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 796 (T_LNUMBER) "0" => "0;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 800 (T_SEMICOLON) ";" => ""
		* token 799 has already been modified, skipping *
	=> Changeset failed to apply
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 811 (T_WHITESPACE) ";" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 810 (T_WHITESPACE) "" => ""
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 809 (T_WHITESPACE) "" => ""
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 808 (T_LNUMBER) "10" => "10;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 812 (T_SEMICOLON) ";" => ""
		* token 811 has already been modified, skipping *
	=> Changeset failed to apply
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 881 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 881 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 882 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionDeclarationSniff (line 94) replaced token 837 (T_CLOSURE) "function" => "function "
	PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceKernighanRitchieSniff (line 144) replaced token 841 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 101) replaced token 853 (T_CLOSE_CURLY_BRACKET) "}" => "\n}"
	=> Changeset started by PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 145)
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 147) replaced token 850 (T_WHITESPACE) "  ;" => ";"
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 152) replaced token 849 (T_CLOSE_PARENTHESIS) ")" => ")"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 153) replaced token 850 (T_WHITESPACE) "  ;" => ";"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 153) replaced token 849 (T_CLOSE_PARENTHESIS) ")" => ")"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 850 (T_WHITESPACE) ";" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 849 (T_CLOSE_PARENTHESIS) ")" => ");"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 851 (T_SEMICOLON) ";" => ""
		* token 850 has already been modified, skipping *
	=> Changeset failed to apply
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionDeclarationSniff (line 94) replaced token 860 (T_CLOSURE) "function" => "function "
	PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceKernighanRitchieSniff (line 144) replaced token 864 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 101) replaced token 874 (T_CLOSE_CURLY_BRACKET) "}" => "\n}"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 934 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 934 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 250)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 252) replaced token 927 (T_WHITESPACE) "  ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 255) replaced token 927 (T_WHITESPACE) "  ;" => ";"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 929 (T_WHITESPACE) "   i" => " i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 929 (T_WHITESPACE) "   i" => " i"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionDeclarationSniff (line 94) replaced token 891 (T_CLOSURE) "function" => "function "
	PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceKernighanRitchieSniff (line 144) replaced token 895 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 101) replaced token 905 (T_CLOSE_CURLY_BRACKET) "}" => "\n}"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionDeclarationSniff (line 94) replaced token 912 (T_CLOSURE) "function" => "function "
	PHP_CodeSniffer\Standards\Generic\Sniffs\Functions\OpeningFunctionBraceKernighanRitchieSniff (line 144) replaced token 916 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\FunctionClosingBraceSpaceSniff (line 101) replaced token 926 (T_CLOSE_CURLY_BRACKET) "}" => "\n}"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 927 (T_WHITESPACE) ";" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 926 (T_CLOSE_CURLY_BRACKET) "\n}" => "\n};"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 928 (T_SEMICOLON) ";" => ""
		* token 927 has already been modified, skipping *
	=> Changeset failed to apply
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 965 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 965 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 98)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 942 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 104) replaced token 943 (T_WHITESPACE) "    i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 942 (T_WHITESPACE) "\n    " => "    "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 107) replaced token 943 (T_WHITESPACE) "    i" => "i"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 158)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 164) replaced token 962 (T_WHITESPACE) "\n)" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 167) replaced token 962 (T_WHITESPACE) "\n)" => ")"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 950 (T_WHITESPACE) "\n    " => "     "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 290) replaced token 951 (T_WHITESPACE) "    i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 950 (T_WHITESPACE) "\n    " => "     "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 951 (T_WHITESPACE) "    i" => "i"
	=> Changeset ended: 2 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 287)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 288) replaced token 958 (T_WHITESPACE) "\n    " => "     "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 290) replaced token 959 (T_WHITESPACE) "    i" => "i"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 958 (T_WHITESPACE) "\n    " => "     "
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 293) replaced token 959 (T_WHITESPACE) "    i" => "i"
	=> Changeset ended: 2 changes applied
	* token 942 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ControlStructureSpacingSniff (line 339) replaced token 966 (T_CLOSE_CURLY_BRACKET) "}" => "}\n"
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 118) replaced token 972 (T_WHITESPACE) "\n" => " "
	=> Changeset started by PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 128)
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 138) replaced token 971 (T_FOR) "for" => "for {"
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 262) replaced token 971 (T_FOR) "for" => "for {; "
		Q: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 293) replaced token 971 (T_FOR) "for" => "for {; \n}"
		A: PHP_CodeSniffer\Standards\Generic\Sniffs\ControlStructures\InlineControlStructureSniff (line 323) replaced token 971 (T_FOR) "for" => "for {; \n}"
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 147/151 violations remaining [made 1 pass]... 	* fixed 147 violations, starting loop 2 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 254 (T_STRING) "self" => "            self"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 264 (T_CLOSE_CURLY_BRACKET) "}" => "        }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 807 (T_STRING) "self" => "    self"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 831 (T_STRING) "self" => "    self"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 867 (T_STRING) "self" => "    self"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 891 (T_STRING) "self" => "    self"
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 399) replaced token 238 (T_OPEN_PARENTHESIS) "(" => "(\n            "
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 412) replaced token 265 (T_CLOSE_PARENTHESIS) ")" => "\n            )"
	=> Changeset started by PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 560)
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 566) replaced token 246 (T_WHITESPACE) " function" => "function"
		Q: PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 571) replaced token 247 (T_CLOSURE) "function" => "\n            function"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 573) replaced token 246 (T_WHITESPACE) " function" => "function"
		A: PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 573) replaced token 247 (T_CLOSURE) "function" => "\n            function"
	=> Changeset ended: 2 changes applied
	* token 254 has already been modified, skipping *
	* token 264 has already been modified, skipping *
	PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ForLoopDeclarationSniff (line 271) replaced token 657 (T_SEMICOLON) ";" => "; "
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 646 (T_LNUMBER) "0" => "0;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 649 (T_SEMICOLON) ";" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 646 (T_LNUMBER) "0" => "0;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 649 (T_SEMICOLON) ";" => ""
	=> Changeset ended: 2 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 211) replaced token 724 (T_WHITESPACE) " \n// comment\n" => "\n// comment\n"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff (line 325)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff (line 331) replaced token 726 (T_WHITESPACE) "\n)" => ")"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\InlineCommentSniff (line 334) replaced token 726 (T_WHITESPACE) "\n)" => ")"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 211) replaced token 816 (T_WHITESPACE) "  \n}" => "\n}"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 945 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 945 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 211) replaced token 947 (T_WHITESPACE) " \n}" => "\n}"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 950 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 950 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 19/151 violations remaining [made 2 passes]... 	* fixed 19 violations, starting loop 3 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 257 (T_WHITESPACE) "            self" => "                self"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1346) replaced token 268 (T_WHITESPACE) "        }" => "            }"
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 958 (T_SEMICOLON) ";" => "    ;"
	* token 268 has already been modified, skipping *
	PHP_CodeSniffer\Standards\PEAR\Sniffs\Functions\FunctionCallSignatureSniff (line 531) replaced token 271 (T_WHITESPACE) "            )" => "        )"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 958 (T_SEMICOLON) "    ;" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		* token 958 has already been modified, skipping *
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) reverted token 957 (T_WHITESPACE) "    ;" => "\n    ;"
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) reverted token 956 (T_OPEN_CURLY_BRACKET) "{;" => "{"
	=> Changeset failed to apply
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 962 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 962 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 5/151 violations remaining [made 3 passes]... 	* fixed 5 violations, starting loop 4 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 959 (T_SEMICOLON) ";" => ""
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 963 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 963 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 5/151 violations remaining [made 4 passes]... 	* fixed 5 violations, starting loop 5 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 961 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 961 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 2/151 violations remaining [made 5 passes]... 	* fixed 2 violations, starting loop 6 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 958 (T_SEMICOLON) ";" => "    ;"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 958 (T_SEMICOLON) "    ;" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 4; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;" ****
		**** ignoring all changes until next loop ****
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) reverted token 957 (T_WHITESPACE) "    ;" => "\n    ;"
	=> Changeset failed to apply
                                                                                	=> Fixing file: 1/151 violations remaining [made 6 passes]... 	* fixed 1 violations, starting loop 7 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 5; caused by the following change ****
		**** replaced token 958 (T_WHITESPACE) "    ;" => ";" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 7 passes]... 	* fixed 0 violations, starting loop 8 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 959 (T_SEMICOLON) ";" => ""
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 963 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 963 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 5/151 violations remaining [made 8 passes]... 	* fixed 5 violations, starting loop 9 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) has possible conflict with another sniff on loop 7; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 9 passes]... 	* fixed 0 violations, starting loop 10 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 961 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 961 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 2/151 violations remaining [made 10 passes]... 	* fixed 2 violations, starting loop 11 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 958 (T_SEMICOLON) ";" => "    ;"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 958 (T_SEMICOLON) "    ;" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 9; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;" ****
		**** ignoring all changes until next loop ****
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) reverted token 957 (T_WHITESPACE) "    ;" => "\n    ;"
	=> Changeset failed to apply
                                                                                	=> Fixing file: 1/151 violations remaining [made 11 passes]... 	* fixed 1 violations, starting loop 12 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 10; caused by the following change ****
		**** replaced token 958 (T_WHITESPACE) "    ;" => ";" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 12 passes]... 	* fixed 0 violations, starting loop 13 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 959 (T_SEMICOLON) ";" => ""
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 963 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 963 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 5/151 violations remaining [made 13 passes]... 	* fixed 5 violations, starting loop 14 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) has possible conflict with another sniff on loop 12; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 14 passes]... 	* fixed 0 violations, starting loop 15 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 961 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 961 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 2/151 violations remaining [made 15 passes]... 	* fixed 2 violations, starting loop 16 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 958 (T_SEMICOLON) ";" => "    ;"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 958 (T_SEMICOLON) "    ;" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 14; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;" ****
		**** ignoring all changes until next loop ****
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) reverted token 957 (T_WHITESPACE) "    ;" => "\n    ;"
	=> Changeset failed to apply
                                                                                	=> Fixing file: 1/151 violations remaining [made 16 passes]... 	* fixed 1 violations, starting loop 17 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 15; caused by the following change ****
		**** replaced token 958 (T_WHITESPACE) "    ;" => ";" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 17 passes]... 	* fixed 0 violations, starting loop 18 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 959 (T_SEMICOLON) ";" => ""
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 963 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 963 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 5/151 violations remaining [made 18 passes]... 	* fixed 5 violations, starting loop 19 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) has possible conflict with another sniff on loop 17; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 19 passes]... 	* fixed 0 violations, starting loop 20 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 961 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 961 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 2/151 violations remaining [made 20 passes]... 	* fixed 2 violations, starting loop 21 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 958 (T_SEMICOLON) ";" => "    ;"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 958 (T_SEMICOLON) "    ;" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 19; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;" ****
		**** ignoring all changes until next loop ****
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) reverted token 957 (T_WHITESPACE) "    ;" => "\n    ;"
	=> Changeset failed to apply
                                                                                	=> Fixing file: 1/151 violations remaining [made 21 passes]... 	* fixed 1 violations, starting loop 22 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 20; caused by the following change ****
		**** replaced token 958 (T_WHITESPACE) "    ;" => ";" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 22 passes]... 	* fixed 0 violations, starting loop 23 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 959 (T_SEMICOLON) ";" => ""
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 963 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 963 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 5/151 violations remaining [made 23 passes]... 	* fixed 5 violations, starting loop 24 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) has possible conflict with another sniff on loop 22; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 24 passes]... 	* fixed 0 violations, starting loop 25 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 961 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 961 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 2/151 violations remaining [made 25 passes]... 	* fixed 2 violations, starting loop 26 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 958 (T_SEMICOLON) ";" => "    ;"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 958 (T_SEMICOLON) "    ;" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 24; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;" ****
		**** ignoring all changes until next loop ****
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) reverted token 957 (T_WHITESPACE) "    ;" => "\n    ;"
	=> Changeset failed to apply
                                                                                	=> Fixing file: 1/151 violations remaining [made 26 passes]... 	* fixed 1 violations, starting loop 27 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 25; caused by the following change ****
		**** replaced token 958 (T_WHITESPACE) "    ;" => ";" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 27 passes]... 	* fixed 0 violations, starting loop 28 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 959 (T_SEMICOLON) ";" => ""
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 963 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 963 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 5/151 violations remaining [made 28 passes]... 	* fixed 5 violations, starting loop 29 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) has possible conflict with another sniff on loop 27; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 29 passes]... 	* fixed 0 violations, starting loop 30 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 961 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 961 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 2/151 violations remaining [made 30 passes]... 	* fixed 2 violations, starting loop 31 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 958 (T_SEMICOLON) ";" => "    ;"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 958 (T_SEMICOLON) "    ;" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 29; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;" ****
		**** ignoring all changes until next loop ****
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) reverted token 957 (T_WHITESPACE) "    ;" => "\n    ;"
	=> Changeset failed to apply
                                                                                	=> Fixing file: 1/151 violations remaining [made 31 passes]... 	* fixed 1 violations, starting loop 32 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 30; caused by the following change ****
		**** replaced token 958 (T_WHITESPACE) "    ;" => ";" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 32 passes]... 	* fixed 0 violations, starting loop 33 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 959 (T_SEMICOLON) ";" => ""
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 963 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 963 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 5/151 violations remaining [made 33 passes]... 	* fixed 5 violations, starting loop 34 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) has possible conflict with another sniff on loop 32; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 34 passes]... 	* fixed 0 violations, starting loop 35 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 961 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 961 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 2/151 violations remaining [made 35 passes]... 	* fixed 2 violations, starting loop 36 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 958 (T_SEMICOLON) ";" => "    ;"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 958 (T_SEMICOLON) "    ;" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 34; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;" ****
		**** ignoring all changes until next loop ****
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) reverted token 957 (T_WHITESPACE) "    ;" => "\n    ;"
	=> Changeset failed to apply
                                                                                	=> Fixing file: 1/151 violations remaining [made 36 passes]... 	* fixed 1 violations, starting loop 37 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 35; caused by the following change ****
		**** replaced token 958 (T_WHITESPACE) "    ;" => ";" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 37 passes]... 	* fixed 0 violations, starting loop 38 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 959 (T_SEMICOLON) ";" => ""
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 963 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 963 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 5/151 violations remaining [made 38 passes]... 	* fixed 5 violations, starting loop 39 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) has possible conflict with another sniff on loop 37; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 39 passes]... 	* fixed 0 violations, starting loop 40 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 961 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 961 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 2/151 violations remaining [made 40 passes]... 	* fixed 2 violations, starting loop 41 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 958 (T_SEMICOLON) ";" => "    ;"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 958 (T_SEMICOLON) "    ;" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 39; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;" ****
		**** ignoring all changes until next loop ****
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) reverted token 957 (T_WHITESPACE) "    ;" => "\n    ;"
	=> Changeset failed to apply
                                                                                	=> Fixing file: 1/151 violations remaining [made 41 passes]... 	* fixed 1 violations, starting loop 42 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 40; caused by the following change ****
		**** replaced token 958 (T_WHITESPACE) "    ;" => ";" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 42 passes]... 	* fixed 0 violations, starting loop 43 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 959 (T_SEMICOLON) ";" => ""
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 963 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 963 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 5/151 violations remaining [made 43 passes]... 	* fixed 5 violations, starting loop 44 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) has possible conflict with another sniff on loop 42; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 44 passes]... 	* fixed 0 violations, starting loop 45 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 961 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 961 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 2/151 violations remaining [made 45 passes]... 	* fixed 2 violations, starting loop 46 *
	PHP_CodeSniffer\Standards\Generic\Sniffs\WhiteSpace\ScopeIndentSniff (line 1343) replaced token 958 (T_SEMICOLON) ";" => "    ;"
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 958 (T_SEMICOLON) "    ;" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n    ;" => "    ;"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 44; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;" ****
		**** ignoring all changes until next loop ****
		R: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) reverted token 957 (T_WHITESPACE) "    ;" => "\n    ;"
	=> Changeset failed to apply
                                                                                	=> Fixing file: 1/151 violations remaining [made 46 passes]... 	* fixed 1 violations, starting loop 47 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) has possible conflict with another sniff on loop 45; caused by the following change ****
		**** replaced token 958 (T_WHITESPACE) "    ;" => ";" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 47 passes]... 	* fixed 0 violations, starting loop 48 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 94)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 97) replaced token 957 (T_WHITESPACE) "\n    " => "    "
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 101) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 102) replaced token 959 (T_SEMICOLON) ";" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 958 (T_WHITESPACE) "    ;" => ";"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 957 (T_WHITESPACE) "\n" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{;"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff (line 104) replaced token 959 (T_SEMICOLON) ";" => ""
	=> Changeset ended: 4 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 963 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 963 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 5/151 violations remaining [made 48 passes]... 	* fixed 5 violations, starting loop 49 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		**** PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) has possible conflict with another sniff on loop 47; caused by the following change ****
		**** replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n" ****
		**** ignoring all changes until next loop ****
	=> Changeset failed to apply
                                                                                	=> Fixing file: 0/151 violations remaining [made 49 passes]... 	* fixed 0 violations, starting loop 50 *
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 217)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 227) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\ControlStructures\ControlSignatureSniff (line 228) replaced token 956 (T_OPEN_CURLY_BRACKET) "{" => "{\n"
	=> Changeset ended: 1 changes applied
	=> Changeset started by PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 179)
		Q: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 181) replaced token 961 (T_CLOSE_TAG) "" => ""
		A: PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SuperfluousWhitespaceSniff (line 184) replaced token 961 (T_CLOSE_TAG) "" => ""
	=> Changeset ended: 1 changes applied
                                                                                	=> Fixing file: 2/151 violations remaining [made 50 passes]... 	* fixed 2 violations, starting loop 51 *
	*** Reached maximum number of loops with 2 violations left unfixed ***
ERROR in 25.82 secs

PHPCBF RESULT SUMMARY
--------------------------------------------------------------------------------
FILE                                                            FIXED  REMAINING
--------------------------------------------------------------------------------
Squiz\Tests\ControlStructures\ForLoopDeclarationUnitTest.js     FAILED TO FIX
--------------------------------------------------------------------------------
A TOTAL OF 149 ERRORS WERE FIXED IN 1 FILE
--------------------------------------------------------------------------------
PHPCBF FAILED TO FIX 1 FILE
--------------------------------------------------------------------------------

Time: 29.12 secs; Memory: 10MB


